[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"AnalysisCsvAnalyticsV2_001\")","time":"2019-06-14 23:43:27","title":"verify all the tags for AnalyticsV2 operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-06-14 23:43:27","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-14 23:43:27","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzQW5hbHlzaXNJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48b3BlcmF0aW9uPnRyaWFsUHJvZ3JhbUJ5SW5kaWNhdGlvbjwvb3BlcmF0aW9uPjxwYXJhbWV0ZXJzPjxwYXJhbWV0ZXIgbmFtZT0iaW5kaWNhdGlvbklkIj4xPC9wYXJhbWV0ZXI+PC9wYXJhbWV0ZXJzPjwvbnMyOmNvbS50aG9tc29ucmV1dGVycy5scy5zZXJ2aWNlLmNvbnRyYWN0LmFuYWx5dGljcy52Mi5zb2FwLkFuYWx5dGljc0FuYWx5c2lzSW5wdXQ+"},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;operation = trialProgramByIndication and name = indicationId and value = 1&quot; as parameter to &quot;Analytics_v2_analysisCSV&quot; operation","status":"passed"},{"date":"2019-06-14 23:43:35","substeps":[{"date":"2019-06-14 23:43:35","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"AnalysisCsvAnalyticsV2_001\")","time":"2019-06-14 23:43:35","title":"verify all the tags for AnalyticsV2 operation of AnalyticsV2 Endpoint","steps":[{"date":"2019-06-14 23:43:35","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-14 23:43:35","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb25yZXV0ZXJzLmxzLnNlcnZpY2UuY29udHJhY3QuYW5hbHl0aWNzLnYyLnNvYXAuQW5hbHl0aWNzQW5hbHlzaXNJbnB1dCB4bWxuczpuczI9ImxvY2FsIj48b3BlcmF0aW9uPnRyaWFsUHJvZ3JhbUJ5QWN0aW9uPC9vcGVyYXRpb24+PHBhcmFtZXRlcnM+PHBhcmFtZXRlciBuYW1lPSJhY3Rpb25JZCI+MTwvcGFyYW1ldGVyPjwvcGFyYW1ldGVycz48L25zMjpjb20udGhvbXNvbnJldXRlcnMubHMuc2VydmljZS5jb250cmFjdC5hbmFseXRpY3MudjIuc29hcC5BbmFseXRpY3NBbmFseXNpc0lucHV0Pg=="},{"mime":"TXT","content":""},{"mime":"TXT","content":"QW5jZXN0cnksQXJtQ291bnQsRGV2U3RhdHVzLERldlN0YXR1c0lkLERydWcsRHJ1Z0lkLEVuZHBvaW50LEVuZHBvaW50UmVhY2hlZCxIYXNIZWFsdGh5Vm9sdW50ZWVycyxIaWdoZXN0RGV2U3RhdHVzRm9ySW5kLEhpZ2hlc3REZXZTdGF0dXNGb3JJbmRJZCxJbmRpY2F0aW9uLEluZGljYXRpb25JZCxQcm90b2NvbEFjcm9ueW0sUHJvdG9jb2xUaXRsZSxTcG9uc29yLFN0dWR5VHlwZSxUcmlhbElkLFRyaWFsU3RhcnREYXRlLFRyaWFsU3RhdHVzDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicm9tZXJndXJpZGUsMjY4NiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgYnJvbWVyZ3VyaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MzksMTk4Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGhhcm1hY29nZW5vbWljIHN0dWR5IG9mIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZbRzIFJlcHVibGljIG9mIENoaW5hLCBUaGUgU2l4dGggSG9zcGl0YWwgb2YgUGVraW5nIFVuaXZlcnNpdHkgKEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoKSIsSW50ZXJ2ZW50aW9uYWwsOTg0ODIsMjAwOS0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEVmZmVjdGl2ZW5lc3Mgb2YgWmlwcmFzaWRvbmUgVXNpbmcgdGhlIE92ZXJsYXBwZWQgU3dpdGNoaW5nIFN0cmF0ZWd5IGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsU29vbmNodW5oeWFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDcwMTc1LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBzdHVkeSBldmFsdWF0aW5nIHRoZSBzdHJpYXRhbCBhbmQgZXh0cmFzdHJpYXRhbCBEMi8zLXJlY2VwdG9yIGJpbmRpbmcgb2YgemlwcmFzaWRvbmUgdXNpbmcgMThGLUZhbGx5cHJpZGUgUEVUIHNjYW5uaW5nLCBpbiBib3RoIHNjaGl6b3BocmVuaWEgcGF0aWVudHMgYW5kIGhlYWx0aHkgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU2OCwyMDA4LTA2LTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBwaGFzZSBJIHN0dWR5IGV2YWx1YXRpbmcgdGhlIHRpbWUgY291cnNlIG9mIDUtSFQyIHJlY2VwdG9yIG9jY3VwYW5jeSAoJVJPKSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyBhZnRlciB6aXByYXNpZG9uZSBhZG1pbmlzdHJhdGlvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTAwLDE5OTYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBpbG9wZXJpZG9uZSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzIixWYW5kYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQyMzU1LDIwMDUtMTItMTIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSERaLEhpZ2gtRG9zZSBPcmFsIFppcHJhc2lkb25lIFZlcnN1cyBDb252ZW50aW9uYWwgRG9zaW5nIGluIFBhcnRpY2lwYW50cyBXaXRoIFJlc2lkdWFsIFN5bXB0b21zLCJNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsIFBmaXplciBJbmMiLEludGVydmVudGlvbmFsLDM2MzAxLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIjEyLVdlZWssIE9wZW4sIE5vbi1Db21wYXJhdGl2ZSBTd2l0Y2ggU3R1ZHkgT2YgT3JhbCBaaXByYXppZG9uZSBJbiBQcmV2aW91c2x5IFRyZWF0ZWQgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTAzMSwyMDAzLTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxNT1pBUlQsQSBTdHVkeSBDb21wYXJpbmcgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgWmlwcmFzaWRvbmUgdmVyc3VzIENsb3phcGluZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIGluIFBhdGllbnRzIFdobyBDb250aW51ZSB0byBIYXZlIFN5bXB0b21zIG9uIG9yIENhbm5vdCBUb2xlcmF0ZSBPdGhlciBBbnRpcHN5Y2hvdGljIERydWdzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ5OTEsMjAwMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1vemFydCBSZWxhcHNlIFN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4NjksMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmVhdG1lbnQgV2l0aCBaaXByYXNpZG9uZSBmb3IgU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIE9ic2Vzc2l2ZSBDb21wdWxzaXZlIERpc29yZGVyIChPQ0QpLFNoZWJhIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMzMTQyLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaGFzZSBJSSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmVjdCBvZiBJbG9wZXJpZG9uZSBvbiBRVGMgSW50ZXJ2YWwgRHVyYXRpb24sIk5vdmFydGlzIEFHLCBUaXRhbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwxNDgxMzMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIFNpbmdsZS1CbGluZCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdHMgb2YgSGlnaC1Eb3NlIFppcHJhc2lkb25lIGFuZCBIYWxvcGVyaWRvbCBvbiB0aGUgUVRDIEludGVydmFsIGFmdGVyIEludHJhbXVzY3VsYXIgQWRtaW5pc3RyYXRpb24gaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsIkFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsIEFzdGVsbGFzIFBoYXJtYSBVUyBJbmMsIEFzdHJhWmVuZWNhIFBoYXJtYWNldXRpY2FscyBMUCwgQmlvVGllIFRoZXJhcGllcyBDb3JwLCBCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLCBFaXNhaSBJbmMsIEphbnNzZW4gUGhhcm1hY2V1dGljYWxzIEluYywgTWVyY2sgJiBDbyBJbmMsIE5vdmFydGlzIFBoYXJtYWNldXRpY2FscyBDb3JwLCBPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsIFBmaXplciBJbmMsIFNhbm9maSBTQSwgU2VudGlvbiBJbmMsIFRha2VkYSBQaGFybWFjZXV0aWNhbHMgTm9ydGggQW1lcmljYSBJbmMiLEludGVydmVudGlvbmFsLDE0NTE1NixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSWIvSVYsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIGV4dGVuc2lvbiBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgemlwcmFzaWRvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciBwYXRpZW50cyB3aG8gaGF2ZSBzdWNjZXNzZnVsbHkgY29tcGxldGVkIGEgcHJldmlvdXMgemlwcmFzaWRvbmUgc3R1ZHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEzNDQ2LDE5OTgtMTItMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBbiBJbnZlc3RpZ2F0aW9uIG9mIFNsZWVwIEFyY2hpdGVjdHVyZSBpbiBaaXByYXNpZG9uZS1UcmVhdGVkIEJpcG9sYXIgRGVwcmVzc2lvbixRdWVlbidzIFVuaXZlcnNpdHkgYXQgS2luZ3N0b24sSW50ZXJ2ZW50aW9uYWwsNDU3MjcsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxSaXNwZXJkYWwgQ29uc3RhIGZvciBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwzNTAwMywyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFNhZmV0eSBTdHVkeSBvZiBaaXByYXNpZG9uZSAoR2VvZG9uKSBmb3IgdGhlIERlcHJlc3NpdmUgTWl4ZWQgU3RhdGUsVHVmdHMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzk0MiwyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1hbmlhOiBBIDEyLVdlZWssIFBsYWNlYm8tQ29udHJvbGxlZCwgSGFsb3Blcmlkb2wtUmVmZXJlbmNlZCBTdHVkeSIsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDE0NTA5NSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygb3JhbCB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiBpbi1wYXRpZW50cyB3aXRoIGFuIGFjdXRlIG1hbmljIGVwaXNvZGUiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY3MDYsMjAwMi0wOS0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEEgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmFtdXNjdWxhciB6aXByYXNpZG9uZSBmb2xsb3dlZCBieSBvcmFsIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxNDEzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIE9uZS1ZZWFyIFRyaWFsIG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBJIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjYwMjAsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSA2LVdlZWsgU3R1ZHkgRXZhbHVhdGluZyBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBHZW9kb24gSW4gUGF0aWVudHMgV2l0aCBBIERpYWdub3NpcyBPZiBCaXBvbGFyIEkgRGVwcmVzc2lvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NDY4LDIwMDUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSA2LVdlZWsgRmxleGlibGUgRG9zZSBTdHVkeSBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEdlb2RvbiBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM4NTQsMjAwNi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgMjQtV2VlaywgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRGV0ZXJtaW5lIGlmIFBhdGllbnRzIHdpdGggQmlwb2xhciBJIERpc29yZGVyIEFjaGlldmUgYW5kIFN1c3RhaW4gUmVtaXNzaW9uIixDYXRob2xpYyBVbml2ZXJzaXR5IG9mIEtvcmVhLEludGVydmVudGlvbmFsLDE1NDA0OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElJLCB1bmNvbnRyb2xsZWQsIG9wZW4tbGFiZWwsIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGluIG1vZGVyYXRlbHkgZGVwcmVzc2VkIHBhdGllbnRzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDYwLDE5OTItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMyxFZmZpY2FjeSxZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSBwaGFzZSBJSSwgcGxhY2Viby1jb250cm9sbGVkLCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDUwODUsMTk4OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBmb3VyIHBlcmltZW5zdHJ1YWwgcGVyaW9kIChQTVApIHRvIGV2YWx1YXRlIG5hcmF0cmlwdGFuIGFzIHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgZm9yIG1lbnN0cnVhbGx5LWFzc29jaWF0ZWQgbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1ODQsMTk5OC0wNC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGZvdXIgbWlncmFpbmUgYXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODUyNywxOTk1LTA3LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwgZ3JvdXAsIGFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBibG9vZCBwcmVzc3VyZSByZXNwb25zZSB0byBuYXJhdHJpcHRhbiBpbiBoeXBlcnRlbnNpdmUgc3ViamVjdHMgcmVjZWl2aW5nIGFudGktaHlwZXJ0ZW5zaXZlIHRoZXJhcHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1MjMsMTk5NC0wNy0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY3Jvc3Mtb3ZlciwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHN1YmplY3Qgc2F0aXNmYWN0aW9uIHdpdGggbmFyYXRyaXB0YW4gY29tcGFyZWQgd2l0aCBzdW1hdHJpcHRhbiBpbiBzdWJqZWN0cyB3aG8gaGFkIGxhcHNlZCBmcm9tIHRoZWlyIHByZXZpb3VzIG9yYWwgb3Igc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIGJlY2F1c2Ugb2YgbGFjayBvZiBlZmZpY2FjeSBvciB0b2xlcmFiaWxpdHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc5ODQsMTk5Ny0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZm91ci13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmVjdCBvZiBuYXJhdHJpcHRhbiBvbiBwc3ljaG9tb3RvciBmdW5jdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzUyNSwxOTk0LTA5LTI3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgZm9sbG93ZWQgYnkgYSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLXBlcmlvZCwgcGFyYWxsZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiBtaWdyYWluZSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1NiwxOTk2LTAxLTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1yYW5naW5nLCBzaW5nbGUgYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgbmFyYXRyaXB0YW4gaW4gYW4gYWRvbGVzY2VudCBtaWdyYWluZSBwb3B1bGF0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjA5LDE5OTUtMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW50ZXJhY3Rpb24gb2YgbmFyYXRyaXB0YW4gYW5kIGVyZ290YW1pbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjAzLDE5OTUtMTAtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCBzaW5nbGUtZG9zZSwgcGFyYWxsZWwgZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyYXRyaXB0YW4gaW4gc3ViamVjdHMgd2l0aCBpbXBhaXJlZCBoZXBhdGljIGZ1bmN0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjAxLDE5OTUtMTAtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUHJlZmVyZW5jZSBUcmlhbCB3aXRoIE5hcmF0cmlwdGFuIDIuNSBtZyBhbmQgUGFyYWNldGFtb2wgMTAwMCBtZyBpbiBNaWdyYWluZSBQYXRpZW50cyBpbiB0aGUgR2VuZXJhbCBQcmFjdGljZSxMZWlkZW4gVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMzMyNTQsMjAwNS0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ3Jvc3NvdmVyLCBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBPZiBOYXJhdHJpcHRhbiBPbiBNeW9jYXJkaWFsIEJsb29kIEZsb3cgQW5kIENvcm9uYXJ5IFZhc29kaWxhdG9yIFJlc2VydmUgSW4gTWlncmFpbmV1cnMiLEltcGVyaWFsIENvbGxlZ2UgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDEwOTM3MCwyMDAwLTA3LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgIG11bHRpY2VudGVyIHN0dWR5IGZvciBldmFsdWF0aW9uIG9mIG1pZ3JhaW5ldXJzJyBwcmVmZXJlbmNlcyBmb3IgbmFyYXRyaXB0YW4gb3ZlciBjb252ZW50aW9uYWwgZmlyc3QtbGluZSBhZ2VudHMsSGVhZGFjaGUgQ2FyZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTA2Nzg3LDIwMDAtMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHRhbmRvc3Bpcm9uZSwzNjE5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQ29tcGFyaXNvbiBvZiBUYW5kb3NwaXJvbmUsIEFtbG9kaXBpbmUgYW5kIFRoZWlyIENvbWJpbmF0aW9uIGluIEFkdWx0cyBXaXRoIEh5cGVydGVuc2lvbiBhbmQgQW54aWV0eSIsQ2hvbmdxaW5nIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTMyMjIsMjAxOS0wMi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLFByb2tpbmV0aWNzIGZvciBmdW5jdGlvbmFsIGR5c3BlcHNpYSxLYXdhc2FraSBNZWRpY2FsIFNjaG9vbCxJbnRlcnZlbnRpb25hbCwyNzEzODcsMjAxNi0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEEgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIG1vc2FwcmlkZSBpbiB0aGUgdHJlYXRtZW50IG9mIG5vbi11bGNlciBkeXNwZXBzaWEgcGF0aWVudHMsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQ4MywxOTkyLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZlY3Qgb2YgTW9zYXByaWRlIG9uIGdhc3RyaWMgYWNjb21tb2RhdGlvbixOYXRpb25hbCBDZW50ZXIgT2YgTmV1cm9sb2d5ICYgUHN5Y2hpYXRyeSxJbnRlcnZlbnRpb25hbCwxOTAzMjksMjAxMS0xMS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLDE4LU1vbnRoIFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBYYWxpcHJvZGVuIChTUi01Nzc0NkEpIGluIFBhdGllbnRzIFdpdGggTWlsZC10by1Nb2RlcmF0ZSBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsMTM1OCwyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsU3VtYXRyaXB0YW4gNCBtZyBTdGF0ZG9zZSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIENsdXN0ZXIgSGVhZGFjaGUsRGlhbW9uZCBIZWFkYWNoZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsNTY2NTQsMjAwNi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLENvbXBhcmUgUEsgYW5kIEJpb2F2YWlsYWJpbGl0eSBvZiBUd28gTlAtMTAxIFBhdGNoZXMgV2l0aCBPcmFsIEltaXRyZXggaW4gSGVhbHRoeSBBZHVsdHMsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzgwNDUsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGluIGNsdXN0ZXIgaGVhZGFjaGUsU2vlbmUgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDU3NTYsMTk5OC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1hdHRhY2ssIHBhcmFsbGVsLWdyb3VwLCBvdXRwYXRpZW50IHN0dWR5IHRvICBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzdW1hdHJpcHRhbiAoMTAwIG1nKSB0YWJsZXRzIHZlcnN1cyBwbGFjZWJvIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2VsZi1kZXNjcmliZWQgYW5kL29yIHBoeXNpY2lhbi1kaWFnbm9zZWQgc2ludXMgaGVhZGFjaGVzIHRoYXQgbWVldCBJbnRlcm5hdGlvbmFsIEhlYWRhY2hlIFNvY2lldHkgKElIUykgY3JpdGVyaWEgZm9yIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MTIzLDIwMDItMDUtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIHR3by1waGFzZSBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHN1bWF0cmlwdGFuIDEwMCBtZyB0YWJsZXRzIHZlcnN1cyBwbGFjZWJvIGluIHRoZSB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2hvIGFmZmlybSB0ZW5zaW9uLCB0ZW5zaW9uLXR5cGUgb3Igc3RyZXNzIGhlYWRhY2hlcyBhbmQgd2hvIG1lZXQgaW50ZXJuYXRpb25hbCBoZWFkYWNoZSBzb2NpZXR5IChJSFMpIGNyaXRlcmlhIGZvciBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODExOSwyMDAzLTA0LTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIG91dC1wYXRpZW50LCB2YWxpZGF0aW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGFzc29jaWF0aW9uIGJldHdlZW4gZGlzYWJpbGl0eSAoYXMgbWVhc3VyZWQgYnkgdGhlIGhlYWRhY2hlIGltcGFjdCB0ZXN0LCBISVQtNikgYW5kIElIUyBtaWdyYWluZSBjbGFzc2lmaWNhdGlvbiAoYXMgZGV0ZXJtaW5lZCBieSBleHBlcnQgcGFuZWwgZGlhcnkgcmV2aWV3KSBhbmQgdG8gb2JzZXJ2ZSBhbnkgY2hhbmdlcyBpbiBISVQtNiBzY29yZSBmb2xsb3dpbmcgdHJlYXRtZW50IHdpdGggb3JhbCBzdW1hdHJpcHRhbiA1MCBtZyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODEwMiwyMDAwLTAyLTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgc2luZ2xlLWF0dGFjaywgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBpbnRha2Ugb2Ygc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldHMgYXQgdGhlIGZpcnN0IHNpZ25zIG9mIG1pZ3JhaW5lIHBhaW4gdmVyc3VzIGludGFrZSBhdCBtb2RlcmF0ZSB0byBzZXZlcmUgaGVhZGFjaGUgZHVyaW5nIGFuIGFjdXRlIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzg5OCwyMDAyLTA2LTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRG9zZS1SYW5naW5nIFN0dWR5IG9mIGEgRHJ1ZyBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxCaW9IYXZlbiBQaGFybWFjZXV0aWNhbCBIb2xkaW5nIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MDU5MSwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRSWHZVc3VhbFRycHRuLERvZXMgVHJleGltZXQgSW1wcm92ZSBQcm9kdWN0aXZpdHkgYW5kIFBhdGllbnQgU2F0aXNmYWN0aW9uIER1ZSB0byBTdXN0YWluZWQgUmVzcG9uc2UgYW5kIENvbnNpc3RlbmN5IG9mIFJlc3BvbnNlPyxUaGUgQ2xldmVsYW5kIENsaW5pYyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjQ4NTgsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBSaXphdHJpcHRhbiBmb3IgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCw1NDQ3NCwyMDA5LTA2LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQaGFzZSBJIFN0dWR5IHRvIENvbXBhcmUgTlAtMTAxIChTdW1hdHJpcHRhbiBJb250b3Bob3JldGljIFRyYW5zZGVybWFsIFBhdGNoKSBXaXRoIFRocmVlIEZvcm11bGF0aW9ucyBvZiBJbWl0cmV4LE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDUzODMzLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIG9uIENHUlAgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDM0MTM5NSwyMDE4LTAyLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHN1bWF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMwMjczOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRWZmZWN0IG9mIFNpbmdsZSwgT3JhbCBEb3NlcyBvZiBMYXNtaWRpdGFuIFdoZW4gQ29hZG1pbmlzdGVyZWQgV2l0aCBTaW5nbGUgT3JhbCBEb3NlcyBvZiBTdW1hdHJpcHRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMjkwNTMzLDIwMTctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBzdHVkeSB0byBhc3Nlc3MgdGhlIHBoYXJtYWNva2luZXRpYyBjaGFyYWN0ZXJpc3RpY3Mgb2Ygc3VtYXRyaXB0YW4gYWZ0ZXIgb3JhbCBhZG1pbmlzdHJhdGlvbiBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMsS3l1bmdwb29rIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjUxOTU1LDIwMTUtMDgtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgU3ViY3V0YW5lb3VzIEdSLTQzMTc1QyAoNiBtZyBhbmQgT3B0aW9uYWwgNiBtZykgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNZW5zdHJ1YWwgTWlncmFpbmUgliBXaXRoIE9wdGlvbmFsIE9wZW4gRm9sbG93LVVwIFRyZWF0bWVudDogUGhhc2UgSSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMTY4MTksMTk5Mi0wNC0wMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ3VwcGluZyBhbmQgU2Vya2FuZ2FiaW4gVmVyc3VzIENvbnZlbnRpb25hbCBNaWdyYWluZSBUcmVhdG1lbnQsQmlyamFuZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE5MjM1NCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBCbG9vZCBQcmVzc3VyZSBFZmZlY3Qgb2YgYW4gT3JhbCBEb3NlIG9mIFN1bWF0cmlwdGFuIEFsb25lIGFuZCBpbiBDb21iaW5hdGlvbiBXaXRoIE1LLTA5NzQgKFRlbGNhZ2VwYW50KSBpbiBNaWdyYWluZSBQYXRpZW50cyIsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDE3OTc1LDIwMDctMTEtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgRWZmZWN0IG9mIEdSLTQzMTc1QyBvbiBCbG9vZCBQcmVzc3VyZSBpbiBIeXBlcnRlbnNpdmUgTWlncmFpbmUgUGF0aWVudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNjA0OTUsMTk4OS0wMy0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIHRoZSBUb2xlcmFiaWxpdHkgb2YgUGFyYWNldGFtb2wgMTAwMCBtZyArIENhZmZlaW5lIDEzMCBtZyBpbiB0aGUgVHJlYXRtZW50IG9mIHRoZSBNaWdyYWluZS4gUGhhc2UgSVYsIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgRG91YmxlLWR1bW15LCB2ZXJzdXMgU3VtYXRyaXB0YW4gNTAgbWcgYW5kIFBsYWNlYm8iLE5vdCBBc3NpZ25lZCxJbnRlcnZlbnRpb25hbCwxMzA0MDIsMjAxMC0wNy0yNyAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIERvdWJsZS1EdW1teSwgTXVsdGljZW50ZXIsIENyb3NzLU92ZXIsIENvbnRyb2xsZWQgVHJpYWwgQ29tcGFyaW5nIFRvbGVyYWJpbGl0eSBBbmQgRWZmaWNhY3kgT2YgQSBDb21iaW5hdGlvbiBPZiBQYXJhY2V0YW1vbCArIENhZmZlaW5lIEFuZCBTdW1hdHJpcHRhbiBJbiBUaGUgVHJlYXRtZW50IE9mIE1pZ3JhaW5lIEF0dGFjayIsVW5pdmVyc2l0YSBkaSBCYXJpLEludGVydmVudGlvbmFsLDEwMjkxMCwyMDExLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxTdHVkeSB0byBkZXRlcm1pbmUgYmlvZXF1aXZhbGVuY2UgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2Ygem9sbWl0cmlwdGFuIGRpc3BlcnNpYmxlIHRhYmxldHMgMi41IG1nIGluIGhlYWx0aHkgZmVtYWxlIHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLFByb2R1Y3RvcyBDaWVudGlmaWNvcyxJbnRlcnZlbnRpb25hbCwyMTUxNjUsMjAxNS0wMi0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRGV0ZXJtaW5lIENlbnRyYWwgNS1IVDFCIFJlY2VwdG9yIE9jY3VwYW5jeSBvZiBab21pZyBSYXBpbWVsdCAoWm9sbWl0cmlwdGFuKSBpbiBIZWFsdGh5IE1hbGUgVm9sdW50ZWVycyxBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsNjQ4OTAsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LEJpb2VxdWl2YWxlbmNlLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHR3byBtZWRpY2luYWwgcHJvZHVjdHMgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgWm9sbWl0cmlwdGFuIDIuNSBtZyB0YWJsZXRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyxBcmxleCBkZSBNZXhpY28sSW50ZXJ2ZW50aW9uYWwsMzAxOTA2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIE9wZW4tbGFiZWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBab2xtaXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMsRGFsbGFzIFBlZGlhdHJpYyBOZXVyb2xvZ3kgQXNzb2NpYXRlcyxJbnRlcnZlbnRpb25hbCwxMDk3NTMsMjAwMC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWx0b3ByYXppbmUsNTAyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixBZ2dyZXNzaW9uLDksRHVwaGFyLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2VibyBhbmQgYmFzZWxpbmUtY29udHJvbGxlZCwgbXVsdGktY2VudGVyLKAgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgb2agZWx0b3ByYXppbmUgaW4gZGVtZW50ZWQgZWxkZXJseSBwYXRpZW50cyB3aXRoIGRpc3J1cHRpdmUgYmVoYXZpb3VyIixBbWFyYW50dXMgQmlvU2NpZW5jZSBIb2xkaW5ncyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ4NDQwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsRWZmZWN0cyBvZiBFbHRvcHJhemluZSBvbiBDb2duaXRpdmUgSW1wYWlybWVudCBBc3NvY2lhdGVkIFdpdGggU2NoaXpvcGhyZW5pYSAoQ0lBUykgaW4gQWR1bHRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCw3MzM3NywyMDExLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUZpbmRpbmcgU3R1ZHkgb2YgT3JhbCBFbHRvcHJhemluZSBmb3IgVHJlYXRtZW50IG9mIExldm9kb3BhLUluZHVjZWQgRHlza2luZXNpYXMgKExJRCkgaW4gYSBMZXZvZG9wYSBDaGFsbGVuZ2UtRG9zZSBTZXR0aW5nIGluIFBhcmtpbnNvbnMgRGlzZWFzZSIsUHN5Y2hvR2VuaWNzIEluYyxJbnRlcnZlbnRpb25hbCwxNDIwMjgsMjAxMC0xMC0wNiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJMb25nLVRlcm0gRXhwb3N1cmUgdG8gUml6YXRyaXB0YW4gNSBhbmQgMTAgbWcgT3JhbCBUYWJsZXQgKENvbWJpbmVkIEV4dGVuc2lvbiBQcm90b2NvbHMgTUstMDQ2Mi0wMjIsIE1LLTA0NjItMDI1LCBNSy0wNDYyLTAyOSkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDc0MzI0LDE5OTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBMb25nLVRlcm0gVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cywiTWVyY2sgJiBDbyBJbmMsIE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsNjE0OTksMjAwOS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdHMgb2YgRXhwZWN0YXRpb24gYW5kIEtub3dsZWRnZSBvbiBSaXphdHJpcHRhbiBhbmQgUGxhY2VibyBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgSGVhZGFjaGUsQmV0aCBJc3JhZWwgRGVhY29uZXNzIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIzMjA1LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBEcnVnIGluIHRoZSBUcmVhdG1lbnQgb2YgTWVuc3RydWFsIE1pZ3JhaW5lLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEzOTM1LDIwMDUtMDUtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIGFkb2xlc2NlbnRzIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTI2ODIsMjAwMi0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxBcmlwaXByYXpvbGUgQXNzb2NpYXRlZCBXaXRoIE1ldGh5bHBoZW5pZGF0ZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGFuZCBBREhELEZlZGVyYWwgVW5pdmVyc2l0eSBvZiBSaW8gR3JhbmRlIGRvIFN1bCxJbnRlcnZlbnRpb25hbCwzMjU1NSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBDaGlsZHJlbiBXaXRoIEFESEQgKEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIpLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzMTgyNCwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLWNvbnRyb2wsIFBvc3QtbWFya2V0aW5nLCBHZW5ldGljIEFzc29jaWF0aW9uIFN0dWR5IG9uIEluZGl2aWR1YWwgRGlmZmVyZW5jZSBvZiBUaGVyYXBldXRpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiIsIk1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZbRzIFJlcHVibGljIG9mIENoaW5hLCBQZWtpbmcgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsOTg5NDMsMjAwOC0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBOb24tY29udHJvbGxlZCwgUG9zdC1tYXJrZXRpbmcsIEdlbmV0aWMgQXNzb2NpYXRpb24gU3R1ZHkgb24gSW5kaXZpZHVhbCBEaWZmZXJlbmNlIG9mIFRoZXJhcGV1dGljIEVmZmVjdHMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uIiwiTWluaXN0cnkgb2YgSGVhbHRoIG9mIHRoZSBQZW9wbGUncyBSZXB1YmxpYyBvZiBDaGluYSwgUGVraW5nIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDk4NzcyLDIwMDgtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtYWNvZ2Vub21pYyBzdHVkeSBvZiBzY2hpem9waHJlbmlhLCJNaW5pc3RyeSBvZiBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIHRoZSBQZW9wbGW0cyBSZXB1YmxpYyBvZiBDaGluYSwgVGhlIFNpeHRoIEhvc3BpdGFsIG9mIFBla2luZyBVbml2ZXJzaXR5IChJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCkiLEludGVydmVudGlvbmFsLDk4NDgyLDIwMDktMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIENvbXBhcmF0aXZlIFN0dWR5IG9mIFBhdGllbnQgU2F0aXNmYWN0aW9uIEJldHdlZW4gQ29udGludWVkIEFkbWluaXN0cmF0aW9uIG9mIFByZXZpb3VzIEFudGlwc3ljaG90aWNzIFZlcnN1cyBTd2l0Y2hlZCBBZG1pbmlzdHJhdGlvbiB0byBQYWxpcGVyaWRvbmUgRVIgaW4gTm9uLVNhdGlzZmllZCBQYXRpZW50cyBXaXRoIFByZXZpb3VzIEFudGlwc3ljaG90aWMgRHJ1ZyxKYW5zc2VuIEtvcmVhIEx0ZCxJbnRlcnZlbnRpb25hbCw4NzIxMiwyMDEyLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0aHJlZSBmaXhlZCBkb3NlcyBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIHNjaGl6b3BocmVuaWEiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDgyMjAxLDIwMDAtMDEtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAwIENsaW5pY2FsLEMwLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSWRlbnRpZmljYXRpb24gb2YgTXVsdGktbW9kYWwgQmlvLW1hcmtlcnMgZm9yIEVhcmx5IERpYWdub3NpcyBhbmQgVHJlYXRtZW50IFByZWRpY3Rpb24gaW4gU2NoaXpvcGhyZW5pYSBJbmRpdmlkdWFscyxHZW5lcmFsIEhvc3BpdGFsIG9mIFRpYW5qaW4gTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2NTE2NSwyMDE4LTA5LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIHRoZSBQcm9jZXNzaW5nIG9mIFJld2FyZHMgaW4gU2NoaXpvcGhyZW5pYSxFbW9yeSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MjgxLDIwMDUtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IENvbXBhcmluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIEhvc3BpdGFsaXplZCBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDY5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTd2l0Y2ggU3R1ZHkgb2YgQk1TLTMzNzAzOSBpbiBTY2hpem9waHJlbmljIE91dC1QYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTIwMywyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBhbmQgT2xhbnphcGluZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwzNDg5NiwyMDAwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxPbGFuemFwaW5lIFZlcnN1cyBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZWx5IElsbCBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzQ4NTQsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFNob3J0LXRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIE1vbm90aGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMwMzA1MywyMDE3LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyaXNvbiBvZiB0aGUgYmVnaW5uaW5nIG9mIHRoZXJhcGV1dGljIHJlc3BvbnNlIGJldHdlZW4gZGlmZmVyZW50IHR5cGljYWwgYW5kIGF0eXBpY2FsIGFudGlwc3ljaG90aWNzIGluIGFjdXRlIHBzeWNob3NpcyxBaHZheiBKdW5kaXNoYXB1ciBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzAyMDY5LDIwMTYtMTAtMTYgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGVmZmVjdCBpbiB0aGUgdHJlYXRtZW50IG9mIHJlc2lkdWFsIHN5bXB0b21zIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxNYXphbmRhcmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyOTQxODMsMjAxNy0wMS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQWRqdW5jdGl2ZSBhcmlwaXByYXpvbGUgdHJlYXRtZW50IGZvciByaXNwZXJpZG9uZS1pbmR1Y2VkIGh5cGVycHJvbGFjdGluZW1pYTogYW4gOC13ZWVrLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBjb21wYXJhdGl2ZSBjbGluaWNhbCB0cmlhbCIsWGluWGlhbmcgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1NTE2NSwyMDEyLTA5LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNoYW5nZXMgaW4gQWRpcG9zaXR5LCBNZXRhYm9saWMgTWVhc3VyZXMgRnJvbSBBdHlwaWNhbHMgdG8gQXJpcGlwcmF6b2xlIixXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMjE2NzEsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXZhbHVhdGlvbiBvZiBlZmZlY3RpdmVuZXNzIG9mIFJpc3BlcmRhbCBDb25zdGEgY29tcGFyZWQgdG8gQWJpbGlmeSBvdmVyIGEgdHdvLXllYXIgcGVyaW9kIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMTExMSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBPcmFsIEFjY2VwdGFiaWxpdHkgVHJpYWwsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTUsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxFVUxBU1QsRXVyb3BlYW4gTG9uZy1BY3RpbmcgQW50aXBzeWNob3RpY3MgaW4gU2NoaXpvcGhyZW5pYSBUcmlhbCwiVGhlIEV1cm9wZWFuIEdyb3VwIGZvciBSZXNlYXJjaCBpbiBTY2hpem9waHJlbmlhIChFR1JJUyksIFVuaXZlcnNpdGFpciBNZWRpc2NoIENlbnRydW0gVXRyZWNodCAiLEludGVydmVudGlvbmFsLDE5MTE1OCwyMDE1LTAyLTI4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVDQU5TLFBhbiBFdXJvcGVhbiBDb2xsYWJvcmF0aW9uIG9uIEFudGlwc3ljaG90aWMgTmFpdmUgU2NoaXpvcGhyZW5pYSxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwxODYzMjMsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIE9uY2UtbW9udGhseSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTU3MzEyLDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUEQsQW50aXBzeWNob3RpYyBFZmZlY3RzIE9uIEJyYWluIEZ1bmN0aW9uIEluIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIFNhbiBGcmFuY2lzY28sSW50ZXJ2ZW50aW9uYWwsMTQ4NzE3LDIwMTMtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBPcGVuLUxhYmVsIFBpbG90IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gaW4gdGhlIE1hbmFnZW1lbnQgb2YgUmVzaWR1YWwgU3ltcHRvbXMgaW4gQ2xvemFwaW5lLVRyZWF0ZWQgT3V0cGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEsVW5pdmVyc2l0eSBvZiBBdGhlbnMsSW50ZXJ2ZW50aW9uYWwsMTQ2OTgyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIEV4cGxvcmF0b3J5IE9wZW4tTGFiZWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGFzIGFuIEFkanV2YW50IHRvIENsb3phcGluZSBUaGVyYXB5IGluIENocm9uaWMgU2NoaXpvcGhyZW5pYSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ2NDU4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMb3dlciBEb3NlcyBvZiBBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBGbG9yaWRhLEludGVydmVudGlvbmFsLDE0NjMzOSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gT3Blbi1MYWJlbCwgMjYtd2VlaywgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdGl2ZW5lc3MgT2YgU3dpdGNoaW5nIFRvIEFyaXBpcHJhem9sZSBGcm9tIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIEluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwxNDYyOTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCAyNi1XZWVrIFN0dWR5IG9mIGEgRml4ZWQgRG9zZSBvZiBBcmlwaXByYXpvbGUgKDE1IG1nKSBpbiB0aGUgVHJlYXRtZW50IG9mIFN0YWJpbGl6ZWQgUGF0aWVudHMgd2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQzODQ0LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSB3aXRoIEFyaXBpcHJhem9sZS4gQSBPbmUgWWVhciwgT3Blbi1MYWJlbCBTdHVkeSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTM5OTU1LDIwMDUtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgV2l0aCBBcmlwaXByYXpvbGUgb24gQm9keSBXZWlnaHQsIE1ldGFib2xpYyBQYXJhbWV0ZXJzLCBDbGluaWNhbCBFZmZpY2FjeSwgYW5kIEFkdmVyc2UgRXZlbnRzIGluIFBlb3BsZSBXaXRoIFBzeWNob3RpYyBEaXNvcmRlcnMgb24gVHJlYXRtZW50IFdpdGggQ2xvemFwaW5lIiwiQ2hyaXN0aWFuIE1lZGljYWwgQ29sbGVnZSwgVmVsbG9yZSwgSW5kaWEiLEludGVydmVudGlvbmFsLDEzMTgwNCwyMDEzLTAyLTE1IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSAoWmVsZG94KSBhbmQgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBvbiBDb2duaXRpdmUgRnVuY3Rpb25pbmcgYW5kIFF1YWxpdHkgb2YgU2xlZXAgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmljIFBhdGllbnRzLEx1ZHdpZy1NYXhpbWlsaWFucyBVbml2ZXJzaXR5IG9mIE11bmljaCxJbnRlcnZlbnRpb25hbCwxMjk4MDYsMjAwNy0xMi0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsQkFBUlQsQmlvbWFya2VycyBpbiBBdXRpc20gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBUcmVhdG1lbnQsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDE5MTIzOCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLENsaW5pY2FsIE9ic2VydmF0aW9uIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEF1dGlzbSxIdWF6aG9uZyBVbml2ZXJzaXR5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTYzNDQzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQXJpcGlwcmF6b2xlIFZlcnN1cyBSaXNwZXJpZG9uZSBmb3IgVHJlYXRtZW50IG9mIEF1dGlzbSxTaGlyYXogVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDEyMjk1NCwyMDExLTA4LTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCwiQXJpcGlwcmF6b2xlIGZvciBNZXRoYW1waGV0YW1pbmUgRGVwZW5kZW5jZTogRG91YmxlLUJsaW5kLCBQbGFjZWJvIFRyaWFsIixVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMjMwNjUsMjAwOS0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIDMtd2VlaywgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggYmlwb2xhciBkaXNvcmRlciBleHBlcmllbmNpbmcgYW4gYWN1dGUgbWFuaWMgZXBpc29kZSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIwNjEsMjAwMy0wNS0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxSaXNwZXJkYWwgQ29uc3RhIGZvciBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwzNTAwMywyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBbiBPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwzNDcxOCwyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDM0NTk3LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFyaXBpcHJhem9sZSBBc3NvY2lhdGVkIFdpdGggTWV0aHlscGhlbmlkYXRlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFESEQsRmVkZXJhbCBVbml2ZXJzaXR5IG9mIFJpbyBHcmFuZGUgZG8gU3VsLEludGVydmVudGlvbmFsLDMyNTU1LDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsQUxELEVmZmVjdCBvZiBBcmlwaXBlcmF6b2xlIGluIFRyZWF0bWVudCBvZiBQc3ljaG90aWMgTWFuaWEsTWF6YW5kYXJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjIxMjY4LDIwMTQtMDQtMjEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEFzcGVyZ2VycyBhbmQgUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXIsSW5kaWFuYSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwzMDk3MCwyMDA1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBCaXBvbGFyIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAxLDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgT25jZS1kYWlseSBPcmFsIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgd2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDk4MzgwLDIwMTMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIExvbmctdGVybSBFZmZpY2FjeSBvZiBPcmFsIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBlZGlhdHJpYyBTdWJqZWN0cyBXaXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUzMDM5LDIwMTgtMDktMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLE9wZW4tTGFiZWwgVHJpYWwgb2YgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsIk5ldyBZb3JrIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLCBVUyIsSW50ZXJ2ZW50aW9uYWwsMjA1OTEsMjAwNS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQ2hyb25pYyBUaWMgRGlzb3JkZXIgb3IgVG91cmV0dGUncyBEaXNvcmRlcixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE5MDA2LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgZm9yIEluYWRlcXVhdGUgUmVzcG9uc2UgaW4gTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDkzMDkxLDIwMTItMDItMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFZBU1QtRCxWQSBBdWdtZW50YXRpb24gYW5kIFN3aXRjaGluZyBUcmVhdG1lbnRzIGZvciBJbXByb3ZpbmcgRGVwcmVzc2lvbiBPdXRjb21lcyxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsODA3NDEsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBQ0VTIDI1NyxUbyBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIGFuIE9yYWwgQXJpcGlwcmF6b2xlL0VzY2l0YWxvcHJhbSBDb21iaW5hdGlvbiBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw2NjQxNCwyMDEwLTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQUNFUyAyNjMsIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIGFuIE9yYWwgQXJpcGlwcmF6b2xlL0VzY2l0YWxvcHJhbSBDb21iaW5hdGlvbiBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsIkNvdmFuY2UgSW5jLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsNjU5NDcsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBSYW5kb21pemVkLCBQcm9zcGVjdGl2ZSwgT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIgU3R1ZHkgdG8gQ29tcGFyZSBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIHRvIEJ1cHJvcGlvbiBDb21iaW5hdGlvbiBUaGVyYXB5IGluIE9sZGVyIFBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsWW91bmduYW0gVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNDgzNzAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIFN0dWR5IG9mIEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxOTIxMywyMDA0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIERvc2UtZmluZGluZyBTdHVkeSBmb3IgU1BNLTk2MiBpbiBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg3NDksMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIGRvc2UtcmFuZ2luZyBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBlYXJseSBQYXJraW5zb26ScyBkaXNlYXNlIixVQ0IgUGhhcm1hIEdtYkgsSW50ZXJ2ZW50aW9uYWwsODc1OCwxOTk5LTExLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24sIHBoYXJtYWNva2luZXRpYywgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiByb3RpZ290aW5lIHBhdGNoZXMgaW4gcGF0aWVudHMgd2l0aCBlYXJseS1zdGFnZSBQYXJraW5zb24ncyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODYzNCwyMDA0LTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWFybSwgZXhwbG9yYXRvcnksIDE4LXdlZWssIGVmZmljYWN5IHN0dWR5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBQYXJraW5zb26ScyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODYyNywyMDA3LTEwLTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFJFQ09WRVIsUmFuZG9taXplZCBFdmFsdWF0aW9uIG9mIHRoZSAyNC1oIENvdmVyYWdlOiBFZmZpY2FjeSBvZiBSb3RpZ290aW5lLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY5OTYsMjAwNy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LENMRU9QQVRSQS1QRCwiUm90aWdvdGluZSBQYXRjaCBpbiBTdWJqZWN0cyBXaXRoIEFkdmFuY2VkIFN0YWdlLCBJZGlvcGF0aGljIFBhcmtpbnNvbpJzIERpc2Vhc2UgV2hvIEFyZSBOb3QgV2VsbCBDb250cm9sbGVkIG9uIExldm9kb3BhIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNjY1MiwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsQlJJR0hULFRyaWFsIHRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBPZiBSb3RpZ290aW5lIG9uIFBhcmtpbnNvbidzIERpc2Vhc2UtQXNzb2NpYXRlZCBNb3RvciBTeW1wdG9tcyBBbmQgQXBhdGh5LFVDQiBCSU9TQ0lFTkNFUyBHbWJILEludGVydmVudGlvbmFsLDEwNzc1MSwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLFN0dWR5IG9mIFNQTS05NjIgaW4gUGF0aWVudHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lIChSTFMpLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjQ3NDksMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGZsaWJhbnNlcmluLDg1NDksIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiVG8gRXZhbHVhdGUgRWZmZWN0IG9mIE11bHRpLURvc2VzIEZsaWJhbnMgMTAwIG1nIEZpbG0tYyBUYWJsZXRzIG9uIFNpbmdsZSBEb3NlIFBLIG9mIERpZ294aW4gMC41IG1nLCBIZWFsdGh5IFZvbHVudGVlcnMiLEJvZWhyaW5nZXIgSW5nZWxoZWltIEludGVybmF0aW9uYWwgR21iSCxJbnRlcnZlbnRpb25hbCw2Njk0MSwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxSSS1BTUUsUkktQU1FIFN0dWR5IE9GIChJc290aGlhem9seWwtMy0xNEMpLUx1cmFzaWRvbmUsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjQ2ODMsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJUbyBzdHVkeSB0aGUgZGlmZmVyZW5jZSBpbiBlZmZlY3Qgb2YgdmFyaW91cyBkcnVnIGluIHBhdGllbnQgc3VmZmVyaW5nIGZyb20gU2NoaXpvcGhyZW5pYSwgYSBraW5kIG9mIG1lbnRhbCBkaXNvcmRlciBpbiB3aGljaCBzaWducyBhbmQgc3ltcHRvbXMgYXJlIHZhcmlhYmxlIGFuZCBpbmNsdWRlIGNoYW5nZXMgaW4gcGVyY2VwdGlvbiwgZW1vdGlvbiwgY29nbml0aW9uLCB0aGlua2luZywgYW5kIGJlaGF2aW9yIixLaW5nIEdlb3JnZSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzI4ODIzLDIwMTYtMTEtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUbyBzdHVkeSBlZmZlY3Qgb2YgbHVyYXNpZG9uZSBpbiBwYXRpZW50cyBvZiBzY2hpem9waHJlbmlhIGluIGNvbXBhcmlzb24gd2l0aCBvcGxhbnphcGluZSwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIE5hZ3B1ciIsSW50ZXJ2ZW50aW9uYWwsMzI2MzcyLDIwMTYtMTItMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkx1cmFzaWRvbmUgSENsIC0gQSBMb25nLVRlcm0gU2FmZXR5LCBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBDbGluaWNhbGx5IFN0YWJsZSBTY2hpem9waHJlbmlhIiwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMjExNzgsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUGhhcm1hY29raW5ldGljIFN0dWR5IG9mIEx1cmFzaWRvbmUgQWZ0ZXIgU2luZ2xlIE9yYWwgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBTdWJqZWN0cyxTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDIwMDA2OSwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlBlZGlhdHJpYyBPcGVuLUxhYmVsLCBFeHRlbnNpb24gU3R1ZHkiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4ODA0LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGZpeGVkLWRvc2UgbHVyYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIiwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDExMzQzOCwyMDAxLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBdXRpc20sNDIzLG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsTlJYLUdMWCxOUlgxMDEgR2x4IEJpb21hcmtlciBWYWxpZGF0aW9uIFN0dWR5LCJOZXVyb1J4IEluYywgTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlIixJbnRlcnZlbnRpb25hbCwzMjYwMjMsMjAxOC0xMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxMdXJhc2lkb25lOiBBIDI0LVdlZWsgRXh0ZW5zaW9uIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24sU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0OTkzMCwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEVMSUNFX0JELFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBMdXJhc2lkb25lIGluIENvZ25pdGl2ZSBGdW5jdGlvbmluZyBpbiBCaXBvbGFyIFBhdGllbnRzLCJKYXBhbiBOYXRpb25hbCBJbnN0aXR1dGUgT2YgTWVudGFsIEhlYWx0aCwgTmF0aW9uYWwgQ2VudGVyIE9mIE5ldXJvbG9neSAmIFBzeWNoaWF0cnksIFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSIsSW50ZXJ2ZW50aW9uYWwsMjU3NjU0LDIwMTctMDUtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsTHVyYXNpZG9uZSBhbmQgQ29nbml0aW9uIGluIEJpcG9sYXIgSSBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsMTkxMTA5LDIwMTQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBTTS0xMzQ5NiBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjE3NTksMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgRnJvdmF0cmlwdGFuIHRvIFByZXZlbnRpb24gb2YgTWVuc3RydWFsbHkgQXNzb2NpYXRlZCBNaWdyYWluZSAoTUFNKSBIZWFkYWNoZXMsRW5kbyBIZWFsdGggU29sdXRpb25zIEluYyxJbnRlcnZlbnRpb25hbCw2Mjg2NywyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEZSRVNILCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRnJvdmF0cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFNLIENoZW1pY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNDA5ODUsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHNhZmV0eSwgZWZmaWNhY3ksIEl0YWxpYW4gc3R1ZHkgb2YgZnJvdmF0cmlwdGFuIHZlcnN1cyBhbG1vdHJpcHRhbiBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0eSBvZiBQYWxlcm1vLEludGVydmVudGlvbmFsLDE4NzYwMSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHZpbGF6b2RvbmUncyBlZmZpY2FjeSwgc2FmZXR5LCBhbmQgYmlvbWFya2VycyBvZiByZXNwb25zZSBpbiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxNTQyNSwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxvc2Vtb3pvdGFuLDk5NzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJSWEsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgTU4tMzA1IChvc2Vtb3pvdGFuKSBpbiBwYXRpZW50cyB3aXRoIHByaW1hcnkgaW5zb21uaWEgYW5kIHNsZWVwIG1haW50ZW5hbmNlIGRpZmZpY3VsdGllcyIsTWVkaWNpTm92YSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQxOCwyMDA3LTAxLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgcGhhc2UgSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzUyLDIwMDAtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLFpFTlNBQSwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGFyYWxsZWwtZ3JvdXAsIG11bHRpLWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gZmVtYWxlIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGFuZCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjQwLDIwMDItMTItMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcmFuZG9taXplZCwgcGhhc2UgSUlJIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKEMtSUJTKSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk2MDIsMTk5OS0xMC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTU2NywyMDA2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHBoYXNlIElJLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggY29uc3RpcGF0aW9uLXByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjUsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBtdWx0aW5hdGlvbmFsLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk1ODUsMjAwMy0xMC0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsVGhlIEVmZmVjdHMgb2YgVGVnYXNlcm9kIFZlcnN1cyBQbGFjZWJvIG9uIFdob2xlIEd1dCBUcmFuc2l0IFRpbWUgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiBhbmQgRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzA1LDIwMDYtMDEtMTMgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIE9yb2NlY2FsIFRyYW5zaXQgaW4gRWxkZXJseSBDaHJvbmljIENvbnN0aXBhdGlvbiBQYXRpZW50cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODY5OSwyMDA2LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgaW4gT3Bpb2lkLUluZHVjZWQgQ29uc3RpcGF0aW9uIGluIFBhdGllbnRzIFdpdGggTm9uLUNhbmNlciBQYWluLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NjkwLDIwMDYtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRlZ2FzZXJvZCBpbiBPcGlvaWQtSW5kdWNlZCBDb25zdGlwYXRpb24gaW4gUGF0aWVudHMgV2l0aCBOb24tQ2FuY2VyIFBhaW4uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NjgzLDIwMDYtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRlZ2FzZXJvZCBpbiBPcGlvaWQtSW5kdWNlZCBDb25zdGlwYXRpb24gaW4gUGF0aWVudHMgV2l0aCBOb24tQ2FuY2VyIFBhaW4sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg2NzAsMjAwNy0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBkZXNpZ24gc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5Nzc5LDIwMDUtMDUtMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgKEdFUkQpIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTgxNywxOTk5LTA1LTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIFRocmVlIERvc2FnZSBTdHJlbmd0aHMgb2YgQWxtb3RyaXB0YW4gTWFsYXRlIChBeGVydCkgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBpbiBBZG9sZXNjZW50cyxKYW5zc2VuLU9ydGhvIEluYyxJbnRlcnZlbnRpb25hbCwxMzk1MCwyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsR2FzdHJvaW50ZXN0aW5hbCBmdW5jdGlvbiBkaXNvcmRlciwzOTUsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGFyYWxsZWwtZ3JvdXAgdHJpYWwgdG8gY29tcGFyZSB0aGUgc2luZ2xlLWRvc2UgYW5kIHN0ZWFkeS1zdGF0ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBzYWZldHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIGhlYWx0aHkgeW91bmcgYW5kIGVsZGVybHkgdm9sdW50ZWVycyIsSmFuc3NlbiBQaGFybWFjZXV0aWNhIE5WLEludGVydmVudGlvbmFsLDY2NTQ4LDIwMTAtMDUtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRXZhbHVhdGlvbiBvZiBMb25nLXRlcm0gUHJ1Y2Fsb3ByaWRlIFRyZWF0bWVudCBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIGluIFN1YmplY3RzIEFnZWQgPi89IDE4IFllYXJzLFNoaXJlIHBsYyxJbnRlcnZlbnRpb25hbCw4MDM2MSwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBydWNhbG9wcmlkZSBpbiBQZWRpYXRyaWMgU3ViamVjdHMgV2l0aCBGdW5jdGlvbmFsIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDc2MTI2LDIwMTEtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFBydWNhbG9wcmlkZSBpbiBDb21iaW5hdGlvbiBXaXRoIFBvbHlldGh5bGVuZSBHbHljb2wgb3IgTGFjdHVsb3NlIGluIFdvbWVuIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sWGlhbi1KYW5zc2VuIFBoYXJtYWNldXRpY2FsIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDkyNjksMjAxNC0xMC0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQxMCwxOTk1LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxNb3ZpY29sIChQRUcgMzM1MCArIEVsZWN0cm9seXRlcykgb3IgUHJ1Y2Fsb3ByaWRlIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBDb25zdGlwYXRpb246IEEgSGVhZC10by1IZWFkIENvbXBhcmlzb24gaW4gYSBDb250cm9sbGVkIEVudmlyb25tZW50LFVuaXYgV2l0dGVuIC8gSGVyZGVja2UsSW50ZXJ2ZW50aW9uYWwsMTQ1MTI1LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHBydWNhbG9wcmlkZSBvbiBjb2xvbmljIHRyYW5zaXQsIGFub3JlY3RhbCBmdW5jdGlvbiBhbmQgYm93ZWwgaGFiaXRzIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24iLFZyaWplIFVuaXZlcnNpdGVpdCB2YW4gQW1zdGVyZGFtLEludGVydmVudGlvbmFsLDExMjU1MywyMDAyLTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLFJldHQgc3luZHJvbWUsMzExOSxTVEFSUywiRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNhcml6b3RhbiBpbiBSZXR0IFN5bmRyb21lIFdpdGggUmVzcGlyYXRvcnkgU3ltcHRvbXMiLE5ld3JvbiBQaGFybWFjZXV0aWNhbHMgU3BBLEludGVydmVudGlvbmFsLDI2MjY2NCwyMDE2LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBzaG9ydC10ZXJtLCBwaGFzZSBJSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYmlmZXBydW5veCB2ZXJzdXMgcGxhY2VibyBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgZXhhY2VyYmF0aW9ucyBvZiBzY2hpem9waHJlbmlhIiwiSCBMdW5kYmVjayBBL1MsIFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLCBXeWV0aCBQaGFybWFjZXV0aWNhbHMiLEludGVydmVudGlvbmFsLDQxNTM3LDIwMDYtMTItMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBNdWx0aWNlbnRlciwgRG9zZS1GaW5kaW5nIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBhbiBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSIsT3JlZ29uIEhlYWx0aCBTY2llbmNlcyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0NDI0MyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU3R1ZHkgRXZhbHVhdGluZyBCaWZlcHJ1bm94IGluIEJpcG9sYXIgRGVwcmVzc2lvbixXeWV0aCxJbnRlcnZlbnRpb25hbCwzMzgxNywyMDA1LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVHdpY2UtRGFpbHkgVGl0cmF0aW9uIFN0dWR5IG9mIEJpZmVwcnVub3ggaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDYzNSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsU0xWLTMwOCBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggRWFybHkgUGFya2luc29uJ3MgRGlzZWFzZSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNjY1NSwyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBQaWxvdCBTdHVkeSB0byBBc3Nlc3MgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBQYXJkb3BydW5veCBhcyBBZGp1bmN0IFRoZXJhcHkgdG8gTC1Eb3BhIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQYXJraW5zb25zIERpc2Vhc2UgRXhwZXJpZW5jaW5nIE1vdG9yIEZsdWN0dWF0aW9ucyBhbmQgRHlza2luZXNpYSxBYmJvdHQgTGFib3JhdG9yaWVzLEludGVydmVudGlvbmFsLDU1NDI5LDIwMDktMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gYXNzZXNzIHRoZSByZWR1Y3Rpb24gb2YgaGFsb3Blcmlkb2wtaW5kdWNlZCBzaWRlIGVmZmVjdHMgYnkgQUNQLTEwMyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY1MCwyMDA1LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFRyZWF0bWVudCBvZiBIYWxsdWNpbm9zaXMvUHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIERpc2Vhc2UgYnkgYW4gSW52ZXN0aWdhdGlvbmFsIERydWcsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5NCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxFeHBhbmRlZCBBY2Nlc3Mgb2YgUGltYXZhbnNlcmluIGZvciBQYXRpZW50cyBXaXRoIFBEIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNjAzMTksbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBhYmlsaXR5IG9mIEFDUC0xMDMgdG8gcmVkdWNlIG1vdG9yIGRpc3R1cmJhbmNlcyBhc3NvY2lhdGVkIHdpdGggaGFsb3Blcmlkb2wgdHJlYXRtZW50IGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDM5NjUsMjAwNS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1pZ3JhaW5lIFRyZWF0bWVudCBTYXRpc2ZhY3Rpb24gV2l0aCBUcmV4aW1ldCBWZXJzdXMgQ29uY29taXRhbnQgVHdvIEFsZXZlIGFuZCBJbWl0cmV4LFdlc2xleSBIZWFkYWNoZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsODE1NjIsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1ldCBpbiB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgTWlncmFpbmUsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsNjUwNTQsMjAxMC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVEVBTSxUcmV4aW1ldCBFYXJseSBJbnRlcnZlbnRpb24gQWRvbGVzY2VudCBNaWdyYWluZSxQcmVtaWVyZSBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjIwNzYsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1hIFZlcnN1cyBCdXRhbGJpdGFsLUNvbnRhaW5pbmcgQ29tYmluYXRpb24gTWVkaWNhdGlvbnMgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQWR1bHRzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNzIsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIENvbWJpbmF0aW9uIFByb2R1Y3QgKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBhbmQgTmFwcm94ZW4gU29kaXVtKSBpbiBNaWdyYWluZSBTdWJqZWN0cyBXaG8gUmVwb3J0IFBvb3IgUmVzcG9uc2Ugb3IgSW50b2xlcmFuY2UgdG8gU2hvcnQgQWN0aW5nIFRyaXB0YW5zIChTdHVkeSAyIG9mIDIpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNTIsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYSBDbGluaWNhbCxDM0EsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJUcmV4aW1ldCAoU3VtYXRyaXB0YW4vTmFwcm94ZW4gU29kaXVtKSwgRm9ybWVybHkgS25vd24gYXMgVHJleGltYSwgSW4gVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDEzOTg3LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsUGhhcm1hY29raW5ldGljcyxZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEhlYWRhY2hlLDE0OCxudWxsLCJBIGRydWctaW50ZXJhY3Rpb24gc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZlY3RzIG9mIENZUDNBNCBpbmhpYml0aW9uIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIExldmFkZXggKE1BUC0wMDA0LCBvcmFsbHkgaW5oYWxlZCBESEUpIGluIGhlYWx0aHkgc3ViamVjdHMiLE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc4NTMyLDIwMTEtMDYtMjMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsUGhhcm1hY29raW5ldGljcyBBbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE1BUC0wMDA0IENvLWFkbWluaXN0ZXJlZCBXaXRoIEtldG9jb25hem9sZSxBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyMTgsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxQaGFybWFjb2R5bmFtaWMgU3R1ZHkgdG8gQ29tcGFyZSBBY3V0ZSBFZmZlY3RzIG9mIERpaHlkcm9lcmdvdGFtaW5lIE1lc3lsYXRlIChESEUpIG9uIFB1bG1vbmFyeSBBcnRlcmlhbCBQcmVzc3VyZSxBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ5ODQsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJCaW9hdmFpbGFiaWxpdHkgb2YgREhFIEFkbWluaXN0ZXJlZCBieSBJLTEyMyBQT0QgRGV2aWNlLCBJViBJbmplY3Rpb24gYW5kIE1pZ3JhbmFsIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgQWR1bHRzIiwiQ2xpbmljYWwgTmV0d29yayBTZXJ2aWNlcywgSW1wZWwgTmV1cm9QaGFybWEiLEludGVydmVudGlvbmFsLDMyNjA1NiwyMDE3LTEwLTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEEgU3R1ZHkgVG8gRXZhbHVhdGUgUFJYLTAwMDIzIEluIFBhdGllbnRzIFdpdGggR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciAoR0FEKSxFUElYIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1NzAsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgb2YgUFJYLTAwMDIzIGluIGhlYWx0aHkgc3ViamVjdHMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTczODcsMjAwNi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXkgVmVyc3VzIEVsZXRyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDYWxpZm9ybmlhIE1lZGljYWwgQ2xpbmljIGZvciBIZWFkYWNoZSxJbnRlcnZlbnRpb25hbCw3NDE3MywyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRWZmaWNhY3kgYW5kIFNhZmV0eSBPZiBab21pZyBOYXNhbCBTcHJheSBGb3IgQWN1dGUgTWlncmFpbmUgVHJlYXRtZW50IEluIFN1YmplY3RzIDYgVG8gMTEgWWVhcnMsIFdpdGggT0xFIixJTVBBWCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDMxMjA4MCwyMDE3LTEyLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLExvcmNhc2VyaW4gZm9yIFByZXZlbnRpbmcgV2VpZ2h0IEdhaW4gQW1vbmcgU21va2VycywiTWF5byBDbGluaWMsIE1pbm5lc290YSIsSW50ZXJ2ZW50aW9uYWwsMjI0Nzc0LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsTmljb3RpbmUgZGVwZW5kZW5jZSwyMzUsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIG9uIFNtb2tpbmcgQ2Vzc2F0aW9uLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY5NzQ1LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxQaGFybWFjb2tpbmV0aWMgcHJvcGVydGllcyBvZiBsb3JjYXNlcmluIGluIG9iZXNlIG9yIG92ZXJ3ZWlnaHQgZWxkZXJseSBzdWJqZWN0cyxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQyMTkzLDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LFBoYXJtYWNva2luZXRpY3MsTixZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxQaGFybWFjb2tpbmV0aWMgcHJvcGVydGllcyBvZiBsb3JjYXNlcmluIGluIHRoZSBmZWQgYW5kIGZhc3RlZCBzdGF0ZSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQyMTI2LDIwMDgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsTGlmZXN0eWxlIE1vZGlmaWNhdGlvbiBhbmQgTG9yY2FzZXJpbiBmb3IgV2VpZ2h0IExvc3MgTWFpbnRlbmFuY2UsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMjI1MzI2LDIwMTUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxWaUJpRCxWb3J0aW94ZXRpbmUgYWRkLW9uIFRyZWF0bWVudCBJbXByb3ZlcyB0aGUgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24sU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDc2NzYsMjAxOC0wOC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkFjdGl2ZS1yZWZlcmVuY2UgKEZsdW94ZXRpbmUpLCBGaXhlZC1kb3NlIFN0dWR5IG9mIFZvcnRpb3hldGluZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgQWdlZCAxMiB0byAxNyBZZWFycyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDI1NTgzMiwyMDE2LTA1LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJWb3J0aW94ZXRpbmUgZm9yIE1ERCwgQ29nbml0aW9uLCBhbmQgU3lzdGVtaWMgSW5mbGFtbWF0b3J5IEJpb21hcmtlcnMiLFVuaXZlcnNpdHkgb2YgTWlhbWksSW50ZXJ2ZW50aW9uYWwsMjQ5MjI1LDIwMTYtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgb24gQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIFdvcmtpbmcgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIxNDgyMSwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgVmVyc3VzIEVzY2l0YWxvcHJhbSBvbiBDb2duaXRpdmUgRnVuY3Rpb24gaW4gUGF0aWVudHMgV2l0aCBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEN1cnJlbnQgQW50aWRlcHJlc3NhbnQgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjE0MDE3LDIwMTQtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb3ZlcnksRFIsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBoYXNlIEksIG11bHRpcGxlLWFzY2VuZGluZyBkb3NlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG5hcm9uYXByaWRlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQVJZeCBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDc3NjAwLDIwMTEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2UgMiBDbGluaWNhbCxDMix2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWYWJpY2FzZXJpbiBpbiBQYXRpZW50cyBXaXRoIFN1ZGRlbiBXb3JzZW5pbmcgb2YgU2NoaXpvcGhyZW5pYSxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNTE5MSwyMDA4LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNDQS0xMzYgaW4gSGVhbHRoeSBKYXBhbmVzZSBNYWxlIFN1YmplY3RzLFd5ZXRoLEludGVydmVudGlvbmFsLDM0NjA3LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgTVAtMjE0IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw4ODU2OSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBFZmZpY2FjeSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw0OTEwOSwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgQ2FyaXByYXppbmUgQ2Fwc3VsZXMgNiBtZyBpbiBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgZGlzb3JkZXIgSSBwYXRpZW50cyB3aG8gYXJlIHJlY2VpdmluZyBDYXJpcHJhemluZSBjYXBzdWxlcyA2IG1nIGFzIHN0YWJsZSBkb3NlLCJBWElTIENsaW5pY2FscyBMaW1pdGVkLCBBdXJvYmluZG8gUGhhcm1hIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzc4NDcxLDIwMTktMDUtMTMgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgUkdILTE4OCBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDUzMSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBQaGFzZSBJLCBPcGVuLWxhYmVsLCBNdWx0aXBsZS1kb3NlLCBUaHJlZS1jb2hvcnQgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBPY2N1cGFuY3kgb2YgQ2FyaXByYXppbmUsIGFuIEFudGktcHN5Y2hvdGljIGZvciBUcmVhdGluZyBTY2hpem9waHJlbmlhLCBhdCB0aGUgRDIgYW5kIEQzIFJlY2VwdG9ycyBVc2luZyBbMTFDXS0oKyktUEhOTyBQRVQiLENvbHVtYmlhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTgwMzA3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNYW5pYSwxOTU3LG51bGwsTG9uZy10ZXJtIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDMsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLFNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgQVBELTEyNSBpbiBwYXRpZW50cyB3aXRoIGluc29tbmlhLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjg1MSwyMDA3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmVsb3RhbnNlcmluLDUyMjM5LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLExld3kgYm9keSBkZW1lbnRpYSwzMDY0LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBOZWxvdGFuc2VyaW4gZm9yIFRyZWF0bWVudCBvZiBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIgaW4gU3ViamVjdHMgV2l0aCBEZW1lbnRpYSAoRExCIG9yIFBERCksQXhvdmFudCBHZW5lIFRoZXJhcGllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU1ODM1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgT3JhbCBMYXNtaWRpdGFuIGluIFBhcnRpY2lwYW50cyBXaXRoIE5vcm1hbCBhbmQgSW1wYWlyZWQgUmVuYWwgRnVuY3Rpb24sRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMjg0MTU5LDIwMTctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxHTEFESUFUT1IsIkFuIE9wZW4tbGFiZWwsIExvbmctdGVybSwgU2FmZXR5IFN0dWR5IG9mIExhc21pZGl0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLCJDb0x1Y2lkIFBoYXJtYWNldXRpY2FscyBJbmMsIEVsaSBMaWxseSAmIENvIixJbnRlcnZlbnRpb25hbCwyNDE5NTAsMjAxNS0xMC0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLFNBTVVSQUksTGFzbWlkaXRhbiBDb21wYXJlZCB0byBQbGFjZWJvIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMTg1NjQ5LDIwMTUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9uaXNhbWlkZSArIGJ1cHJvcGlvbiAob2Jlc2l0eSksIE9yZXhpZ2VuIiw1NTQ1NSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCwiQSBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHNpbmdsZS1kb3NlLCBwaGFzZSBJLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgc3R1ZHkgY29tcGFyaW5nIHpvbmlzYW1pZGUgU1Igd2l0aCB6b25pc2FtaWRlIElSIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBvYmVzaXR5IixPcmV4aWdlbiBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDQwMTc1LDIwMDctMDYtMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJOWE4tMTg4IChvcmFsKSwgTmV1ckF4b24iLDU3NzQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmZWN0aXZlbmVzcyBvZiBOWE4tMTg4IGZvciB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlIFdpdGhvdXQgQXVyYSxOZXVyQXhvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNTk2NDUsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJOWE4tMTg4IChvcmFsKSwgTmV1ckF4b24iLDU3NzQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgTlhOLTE4OCB0byBUcmVhdG1lbnQgTW9kZXJhdGUgdG8gU2V2ZXJlIE1pZ3JhaW5lIFdpdGggQXVyYSxOZXVyQXhvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNTc4NTIsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBCZXR3ZWVuIEhlbGljb2JhY3RlciBQeWxvcmkgRXJhZGljYXRpb24gVGhlcmFweSBhbmQgTW90aWxpdG9uZSBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSxDaHVuZy1BbmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxOTYxMDgsMjAxNC0wNy0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsUlEtMDAwMDAwMTAsNTkyMzQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxSUS0wMDAwMDAxMCBmb3IgR2FzdHJvcGFyZXNpcyBhbmQgQ29uc3RpcGF0aW9uIGluIFBhcmtpbnNvbnMgRGlzZWFzZSxWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNjYxMDcsMjAxNi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSWIsIHBsYWNlYm8tY29udHJvbGxlZCwgbXVsdGlwbGUgYXNjZW5kaW5nIGRvc2UgKE1BRCkgc3R1ZHkgdG8gZGV0cmVtaW5lIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIFJQLTUwNjMgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIHNjaGl6b3BocmVuaWEiLFJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg0NjA5LDIwMTEtMDktMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixicmlsYXJveGF6aW5lIGh5ZHJvY2hsb3JpZGUsNTk4OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LFJFRlJFU0gsUlAtNTA2MyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLCJSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYywgU3Jpc3RlayBDbGluaWNhbCBSZXNlYXJjaCIsSW50ZXJ2ZW50aW9uYWwsODMxODgsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFBVC0wMDksNjEyMjEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgb2YgQUFULTAwOSBpbiBwYXRpZW50cyB3aXRoIEFsemhlaW1lcidzIGRpc2Vhc2UsUmFRdWFsaWEgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwyNzc1MTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9wZW4tTGFiZWwgRmxleGlibGUtZG9zZSBCcmV4cGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA3NDMwLDIwMTctMDgtMjMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgT3JhbCBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjI2NTkyLDIwMTUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTW9ub3RoZXJhcHkgQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBUcmlhbCBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIEVhcmx5LUVwaXNvZGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjQwMDgsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIGJyZXhwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBwb3N0dHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDMyMzA5MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFNURVAtRDIyMixTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw2MzYyMSwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIFNsZWVwIERpc3R1cmJhbmNlcyBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTU0NjQzLDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxBIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgaW50cmFuYXNhbCAoSU4pIHNwcmF5IGZvcm11bGF0aW9uIG9mIG1ldG9jbG9wcmFtaWRlIHdpdGggb3JhbCB0YWJsZXQgZm9ybXVsYXRpb24gb2YgbWV0b2Nsb3ByYW1pZGUgaW4gcGF0aWVudHMgd2l0aCBzeW1wdG9tYXRpYyBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM4MDczLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJlbGVub3ByaWRlLDYzNTU3LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIE11bHRpY2VudGVyLCBEb3VibGUtYmxpbmQsIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgMTItV2VlaywgRG9zZS1SYW5nZS1GaW5kaW5nIFRyaWFsIG9mIFlLUC0xMDgxMSBDYXBzdWxlcyBBZG1pbmlzdGVyZWQgT25jZS1EYWlseSB0byBTdWJqZWN0cyBXaXRoIENocm9uaWMgSWRpb3BhdGhpYyBDb25zdGlwYXRpb24iLFNLIEJpb3BoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxNjE3MDIsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyaXphdHJpcHRhbiAoVmVyc2FGaWxtIG9yYWwgcXVpY2sgcmVsZWFzZSwgbWlncmFpbmUpLCBJbnRlbEdlbngiLDY0MTkyLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLFJlZ2lzdGVyZWQsUixNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCB0d28tcGVyaW9kLCB0d28td2F5IGNyb3Nzb3ZlciBzdHVkeSBpbiBoZWFsdGh5IG1hbGUgYW5kIGZlbWFsZSBzdWJqZWN0cyB0byBjb21wYXJlIHNhZmV0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2Ygcml6YXRyaXB0YW4gd2l0aCBNYXhhbHQtTUxUIixJbnRlbEdlbnggVGVjaG5vbG9naWVzIENvcnAsSW50ZXJ2ZW50aW9uYWwsODc5NDUsMjAxMi0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTdHVkeSB0byBEZXRlcm1pbmUgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyOTgxMDksMjAxNy0wNi0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEVVTEFTVCxFdXJvcGVhbiBMb25nLUFjdGluZyBBbnRpcHN5Y2hvdGljcyBpbiBTY2hpem9waHJlbmlhIFRyaWFsLCJUaGUgRXVyb3BlYW4gR3JvdXAgZm9yIFJlc2VhcmNoIGluIFNjaGl6b3BocmVuaWEgKEVHUklTKSwgVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICIsSW50ZXJ2ZW50aW9uYWwsMTkxMTU4LDIwMTUtMDItMjggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiBBTEtTLTkwNzIgaW4gU3ViamVjdHMgV2l0aCBDaHJvbmljIFN0YWJsZSBTY2hpem9waHJlbmlhLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCw4MzMyMCwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIGludGVydmVudGlvbmFsLCByYW5kb21pemVkLCBibGluZGVkLCBwaGFzZSBJIHN0dWR5IG9uIHRoZSBzYWZldHksIGVmZmljYWN5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGFyaXBpcHJhem9sZSBsYXVyb3hpbCBuYW5vY3J5c3RhbCBkaXNwZXJzaW9uIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDM0ODQzNixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBTFBJTkUsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgb3IgUGFsaXBlcmlkb25lIFBhbG1pdGF0ZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwzMTk5NTMsMjAxNy0xMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LEVmZmljYWN5LE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLERlcHJlc3Npb24sOTMsUkVTVEFORCxQRi0wNDk5NTI3NCBhbmQgRW1vdGlvbmFsIFByb2Nlc3NpbmcgaW4gVW4tbWVkaWNhdGVkIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzM4NTM5LDIwMTgtMDUtMTYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsREEtNjg4Niw2OTQ1MywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsUGhhc2UgSSBDbGluaWNhbCBUcmlhbCBvZiBEQS02ODg2IGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cyxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDg4OTAwLDIwMTItMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgcGhhc2UgSUlJIHRyaWFsIHRvIGV2YWx1YXRlIFNFUC0zNjM4NTYgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDM3MTAzNSxudWxsLFBsYW5uZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFNFUC0zNjM4NTYsODE2OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBTRVAtMzYzODU2LCBhIG5vdmVsIG9yYWwgZHJ1ZyB3aXRoIG5vbi1EMiBtZWNoYW5pc20gb2YgYWN0aW9uLCBpbiBoZWFsdGh5IGFkdWx0IG1hbGUgc3ViamVjdHMgYW5kIGluIGFkdWx0IHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjA5NDksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsU0VQLTM2Mzg1Niw4MTY5NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgU0VQLTM2Mzg1NiBpbiBBY3V0ZWx5IFBzeWNob3RpYyBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjgwMDA0LDIwMTYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBTRVAtMzYzODU2IGluIE1hbGUgYW5kIEZlbWFsZSBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEiLCJTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTU0MzkzLDIwMTMtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywidGVzdG9zdGVyb25lICsgYnVzcGlyb25lIGh5ZHJvY2hsb3JpZGUgKG9yYWwsIGh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciksIEVtb3Rpb25hbCBCcmFpbiIsODQzNjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LEBIT01FLEEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFN1YmplY3RpdmUgYW5kIFBoeXNpb2xvZ2ljYWwgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBMeWJyaWRvIGFuZCBMeWJyaWRvcyBpbiB0aGUgRG9tZXN0aWMgU2V0dGluZyBpbiBIZWFsdGh5IEZlbWFsZSBTdWJqZWN0cyB3aXRoIEZlbWFsZSBTZXh1YWwgRHlzZnVuY3Rpb24gYW5kIFNTUkkgVXNhZ2UsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDI3MDkzNywyMDEwLTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobmFzYWwsIG1pZ3JhaW5lKSwgU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMiLDg3NzE0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIFNUUy0xMDEgZm9yIHRoZSAgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzcxMTY4LG51bGwsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsWUwtMDkxOSw5MDUxMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBoYXNlIDIgQ2xpbmljYWwsQzIsRGVwcmVzc2lvbiw5MyxudWxsLCJIeWRyb3h5emluZSBwaXBlcmF6aW5lIHBvdmlkb25lIGNsaW5pY2FsIHRyaWFsIG9mIHNpbmdsZS1kb3NlLCBwaGFzZSBJIiwiSW5zdGl0dXRlIG9mIFBoYXJtYWNvbG9neSBhbmQgVG94aWNvbG9neSBBY2FkZW15IG9mIE1pbGl0YXJ5IE1lZGljYWwgU2NpZW5jZXMgUExBLCBaaGVqaWFuZyBIdWFoYWkgUGhhcm1hY2V1dGljYWwgR3JvdXAgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwyNzEwMTQsbnVsbCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiem9sbWl0cmlwdGFuIChpbmhhbGF0aW9uIHBvd2RlciwgbWlncmFpbmUpLCBBY29yZGEiLDk0NjM5LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIFN0dWR5IG9mIFNpbmdsZS1Bc2NlbmRpbmcgRG9zZXMgb2YgQ1ZULTQyNyAoWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyKSBJbiBIZWFsdGh5IEFkdWx0cyxBY29yZGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwyNDY1OTQsMjAxNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiAoYXV0b2luamVjdG9yLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw5NjI3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQaWxvdCBTdHVkeSBvZiBUd28gRGlmZmVyZW50IFN0cmVuZ3RocyBvZiBERk4tMTEgSW5qZWN0aW9uIGZvciBSYXBpZGx5IEVzY2FsYXRpbmcgTWlncmFpbmUsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0MjcxMCwyMDE1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsUGhhcm1hY29keW5hbWljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBHbHljZW1pYyBDb250cm9sIGFuZCBJbmNyZXRpbiBTZWNyZXRpb24sWW9rb2hhbWEgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyMzE1NixudWxsLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzODMyLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gU21va2luZyBSYXRlIGluIE1hbGUgQmlwb2xhciBNb29kIERpc29yZGVyIEksVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDg4MjAsMjAxNy0wMS0yMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciB3aXRoIGEgTWFqb3IgRGVwcmVzc2l2ZSBFcGlzb2RlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDIwMjQyLDIwMDYtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBNYW5hZ2VtZW50IG9mIFBzeWNob21vdG9yIEFnaXRhdGlvbixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwxNDU4NTIsbnVsbCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBiZXR3ZWVuIHR3byBtZWRpY2F0aW9ucyBjaW5pdGFwcmlkZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIDEgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLExhYm9yYXRvcmlvcyBHcmlzaSxJbnRlcnZlbnRpb25hbCwyMjAyOTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCwiQ29vcGVyYXRpdmUgR3JvdXAgZm9yIENsaW5pY2FsIFJlc2VhcmNoIGluIEctUE9FTSAoUE9QKSwgSmlhbmdzdSwgQ2hpbmEiLFRoZSBBZmZpbGlhdGVkIFpob25nZGEgSG9zcGl0YWwgb2YgU291dGhlYXN0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg3NDgzLDIwMTctMDktMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsQXJpcGlwUFRTRCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQb3N0LVRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIgU3ltcHRvbXMsVW5pdmVyc2lkYWRlIEZlZGVyYWwgZGUgU2FvIFBhdWxvIC0gVU5JRkVTUCxJbnRlcnZlbnRpb25hbCwyMTIxMywyMDA0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCxTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT256ZXRyYSBYc2FpbCAoU3VtYXRyaXB0YW4gTmFzYWwgUG93ZGVyKSBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSBpbiBBZG9sZXNjZW50cyxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTcsMjAxNy0xMS0wMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLG51bGwsRWZmZWN0IG9mIGFyaXBpcHJhem9sZSBvbiBwcmV2ZW50aW9uIG9mIGRlbGVyaXVtLFNoYWhlZWQgQmVoZXNodGkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMwMDEwNSwyMDE3LTAxLTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEJ1c3Bpcm9uZSBhbmQgTW90aXZhdGlvbmFsIEVuaGFuY2VtZW50IFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFyaWp1YW5hIERlcGVuZGVuY2UgLSAxLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjI3MywyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFtbmVzaWEsMTUsbnVsbCxWaWxhem9kb25lIGZvciBDb3J0aWNvc3Rlcm9pZC1JbmR1Y2VkIE1lbW9yeSBJbXBhaXJtZW50LFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDEyMDUwOSwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBJTVBBUkssIlJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCBUcmlhbCBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4sIGEgU2VsZWN0aXZlIFNlcm90b25pbiA1SFQyQSBJbnZlcnNlIEFnb25pc3QsIHRvIFRyZWF0IEltcHVsc2UgQ29udHJvbCBEaXNvcmRlcnMgaW4gUGFya2luc29uJ3MgRGlzZWFzZSIsSG9waXRhdXggVW5pdmVyc2l0YWlyZXMgZGUgU3RyYXNib3VyZyxJbnRlcnZlbnRpb25hbCwzODA0NDIsMjAxOS0wOS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4sIGV4cGFuZGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcGltYXZhbnNlcmluIGluIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMyNDg4NSwyMDE3LTEwLTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCwiQW4gb3Blbi1sYWJlbCwgdW5jb250cm9sbGVkLCA4IHdlZWssIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV2YWx1YXRlIGEgY29tYmluYXRpb24gb2YgYXJpcGlwcmF6b2xlIGFuZCB0b3BpcmFtYXRlIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwyMDQ1MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsRWZmZWN0cyBvZiBBY3V0ZSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM3MjM0OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBBbGNvaG9sIEhhcyBBbnkgRWZmZWN0IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9yIFBoYXJtYWNvZHluYW1pY3Mgb2YgR1ItNDMxNzVDIEFkbWluaXN0ZXJlZCBPcmFsbHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ4LDE5ODktMDgtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgRG91YmxlLWJsaW5kLCBSYW5kb21pc2VkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgVHdvIE9yYWwgRG9zZXMgb2YgR1ItNDMxNzVDIFNlcGFyYXRlZCBieSAyIGgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ3LDE5ODktMDEtMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBEZXRlcm1pbmUgV2hldGhlciBQcm9wcmFub2xvbCBIYXMgQW55IEVmZmVjdCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvciBQaGFybWFjb2R5bmFtaWNzIG9mIE9yYWwgRy00MzE3NUMgaW4gSGVhbHRoeSBTdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTgsMTk4OS0wMi0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQW4gT3Blbi1sYWJlbCBTdHVkeSB0byBmaW5kIHRoZSBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBpbiBuaXRyb2dseWNlcmluLWluZHVjZWQgaGVhZGFjaGUsTWlsbGFyZCBGaWxsbW9yZSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDcyNjcsMTk5OS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCwiQW4gaW50ZXJ2ZW50aW9uYWwgc3R1ZHkgb24gaW1wYWN0IG9mIG9iZXNpdHksIGFuZCBpbXBsaWNhdGlvbiBvZiBwYXRpZW50IHNhZmV0eSBhbmQgc3VzdGFpbmVkIGltcGFpcmVtZW50IG9mIGx1cmFzaWRvbmUgY2xlYXJhbmNlIGFmdGVyIGRpc2NvbnRpbnVhdGlvbiBvZiBwb3NhY29uYXpvbGUiLFR1ZnRzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU0ODg0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RzIG9mIEVsdG9wcmF6aW5lIG9uIENvZ25pdGl2ZSBJbXBhaXJtZW50IEFzc29jaWF0ZWQgV2l0aCBTY2hpem9waHJlbmlhIChDSUFTKSBpbiBBZHVsdHMsQW1hcmFudHVzIEJpb1NjaWVuY2UgSG9sZGluZ3MgSW5jLEludGVydmVudGlvbmFsLDczMzc3LDIwMTEtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxWaWxhem9kb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBvc3QtdHJhdW1hdGljIFN0cmVzcyBEaXNvcmRlcixTb3V0aGVybiBDYWxpZm9ybmlhIEluc3RpdHV0ZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCw5NjMzNSwyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxBUFMsQXJpcGlwcmF6b2xlIGFuZCBQcm9sYWN0aW4gU3R1ZHksVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsNjQ3NzcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCxBZGp1bmN0aXZlIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSBmb3IgcmlzcGVyaWRvbmUtaW5kdWNlZCBoeXBlcnByb2xhY3RpbmVtaWEsVGFicml6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDgyODIsMjAxMi0xMS0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBcmlwaXByYXpvbGUgU3VwcGxlbWVudGF0aW9uIGluIFJpc3Blcmlkb25lIEluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhOiBhIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkIFRyaWFsIixJbmRpYW4gQ291bmNpbCBvZiBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEyOTc2OCwyMDExLTAzLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2dseWNlbWlhLDQ0NSxudWxsLEEgRG9zZS1SYW5naW5nIFN0dWR5IG9mIEFUSS03NTA1IGluIFBhdGllbnRzIFdpdGggUG9zdHByYW5kaWFsIERpc3RyZXNzIFN5bmRyb21lLFRoZSBQcm9jdGVyICYgR2FtYmxlIENvLEludGVydmVudGlvbmFsLDMzNTE5LDIwMDgtMDItMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNvZHluYW1pYyBlZmZlY3RzIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODM4LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsWmlwcmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlciBXaXRoIENvLW1vcmJpZCBMaWZldGltZSBQYW5pYyBvciBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIChHQUQpLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODcyOCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI1MzYsMjAwNi0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxHZW5lLWJ5LVN0cmVzcyBJbnRlcmFjdGlvbnMgaW4gSW50ZXJ2ZW50aW9uIFN0dWRpZXMgU2lnbmlmaWNhbmNlLER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODQzMzgsMjAxOC0wNS0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWdncmVzc2lvbiw5LG51bGwsQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFRyYXVtYXRpYyBCcmFpbiBJbmp1cnkgKFRCSSkgSXJyaXRhYmlsaXR5IGFuZCBBZ2dyZXNzaW9uLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTg0NTcsMjAxMy0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLEVmZmVjdCBvZiBMb3JjYXNlcmluIG9uIENhbm5hYmlzIFdpdGhkcmF3YWwgYW5kIFNlbGYtYWRtaW5pc3RyYXRpb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMwOTU1NSwyMDE3LTA5LTA1IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEdlb2RvbiwiQSAxMi1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgb2YgWmlwcmFzaWRvbmUgYXMgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDk4OCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxaaXByYXNpZG9uZSBhdWdtZW50YXRpb24gb2YgU1NSSXMgZm9yIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSB0aGF0IGRvIG5vdCBzdWZmaWNpZW50bHkgcmVzcG9uZCB0byB0cmVhdG1lbnQgd2l0aCBTU1JJcyxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjAyNTIsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsUHJlZGljdG9ycyBvZiBSZXNwb25zZSB0byBBdWdtZW50YXRpb24gV2l0aCBaaXByYXNpZG9uZSAoR2VvZG9uKSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFR1ZnRzIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE3NTg5MiwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLExvbmctdGVybSBFeHRlbnNpb24gU3R1ZHkgb2YgTHUtQUEyMTAwNCBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzkyODUsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDc3NDM4LDIwMTEtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLExld3kgYm9keSBkZW1lbnRpYSwzMDY0LG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUaWMgZGlzb3JkZXIsMjk0MCxudWxsLEFyaXBpcHJhem9sZSB2ZXJzdXMgcmlzcGVyaWRvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCB0aWMgZGlzb3JkZXJzLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzA2MzkzLDIwMTItMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsIkEgcHJvc3BlY3RpdmUsIDE0LXdlZWssIG9wZW4tbGFiZWwgbmF0dXJhbGlzdGljIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHNob3J0LXRlcm0gdHJlYXRtZW50IG9mIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cyB3aXRoIHRpYyBkaXNvcmRlciAoVEQpIixNYWNrYXkgTWVtb3JpYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTkwMDg2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uZHVjdCBkaXNvcmRlciwxOTUwLG51bGwsWmlwcmFzaWRvbmUgZm9yIFNldmVyZSBDb25kdWN0IGFuZCBPdGhlciBEaXNydXB0aXZlIEJlaGF2aW9yIERpc29yZGVycyxBbGJlcnQtTHVkd2lncy1Vbml2ZXJzaXTkdCBGcmVpYnVyZyxJbnRlcnZlbnRpb25hbCwzMTMzNCwyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBpbiBhZG9sZXNjZW50IHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBjb21wYXJlZCB0byBhZHVsdHMiLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwyOTI1MzAsMjAxNy0wMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgU2luZ2xlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE5vbi1SYW5kb21pemVkLCBDcm9zcy1vdmVyLCBTaW5nbGUtQXR0YWNrLCBJbnBhdGllbnQsIFR3by1QYXJ0IFN0dWR5IHRvIFJlY2hhbGxlbmdlIFdpdGggc2MgR1ItNDMxNzVDLCBQYXRpZW50cyBXaG8gSGFkIFByZXZpb3VzbHkgRXhwZXJpZW5jZWQgYW4gQWR2ZXJzZSBFdmVudCBJbnZvbHZpbmcgRGlzY29tZm9ydCBvciBQYWluIGluIHRoZSBDaGVzdCBGb2xsb3dpbmcgR1ItNDMxNzVDIEFkbWluaXN0cmF0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjAyNCwxOTkwLTEyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEFuIE9wZW4tbGFiZWwgU3R1ZHkgT2YgU3VtYXRyaXB0YW4gSW4gVHJlYXRpbmcgTWlncmFpbmUgV2l0aCBVbmlsYXRlcmFsIENyYW5pYWwgQXV0b25vbWljIFN5bXB0b21zLFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxMTM5MjksMjAwMy0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLElEX01vdGlSZWJfMTMwMixQcm9zcGVjdGl2ZSBzdHVkeSBpbiBjb21wYXJpbmcgdGhlIHNhZmV0eSBhbmQgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgTW9zYXByaWRlIGFuZCBSZWJhbWlwaWRlIGhhdmluZyB0aGUgZWZmZWN0cyBvbiBnYXN0cm9pbnRlc3RpbmFsIGRpc2Vhc2VzIHdoZW4gYWRtaW5pc3RlcmVkIGFzIHNpbmdsZSBkcnVnIG9yIGEgY29tcGxleCBpbiBoZWFsdGh5IGtvcmVhbiBtYWxlIGFkdWx0cyxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTIxNDUsMjAxNC0wNC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaWxvdCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIHByb2xvbmdlZC1yZWxlYXNlIHRhYmxldHMgd2l0aCAyMCBtZyBpbiBoZWFsdGh5IHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyxaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM3OTM4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB0aGUgc3BlY2lmaWMgNUhUNCByZWNlcHRvciBhZ29uaXN0LCBwcnVjYWxvcHJpZGUsIG9uIGNvbG9uaWMgbW90aWxpdHkgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixVbml2ZXJzaXRhaXIgTWVkaXNjaCBDZW50cnVtIFV0cmVjaHQgLEludGVydmVudGlvbmFsLDExMjU2NSwyMDAyLTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBjb21wYXJpc2lvbiB3aXRoIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIiwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDQ4MzY0LDIwMDMtMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3R1ZHkgQ29tcGFyaW5nIFBhdGllbnRzIFRha2luZyBPbGFuemFwaW5lIGFuZCBQYXRpZW50cyBUYWtpbmcgQXJpcGlwcmF6b2xlIG9uIExlYXJuaW5nIG9mIFZvY2F0aW9uYWwgU2tpbGxzLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIFNhbiBBbnRvbmlvLEludGVydmVudGlvbmFsLDM1NDYxLDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEFMRkEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIEdlbmVyYWwgUHN5Y2hpYXRyaWMgUHJhY3RpY2VzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCwzNDUwMywyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQRUNBTlNJSSxQYW4gRXVyb3BlYW4gQ29sbGFib3JhdGlvbiBvbiBBbnRpcHN5Y2hvdGljIE5haXZlIFNjaGl6b3BocmVuaWEgSUksS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjIwMjI3LDIwMTQtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgMjYtV2VlaywgUHJvc3BlY3RpdmUgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIExvbmctVGVybSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEsIFNjaGl6b3BocmVuaWZvcm0gRGlzb3JkZXIsIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0NDQ5NSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxTUEFSVEFOLCJUaHJlZSBEb3NlcyBvZiBMYXNtaWRpdGFuICg1MCwgMTAwIGFuZCAyMDAgbWcpIENvbXBhcmVkIHRvIFBsYWNlYm8gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsIkNvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYywgRWxpIExpbGx5ICYgQ28iLEludGVydmVudGlvbmFsLDI0NjM0MCwyMDE2LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZHVsdHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIGFuZCAgRGVwcmVzc2lvbixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMzQ3MDUsMjAxOC0wMy0wOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElWLCBtdWx0aWNlbnRlciwgcGFyYWxsZWwsIGxvbmdpdHVkaW5hbCwgb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQgcGlsb3Qgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRoZSBjb21iaW5hdGlvbiBvZiB6aXByYXNpZG9uZSBhbmQgc2VydHJhbGluZSBjb21wYXJlZCB0byBzZXJ0cmFsaW5lIGFsb25lIGluIHRyZWF0bWVudCByZXNpc3RhbnQgZGVwcmVzc2lvbiB3aXRob3V0IHBzeWNob3RpYyBmZWF0dXJlcyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4Njk5NywyMDAxLTA1LTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2l0aCBaaXByYXNpZG9uZSxDZWRhcnMtU2luYWkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUyNzYsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFjdGl2ZSBDb21wYXJhdG9yIGluIHRoZSBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzM4NTUsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksTU9NRU5UVU0sTWF4aW1pemluZyBPdXRjb21lcyBpbiBUcmVhdGluZyBBY3V0ZSBNaWdyYWluZSxBeHNvbWUgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzMjA4ODgsMjAxOS0wMy0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsUHJ1Y2Fsb3ByaWRlIEVmZmVjdHMgb24gU3ViamVjdHMgV2l0aCBDaHJvbmljIE5vbi1DYW5jZXIgUGFpbiBTdWZmZXJpbmcgRnJvbSBPcGlvaWQgSW5kdWNlZCBDb25zdGlwYXRpb24sIlNoaXJlIHBsYywgU2hpcmUtTW92ZXRpcyBOViIsSW50ZXJ2ZW50aW9uYWwsNjYxNjksMjAxMC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gb24gdGhlIFBvc3Qtb3BlcmF0aXZlIFF1YWxpdHkgb2YgUmVjb3ZlcnkgQWZ0ZXIgRWxlY3RpdmUgTWluaW1hbGx5IEludmFzaXZlIENyYW5pb3RvbXksVGhlIFVuaXZlcnNpdHkgSGVhbHRoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsODg4OTUsMjAxMi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgRWZmZWN0aXZlbmVzcyBhbmQgdGhlIFRvbGVyYWJpbGl0eSBvZiBQYXJhY2V0YW1vbCAxMDAwIG1nICsgQ2FmZmVpbmUgMTMwIG1nIGluIHRoZSBUcmVhdG1lbnQgb2YgdGhlIE1pZ3JhaW5lLiBQaGFzZSBJViwgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBEb3VibGUtZHVtbXksIHZlcnN1cyBTdW1hdHJpcHRhbiA1MCBtZyBhbmQgUGxhY2VibyIsTm90IEFzc2lnbmVkLEludGVydmVudGlvbmFsLDEzMDQwMiwyMDEwLTA3LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIEJ1c3Bpcm9uZSBhZGRlZCB0byBUeXBpY2FsIEFudGlwc3ljaG90aWNzIG9uIFBvc2l0aXZlIGFuZCBOZWdhdGl2ZSBTeW1wdG9tcyBpbiBTY2hpem9waHJlbmlhLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDEzNzU3OSwyMDEyLTA0LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyBwaGFybWFjb2tpbmV0aWMgcGFyYW1ldGVycywgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIxMjMsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQXJpcGlwcmF6b2xlIGFuZCBFZmZleG9yIFhSIERydWcgSW50ZXJhY3Rpb24gU3R1ZHksQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNDMwMTYsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsVExDLFRyZWF0bWVudCBXaXRoIExvcmNhc2VyaW4gZm9yIENvY2FpbmUgVXNlLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBTYW4gRnJhbmNpc2NvLEludGVydmVudGlvbmFsLDMwMjE3NCwyMDE4LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhcm1hY29raW5ldGljIFByb3BlcnRpZXMgb2YgVm9ydGlveGV0aW5lIGluIEhlYWx0aHkgWW91bmcgQ2hpbmVzZSBNZW4gYW5kIFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIyNDEzMCwyMDE1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFZmZlY3RzIG9mIFZvcnRpb3hldGluZSBWZXJzdXMgUGFyb3hldGluZSBvbiBQb2x5c29tbm9ncmFwaHkgaW4gTWFuOiBBIFBoYXJtYWNva2luZXRpYy9waGFybWFjb2R5bmFtaWMgU3R1ZHksSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTc1Mzc1LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFuaWEsMTk1NyxudWxsLE9wZW4tTGFiZWwgU3R1ZHkgb2YgTGF0dWRhIGZvciB0aGUgVHJlYXRtZW50IG9mIE1hbmlhIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyA2IHRvIDE3IFllYXJzIE9sZCxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTUyOTAzLDIwMTctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbmFsdXpvdGFuLDQ2ODU3LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJBbiBvcGVuLWxhYmVsLCBtdWx0aS1jZW50ZXIsIHNpbmdsZS1hcm0sIGZpeGVkIGRvc2UgdGl0cmF0aW9uLCBvdXRwYXRpZW50LCBwaGFzZSBJSSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgbXVsdGlwbGUgZG9zZXMgb2YgUFJYLTAwMDIzIGluIHBhdGllbnRzIHdpdGggbW9kZXJhdGUgdG8gc2V2ZXJlIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIgKEdBRCkiLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU3MzY5LDIwMDUtMDMtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxkaWh5ZHJvZXJnb3RhbWluZSBtZXN5bGF0ZSw0NDQxMSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsQlAyLEJlcmdlbiBQc3ljaG9zaXMgUHJvamVjdCAyIC0gVGhlIEJlc3QgSW50cm8gU3R1ZHksSGF1a2VsYW5kIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODEzMzAsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLElNUEFDVCxSZWR1Y2luZyBXZWlnaHQgR2FpbiBhbmQgSW1wcm92aW5nIE1ldGFib2xpYyBGdW5jdGlvbiBpbiBDaGlsZHJlbiBCZWluZyBUcmVhdGVkIFdpdGggQW50aXBzeWNob3RpY3MgKElNUEFDVCksSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM4MzE4LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixIQU1MRVRULEhhbmRsaW5nIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbjogTG9uZy10ZXJtIEV2YWx1YXRpb24gb2YgVGFyZ2V0ZWQgVHJlYXRtZW50LiBBIHN0dWR5IGNvbXBhcmluZyBjb250aW51YXRpb24gdmVyc3VzIGRpc2NvbnRpbnVhdGlvbi9kb3NlIHJlZHVjdGlvbiBvZiBhbnRpcHN5Y2hvdGljIG1lZGljYXRpb24gaW4gcGF0aWVudHMgcmVtaXR0ZWQgYWZ0ZXIgYSBmaXJzdCBlcGlzb2RlIG9mIHBzeWNob3NpcyxVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdyb25pbmdlbixJbnRlcnZlbnRpb25hbCwzNzYxODYsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBvZiBQcm9kcm9tYWwgUGF0aWVudHMsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTgxLDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQW50aXBzeWNob3RpYyB0byBUcmVhdCBQc3ljaG9zaXMgU3luZHJvbWUsQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE4NzE2MCwyMDEyLTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBQaGFzZSBJSUksIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBzeWNob3Npcywgd2l0aCBSaXNwZXJpZG9uZSBhcyBBY3RpdmUtQ29udHJvbCIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDUwMDUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBQaGFzZSBJSUksIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBzeWNob3NpcyIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDM1OTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxPbiB0aGUgcXVlc3Rpb24gb2YgTmV1cm9sZXB0aWMtSW5kdWNlZCBNZXRhYm9saWMgU3luZHJvbWUuIFN0dWR5IDI6IEZhdCBEaXN0cmlidXRpb24gYW5kIFNwZWNpZmljIEhvcm1vbmFsIFBhcmFtZXRlcnMuIENvbXBhcmlzb24gYmV0d2VlbiB0aGUgbWV0YWJvbGljIHN5bmRyb21lIG9mIHZ1bG5lcmFibGUgYW5kIG5vbi12dWxuZXJhYmxlIHBhdGllbnRzIGZyb20gdGhlIHNjaGl6b3BocmVuaWMgZ3JvdXAsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTMyNTMwLDIwMDYtMDEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBvbiBQc3ljaGlhdHJpYyBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbiBEaXNlYXNlLCJKYXBhbmVzZSBNaW5pc3RyeSBvZiBIZWFsdGgsIExhYm9yIGFuZCBXZWxmYXJlIixJbnRlcnZlbnRpb25hbCwxMjY3NzEsMjAxMi0wMy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDI1LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixOT05TVE9QLENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBUcmVhdG1lbnQgdmVyc3VzIERpc2NvbnRpbnVhdGlvbiBpbiBhIEZpcnN0IEVwaXNvZGUgb2YgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMsRnVuZGFjafNuIFD6YmxpY2EgQW5kYWx1emEgUGFyYSBMYSBHZXN0afNuIERlIExhIEludmVzdGlnYWNp824gRW4gU2FsdWQgRGUgU2V2aWxsYSxJbnRlcnZlbnRpb25hbCwxMDQzNTIsMjAxMi0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsUHJvZ3Jlc3NpdmVseSBEZWNyZWFzaW5nIFRpdHJhdGlvbiBTY2hlZHVsZXMgb2YgQmlmZXBydW5veCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBEaXNvcmRlcixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ0NTksMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFuaWMgZGlzb3JkZXIsMTI3OSxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kIFRyaWFsIG9mIEltaXByYW1pbmUgYW5kIEJ1c3Bpcm9uZSAgaW4gUGF0aWVudHMgd2l0aCBQYW5pYyBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMTEzNzE2LDIwMDMtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwaGFnaWEsMjA4NSxudWxsLEJ1c3Bpcm9uZSBmb3IgRnVuY3Rpb25hbCBEeXNwaGFnaWEsQ2xldmVsYW5kIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDI1MjU3NiwyMDE2LTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFjdXRlIHN0cmVzcyBkaXNvcmRlciwxOTM2LG51bGwsIkJ1c3Bpcm9uZSwgU3RyZXNzLCBhbmQgQXR0ZW50aW9uYWwgQmlhcyB0byBNYXJpanVhbmEgQ3VlcyIsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgSG91c3RvbixJbnRlcnZlbnRpb25hbCwxODU2ODUsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGVzIG1lbGxpdHVzLDk3LG51bGwsQSBwaWxvdCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEVNLTUyM0wgb24gZ2FzdHJpYyBlbXB0eWluZyBmdW5jdGlvbiBhbmQgdGhlIGNoYW5nZSBpbiBwbGFzbWEgZ2x1Y29zZSBsZXZlbHMgYWZ0ZXIgZWF0aW5nIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxLaXRhc2F0byBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjAxMDgsMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE11bHRpcGxlIHNjbGVyb3NpcywyMTMsbnVsbCxUaGUgRWZmZWN0IG9mIEZsdW94ZXRpbmUgYW5kIDUtSFQ0IFNlcm90b25pbiBSZWNlcHRvciBBZ29uaXN0cyBvbiBDZXJlYnJhbCBBeG9uYWwgRW5lcmd5IE1ldGFib2xpc20gYW5kIEdsdXRhbWF0ZSBMZXZlbHMgaW4gTXVsdGlwbGUgU2NsZXJvc2lzLE9uZGVyem9la3MtIEVuIE9udHdpa2tlbGluZ3Nmb25kcyBSb2RlIEtydWlzLVZsYWFuZGVyZW4sSW50ZXJ2ZW50aW9uYWwsMTU0OTE5LDIwMTAtMTItMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWx1c2lvbmFsIGRpc29yZGVyLDE5NTEsbnVsbCxBIHN0dWR5IG9mIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGludHJhbXVzY3VsYXIgemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgb3JhbCB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTQxMywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBUcmlhbCBUbyBDb21wYXJlIFRoZSBFZmZlY3RpdmVuZXNzIE9mIEludHJhbXVzY3VsYXIgT2xhbnphcGluZSwgWmlwcmFzaWRvbmUsIEhhbG9wZXJpZG9sIFBsdXMgUHJvbWV0aGF6aW5lLCBIYWxvcGVyaWRvbCBQbHVzIE1pZGF6b2xhbSBBbmQgSGFsb3Blcmlkb2wgQWxvbmUgQXMgVGhlIEZpcnN0IE1lZGljYXRpb24oUykgVXNlZCBUbyBUcmVhdCBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBDYXVzZWQgQnkgUHN5Y2hvc2lzIixVbml2ZXJzaWRhZGUgRmVkZXJhbCBkbyBUb2NhbnRpbnMsSW50ZXJ2ZW50aW9uYWwsNzc0NjIsMjAxMC0wMS0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsQlBQLCJVc2UsIEVmZmVjdHMgYW5kIFNpZGUtRWZmZWN0cyBvZiBTZWNvbmQtR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBhIE5hdHVyYWxpc3RpYyBTZXR0aW5nIixVbml2ZXJzaXR5IG9mIEJlcmdlbixJbnRlcnZlbnRpb25hbCw1ODUzMSwyMDAzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixJTVBBQ1QsUmVkdWNpbmcgV2VpZ2h0IEdhaW4gYW5kIEltcHJvdmluZyBNZXRhYm9saWMgRnVuY3Rpb24gaW4gQ2hpbGRyZW4gQmVpbmcgVHJlYXRlZCBXaXRoIEFudGlwc3ljaG90aWNzIChJTVBBQ1QpLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzODMxOCwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsWmlwcmFzaWRvbmUgVmVyc3VzIFN0YW5kYXJkIFRoZXJhcHkgZm9yIEFnaXRhdGVkIFBhdGllbnRzIGluIHRoZSBFRCxHZW9yZ2UgV2FzaGluZ3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0MjkzLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBzdHVkeSBvZiB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBpbnRyYW11c2N1bGFyIHppcHJhc2lkb25lIGZvbGxvd2VkIGJ5IG9yYWwgemlwcmFzaWRvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvc2lzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjE0MTMsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVzb3BoYWdlYWwgZGlzZWFzZSwyNDIsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgbW9zYXByaWRlIG9uIG9lc29waGFnZWFsIDI0LWggYWNpZCByZWZsdXggdmFyaWFibGVzIGluIHBhdGllbnRzIHdpdGggZ2FzdHJvLWVzb3BoYWdlYWwgcmVmbHV4IGRpc2Vhc2UgKEdFUkQpIHN5bXB0b21zIixEYWluaXBwb24gUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5MzczLDE5OTgtMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEx5YnJpZG9zIGluIFByZS0gYW5kIFBvc3RtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIER1ZSB0byBNYWxhZGFwdGl2ZSBBY3RpdmF0aW9uIG9mIFNleHVhbCBJbmhpYml0b3J5IFN5c3RlbXMsRW1vdGlvbmFsIEJyYWluIEJWLEludGVydmVudGlvbmFsLDEwMDkwOSwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvcm9uYXJ5IGFydGVyeSBkaXNlYXNlLDgwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBpbiBwYXRpZW50cyB3aXRoIGV4aXN0aW5nIG9yIHN1c3BlY3RlZCBjb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSB3YXMgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2Ygc3ViY3V0YW5lb3VzIEdSLTQzMTc1QyBvbiB0aGUgY29yb25hcnkgdmFzY3VsYXR1cmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAxNDc3LDE5OTEtMDQtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb3JlY3RhbCB0dW1vciw5ODksWEVOT04sUm9sZSBvZiBYYWxpcHJvZGVuIG9uIFJlY292ZXJ5IFJhdGUgRnJvbSBTZXZlcmUgTmV1cm9wYXRoeSBpbiBQYXRpZW50cyBXaG8gSGF2ZSBDb21wbGV0ZWQgQWRqdXZhbnQgQ2hlbW90aGVyYXB5IFdpdGggT3hhbGlwbGF0aW4gQmFzZWQgUmVnaW1lbnMsIlBvbGljbGluaWNvIFVuaXZlcnNpdGFyaW8gQWdvc3Rpbm8gR2VtZWxsaSwgU2Fub2ZpIFNBIixJbnRlcnZlbnRpb25hbCwyNjIwNywyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsU0JELUFTSUIsTlJYLTEwMSBmb3IgTWFpbnRlbmFuY2Ugb2YgUmVtaXNzaW9uIEZyb20gU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTMwOCwyMDE5LTAxLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsQU5PRFlORS0yLE9yYWwgQUxMT0QtMiB2ZXJzdXMgT3JhbCBTdW1hdHJpcHRhbiBhbmQgdmVyc3VzIFBsYWNlYm8gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIEFzc29jaWF0ZWQgTmF1c2VhLEFsbG9keW5pYyBUaGVyYXBldXRpY3MgTExDLEludGVydmVudGlvbmFsLDMwMTczOCwyMDE3LTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxGdW5jdGlvbmFsIE1SSSAoZk1SSSkgaW4gQ0dSUCBJbmR1Y2VkIE1pZ3JhaW5lLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTczNjk0LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBTdXBwb3NpdG9yaWVzIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgVGhyZWUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM4NDcsMTk5My0xMC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT3BpYXRlIGRlcGVuZGVuY2UsMjQzLG51bGwsRHJ1ZyBJbnRlcmFjdGlvbiBhbmQgU3ViamVjdGl2ZSBFZmZlY3RzIG9mIENvbXBvdW5kcyBmb3IgT3Bpb2lkIFVzZSBEaXNvcmRlcixWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTc3OTIsMjAxNy0wMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiBOYXJhdHJpcHRhbiBIeWRyb2NobG9yaWRlIDIuNSBtZyBVbmRlciBGYXN0ZWQgQ29uZGl0aW9ucyxXZXN0LVdhcmQgQ29sdW1idXMsSW50ZXJ2ZW50aW9uYWwsMTg1Mzc3LDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyZW56YXByaWRlLDQyMTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsSW52ZXN0aWdhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSZW56YXByaWRlIGluIENvbnN0aXBhdGlvbiBQcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUyksQWxpenltZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTgwNjYsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWx1c2lvbmFsIGRpc29yZGVyLDE5NTEsQlAyLEJlcmdlbiBQc3ljaG9zaXMgUHJvamVjdCAyIC0gVGhlIEJlc3QgSW50cm8gU3R1ZHksSGF1a2VsYW5kIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODEzMzAsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxjYXJpcHJhemluZSw1MTQwNSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2FyaXByYXppbmU6IENvbXBhcmlzb24gb2YgU2xvdy0gYW5kIEltbWVkaWF0ZS1yZWxlYXNlIEZvcm1zLEdlZGVvbiBSaWNodGVyIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTc0MjAsMjAxNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRhbmRvc3Bpcm9uZSwzNjE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29nbml0aW9uIGFuZCBUYW5kb3NwaXJvbmUsVG95YW1hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTM0NDc2LDIwMTEtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYWRqdW5jdGl2ZSB0cmVhdG1lbnQgd2l0aCBzZXJvdG9uaW4tMUEgYWdvbmlzdCB0YW5kb3NwaXJvbmUgb24gbWVtb3J5IGZ1bmN0aW9ucyBpbiBzY2hpem9waHJlbmlhIixUb3lhbWEgTWVkaWNhbCBhbmQgUGhhcm1hY2V1dGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDkyNzksMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsRWZmZWN0IG9mIFppcHJhc2lkb25lIG9uIEdsdWNvc2UgYW5kIFBsYXNtYSBMaXBpZHMgaW4gRGlhYmV0ZXMgSUkgYW5kIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE1hbmhhdHRhbiBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNDc2MSwyMDAzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LFNpcml1cyxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1kb3NlIEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIGFuZCBXaXRob3V0IEFueGlvdXMgRGlzdHJlc3MsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA2MjYzLDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEVmZmVjdGl2ZW5lc3Mgb2YgWmlwcmFzaWRvbmUgVXNpbmcgdGhlIE92ZXJsYXBwZWQgU3dpdGNoaW5nIFN0cmF0ZWd5IGluIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsU29vbmNodW5oeWFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDcwMTc1LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGNvbXBhcmVkIHRvIGhhbG9wZXJpZG9sIGluIHBhdGllbnRzIHdpdGggc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NTYsMTk5OS0wNS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxDb21wYXJlIFBLIGFuZCBCaW9hdmFpbGFiaWxpdHkgb2YgVHdvIE5QLTEwMSBQYXRjaGVzIFdpdGggT3JhbCBJbWl0cmV4IGluIEhlYWx0aHkgQWR1bHRzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc4MDQ1LDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBDb21wYXJhdGl2ZSwgQ3Jvc3NvdmVyIFN0dWR5IFRvIEFzc2VzcyBFZmZpY2FjeSBPZiBSaXphdHJpcHRhbiBBbmQgRXJnb3RhbWluZSBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLEJpc3BlYmplcmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTExNDg2LDIwMDItMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb29kIGRpc29yZGVyLDUzMyxudWxsLCJCb2R5IE1hc3MgSW5kZXggKEJNSSkgYW5kIE1ldGFib2xpYyBDaGFuZ2VzIEZvbGxvd2luZyBTd2l0Y2ggdG8gQXJpcGlwcmF6b2xlIEZyb20gT2xhbnphcGluZSwgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUiLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzI4ODMsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb29kIGRpc29yZGVyLDUzMyxBQU9GRElZV0EsQXJpcGlwcmF6b2xlIEFkZGVkIG9uIGZvciBETUREIGluIFlvdXRocyBXaXRoIEFESEQsVHJpLVNlcnZpY2UgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjEyMTksMjAxNC0xMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxNREdQLEVmZmVjdHMgYW5kIE1lY2hhbmlzbSBvZiBNb3NhcHJpZGUgQ2l0cmF0ZSBvbiBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLFFpbmdkYW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMTM2ODAsMjAxNC0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGVyaXBoZXJhbCBuZXVyb3BhdGh5LDI1OSxudWxsLENvbXBhcmluZyBMb3JjYXNlcmluIFZlcnN1cyBEdWxveGV0aW5lIGZvciB0aGUgVHJlYXRtZW50IG9mIENoZW1vdGhlcmFweS1JbmR1Y2VkIFBlcmlwaGVyYWwgTmV1cm9wYXRoeSxTb3V0aGVhc3Rlcm4gUmVnaW9uYWwgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzY3NDI2LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLENsaW5pY2FsIFJlc3BvbnNlIHRvIDVIVDQgUmVjZXB0b3JzIEFnb25pc3QgKFBydWNhbG9wcmlkZSk6IEdhc3Ryb2NvbGljIFJlZmxleCxIb3NwaXRhbCBDbGluaWNvIFNhbiBDYXJsb3MsSW50ZXJ2ZW50aW9uYWwsMTU0OTA5LDIwMTMtMDctMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsUFJPR0FTUyxQcnVjYWxvcHJpZGUgT24gdGhlIEdhc3RyZW9udGVyaWMgVHJhbnNpdCBpbiBTeXN0ZW1pYyBTY2xlcm9zaXMsRm9uZGF6aW9uZSBJUkNDUyBDYScgR3JhbmRhLU9zcGVkYWxlIE1hZ2dpb3JlIFBvbGljbGluaWNvLEludGVydmVudGlvbmFsLDE0OTM2NCwyMDEzLTAyLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCwgbm9uLXJhbmRvbWl6ZWQsIDQtd2VlayBmbGV4aWJsZSBkb3NlIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhZGp1bmN0aXZlIGFyaXBpcHJhem9sZSBpbiBUYWl3YW5lc2UgcGF0aWVudHMgd2l0aCBhbnRpZGVwcmVzc2FudC1yZWZyYWN0b3J5IG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLEJ1ZGRoaXN0IFR6dSBDaGkgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw4NTI4NSwyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYXJpcGlwcmF6b2xlIG9uIHRoZSBzdGVhZHktc3RhdGUgcGhhcm1hY29raW5ldGljcyBvZiBlc2NpdGFsb3ByYW0gb3IgdmVubGFmYXhpbmUgaW4gc3ViamVjdHMgd2l0aCBkZXByZXNzaXZlIG9yIGFueGlldHkgZGlzb3JkZXJzLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDc3OTc5LDIwMDctMDUtMDIgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw2LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciwgNi13ZWVrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGEgcHJpbWFyeSBkaWFnbm9zaXMgb2YgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSB3aG8gaGFkIGFuIGluYWRlcXVhdGUgcmVzcG9uc2UgdG8gbW9ub3RoZXJhcHkgd2l0aCBvbmUgb3IgbW9yZSBhbnRpZGVwcmVzc2FudCB0aGVyYXBpZXMiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMTEyLDIwMDctMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsQURBUFQtQSwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgQWRqdW5jdGl2ZSB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5IixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzUyNzcsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxQcm9wb3NhbCB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRkLW9uIFRoZXJhcHkgaW4gUGF0aWVudHMgTm90IFJlc3BvbmRpbmcgdG8gYW4gQWRlcXVhdGUgRG9zZSBvZiBhbiBBbnRpZGVwcmVzc2FudCBUaGVyYXB5LE1hbmNoZXN0ZXIgTWVudGFsIEhlYWx0aCBhbmQgU29jaWFsIENhcmUgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMTQyMDU3LDIwMDctMDgtMjMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxlc29waXRyb24sNTExMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgYnJpZGdpbmcgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIGZpeGVkIGRvc2VzIG9mIGxlc29waXRyb24gaW4gcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIChHQUQpIixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2Mjg2LDE5OTYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUkVTT0xWRTIsTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIE1peGVkIEZlYXR1cmVzLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODAzMTYsMjAxMi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LE5SWC1HTFgsTlJYMTAxIEdseCBCaW9tYXJrZXIgVmFsaWRhdGlvbiBTdHVkeSwiTmV1cm9SeCBJbmMsIE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDIzLDIwMTgtMTEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsVm9ydGlveGV0aW5lIHZlcnN1cyBTZXJ0cmFsaW5lIGluIE1leGljYW5zLFVuaXZlcnNpZGFkIEp1YXJleiBBdXRvbm9tYSBkZSBUYWJhc2NvLEludGVydmVudGlvbmFsLDM4Mzc3OCwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCwiQW4gb3BlbiwgcmFuZG9taXplZCBjbGluaWNhbCB0cmlhbCB0byBjb21wYXJlIHRoZSBlZmZlY3RpdmVuZXNzIG9mIGxvdyBkb3NlcyBvZiBoYWxvcGVyaWRvbCBhbmQgcmVndWxhciBkb3NlcyBvZiBzZWNvbmQgZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyBpbiBwYXRpZW50cyB3aXRoIGZpcnN0LWVwaXNvZGUgc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciIsIkFzdHJhWmVuZWNhIHBsYywgRWxpIExpbGx5ICYgQ28sIFBmaXplciBJbmMsIFNhbm9maS1TeW50aGVsYWJvIixJbnRlcnZlbnRpb25hbCw2MjkzOSwyMDA5LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxDb21wYXJpc29uIG9mIHRoZSBiZWdpbm5pbmcgb2YgdGhlcmFwZXV0aWMgcmVzcG9uc2UgYmV0d2VlbiBkaWZmZXJlbnQgdHlwaWNhbCBhbmQgYXR5cGljYWwgYW50aXBzeWNob3RpY3MgaW4gYWN1dGUgcHN5Y2hvc2lzLEFodmF6IEp1bmRpc2hhcHVyIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDIwNjksMjAxNi0xMC0xNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQM18zWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDI5MjY3MSwyMDE0LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciwgUG9seXNvbW5vZ3JhcGhpYyBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBMdXJhc2lkb25lIG9uIFNsZWVwIGluIEhlYWx0aHkgU3ViamVjdHMiLER1a2UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjYxODQ4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTHVyYXNpZG9uZSBBZnRlciBNdWx0aXBsZSBPcmFsIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgSHVtYW4gU3ViamVjdHMsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTk1NjMsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsIlRyaWFsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29raW5ldGljcywgU2FmZXR5LCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBCcmV4cGlwcmF6b2xlIGluIENoaWxkcmVuICg2IHRvIDwgMTMgWWVhcnMgT2xkKSBXaXRoIENlbnRyYWwgTmVydm91cyBTeXN0ZW0gRGlzb3JkZXJzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTM4MzYsMjAxNy0xMC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhcnQgZGlzZWFzZSw2MjYsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tIGFuZCBhY3RpdmUtY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIEx1LUFBMjEwMDQgb24gY2FyZGlhYyByZXBvbGFyaXphdGlvbiBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsIkggTHVuZGJlY2sgQS9TLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4MTQ4MCwyMDExLTAzLTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG9tb3RvciBkaXNvcmRlciwxMDg0LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHJlZHVjdGlvbiBvZiBoYWxvcGVyaWRvbC1pbmR1Y2VkIHNpZGUgZWZmZWN0cyBieSBBQ1AtMTAzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjUwLDIwMDUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW92ZW1lbnQgZGlzb3JkZXIsMzY4LFBBRERZLTIsU2FyaXpvdGFuIGluIFBhcnRpY2lwYW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiRU1EIFNlcm9ubyBJbmMsIE1lcmNrIEtHYUEiLEludGVydmVudGlvbmFsLDYyODAsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcjogQSAxMi1XZWVrIE9wZW4tTGFiZWwgUHJlbGltaW5hcnkgU3R1ZHksVW5pdmVyc2l0eSBvZiBUdXJpbixJbnRlcnZlbnRpb25hbCwxNDcwNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsQnVzcGlyb25lIFBsdXMgT21lcHJhem9sZSBmb3IgRnVuY3Rpb25hbCBEeXNwZXBzaWEsSXNmYWhhbiBVbml2ZXJzaXR5IG9mIG1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzMwMTkwLDIwMTYtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLFRoZSBFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIG9uIFNtb2tpbmcgUmF0ZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLENsaW5pY2FsIFBzeWNoaWF0cnkgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDEzNzkwNiwyMDEzLTA0LTIwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJMdXJhc2lkb25lIEhDbCAtIEEgTG9uZy1UZXJtIFNhZmV0eSwgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQ2xpbmljYWxseSBTdGFibGUgU2NoaXpvcGhyZW5pYSIsIlN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDIxMTc4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIG9wZW4tbGFiZWwsIGFjdGl2ZS1jb250cm9sbGVkIHN0dWR5IG9mIHppcHJhc2lkb25lLCBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTYzLDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIGRvdWJsZS1ibGluZCwgYWN0aXZlLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIG9sYW56YXBpbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTYwLDIwMDEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksWkVVUywiQSAxMi1tb250aCwgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGluIHRyZWF0aW5nIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU0MywxOTk3LTA5LTE1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDgsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBVElFLFNjaGl6b3BocmVuaWEgVHJpYWwsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MTgzLDIwMDAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJJWkVULElNIGFuZCBPcmFsIGluIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwMjgsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRXh0ZW5zaW9uIFN0dWR5OiBFdmFsdWF0aW5nIHRoZSBTYWZldHkgb2YgT3JhbCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM2MDI3LDIwMDItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMTE3MSwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEdsdWxpcGlkLEdsdWNvc2UgYW5kIExpcGlkIE1ldGFib2xpc20gb24gQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwxODg3NTgsMjAwMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBkb3NlLWVzY2FsYXRpb24gc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBjZW50cmFsIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBieSB6aXByYXNpZG9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzUwNiwxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBwaGFzZSBJIHN0dWR5IGV2YWx1YXRpbmcgdGhlIHRpbWUgY291cnNlIG9mIDUtSFQyIHJlY2VwdG9yIG9jY3VwYW5jeSAoJVJPKSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyBhZnRlciB6aXByYXNpZG9uZSBhZG1pbmlzdHJhdGlvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTAwLDE5OTYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEF1Z21lbnRhdGlvbiBXaXRoIFppcHJhc2lkb25lIChHZW9kb24pIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVHVmdHMgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMTc1ODkyLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgTG9uZy1UZXJtIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgWmlwcmFzaWRvbmUgaW4gU3VicG9wdWxhdGlvbnMgb2YgUGF0aWVudHMgd2l0aCBCaXBvbGFyIE1hbmlhLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwxNDQ3MDcsMTk5OC0wMy0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIDMtV2VlayBTdHVkeSB0byBFdmFsdWF0ZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFppcHJhc2lkb25lIFdpdGggRWl0aGVyIExpdGhpdW0gb3IgRGl2YWxwcm9leCBpbiBBY3V0ZWx5IE1hbmljIFN1YmplY3RzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM5MjMsMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgKE1hbmljIG9yIE1peGVkKSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzODExLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBhbmQgTWFpbnRlbmFuY2Ugb2YgRWZmZWN0IG9mIFppcHJhc2lkb25lIFBsdXMgYSBNb29kIFN0YWJpbGl6ZXIgaW4gQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBvciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMjY5NSwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgYXNjZW5kaW5nIGRvc2UsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByZXBlYXQgZG9zZSwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHJlcGVhdCBkb3Npbmcgd2l0aCBvcmFsIEdSLTg1NTQ4QSBmb3IgNSBkYXlzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3NTMxLDE5OTUtMDItMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIsIGNvbXBhcmF0b3IsIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29sb2dpY2FsIGVmZmVjdHMgb2YgbmFyYXRyaXB0YW4sIGNvZGVpbmUgYW5kIHBsYWNlYm8gaW4gZXhwZXJpZW5jZWQgcHN5Y2hvYWN0aXZlIHN1YnN0YW5jZSB1c2VycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1MywxOTk1LTEwLTI3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwYXJhbGxlbCBncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYXR0YWNrLCBpbnBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbmFyYXRyaXB0YW4gZm9sbG93aW5nIGRvc2luZyBkdXJpbmcgYSBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyNDcsMTk5My0xMi0yMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBpbiB0aGUgcHJldmVudGl2ZSB0cmVhdG1lbnQgb2YgcmVmcmFjdG9yeSBjaHJvbmljIG1pZ3JhaW5lLENvbHVtYmlhIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBQaHlzaWNpYW5zICYgU3VyZ2VvbnMsSW50ZXJ2ZW50aW9uYWwsMTE1MDc1LDIwMDMtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRFdKLTEyNTIgaW4gdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIER5c3BlcHNpYSAoUEFSVCAyKSxEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzAxMzE2LDIwMTctMDQtMTggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQ2xpbmljYWwgVHJpYWwgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENvbWJpbmF0aW9uIFRoZXJhcHkgb2YgTW90aXJlYiA1LzEwMCBtZyBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSBQYXRpZW50cyxJbCBEb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjU0OTQsMjAxNi0wNC0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxSb2xlIG9mIE1vc2FwcmlkZSBpbiBQYXRpZW50cyBXaXRoIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UsTG90dW5nIFBvaC1BaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzAyNywyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsUmFuZG9taXphdGlvbiBvZiBTb2RpdW0gQWxnaW5hdGUgYW5kIE1vc2FwcmlkZSBDaXRyYXRlIGZvciBQYXRpZW50cyB3aXRoIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKEdFUkQpIEZvbGxvd2luZyBEaXN0YWwgR2FzdHJlY3RvbXkgd2l0aCBCaWxscm90aCBJIFJlY29uc3RydWN0aW9uIC0gQSBNdWx0aWNlbnRlciBDb21wYXJhdGl2ZSBTdHVkeSxLeW9zZWkgU2VpeWFrdSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTIzMjQ0LDIwMDYtMTAtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixyZW56YXByaWRlLDQyMTEsRWZmaWNhY3ksWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLG51bGwsQSBwaGFzZSBJSSBjbGluaWNhbCBzdHVkeSB0byBldmFsdWF0ZSBlZmZpY2FjeSBvZiByZW56YXByaWRlIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxFbmRvTG9naWMgTExDLEludGVydmVudGlvbmFsLDI4NDA5NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyb3hpbmRvbGUsNDI3NCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gb3Blbi1sYWJlbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHJveGluZG9sZSBpbiBhY3V0ZWx5IGlsbCBzY2hpem9waHJlbmljIHBhdGllbnRzLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsNDg4MzUsMTk5MS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgc2luZ2xlLWFybSwgb3Blbi1sYWJlbCwgb3V0cGF0aWVudCwgdGhyZWUgYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwYXRpZW50IHNhdGlzZmFjdGlvbiB3aXRoIDEwMCBtZyBzdW1hdHJpcHRhbiB0YWJsZXRzLCBhZG1pbmlzdGVyZWQgYXQgdGhlIGZpcnN0IHNpZ24gb2YgcGFpbiBmb3IgdXAgdG8gdGhyZWUgbWlncmFpbmVzIGluIHN1YmplY3RzIHdobyB3ZXJlIG5vdCBzYXRpc2ZpZWQgd2l0aCB0aGVpciBjdXJyZW50IHRyaXB0YW4gdGhlcmFweSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzMwOCwyMDAxLTEyLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSWIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjayBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIG9uc2V0IG9mIGVmZmljYWN5IG9mIGEgbmV3IGZvcm11bGF0aW9uIG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBhY3V0ZSBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzE2OCwyMDAzLTEwLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiBhbG1vdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyB3aG8gcmVzcG9uZCBwb29ybHkgdG8gc3VtYXRyaXB0YW4iLFVuaXZlcnNpdGF0IER1aXNidXJnIEVzc2VuLEludGVydmVudGlvbmFsLDY5Nzk3LDIwMDUtMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEhFRE5ldDIsQW4gUkNUIHRvIENvbXBhcmUgTmFwcm94ZW4gdG8gU3VtYXRyaXB0YW4gZm9yIEhlYWRhY2hlIFBhdGllbnRzIERpc2NoYXJnZWQsTW9udGVmaW9yZSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCw2ODYwNywyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiUEFDQVAzOCBJbmR1Y2VkIEhlYWRhY2hlLCBNaWdyYWluZSBhbmQgRmx1c2hpbmcgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSIsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5MjksMjAxOC0wNy0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgY3Jvc3NvdmVyIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIFpQLVRyaXB0YW4gY29tcGFyZWQgdG8gc3ViY3V0YW5lb3VzIGluamVjdGlvbiBvZiBzdW1hdHJpcHRhbiBhbmQgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiB6b2xtaXRyaXB0YW4gdHJlYXRtZW50cyBmb3IgbWlncmFpbmUgaGVhZGFjaGVzLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwyMzkzOTUsbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgR1ItNDMxNzVDLCBmb3IgdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtZW5zdHJ1YWwgbWlncmFpbmUgd2l0aCBvcHRpb25hbCBvcGVuIGZvbGxvdy11cCB0cmVhdG1lbnQiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyMzI4LDE5OTMtMTAtMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZGVkLCByYW5kb21pemVkLCBzaW5nbGUtZG9zZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIGl2IGFkbWluaXN0ZXJlZCBOZXcgQ2hlbWljYWwgRW50aXR5IChOQ0UpIGFuZCBzYyBzdW1hdHJpcHRhbiBpbiBhY3V0ZSBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIwNDIsMjAwMC0wMi0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsIEdyb3VwIFN0dWR5IG9mIDZtZyArIE9wdGlvbmFsIDYgTWcgU3ViY3V0YW5lb3VzIEdSNDMxNzVDIChTdW1hdHJpcHRhbikgQWRtaW5pc3RlcmVkIFVzaW5nIHRoZSBHbGF4byBBdXRvaW5qZWN0b3IgRHVyaW5nIHRoZSBBdXJhIFBoYXNlIG9mIGEgTWlncmFpbmUgQXR0YWNrIFdpdGggYW4gT3B0aW9uYWwgT3BlbiBTaXggTW9udGggRXh0ZW5zaW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE3NDc2NywxOTkxLTExLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBPcGVuIERlc2lnbiBTdHVkeSB0byBFdmFsdWF0ZSBSZXBlYXQtRG9zZSBPcmFsIFN1bWF0cmlwdGFuICgxMDAgbWcgUGx1cyBPcHRpb25hbCAxMDAgbWcgUGx1cyBPcHRpb25hbCBGdXJ0aGVyIDEwMCBtZyBmb3IgUmVjdXJyZW50IEhlYWRhY2hlKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEF0dGFja3MgRHVyaW5nIGEgMjQtTW9udGggUGVyaW9kLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTcyNTc2LDE5ODktMTItMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFNORUIsU3VtYXRyaXB0YW4gTm9uLVJlc3BvbmRlcnM6IEV2YWx1YXRpb24gb2YgYSBQb3NzaWJsZSBCaW9tYXJrZXIsRXJhc211cyBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIFJvdHRlcmRhbSxJbnRlcnZlbnRpb25hbCwxNTUxMjUsMjAxMy0wOS0xMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tbGFiZWwsIFVuY29udHJvbGxlZCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2luZ2xlIERvc2UgUGhhcm1hY29raW5ldGljcyBvZiBTdW1hdHJpcHRhbiBOYXNhbCBTcHJheSBpbiBBZG9sZXNjZW50IFN1YmplY3RzIFdpdGggTWlncmFpbmUgT3V0c2lkZSBvZiBhIE1pZ3JhaW5lIEF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTQxNzgsMTk5OC0wNy0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5L3NhZmV0eSBvZiBPcmFsIFN1bWF0cmlwdGFuICg1MCBtZyBGaWxtIENvYXRlZCBUYWJsZXQpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBhbiBPcHRpb25hbCBTZWNvbmQgRG9zZSB0byBUcmVhdCBSZWN1cnJlbmNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjUzOSwxOTk0LTA1LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUcmV4aW1hIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGVzLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA2MiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyaXNvbiBPZiBJbnRyYXZlbm91cyBTb2RpdW0gVmFscHJvYXRlIFZlcnN1cyBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW4gQW5kIEludHJhbXVzY3VsYXIgTWV0b2Nsb3ByYW1pZGUgRm9yIFRyZWF0bWVudCBPZiBBY3V0ZSBNaWdyYWluZSBBdHRhY2tzLEd1aWxhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTMzNDM4LDIwMTEtMDQtMjEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCBUcmlhbCBvbiBFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBWZXJzdXMgS2V0b3JvbGFjIGluIE1pZ3JhaW5lIixFYXN0IENhcm9saW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTEyOTY5LDIwMDItMDMtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIENyb3Nzb3ZlciwgTXVsdGljZW50ZXIsIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQgVHJpYWwgdG8gQ29tcGFyZSBSaXphdHJpcHRhbiBPRFQgMTAgbWcgYW5kIFN1bWF0cmlwdGFuIDUwIG1nIGZvciBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQwNCwyMDAxLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyaXNvbiBvZiBPcmFsIFBhcmFjZXRhbW9sIGFuZCBab2xtaXRyaXB0YW4gRWZmaWNhY3kgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBpbiBFbWVyZ2VuY3kgRGVwYXJ0bWVudCxQYW11a2thbGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTc4NzAsMjAxNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiB6b2xtaXRyaXB0YW4gZGlzcGVyc2libGUgdGFibGV0cyAyLjUgbWcgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsUHJvZHVjdG9zIENpZW50aWZpY29zLEludGVydmVudGlvbmFsLDIxNTE2NSwyMDE1LTAyLTEyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNvbXBhcmF0aXZlIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2Ygem9sbWl0cmlwdGFuIG9yIHN1bWF0cmlwdGFuIGZvciB0cmVhdG1lbnQgb2YgbWlncmFpbmUsS29uc3RhbnRvcG91bGlvIEdFTkVSQUwgSE9TUElUQUwgT0YgTkVBIElPTklBIC0gUEFUSVNJT04sSW50ZXJ2ZW50aW9uYWwsMTE0ODE2LDIwMDMtMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBEb3NlLUZpbmRpbmcsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBNdWx0aWNlbnRlciBTdHVkeSBUbyBBc3Nlc3MgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBab2xtaXRyaXB0YW4gSW4gTWlncmFpbmUiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTEzNTExLDIwMDItMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTUstMDQ2MiBpbiBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBSZWN1cnJlbmNlLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCw1NDY3MSwxOTk1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIscml6YXRyaXB0YW4sNTMyOCxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXJtYWNva2luZXRpYywgcmFuZG9taXplZCBhbmQgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgQVhTLTA3IChNb1NFSUMgbWVsb3hpY2FtIGFuZCByaXphdHJpcHRhbikgZm9yIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDM2MjI1MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBQcm9kdWN0IGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUtQXNzb2NpYXRlZCBOYXVzZWEsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTk1LDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYSBNYXJrZXRlZCBEcnVnIGluIHRoZSBUcmVhdG1lbnQgb2YgTWVuc3RydWFsIE1pZ3JhaW5lLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDEzOTM2LDIwMDUtMDUtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgUml6YXRyaXB0YW4gaW4gdGhlIEVhcmx5IFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5MjAsMjAwNy0xMC0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIHJldHJvc3BlY3RpdmUgc3R1ZHkgb2YgYWxtb3RyaXB0YW4gdmVyc3VzIHJpemF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUgaW4gU3BhaW4iLFVuaXZlcnNpdHkgb2YgVmFsZW5jaWEsSW50ZXJ2ZW50aW9uYWwsMTEzODkwLDIwMDMtMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhLEludGVydmVudGlvbmFsLDExMzc0OSwyMDAzLTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUsVW5pdmVyc2l0eSBvZiBLaWVsLEludGVydmVudGlvbmFsLDExMDczNiwxOTk4LTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IG9uIHRoZSBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiwgcml6YXRyaXB0YW4gYW5kIHpvbG1pdHJpcHRhbiBpbiBtaWdyYWluZSIsQ2FyZGlvdmFzY3VsYXIgUmVzZWFyY2ggSW5zdGl0dXRlIE1hYXN0cmljaHQgQ0FSSU0sSW50ZXJ2ZW50aW9uYWwsMTA5NzE5LDIwMDAtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEyNjQsMjAwMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIGFuZCBBREhELEZlZGVyYWwgVW5pdmVyc2l0eSBvZiBSaW8gR3JhbmRlIGRvIFN1bCxJbnRlcnZlbnRpb25hbCwzMTU3OSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJpc29uIG9mIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgb24gdGhlIFBhdHRlcm4gb2YgQnJhaW4gQWN0aXZhdGlvbiBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLFF1YWxpc3NpbWEsSW50ZXJ2ZW50aW9uYWwsNjY4NzMsMjAxMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFUVEFJTiAyNjcsIlNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIFdpdGggb3IgV2l0aG91dCBQc3ljaG90aWMgRmVhdHVyZXMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY2MzcwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksR2lTQVMsIlByYWdtYXRpYyBSQ1QgQ29tcGFyaW5nIEFyaXBpcHJhem9sZSwgT2xhbnphcGluZSBhbmQgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIixJc3RpdHV0byBkaSBSaWNlcmNoZSBGYXJtYWNvbG9naWNoZSBNYXJpbyBOZWdyaSxJbnRlcnZlbnRpb25hbCw2MzUyNywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCA0LXdlZWssIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgYW5kIHJpc3Blcmlkb25lIGluIGhvc3BpdGFsaXplZCBwYXRpZW50cyB3aXRoIGEgRFNNLUlWIGRpYWdub3NpcyBvZiBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgd2l0aCBhY3V0ZSByZWxhcHNlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDM4LDIwMDEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEV2YWx1YXRpb24gb2YgdGhlIFN0cmF0ZWdpZXMgb2YgU3dpdGNoaW5nIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgdG8gQXJpcGlwcmF6b2xlIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBBZ2VudHMsTmF0aW9uYWwgVGFpd2FuIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzYzMTAsMjAwNy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUExVUywiQWN1dGUgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiB0aGUgTG9uZyBUZXJtLCBVbml0YXJ5IEdyb3VwIFN0dWR5IixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NDQyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmlzb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQZW9wbGUgV2l0aCBGaXJzdC1FcGlzb2RlIFBzeWNob3NpcyxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwzNTI2OCwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1KyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RBUixTY2hpem9waHJlbmlhIFRyaWFsIG9mIEFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNTE0OCwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBUcmlhbCB0byBNZWFzdXJlIHRoZSBEaWZmZXJlbmNlIGluIEFsbC1jYXVzZSBIb3NwaXRhbGl6YXRpb25zIGZvciBQYXRpZW50cyBXaG8gQXJlIFVzaW5nIEFiaWxpZnkgTXlDaXRlIFZlcnN1cyBWaXJ0dWFsIE1hdGNoZWQgQ29udHJvbHMgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciAxIERpc29yZGVyLCBhbmQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxMjEzLDIwMTgtMDYtMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgdGhlIFByb2Ryb21lLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDMzOTg0LDIwMDQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LExMUy1JQ1AsRXZhbHVhdGluZyB0aGUgRWZmaWNhY3kgb2YgYSBMYXRlLUxpZmUgU2NoaXpvcGhyZW5pYSBJbnRlZ3JhdGVkIENhcmUgUGF0aHdheSB0byBUcmVhdCBBY3V0ZSBQc3ljaG90aWMgU3ltcHRvbXMsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMjQwMTU5LDIwMTUtMDgtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiRG9zZS1SZXNwb25zZSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHksIEVmZmljYWN5LCBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBQRi0wMDIxNzgzMCBDb21wYXJlZCBXaXRoIFBsYWNlYm8gaW4gQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExNzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLERvcGFtaW5lcmdpYyBHZW5vdHlwZSBvZiBTY2hpem9waHJlbmljIFBhdGllbnRzIGFuZCB0aGUgQmVuZWZpdCBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSB0byBSaXNwZXJpZG9uZSBUcmVhdG1lbnQuIHRoZSBFZmZlY3Qgb24gSG9ybW9uYWwgYW5kIE1ldGFib2xpYyBNZWFzdXJlcyxUaGUgQmFzcXVlIEZvdW5kYXRpb24gZm9yIEhlYWx0aCBJbm5vdmF0aW9uIGFuZCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxNzMzMjIsMjAxMy0xMC0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBDb21wYXJlZCB3aXRoIFJpc3Blcmlkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxIaXJvc2hpbWEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTMyODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIFNlY29uZC1HZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIG9uIENvZ25pdGlvbiBpbiBGaXJzdC1FcGlzb2RlIFNjaGl6b3BocmVuaWEsU3QgTWFyaWFubmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTUwMzIxLDIwMTMtMDYtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdWItQW5hbHlzaXMgb2YgYSBEb3VibGUtQmxpbmQgU3R1ZHkgb2YgSW50cmFtdXNjdWxhciBBcmlwaXByYXpvbGUgb3IgSGFsb3Blcmlkb2wgYW5kIFRyYW5zaXRpb24gdG8gT3JhbCBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBTY2hpem9waHJlbmlhLFJpZ2EgTWVudGFsIEhlYWx0aCBDYXJlIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxNDYxMzQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVGhlIE1vbml0b3Igb2YgU2VydW0gUHJvbGFjdGluIExldmVsIGluIGEgMyBNb250aHMgQXJpcGlwcmF6b2xlIFRyaWFsLFl1LUxpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzOTkxLDIwMDYtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTXVsdGlwbGUtZG9zZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBTdHVkeSBpbiBBZHVsdCBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRm9sbG93aW5nIEFkbWluaXN0cmF0aW9uIG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM3ODAyLDIwMDctMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIExvbmctVGVybSwgRXh0ZW5kZWQgVHJlYXRtZW50IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEzNjYxMCwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0cyBPZiBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyBPbiBDb2duaXRpdmUgRnVuY3Rpb25pbmcgSW4gU2NoaXpvcGhyZW5pYSxLZWlvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1ODczLDIwMTEtMDMtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRvIGFzc2VzcyBzYWZldHkgYW5kIGVmZmljYWN5IG9mICBhcmlwaXByYXpvbGUgdmVyc3VzIGhhbG9wZXJpZG9sIGluIHNjaGl6b3BocmVuaWEiLFRoZSBadWNrZXIgSGlsbHNpZGUgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTEzODg5LDIwMDItMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTZXJpb3VzIEJlaGF2aW9yYWwgUHJvYmxlbXMgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwxOTQxMSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCBDbGluaWNhbCBUcmlhbCBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5IEFuZCBUbyBDb21wYXJlIFRoZSBFZmZpY2FjeSBPZiBBcmlwaXByYXpvbGUgQW5kIFJpc3Blcmlkb25lIEZvciBUcmVhdGluZyBBdXRpc3RpYyBEaXNvcmRlcnMiLFNoaXJheiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTkyNDE1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgZm9yIE1ldGhhbXBoZXRhbWluZSBEZXBlbmRlbmNlIEFtb25nIEhpZ2gtUmlzayBJbmRpdmlkdWFscywiTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsIFNhbiBGcmFuY2lzY28gRGVwYXJ0bWVudCBvZiBQdWJsaWMgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxNDUyNiwyMDA5LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTW9vZCBTdGFiaWxpemVyIChNUykgcGx1cyBBbnRpZGVwcmVzc2FudCB2ZXJzdXMgTVMgcGx1cyBQbGFjZWJvIGluIE1haW50ZW5hbmNlIG9mIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLEludGVydmVudGlvbmFsLDU5NTc1LDIwMTAtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBbnRpY29udnVsc2FudCBNb29kIFN0YWJpbGl6ZXJzLCBBbnRpcHN5Y2hvdGljIERydWdzIGFuZCB0aGUgSW5zdWxpbiBSZXNpc3RhbmNlIFN5bmRyb21lIixWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ5MTAsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBQcmVsaW1pbmFyeSBTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBCaXBvbGFyIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDMzOTI4LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGVwcmVzc2lvbixDYW1icmlkZ2UgSGVhbHRoIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMzOTE5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIFJhbmRvbWl6ZWQsU2luZ2xlLWJsaW5kLFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSBUbyBBc3Nlc3MgdGhlIEVmZmljYWN5IG9mIEFyaXBpcHJhem9sZSBWZXJzdXMgUGxhY2VibyBhcyBBZGp1bmN0cyB0byBMaXRoaXVtIG9yIFZhbHByb2F0ZSBpbiBSZWxhcHNlIFByZXZlbnRpb24gb2YgTWFuaWMgb3IgTWl4ZWQgRXBpc29kZXMgaW4gQmlwb2xhciBJIFBhdGllbnRzIFN0cmF0aWZpZWQgYnkgSW5kZXggTWFuaWMgb3IgTWl4ZWQgRXBpc29kZSIsVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLEludGVydmVudGlvbmFsLDE1MzM1OCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQmVuZWZpY2lhbCBBY3V0ZSBBbnRpLURlcHJlc3NhbnQgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgb3IgTW9ub3RoZXJhcHkgaW4gQmlwb2xhciBQYXRpZW50cyBVbnJlc3BvbnNpdmUgdG8gTW9vZCBTdGFiaWxpemVyczogUmVzdWx0cyBGcm9tIGEgMTYtV2VlaywgT3Blbi1MYWJlbCBUcmlhbCIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiB0aGUgU2FjcmVkIEhlYXJ0LEludGVydmVudGlvbmFsLDE0Njg5MyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsQVBFWCAyNDEsIkFyaXBpcHJhem9sZSBPcGVuLUxhYmVsLCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDEwNiwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgQWRqdW5jdGl2ZSBMaXRoaXVtIFRyZWF0bWVudCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQc3ljaG90aWNhbCBNYW5pYSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwxOTA2MTIsMjAxMS0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFVuaXZlcnNpdHkgb2YgQ2luY2lubmF0aSxJbnRlcnZlbnRpb25hbCwxMTMxNDEsMjAwMy0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAwIENsaW5pY2FsLEMwLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLElkZW50aWZpY2F0aW9uIG9mIE11bHRpLW1vZGFsIEJpby1tYXJrZXJzIGZvciBFYXJseSBEaWFnbm9zaXMgYW5kIFRyZWF0bWVudCBQcmVkaWN0aW9uIGluIFNjaGl6b3BocmVuaWEgSW5kaXZpZHVhbHMsR2VuZXJhbCBIb3NwaXRhbCBvZiBUaWFuamluIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjUxNjUsMjAxOC0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIEksIGVmZmljYWN5IHN0dWR5IG9mIHJvdGlnb3RpbmUgcGF0Y2hlcyBpbiBwYXRpZW50cyB3aXRoIGRvcGFtaW5lIGFnb25pc3QtcmVzcG9uc2l2ZSBQYXJraW5zb24ncyBkaXNlYXNlIiwiQWRlcmlzIFBoYXJtYWNldXRpY2FscyBJbmMsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsODQ3NiwxOTk3LTAzLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBSb3RpZ290aW5lIG9uIE5vbi1tb3RvciBTeW1wdG9tcywiVUNCIFBoYXJtYSBTQSwgVUNCIFNBIixJbnRlcnZlbnRpb25hbCw3NDk5MCwyMDExLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxDYXJkaWFjIEVmZmVjdHMgb2YgUm90aWdvdGluZSBUcmFuc2Rlcm1hbCBTeXN0ZW0gaW4gU3ViamVjdHMgV2l0aCBBZHZhbmNlZC1zdGFnZSBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UsVUNCIFNBLEludGVydmVudGlvbmFsLDY4MDMsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsVHJlYXRtZW50IG9mIFBhcmtpbnNvbidzIGRpc2Vhc2Ugd2l0aCBhIHRyYW5zZGVybWFsIHNraW4gcGF0Y2gsTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE5ldXJvbG9naWNhbCBEaXNvcmRlcnMgYW5kIFN0cm9rZSxJbnRlcnZlbnRpb25hbCw2Mjg4LDE5OTktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoIGluIEVhcmx5IFBhcmtpbnNvbidzIERpc2Vhc2U6IEEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBDb250cm9sbGVkIFN0dWR5IFZlcnN1cyBQbGFjZWJvIGFuZCBSb3Bpbmlyb2xlIixUZWwgQXZpdiBTb3VyYXNreSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDQyMjIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsU05PV0RST1AsRmxpYmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIGluIFBvc3RtZW5vcGF1c2FsIFdvbWVuLCJCb2VocmluZ2VyIEluZ2VsaGVpbSBJbnRlcm5hdGlvbmFsIEdtYkgsIFNwcm91dCBDbyBMdGQiLEludGVydmVudGlvbmFsLDYxMTYxLDIwMDktMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LEJFR09OSUEsRml4ZWQgMTAwIG1nIEV2ZXJ5IEV2ZW5pbmcgb2YgRmxpYmFuc2VyaW4gVmVyc3VzIFBsYWNlYm8gaW4gUHJlbWVub3BhdXNhbCBXb21lbiBXaXRoIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlcixCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDYxMTU2LDIwMDktMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsRmxpYmFuc2VyaW4gUmFuZG9taXplZCBXaXRoZHJhd2FsIFRyaWFsIGluIFByZS1NZW5vcGF1c2FsIFdvbWVuLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMyODQsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxBIDYtTW9udGggTWluaW11bSBFZmZlY3RpdmUgRG9zZSBvZiBGbGliYW5zZXJpbjogMjUgdmVyc3VzIDUwIG1nIGJpZCB2ZXJzdXMgNTAgbWcgaHMgdmVyc3VzIFBsYWNlYm8gaW4gWW91bmdlciBXb21lbiBpbiBOb3J0aCBBbWVyaWNhLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzMzMDYsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFbGV0cmlwdGFuIFBoYXJtYWNva2luZXRpY3MgSW4gS29yZWFuIE1hbGVzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNzgxODYsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRWZmaWNhY3ksIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEVsZXRyaXB0YW4gZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjAyMDMsMTk5Ni0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG9zZS1maW5kaW5nLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiBpbiBqYXBhbmVzZSBtaWdyYWluZXVycyIsS2VpbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExMTcwMywyMDAyLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExpdGhpdW0gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggTHVyYXNpZG9uZSBIQ2wsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjQ2MDIsMjAwOC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgdG8gdGVzdCB0aGUgZWZmZWN0aXZlbmVzcyBhbmQgc2FmZXR5IG9mIGEgbmV3IG1lZGljYXRpb24gaW4gdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDcyNCwyMDA0LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIEx1cmFzaWRvbmUgVmVyc3VzIE9sYW56YXBpbmUgb24gTmV1cm90cm9waGljIEJpb21hcmtlcnMgaW4gRmlyc3QgRXBpc29kZSBVbnRyZWF0ZWQgU2NoaXpvcGhyZW5pYSxBbGwgSW5kaWEgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMgQmh1YmFuZXN3YXIsSW50ZXJ2ZW50aW9uYWwsMzE1NDE3LDIwMTctMDgtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQSUMsQW50aXBzeWNob3RpYyBJbmR1Y2VkIFN0cnVjdHVyYWwgYW5kIEZ1bmN0aW9uYWwgQnJhaW4gQ2hhbmdlcyxSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuLEludGVydmVudGlvbmFsLDIyODYwOCwyMDE1LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IGFuZCBmTVJJIFN0dWR5IGluIFNjaGl6b3BocmVuaWMgU3ViamVjdHMgVHJlYXRlZCBXaXRoIEx1cmFzaWRvbmUsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCwxNjAyODMsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEx1cmFzaWRvbmUgRXh0ZW5kZWQgVXNlIFN0dWR5LCJTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDgyOTgzLDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFBSRVZBSUwzLCJMdXJhc2lkb25lIEhDSSAtIEEgNi13ZWVrLCBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbiIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NDExMCwyMDEwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkFuoG9wZW4tbGFiZWwsIHJlYWwgd29ybGQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSBvZiBhZGp1bmN0IGx1cmFzaWRvbmUgZm9yIG91dHBhdGllbnRzIHdpdGggdHJlYXRtZW50LXJlc2lzdGFudCBiaXBvbGFyIGRpc29yZGVyIChCUCkgb2YgYW55IHR5cGUiLFN1dHRlciBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMTQ5MTA0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3NzLW92ZXIsIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsVGhlIE1lbmFyaW5pIEdyb3VwLEludGVydmVudGlvbmFsLDExNzI2OSwyMDA3LTA2LTEyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY292ZXJ5LERSLERlcHJlc3Npb24sOTMsbnVsbCwiQSBPbmUteWVhciwgT3Blbi1sYWJlbCBTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNTEwMiwyMDA3LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZpbGF6b2RvbmUgZm9yIFRyZWF0bWVudCBvZiBHZXJpYXRyaWMgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsODc5OTYsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMTEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmZWN0cyBvZiBUcmVhdG1lbnQgb24gRGVjaXNpb24tbWFraW5nIGluIE1ham9yIERlcHJlc3Npb24sRW1vcnkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDkyMTksMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsb3NlbW96b3Rhbiw5OTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsIkEgcGhhc2UgSUlhLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIE1OLTMwNSAob3NlbW96b3RhbikgaW4gcGF0aWVudHMgd2l0aCBwcmltYXJ5IGluc29tbmlhIGFuZCBzbGVlcCBtYWludGVuYW5jZSBkaWZmaWN1bHRpZXMiLE1lZGljaU5vdmEgSW5jLEludGVydmVudGlvbmFsLDc0MTgsMjAwNy0wMS0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxNywxOTk4LTA5LTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGRpYXJyaGVhIHN5bXB0b21zIixIaWdodG9wIE1lZGljYWwgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDExMjg3MywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGNvbnN0aXBhdGlvbi1kb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgaW4gYW4gQXNpYW4gKFBha2lzdGFuKSBwb3B1bGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTY2OSwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxaRU5TQUEsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kZWQsIHBhcmFsbGVsLWdyb3VwLCBtdWx0aS1jZW50ZXIgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGZlbWFsZSBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSBhbmQgY29uc3RpcGF0aW9uIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTY0MCwyMDAyLTEyLTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFByZWZlcmVuY2Ugb2YgVGVnYXNlcm9kIFZlcnN1cyBQRUcgMzM1MCBpbiBQYXRpZW50cyBXaXRoIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcxMSwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBvZiBNb3ZpY29sIDEgU2FjaGV0IEJpZCB2ZXJzdXMgVGVnYXNlcm9kIDYgbWcgQmlkIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixRdWVlbiBNYXJ5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEyODAxNCwyMDA2LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsRDIzMDFFMSxFeHRlbnNpb24gU3R1ZHkgdG8gQXNzZXNzIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIFRlZ2FzZXJvZCBpbiBXb21lbiBXaXRoIFN5bXB0b21zIG9mIER5c3BlcHNpYSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw0MjUwNSwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBDbGluaWNhbCBUcmlhbCB0byBTdHVkeSB0aGUgRWZmZWN0cyBvZiBBbG1vdHJpcHRhbiBPcmFsIFRhYmxldHMgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBIZWFkYWNoZSxNU04gTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMzMyNzksMjAxMC0xMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUsIENyb3Nzb3ZlciwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgTXVsdGljZW50ZXIgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFsbW90cmlwdGFuIDEyLjUgTWcgaW4gdGhlIE1pbGQgUGFpbiBQaGFzZSBvZiBNZXN0cnVhbCBNaWdyYWluZSBGb2xsb3dlZCBieSBhbiBPcGVuIEZvbGxvdy1VcCBFdmFsdWF0aW9uIHRvIEFzc2VzcyBDb25zaXN0ZW5jeSIsQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTE2NzE3LDIwMDUtMDMtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFsbW90cmlwdGFuIHZlcnN1cyBzdW1hdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsUGhhcm1hY2lhIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTA5NzQxLDIwMDAtMDQtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscmVwaW5vdGFuLDEyOTgwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sRGlzY29udGludWVkLERYLFN0cm9rZSw2NSxtUkVDVCxSZXBpbm90YW4gaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBJc2NoZW1pYyBTdHJva2UsQmF5ZXIgQUcsSW50ZXJ2ZW50aW9uYWwsNjAxMywyMDAwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LFBoYXJtYWNva2luZXRpY3MsTixZLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLE0tMDAwMSBFZmZlY3RzIG9uIE9yYWwgQ29udHJhY2VwdGl2ZSBQbGFzbWEgTGV2ZWxzLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjI4NjksMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQcnVjYWxvcHJpZGUgRWZmZWN0cyBvbiBTdWJqZWN0cyBXaXRoIENocm9uaWMgTm9uLUNhbmNlciBQYWluIFN1ZmZlcmluZyBGcm9tIE9waW9pZCBJbmR1Y2VkIENvbnN0aXBhdGlvbiwiU2hpcmUgcGxjLCBTaGlyZS1Nb3ZldGlzIE5WIixJbnRlcnZlbnRpb25hbCw2NjE2OSwyMDEwLTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSByZXNlcmFjaCBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHBydWNhbG9wcmlkZSB0YWJsZXQgaW4gcGF0aWVudCBoYXZpbmcgbG9uZyB0ZXJtIGNvbXBsYWluIG9mIGNvbnN0aXBhdGlvbixUb3JyZW50IFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU2NDE5LDIwMTYtMDgtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgVHJpYWwgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLCB0byBFdmFsdWF0ZSB0aGUgVG9sZXJhYmlsaXR5IGFuZCBDYXJkaWFjIFNhZmV0eSBvZiBQcnVjYWxvcHJpZGUiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg5OTQsMjAwMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsUHJ1Y2Fsb3ByaWRlIGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBpZGlvcGF0aGljIGNvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDI3LDE5OTctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLENvbXBhcmF0b3IgU3R1ZHkgb2YgUEVHIDMzNTAgVmVyc3VzIFBydWNhbG9wcmlkZSBpbiBGZW1hbGVzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sTm9yZ2luZSBCVixJbnRlcnZlbnRpb25hbCwxMzM5MzEsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE91dGxpY2Vuc2VkLE9MLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUEFERFktMixTYXJpem90YW4gaW4gUGFydGljaXBhbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBTdWZmZXJpbmcgRnJvbSBUcmVhdG1lbnQgQXNzb2NpYXRlZCBEeXNraW5lc2lhLCJFTUQgU2Vyb25vIEluYywgTWVyY2sgS0dhQSIsSW50ZXJ2ZW50aW9uYWwsNjI4MCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sT3V0bGljZW5zZWQsT0wsVGFyZGl2ZSBkeXNraW5lc2lhLDMyMCxQQUREWSAxLFNhcml6b3RhbiBIQzEgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudCBBc3NvY2lhdGVkIER5c2tpbmVzaWEsIk1lcmNrIEtHYUEsIE1lcmNrIFBoYXJtYSBTcEEiLEludGVydmVudGlvbmFsLDYxMzQsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYtbW9udGgsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBtZXRhYm9saWMgZWZmZWN0cyBhbmQgbG9uZy10ZXJtIGVmZmljYWN5IG9mIGJpZmVwcnVub3ggaW4gcGF0aWVudHMgd2l0aCBzdGFibGUgc2NoaXpvcGhyZW5pYSIsIkggTHVuZGJlY2sgQS9TLCBTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYywgV3lldGggUGhhcm1hY2V1dGljYWxzIixJbnRlcnZlbnRpb25hbCw0MTUyNiwyMDA2LTEyLTA2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJlIHRoZSBFZmZlY3RzIG9mIEJpZmVwcnVub3ggYW5kIFF1ZXRpYXBpbmUgb24gV2VpZ2h0IENoYW5nZXMgaW4gU3RhYmxlIFNjaGl6b3BocmVuaWMgUGF0aWVudHMsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYwNjAsMjAwNy0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIEJpZmVwcnVub3ggaW4gQmlwb2xhciBEZXByZXNzaW9uLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM5MTEsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTd2l0Y2ggU3R1ZHkgb2YgRXhpc3RpbmcgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgdG8gQmlmZXBydW5veCxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTU5MywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwsIFNMVi0zMDggU2FmZXR5IEV4dGVuc2lvbiB0byBTdHVkeSBTMzA4LjMuMDAyIGluIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIEV4cGVyaWVuY2luZyBNb3RvciBGbHVjdHVhdGlvbnMiLEFiYm90dCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsODI0MywyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBpbiBQYXRpZW50cyB3aXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY4NzkwLDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LENMQVJJVFktMixTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBZGp1bmN0aXZlIFBpbWF2YW5zZXJpbiBpbiBTdWJqZWN0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnQgVHJlYXRtZW50LEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4Mjg0MiwyMDE5LTA0LTI1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IG9mIENvbWJpbmF0aW9uIFByb2R1Y3QgKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBhbmQgTmFwcm94ZW4gU29kaXVtKSBpbiBNaWdyYWluZSBTdWJqZWN0cyBXaG8gUmVwb3J0IFBvb3IgUmVzcG9uc2Ugb3IgSW50b2xlcmFuY2UgdG8gU2hvcnQgQWN0aW5nIFRyaXB0YW5zIChTdHVkeSAxIG9mIDIpLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNTQsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsIlBSWC0wMDkzMyAob3JhbCwgb2Jlc2l0eS9kaWFiZXRlcyksIFByb3hpbWFnZW4iLDM1OTc4LEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJSWEsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBCVlQtOTMzIGluIG9iZXNlIHBhdGllbnRzIixTd2VkaXNoIE9ycGhhbiBCaW92aXRydW0gQUIsSW50ZXJ2ZW50aW9uYWwsNTQxNDYsMjAwMi0wMi0yNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxQaGFybWFjb2R5bmFtaWMgU3R1ZHkgdG8gQ29tcGFyZSBBY3V0ZSBFZmZlY3RzIG9mIERpaHlkcm9lcmdvdGFtaW5lIE1lc3lsYXRlIChESEUpIG9uIFB1bG1vbmFyeSBBcnRlcmlhbCBQcmVzc3VyZSxBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ5ODQsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBCdXNwaXJvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQW54aWV0eSBpbiBZb3V0aCBXaXRoIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEyOTY4MCwyMDEzLTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsVHJlYXRtZW50IG9mIEFkdWx0IEFESEQgV2l0aCBBdG9tb3hldGluZSBvciBBdG9tb3hldGluZSBhbmQgQnVzcGFyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE1OTEsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQgc3R1ZHkgb2Ygc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgYW5kIGRpaHlkcm9lcmdvdGFtaW5lIG5hc2FsIHNwcmF5IGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLENFTlRSRSBBTlRJLURPVUxFVVIsSW50ZXJ2ZW50aW9uYWwsMTA3MTMwLDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBzaW5nbGUgYW5kIG11bHRpcGxlIGRvc2VzIG9mIFBSWC0wMDAyMyBpbiBoZWFsdGh5IHN1YmplY3RzLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDU3Mzg3LDIwMDYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHpvbG1pdHJpcHRhbiAoVFJaKSB3aXRoIG1hcmtldGVkIHpvbG1pdHJpcHRhbiB0YWJsZXQgYW5kIG1hcmtldGVkIHpvbG1pdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLFNoaW4gTmlwcG9uIEJpb21lZGljYWwgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw4NjQyNywyMDExLTAzLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiem9sbWl0cmlwdGFuIChpbnRyYW5hc2FsKSwgQXN0cmFaZW5lY2EiLDQ3MjAyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxaQVAsIlpBUCwgVVMgWm9taWcgZm9yIEFwcHJvcHJpYXRlIGZvciBQcmltYXJ5IENhcmUiLEFzdHJhWmVuZWNhIHBsYyxJbnRlcnZlbnRpb25hbCwxNDEwOSwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFpvbG1pdHJpcHRhbiBOYXNhbCBTcHJheSxBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNzgsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBvZiBab21pZyBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lcyBpbiBBZG9sZXNjZW50cyxBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNjksMjAwMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxMb3JOaWMsQ29tYmluYXRpb24gTmljb3RpbmUgUGF0Y2gvTG9yY2FzZXJpbiBmb3IgU21va2luZyBDZXNzYXRpb24sRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI3MjM2NCwyMDE2LTExLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVBEMzU2IGluIHRoZSBUcmVhdG1lbnQgb2YgT2Jlc2l0eSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4NjgwLDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLExvcmNhc2VyaW4gaW4gT2Jlc2l0eTogSWRlbnRpZmljYXRpb24gb2YgQ05TIFRhcmdldHMgVXNpbmcgZk1SSSxCZXRoIElzcmFlbCBEZWFjb25lc3MgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjI1NDE5LDIwMTQtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxSZWxhcHNlLVByZXZlbnRpb24gU3R1ZHkgV2l0aCBMdS1BQTIxMDA0IChWb3J0aW94ZXRpbmUpIGluIFBhdGllbnRzIFdpdGggR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNDk0OSwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTHUtQUEyMTAwNCBpbiBUcmVhdGluZyBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjMwMzAsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQgVmVubGFmYXhpbmUtcmVmZXJlbmNlZCBTdHVkeSBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gQWR1bHRzIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw0NDU1NiwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ5ODUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIE1ERCBQYXRpZW50cyxaYXBvcml6aHpoeWEgTWVkaWNhbCBBY2FkZW15IG9mIFBvc3RncmFkdWF0ZSBFZHVjYXRpb24sSW50ZXJ2ZW50aW9uYWwsMzAxNTYzLDIwMTYtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxDb250aW51YXRpb24gV2l0aCBWb3J0aW94ZXRpbmUgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIEZyb20gNyB0byAxNyBZZWFycyBvZiBBZ2UsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjk0NDQyLDIwMTctMDMtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgTXVsdGktY291bnRyeSwgTXVsdGktc2l0ZSwgTm9uLUludGVydmVudGlvbmFsIFN0dWR5IG9uIFZvcnRpb3hldGluZSBpbiBNYWpvciBEZXByZXNzaW9uIHBhdGllbnRzIEluIFNvdXRoIEVhc3QgQXNpYSIsQS9TIEx1bmRiZWNrIE92ZXJzZWFzIChTaW5nYXBvcmUpLEludGVydmVudGlvbmFsLDI2NzE1OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2lvbiBhbmQgQ28tbW9yYmlkaXRpZXMgQWZ0ZXIgVHJhdW1hdGljIEJyYWluIEluanVyeSAoVEJJKSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY2NjQwLDIwMTYtMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUFJYLTMxNDAsNDg3MzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgUFJYLTAzMTQwIGZvciB0aGUgVHJlYXRtZW50IG9mIEFsemhlaW1lcidzIERpc2Vhc2UiLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODg4LDIwMDQtMTItMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxQaWxvdCBTdHVkeSBvZiBQUlgtMDMxNDAgdG8gQXNzZXNzIFNhZmV0eSBmb3IgVXNlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggUG9zdCBUcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyLE9sb2d5IEJpb3NlcnZpY2VzIEluYyxJbnRlcnZlbnRpb25hbCw4MzI5NywyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLExvbmctdGVybSBTdHVkeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2OTcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNsaW5pY2FsIFRyaWFsIEV2YWx1YXRpbmcgdGhlIEVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgaW4gYSBEb3NlLVJlZHVjdGlvbiBQYXJhZGlnbSBpbiB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsIkFsbGVyZ2FuIFNpbmdhcG9yZSBQVEUgTHRkLCBBbGxlcmdhbiBwbGMsIEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jIixJbnRlcnZlbnRpb25hbCwzNDcyMDcsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1hbmlhLDE5NTcsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDksMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLCJBIENhcmlwcmF6aW5lIFN0dWR5IGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gQmlwb2xhciBJIERpc29yZGVyIFBhdGllbnRzIFdob3NlIEN1cnJlbnQgRXBpc29kZSBpcyBNYW5pYyBvciBEZXByZXNzaXZlLCBXaXRoIG9yIFdpdGhvdXQgTWl4ZWQgRmVhdHVyZXMiLCJBbGxlcmdhbiBTaW5nYXBvcmUgUFRFIEx0ZCwgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NDkxOCwyMDE4LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWFuaWEsMTk1NyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBNYW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwyOTM3NCwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhcnRpY2lwYW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbiIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzkzMTgsMjAxMS0wNy0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQ2FyaXByYXppbmUgQ2Fwc3VsZXMgNiBtZyBpbiBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIgSSBQYXRpZW50cywiQVhJUyBDbGluaWNhbHMgTGltaXRlZCwgQXVyb2JpbmRvIFBoYXJtYSBMdGQiLEludGVydmVudGlvbmFsLDM1NDI0NiwyMDE4LTA5LTIxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBDYXJpcHJhemluZSBTdHVkeSBpbiB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIGluIEJpcG9sYXIgSSBEaXNvcmRlciBQYXRpZW50cyBXaG9zZSBDdXJyZW50IEVwaXNvZGUgaXMgTWFuaWMgb3IgRGVwcmVzc2l2ZSwgV2l0aCBvciBXaXRob3V0IE1peGVkIEZlYXR1cmVzIiwiQWxsZXJnYW4gU2luZ2Fwb3JlIFBURSBMdGQsIEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jIixJbnRlcnZlbnRpb25hbCwzNDQ5MTgsMjAxOC0wNi0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIlN0dWR5IG9uIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgUmVsYXRpdmUgdG8gUGxhY2VibyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbiIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUyMTc3LDIwMTYtMDMtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IHRvIEFudGlkZXByZXNzYW50IFRoZXJhcHkgKEFEVCkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIFdobyBIYXZlIEhhZCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50cyBBbG9uZSIsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDM1OTc2OSwyMDE4LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlN0dWR5IG9uIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgUmVsYXRpdmUgdG8gUGxhY2VibyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIEkgRGVwcmVzc2lvbiIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUyMTc3LDIwMTYtMDMtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsT3Blbi1sYWJlbCBTdHVkeSBvZiBOZWxvdGFuc2VyaW4gaW4gTGV3eSBCb2R5IERlbWVudGlhIFdpdGggVmlzdWFsIEhhbGx1Y2luYXRpb25zIG9yIFJFTSBTbGVlcCBCZWhhdmlvciBEaXNvcmRlcixBeG92YW50IEdlbmUgVGhlcmFwaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjg5NDYsMjAxNi0xMC0yMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsSGFsbHVjaW5hdGlvbiwxMDUwLG51bGwsU3R1ZHkgRXZhbHVhdGluZyBOZWxvdGFuc2VyaW4gZm9yIFRyZWF0bWVudCBvZiBWaXN1YWwgSGFsbHVjaW5hdGlvbnMgaW4gU3ViamVjdHMgV2l0aCBMZXd5IEJvZHkgRGVtZW50aWEsQXhvdmFudCBHZW5lIFRoZXJhcGllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQ5NTgzLDIwMTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsTGV3eSBib2R5IGRlbWVudGlhLDMwNjQsbnVsbCxPcGVuLWxhYmVsIFN0dWR5IG9mIE5lbG90YW5zZXJpbiBpbiBMZXd5IEJvZHkgRGVtZW50aWEgV2l0aCBWaXN1YWwgSGFsbHVjaW5hdGlvbnMgb3IgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI2ODk0NiwyMDE2LTEwLTIwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsImNsYXZ1bGFuaWMgYWNpZCAoZXh0ZW5kZWQtcmVsZWFzZSwgZGVwcmVzc2lvbi9QYXJraW5zb24ncyBkaXNlYXNlKSwgUmV4YWhuIiw1Mjg5MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBTdHVkeSBvZiBSWC0xMDEwMCB0byBUcmVhdCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLFJleGFobiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDQ0NTcxLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEhYLTEwNSw1MzY1MSxQaGFybWFjb2tpbmV0aWNzLFksTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSB0aHJlZS13YXkgY3Jvc3NvdmVyLCBwaGFzZSBJIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIEFUSFgtMTA1IGZvciBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG9iZXNpdHkiLEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwzNjI1NSwyMDA4LTA5LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBQaGFybWFjb2R5bmFtaWNzIG9mIFZlbHVzZXRyYWcgaW4gSGVhbHRoeSBFbGRlcmx5IFN1YmplY3RzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyMTQsMjAxMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJTYWZldHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgVmVsdXNldHJhZyBpbiBIZWFsdGh5IEVsZGVybHkgU3ViamVjdHMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw4MjIxNCwyMDExLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWN1dGUgY29yb25hcnkgc3luZHJvbWUsMzI1OCxQUjFDLFNhZmV0eSBTdHVkeSBvZiBBUEQtNzkxIFdpdGggQXNwaXJpbiBhbmQvb3IgQ2xvcGlkb2dyZWwsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY3Mzg2LDIwMTQtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMixQaGFybWFjb2tpbmV0aWNzLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMDg4MTYsMjAxNy0wOC0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLCJFZmZlY3Qgb2YgU2luZ2xlLCBPcmFsIERvc2VzIG9mIExhc21pZGl0YW4gV2hlbiBDb2FkbWluaXN0ZXJlZCBXaXRoIFNpbmdsZSBPcmFsIERvc2VzIG9mIFN1bWF0cmlwdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyOTA1MzMsMjAxNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBbiBFeHBsb3JhdG9yeSwgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBTdHJhdGlmaWVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFJlcGVhdGVkIERvc2UgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IG9mIE0wMDAzIG9uIFN5bXB0b21zIFN1Z2dlc3RpdmUgZm9yIEdhc3Ryb3BhcmVzaXMsIHRvIEFzc2VzcyB0aGUgUGhhcm1hY29keW5hbWljIEVmZmVjdHMgb24gR2FzdHJpYyBFbXB0eWluZywgYW5kIHRvIEFzc2VzcyB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgTTAwMDMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTQzMTY4LDIwMDctMTEtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LFJlQ09HTklUSU9OLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGlyb21lbGF0aW5lIGluIE1pbGQgQWx6aGVpbWVyJ3MgRGlzZWFzZSBQYXRpZW50cyxOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0Njg1MCwyMDE1LTExLTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLFN0dWR5IG9uIHRoZSBFZmZlY3RzIG9mIERBLTk3MDEgb24gR2FzdHJvaW50ZXN0aW5hbCBNb3RpbGl0eSBvbiBIZWFsdGh5IEFkdWx0IFZvbHVudGVlcnMsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCw5MDMzNywyMDEyLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsU3R1ZHkgb24gdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBvbiBHYXN0cm9pbnRlc3RpbmFsIE1vdGlsaXR5IG9uIEhlYWx0aHkgQWR1bHQgVm9sdW50ZWVycyxDYXRob2xpYyBVbml2ZXJzaXR5IG9mIEtvcmVhLEludGVydmVudGlvbmFsLDkwMzM3LDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgQWNjb21tb2RhdGlvbiBpbiBIZWFsdGh5IEFkdWx0IFBhdGllbnRzOiBFdmFsdWF0aW9uIFVzaW5nIE1SSSBNZXRob2QsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzgzNzYsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyaWxhcm94YXppbmUgaHlkcm9jaGxvcmlkZSw1OTg5NiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixQdWxtb25hcnkgYXJ0ZXJ5IGh5cGVydGVuc2lvbiwzNTEwLG51bGwsQSBwaGFzZSBJSSBzdHVkeSBvZiBSUC01MDYzIGZvciB0aGUgdHJlYXRtZW50IG9mIHB1bG1vbmFyeSBhcnRlcmlhbCBoeXBlcnRlbnNpb24sUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE2MzQ5LG51bGwsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsVEFLLTk1NCw2MDI5MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVHdvIERvc2UgUmVnaW1lbnMgb2YgSW50cmF2ZW5vdXMgVEFLLTk1NCBmb3IgdGhlIFByb3BoeWxheGlzIGFuZCBUcmVhdG1lbnQgb2YgUG9zdG9wZXJhdGl2ZSBHYXN0cm9pbnRlc3RpbmFsIER5c2Z1bmN0aW9uIGluIFBhcnRpY2lwYW50cyBVbmRlcmdvaW5nIExhcmdlLSBhbmQgU21hbGwtQm93ZWwgUmVzZWN0aW9uLFRha2VkYSBPbmNvbG9neSxJbnRlcnZlbnRpb25hbCwzNjg4MjEsMjAxOS0wMy0wNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSxQaGFybWFjb2tpbmV0aWNzLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHN1bWF0cmlwdGFuIGluIHBhdGllbnRzIHdpdGggbWlncmFpbmUiLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMwMjczOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEVRVUFUT1IsIkVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMTIsMjAxMi0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpFTklUSCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBPcmFsIE9QQy0zNDcxMiBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3OTQyMywyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQb3NpdHJvbiBlbWlzc2lvbiB0b21hZ3JhcGh5IChQRVQpIHN0dWR5IGZvbGxvd2luZyBhIHNpbmdsZSBvcmFsIGRvc2Ugb2YgT1BDLTM0NzEyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzgxNzksMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIFRyaWFsIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNzE0NjEsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQm9yZGVybGluZSBwZXJzb25hbGl0eSBkaXNvcmRlciwxOTI5LG51bGwsQnJleHBpcHJhem9sZSBpbiBCb3JkZXJsaW5lIFBlcnNvbmFsaXR5IERpc29yZGVyLFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyxJbnRlcnZlbnRpb25hbCwzMjc4NTcsMjAxOC0xMS0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBUcmlhbCB0byBBc3Nlc3MgQnJleHBpcHJhem9sZSBWZXJzdXMgUGxhY2VibyBmb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBFcGlzb2RlcywgQXNzb2NpYXRlZCBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzA5ODgzLDIwMTctMTAtMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCwiQSBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5LCBFZmZpY2FjeSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIGluIFRyZWF0aW5nIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM0MjI0NywyMDE4LTA1LTE2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsU2FmZXR5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsQSBwaGFzZSBJSUkgc3R1ZHkgb2YgYnJleHBpcHJhem9sZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhZ2l0YXRpb24gaW4gcGF0aWVudHMgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgdHlwZSwiSCBMdW5kYmVjayBBL1MsIE90c3VrYSBIb2xkaW5ncyBDbyBMdGQiLEludGVydmVudGlvbmFsLDMxNzcwMSwyMDE4LTA2LTMwIDAwOjAwOjAwLFBsYW5uZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LERlbHBoaW51cyxBIFN0dWR5IG9mIEZsZXhpYmxlLWRvc2UgQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDk4MzcyLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUHl4aXMsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRml4ZWQtRG9zZSBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3NzYxMCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIk90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgU2hhcnAgQ29ycCIsSW50ZXJ2ZW50aW9uYWwsMzM1MTc5LDIwMTgtMDUtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGFzIGFuIEFkanVuY3RpdmUgVHJlYXRtZW50IGluIEFjdGl2ZSBBZHVsdHMsIDE4IHRvIDM1IFllYXJzIE9sZCwgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdobyBBcmUgaW4gYSBTY2hvb2wgb3IgV29yayBFbnZpcm9ubWVudCIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY0MTEyLDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgQW54aWV0eSBTeW1wdG9tcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjQwMTYsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJ0YW5kb3NwaXJvbmUgKGV5ZS1kcm9wIGZvcm11bGF0aW9uKSwgQWxjb24iLDYzMzExLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBZ2UgcmVsYXRlZCBtYWN1bGFyIGRlZ2VuZXJhdGlvbiwxMjI2LEdBVEUsR2VvZ3JhcGhpYyBBdHJvcGh5IFRyZWF0bWVudCBFdmFsdWF0aW9uIChHQVRFKSxBbGNvbiBSZXNlYXJjaCBMdGQsSW50ZXJ2ZW50aW9uYWwsNTQxOTYsMjAwOS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMiwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFybW9jb2tpbmV0aWMgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIEV4dGVuZGVkIFJlbGVhc2UgSW5qZWN0YWJsZSBTdXNwZW5zaW9uIGluIHBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSxNeWxhbiBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDM2MzgzNywyMDE5LTAyLTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBJTSBEZXBvdCBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIkNoaW5hIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSIsSW50ZXJ2ZW50aW9uYWwsMzAwNzA2LDIwMTctMDUtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBU1BJUkUsSW50cmFtdXNjdWxhciBEZXBvdCBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMzA3OCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAsIGNvbXBhcmlzb24gdHJpYWwgb2YgYXJpcGlwcmF6b2xlIElNIGRlcG90IGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDEyODksMjAxMC0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAobmFzYWwsIG1pZ3JhaW5lKSwgU05CTCIsNjQzNjQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGJpb2F2YWlsYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcywgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygem9sbWl0cmlwdGFuIChUUlopIHdpdGggbWFya2V0ZWQgem9sbWl0cmlwdGFuIHRhYmxldCBhbmQgbWFya2V0ZWQgem9sbWl0cmlwdGFuIG5hc2FsIHNwcmF5IGluIGhlYWx0aHkgYWR1bHQgdm9sdW50ZWVycyIsU2hpbiBOaXBwb24gQmlvbWVkaWNhbCBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDg2NDI3LDIwMTEtMDMtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBc3Nlc3NtZW50IE9mIFRoZSBFZmZlY3RzIE9mIFNpbmdsZSBEb3NlcyBPZiBBbiBJbnZlc3RpZ2F0aW9uYWwgRHJ1ZywgR2l2ZW4gQWxvbmUgT3IgV2l0aCBEb25lcGV6aWwsIE9uIFNjb3BvbGFtaW5lLUluZHVjZWQgQ2hhbmdlcyBJbiBNZW1vcnkgQW5kIExlYXJuaW5nIEluIEhlYWx0aHkgQWR1bHRzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDc3NTc2LDIwMTEtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsU1VWTi1ENDAxMCw2NzUwOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAxIENsaW5pY2FsLEMxLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCwiQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgU1VWTi1ENDAxMCBpbiBIZWFsdGh5IFN1YmplY3RzIixTdXZlbiBMaWZlIFNjaWVuY2VzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDMwODMsMjAxNS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJtb3NhcHJpZGUgY2l0cmF0ZSAoZHlzcGVwc2lhLCBzdXN0YWluZWQgcmVsZWFzZSksIERhZXdvb25nIiw2NzU3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEV0otMTI1MiBpbiB0aGUgVHJlYXRtZW50IG9mIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIChQQVJUIDIpLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMDEzMTYsMjAxNy0wNC0xOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNFUC0zNjM4NTYgaW4gU3ViamVjdHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyIsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI3OTg4NywyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLFlILTEyODUyLDgyMDU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRHlzcGVwc2lhLDQzMixudWxsLEEgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWUgtMTI4NTIgaW4gUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSxZdWhhbiBDb3JwLEludGVydmVudGlvbmFsLDI0MjAzMSwyMDE1LTEwLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlICh0cmFuc2Rlcm1hbCBwYXRjaCwgcHN5Y2hpYXRyaWMgZGlzb3JkZXIpLCBBZXF1dXMgUGhhcm1hY2V1dGljYWxzL0Nvcml1bSIsODc3NDIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kZWQsIHNpbmdsZS1kb3NlLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIDcgZGF5IHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5IGFuZCBiaW9hdmFpbGFiaWxpdHkgb2YgQVFTLTEzMDEgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBZXF1dXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNDYxMjMsMjAxNS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJsaXRveGV0aW5lLCBJeGFsdGlzIiwxMDIyOTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsVXJpbmFyeSBpbmNvbnRpbmVuY2UsMTg3LERCUEMgVHJpYWwsIlRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgRWZmaWNhY3kgb2YgT3JhbCBMaXRveGV0aW5lIGluIFN1YmplY3RzIFdpdGggVXJpbmFyeSBJbmNvbnRpbmVuY2UiLEl4YWx0aXMgU0EsSW50ZXJ2ZW50aW9uYWwsMzI1NDUzLDIwMTgtMDQtMDMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobWlncmFpbmUsIFpFTkVPKSwgQ3Jvc3NqZWN0IiwxMDk0NzIsQmlvZXF1aXZhbGVuY2UsTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgZmFjaWFsIGFsZ2lhIGFuZCBhY3V0ZSBtaWdyYWluZSxDcm9zc2plY3QsSW50ZXJ2ZW50aW9uYWwsMzMwMjIwLDIwMTUtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwic3VtYXRyaXB0YW4gKG9yYWwgc3ByYXksIE9yb01pc3QsIG1pZ3JhaW5lKSwgU3VkYSBQaGFybWFjZXV0aWNhbHMvIFN0cmlkZXMgUGhhcm1hIFNjaWVuY2UiLDExMzMyOSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCwiQSBwaWxvdCwgZmlyc3QtaW4taHVtYW4gY2xpbmljYWwgdHJpYWwgU1VELTAwMUggZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIixTdWRhIFBoYXJtYWNldXRpY2FscyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwNTU5LG51bGwsUGxhbm5lZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCBsb25nLXRlcm0gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIG1haW50ZW5hbmNlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgSSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODAxODAsMjAwMC0wOC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSAxMi13ZWVrLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBjb250cm9sbGVkIGNsaW5pY2FsIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgZGlzb3JkZXIiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDcwNjE1LDIwMDQtMDYtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFUVEFJTiAyNjcsIlNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBBZG9sZXNjZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLCBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIFdpdGggb3IgV2l0aG91dCBQc3ljaG90aWMgRmVhdHVyZXMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY2MzcwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBUcmlhbCB0byBNZWFzdXJlIHRoZSBEaWZmZXJlbmNlIGluIEFsbC1jYXVzZSBIb3NwaXRhbGl6YXRpb25zIGZvciBQYXRpZW50cyBXaG8gQXJlIFVzaW5nIEFiaWxpZnkgTXlDaXRlIFZlcnN1cyBWaXJ0dWFsIE1hdGNoZWQgQ29udHJvbHMgaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciAxIERpc29yZGVyLCBhbmQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzUxMjEzLDIwMTgtMDYtMjkgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBoZWFkIHRvIGhlYWQgY29tcGFyaXNvbiBvZiBhcmlwaXByYXpvbGUgdmVyc3VzIG9sYW56YXBpbmUgYXMgYWRqdXZhbnRzIHRvIGxpdGhpdW0gZm9yIHRyZWF0aW5nIG1hbmljIG9yIG1peGVkIGVwaXNvZGVzIGluIGJpcG9sYXIgZGlzb3JkZXIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyMTYyOTQsMjAxMy0wOS0xMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEFkbWluaXN0ZXJlZCBXaXRoIExpdGhpdW0gb3IgVmFscHJvYXRlIE92ZXIgMTIgV2Vla3MgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTQyNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NyxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3QgYmlvZXF1aXZhbGVuY2Ugc3R1ZHkgYmV0d2VlbiBncmFudWxlcyBjb250YWluaW5nIDEuMCBtZyBvZiBjaW5pdGFwcmlkZSAoZHJ1ZyB0ZXN0KSBkZXZlbG9wZWQgYnkgVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViBhbmQgUGVtaXggPz9ncmFudWxhdGUgY29udGFpbmluZyAxLjAgbWcgb2YgY2luaXRhcHJpZGUgKERydWcgUmVmZXJlbmNlKSBtYW51ZmFjdHVyZWQgYnkgQWxtaXJhbGwgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQuIGZvciBQaGFybWFjZXV0aWNhbCBBbmRyb21hY28gLCBTQSBkZSBDViAyLjAgbWcgZG9zZSBhZG1pbmlzdHJhdGlvbiIsIlVsdHJhIExhYm9yYXRvcmllcywgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDE2MzU3NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlBpbG90IFN0dWR5IHRvIEV2YWx1YXRlIEJpb2F2YWlsYWJpbGl0eSBvZiBlbGV0cmlwdGFuIDgwIG1nIFRhYmxldHMgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLCBlbGV0cmlwdGFuIHZlcnN1cyBSZWxwYXggKFBmaXplcikgYW5kIEVzdGFibGlzaCB0aGUgQmVzdCBDb25kaXRpb25zIEZvciBTdHVkeSBCaW9lcXVsdmFsZW5jZSIsTGFuZHN0ZWluZXIgU2NpZW50aWZpYyBTYSBEZSBDdixJbnRlcnZlbnRpb25hbCwxNjM5NDMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQZXJzb25hbGl0eSBkaXNvcmRlciw3MDEsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBpbiBzZXJvdG9uZXJnaWMgZnVuY3Rpb25pbmcgaW4gY2hpbGRyZW4gd2l0aCBvcHBvc2l0aW9uYWwgZGVmaWFudCBkaXNvcmRlcixVbml2ZXJzaXRlaXQgVXRyZWNodCxJbnRlcnZlbnRpb25hbCwxMTEzNzEsMjAwMi0wMi0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBzdHVkeSBiZXR3ZWVuIHRoZSB0ZXN0IGRydWcgem9sbWl0cmlwdGFuIChVbHRyYSBsYWJvcmF0b3JpZXMgU0EgZGUgQ1YpIGFuZCBab21pZyBSYXBpbWVsdCAoQXN0cmF6ZW5lY2EsIFNBIGRlIENWKSBhcyByZWZlcmVuY2UgbWVkaWNpbmUiLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwzMDI2OTcsMjAxNC0xMC0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiT3BlbiwgcmFuZG9taXplZCwgY3Jvc3NvdmVyIHN0dWR5IG9mIGNvbXBhcmF0aXZlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzIE1pZ3JlcGFtIHRhYmxldHMsIGZpbG0tY29hdGVkLCAyLjUgbWcgKFpBTyAiIlBoYXJtYWNldXRpY2FsIENvbXBhbnkiIiBPYm9sZW5za3kgIiIsIFJ1c3NpYSkgYW5kIFpvbWlnIHRhYmxldHMsIGZpbG0tY29hdGVkLCAyLjUgbWcgKEFzdHJhWmVuZWNhIFVLIExpbWl0ZWQsIFVLKSIsT2JvbGVuc2t5LEludGVydmVudGlvbmFsLDIyNDE5OSwyMDE1LTAzLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLG51bGwsVHJlYXRtZW50IG9mIERlbGlyaXVtIGluIENhbmNlciBQYXRpZW50cyBXaXRoIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIEZ1a3VpLEludGVydmVudGlvbmFsLDEyMzQ2NiwyMDExLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiAoc3VibGluZ3VhbCwgbWlncmFpbmUsIE5vdmFNaXN0KSwgU3VkYSIsNDcyMDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHBpbG90IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2Ygc3VtYXRyaXB0YW4gb3JhbCBzcHJheSB3aXRoIEltaXRyZXggaW4gaGVhbHRoeSB2b2x1bnRlZXJzLE5vdmFEZWwgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2MDMwNSwyMDA0LTA1LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDAgQ2xpbmljYWwsQzAsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxSZWR1Y2luZyB0aGUgQWJ1c2Ugb2YgT3Bpb2lkcyBpbiBEcnVnIFVzZXJzLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIFNhbiBBbnRvbmlvLEludGVydmVudGlvbmFsLDM2OTkzNywyMDE5LTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENyb2hucyBkaXNlYXNlLDg0LElNUFVMU0UsVGhlIEludmVzdGlnYXRpb25zIGZvciBJbXByb3ZpbmcgU3VjY2Vzc2Z1bCBKdWRnbWVudCBSYXRlIFdpdGggUGlsbENhbSBQYXRlbmN5IENhcHN1bGUgYW5kIERpZmZlcmVudGlhbCBEaWFnbm9zaXMgaW4gQ3JvaG5zIERpc2Vhc2UgUGF0aWVudHMgV2l0aCBGb2xsb3dpbmcgQ2Fwc3VsZSBFbmRvc2NvcHksT3Nha2EgQ2l0eSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExODcwNywyMDEyLTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkZyb3ZhdHJpcHRhbiBWZXJzdXMgWm9sbWl0cmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIGEgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE3MTcyLDIwMDctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbGlyaXVtLDMwNjMsTUlORCBTdHVkeSxNb2RpZnlpbmcgdGhlIEluY2lkZW5jZSBvZiBEZWxpcml1bSxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTk3MzcxLDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMCBDbGluaWNhbCxDMCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxMaXZlciBkaXNlYXNlLDIwMSxudWxsLCJDbGluaWNhbCBvYnNlcnZhdGlvbiBvZiBQaW5nd2VpIGNhcHN1bGUgaW4gdHJlYXRpbmcgZnVuY3Rpb25hbCBkeXNwZXBzaWEgd2l0aCBsaXZlciBzdGFnbmF0aW9uIGFuZCBzcGxlZW4gZGVmaWNpZW5jeSBhbmQgaXRzIGVmZmVjdCBvbiBDQ0ssIGdocmVsaW4iLEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgR2Fuc3UgVW5pdmVyc2l0eSBvZiBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM3MjQwMywyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixwaW1hdmFuc2VyaW4sMjUxNDgsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBwaGFzZSBJYi9JSSwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IGZvbGxvdy1vbiBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY1NiwyMDA0LTA2LTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDcxMjYsMjAwNy0wNi0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGF0aWVudHMgd2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2ODc5MCwyMDEwLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gRGVtZW50aWEtcmVsYXRlZCBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE3NjA2LDIwMTctMDktMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxFZmZlY3RpdmVuZXNzIFN0dWR5IG9mIFZpbGF6b2RvbmUgdG8gVHJlYXQgRGVwcmVzc2lvbiBhbmQgdG8gRGlzY292ZXIgR2VuZXRpYyBNYXJrZXJzIEFzc29jaWF0ZWQgV2l0aCBSZXNwb25zZSxHZW5haXNzYW5jZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NTQxLDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxFZmZlY3RzIG9mIDcgRGF5IFBydWNhbG9wcmlkZSBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzQ0NjI3LDIwMTgtMDYtMTEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCBub24tcmFuZG9taXplZCwgd2l0aGluLXN1YmplY3QsIG9uZS1zZXF1ZW5jZSwgY3Jvc3NvdmVyLCBkcnVnLWludGVyYWN0aW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBvdGVudGlhbCBwaGFybWFjb2tpbmV0aWMgaW50ZXJhY3Rpb24gb2Ygc3VtYXRyaXB0YW4gYW5kIGFuIG9yYWwgY29udHJhY2VwdGl2ZSB3aGVuIGNvLWFkbWluaXN0ZXJlZCB0byBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NjMsMjAwMC0wOC0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdGhyZWUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgZmFzdCBkaXNpbnRlZ3JhdGluZyBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0IGFkbWluaXN0ZXJlZCBpbiB0aGUgZmFzdGVkIGFuZCBmZWQgc3RhdGVzIGNvbXBhcmVkIHRvIHRoZSBjdXJyZW50bHkgbWFya2V0ZWQgc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldCBhZG1pbmlzdGVyZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgZm9vZCB0byBoZWFsdGh5IG1hbGUgYW5kIGZlbWFsZSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzY3NywyMDAyLTA3LTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tbGFiZWwsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgQmlvZXF1aXZhbGVuY2Ugb2YgNTAgYW5kIDEwMCBtZyBTdW1hdHJpcHRhbiBUYWJsZXRzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NDE5MiwxOTkzLTA3LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFBoYXNlIEksIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgQ3Jvc3NvdmVyIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEdSLTQzMTc1QyBBZnRlciBGb3VyIERpZmZlcmVudCBPcmFsIERvc2VzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NDE4NiwxOTg5LTA0LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIENyb3Nzb3ZlciBQaWxvdCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIEdSLTQzMTc1QyBvbiBHYXN0cmljIEVtcHR5aW5nIGluIEhlYWx0aHkgU3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzNzQ1LDE5ODktMDMtMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQW4gT3Blbi1sYWJlbCBTdHVkeSBvZiBFdmFsdWF0aW9uIG9mIHRoZSBBbmF0b21pYyBTaXRlIG9mIEFic29ycHRpb24gb2YgU3VtYXRyaXB0YW4gKEdSLTQzMTc1KSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzU5NiwxOTkyLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIENyb3Nzb3ZlciwgRG9zZS1maW5kaW5nLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSBUbyBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgQW5kIFBoYXJtYWNva2luZXRpY3MgT2YgU3VtYXRyaXB0YW4gSW4gSGVhbHRoeSBTdWJqZWN0cyAsZm9sbG93aW5nIEFzY2VuZGluZyBTaW5nbGUgSW50cmFuYXNhbCBEb3NlcyBBbmQgTXVsdGlwbGUgSW50cmFuYXNhbCBEb3NlcyIsUlRJIEludGVybmF0aW9uYWwsSW50ZXJ2ZW50aW9uYWwsMTA4MDc3LDE5OTctMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiAoYXV0b2luamVjdG9yLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw5NjI3OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxQaWxvdCBTdHVkeSBvZiBERk4tMTEgSW5qZWN0aW9uIGluIE1lZGljYXRpb24gT3ZlcnVzZSBIZWFkYWNoZSxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjQzNzQ2LDIwMTUtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsb3NlbW96b3Rhbiw5OTc4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJBIHBoYXNlIElJL0lJSSBjbGluaWNhbCBzdHVkeSBvZiBNTi0zMDUgKG9zZW1vem90YW4pLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgZ2VuZXJhbCBhbnhpZXR5IGRpc29yZGVyIixNZWRpY2lOb3ZhIEluYyxJbnRlcnZlbnRpb25hbCw3NDIwLDIwMDUtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCwiQSByYW5kb21pemVkLCBvcGVuLUxhYmVsLCBwcm9zcGVjdGl2ZSBzdHVkeSBvbiBlZmZlY3RpdmVuZXNzIGFuZCBzYWZldHkgb2YgdGhlIGFkZGl0aW9uIG9mIGFuZCBzd2l0Y2hpbmcgdG8gYXJpcGlwcmF6b2xlIGZvciByZXNvbHZpbmcgYW50aXBzeWNob3RpYy1pbmR1Y2VkIGh5cGVycHJvbGFjdGluZW1pYSIsTkhJQyBJbHNhbiBob3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyODMxNzUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEF1dGlzbSw0MjMsbnVsbCxJbXByb3ZpbmcgRHJpdmluZyBJbiBZb3VuZyBQZW9wbGUgV2l0aCBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNDA5NTEsMjAxOC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsRWFybHkgUGhhcm1hY290aGVyYXB5IEFpbWVkIGF0IE5ldXJvcGxhc3RpY2l0eSBpbiBBdXRpc20gOiBTYWZldHkgYW5kIEVmZmljYWN5LFdheW5lIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTcxOTYxLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGFuZCBtdWx0aXBsZSBkb3NlcyBvZiBQUlgtMDAwMjMgaW4gaGVhbHRoeSBzdWJqZWN0cyxQcmVkaXggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NzM4NywyMDA2LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzYsU01FQUMsTWV0YWJvbGljIEVmZmVjdHMgb2YgQW50aXBzeWNob3RpYyBTdWJzdGl0dXRpb24gaW4gQ2hpbGRyZW4sV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDU2OTcyLDIwMDktMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGluIFBhdGllbnRzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY3Mzg1LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSArIHNlcnRyYWxpbmUgKG9yYWwsIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIpLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwiLDg5OTgzLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQmlvZXF1aXZhbGVuY2UgQmV0d2VlbiBTaW5nbGUgQWRtaW5pc3RyYXRpb24gb2YgQVNDLTAxIChBcmlwaXByYXpvbGUvU2VydHJhbGluZSBDb21iaW5hdGlvbiBEcnVnKSBhbmQgQ29uY29taXRhbnQgU2luZ2xlIEFkbWluaXN0cmF0aW9uIG9mIEFyaXBpcHJhem9sZSBhbmQgU2VydHJhbGluZSwgYW5kIEZvb2QgRWZmZWN0IG9uIFBoYXJtYWNva2luZXRpY3Mgb2YgQVNDLTAxIGluIEhlYWx0aHkgTWFsZSBBZHVsdHMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE5NjEzLDIwMTctMTEtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN5bmRyb21lIFgsMTU4NSxudWxsLE9uZS1ZZWFyIFRyaWFsIE9mIE9yYWwgWmlwcmFzaWRvbmUgSW4gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzc4MiwyMDA4LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiBaaXByYXNpZG9uZSBIQ0wgQ2Fwc3VsZXMsIDIwIG1nIG9mIERyIFJlZGR5J3MgVW5kZXIgRmVkIENvbmRpdGlvbnMiLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTc2MjIsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsWmlwcmFzaWRvbmUgRGVjcmVhc2VzIENvcnRpc29sIEV4Y3JldGlvbiBpbiBIZWFsdGh5IFN1YmplY3RzLFVuaXZlcnNpdHkgb2YgR290dGluZ2VuLEludGVydmVudGlvbmFsLDE0NTM2NixudWxsLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYW5uYWJpcyBkZXBlbmRlbmNlLDMyODMsU1RvUC1DLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hpYXRyaWMgRGlzb3JkZXJzIGZvciBDYW5uYWJpcyxUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmcsSW50ZXJ2ZW50aW9uYWwsMzM0OTQzLDIwMTgtMDctMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29tcGFyYXRpdmUgc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBuYWx0cmV4b25lIGluIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFsY29ob2wgZGVwZW5kZW5jZSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw2MTc1NSwyMDA5LTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFN1YmplY3RzIFdpdGggQWxjb2hvbGlzbSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMzUxOSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLCJFdmFsdWF0aW9uIG9mIFNtYWxsIERvc2UgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIEFsY29ob2wgVXNlIERpc29yZGVyczogQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSIsQ2hpYmEgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTU1Mjk4LDIwMTMtMDktMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIHN5bXB0b20sMTk0MyxudWxsLEV4dGVuc2lvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBOZXVyb3BzeWNoaWF0cmljIFN5bXB0b21zIFJlbGF0ZWQgdG8gTmV1cm9kZWdlbmVyYXRpdmUgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDkzODYsMjAxOC0wNy0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBwaGFzZSBJSUliLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIsIHR3by1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgKDEwIG9yIDIwIG1nKSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBhbmQgd2l0aG91dCBhdXJhIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3MTI4LDIwMDEtMDEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUGFyYWxsZWwgU3R1ZHkgVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgMjUsIDUwIGFuZCAxMDAgbWcgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gaW4gU3ViamVjdHMgd2l0aCBBY3V0ZSBNaWdyYWluZSBBdHRhY2tzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjE3NywxOTg5LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgU3VtYXRyaXB0YW4gU3VwcG9zaXRvcmllcyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIFRocmVlIE1pZ3JhaW5lIEF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzODQ3LDE5OTMtMTAtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIGludHJhbmFzYWwgR1ItNDMxNzVOICgxLCA1LCAxMCwgMjAgYW5kIDQwIG1nKSBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIChvbmUgbm9zdHJpbCBhcHBsaWNhdGlvbikiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA1NjAwLDE5OTAtMDktMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4gPS1MYWJlbCwgUmFuZG9taXplZCwgVHdvLXdheSBDcm9zc292ZXIsIFR3by1zZXF1ZW5jZSwgVHdvLXBlcmlvZCwgVHdvLXRyZWF0bWVudCBTdHVkeSBvZiBNb3NhcHJpZGUgVGFibGV0IGluIEhlYWx0aHkgVGhhaSBWb2x1bnRlZXJzIixNYWhpZG9sIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjgwNTQ5LDIwMTctMDItMjUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGRvc2UgcHJvcG9ydGlvbmFsaXR5IG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgb3JhbCBkb3NlcyBvZiBtb3NhcHJpZGUgaW4gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsRGFpbmlwcG9uIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTU5NywxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwcm9raW5ldGljIGVmZmVjdCBvZiBBUy00MzcwIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIHVzaW5nIDk5bVRjLURUUEEiLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkzNjMsMTk5MS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXJtYWNva2luZXRpYyBwcm9wZXJ0aWVzIG9mIGxvcmNhc2VyaW4gaW4gc3ViamVjdHMgd2l0aCBoZXBhdGljIGltcGFpcm1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjE5NCwyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCxCaW9hdmFpbGFiaWxpdHksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGlsb3Qgc3R1ZHkgb2YgY29tcGFyYXRpdmUgYmlvYXZhaWxhYmlsaXR5IGJldHdlZW4gdHdvIGRydWdzIGZvciBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSBpbiBwcm9sb25nZWQtcmVsZWFzZSB0YWJsZXRzIHdpdGggMjAgbWcgaW4gaGVhbHRoeSBzdWJqZWN0cyB1bmRlciBmZWVkaW5nIGNvbmRpdGlvbnMsWnlkdXMgQ2FkaWxhIEhlYWx0aGNhcmUgTHRkLEludGVydmVudGlvbmFsLDMzODE5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQWJzb3JwdGlvbiwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIChBTUUpIG9mIFNpbmdsZSBEb3NlIFJhZGlvbGFiZWxlZCBQcnVjYWxvcHJpZGUgU3VjY2luYXRlIGluIFZvbHVudGVlcnMiLFNoaXJlIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwxMTUwMzUsMjAxMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFlMLTA5MTksOTA1MTMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVG8gRXhwbG9yZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBIeXBpZG9uZSBIeWRyb2NobG9yaWRlIFRhYmxldHMgaW4gVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggTURELCJDaGluZXNlIEFjYWRlbXkgb2YgTWVkaWNhbCBNaWxpdGFyeSBTY2llbmNlcywgU2hhbmdoYWkgU3luZXJneSBQaGFybWFjZXV0aWNhbCBTY2llbmNlcyBDbyBMdGQsIFpoZWppYW5nIEh1YWhhaSBQaGFybWFjZXV0aWNhbCBHcm91cCBDbyBMdGQiLEludGVydmVudGlvbmFsLDMyNjE3MSwyMDE4LTAxLTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LENBTVAsQ29tcGFyaXNvbiBvZiBBbnRpcHN5Y2hvdGljcyBmb3IgTWV0YWJvbGljIFByb2JsZW1zIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwzNjM2NywyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsSEVBTFRILEhlYWx0aCBFdmFsdWF0aW9uIG9mIEFiaWxpZnkgTG9uZy1UZXJtIFRoZXJhcHksT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNjMwMiwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEFQTFVTLCJBY3V0ZSBQc3ljaG9zaXMgVHJlYXRtZW50IGluIHRoZSBMb25nIFRlcm0sIFVuaXRhcnkgR3JvdXAgU3R1ZHkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU0NDIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBlb3BsZSBXaXRoIEZpcnN0LUVwaXNvZGUgUHN5Y2hvc2lzLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM1MjY4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMzQ1OTcsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBSYW5kb21pemVkIE9wZW4tbGFiZWwgU3R1ZHkgb2YgdGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGluIE92ZXJ3ZWlnaHQgYW5kIE9ic3RydWN0aXZlIFNsZWVwIEFwbmVhIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgU3dpdGNoZWQgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIERydWdzLEJpd2FrbyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMzYzOTcsMjAxMS0wNC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsVGhlIE1vbml0b3Igb2YgU2VydW0gUHJvbGFjdGluIExldmVsIGluIGEgMyBNb250aHMgQXJpcGlwcmF6b2xlIFRyaWFsLFl1LUxpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDEzOTkxLDIwMDYtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLFBoYXNlIElJIFN0dWR5IG9mIFZlbHVzZXRyYWcgaW4gRGlhYmV0aWMgb3IgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw5NjY2MywyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQix2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLERJR0VTVCwiVGhlIERpYWJldGljIGFuZCBJZGlvcGF0aGljIEdhc3Ryb3BhcmVzaXMgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IHN0dWR5IixUaGVyYXZhbmNlIEJpb3BoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjEzNTIzLDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSU1QQUNULFJlZHVjaW5nIFdlaWdodCBHYWluIGFuZCBJbXByb3ZpbmcgTWV0YWJvbGljIEZ1bmN0aW9uIGluIENoaWxkcmVuIEJlaW5nIFRyZWF0ZWQgV2l0aCBBbnRpcHN5Y2hvdGljcyAoSU1QQUNUKSxKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzgzMTgsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXJjb3RpYyBkZXBlbmRlbmNlLDY3MyxudWxsLFBzeWNob3BoYXJtYWNvbG9neSBmb3IgQ29jYWluZSBEZXBlbmRlbmNlIC0gQnVzcGlyb25lLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIEhvdXN0b24sSW50ZXJ2ZW50aW9uYWwsMTE2MDY3LDIwMTEtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBUd28gRml4ZWQtRG9zZXMgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVycyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDM4OSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLE9wZW4tTGFiZWwgU3R1ZHkgb2YgR2VvZG9uIGluIE5vbi1SYXBpZCBDeWNsaW5nIEJpcG9sYXIgSUkgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaW9uLFRoZSBNZWRpY2FsIFJlc2VhcmNoIE5ldHdvcmssSW50ZXJ2ZW50aW9uYWwsMzQ0NTIsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLExvcmNhc2VyaW4gaW4gdGhlIFRyZWF0bWVudCBvZiBDb2NhaW5lIFVzZSBEaXNvcmRlcixOYXRpb25hbCBJbnN0aXR1dGUgb24gRHJ1ZyBBYnVzZSxJbnRlcnZlbnRpb25hbCwyODQzNTYsMjAxNy0wNi0xOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsU3R1ZHkgdG8gQXNzZXNzIFBvdGVudGlhbCBJbnRlcmFjdGlvbnMgQmV0d2VlbiBJbnRyYXZlbm91cyBDb2NhaW5lIGFuZCBPcmFsIExvcmNhc2VyaW4sTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMjI1MDEyLDIwMTUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFRoZSBSb2xlIG9mIEFudGlkZXByZXNzYW50cyBvciBBbnRpcHN5Y2hvdGljcyBpbiBQcmV2ZW50aW5nIFBzeWNob3NpcyxTdCBMdWtlcyBSb29zZXZlbHQgSG9zcGl0YWwgQ2VudGVyLEludGVydmVudGlvbmFsLDk3NjM1LDIwMTItMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixURUEsVG9sZXJhbmNlIGFuZCBFZmZlY3Qgb2YgQW50aXBzeWNob3RpY3MgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggUHN5Y2hvc2lzLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDY2MjEwLDIwMTAtMDUtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyxDaG9uYnVrIE5hdGlvbmFsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjI0MjAsMjAwOS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUkVNRURZLEFzc2Vzc2luZyBhcHByb2FjaGVzIGFpbWVkIGF0IGltcHJvdmluZyBzZXh1YWwgZnVuY3Rpb25pbmcsSW1wZXJpYWwgQ29sbGVnZSBIZWFsdGhjYXJlIE5IUyB0cnVzdCxJbnRlcnZlbnRpb25hbCwzMzY5NDIsMjAxOC0wNS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAzXzFZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IE9uZS1ZZWFyIEZvbGxvdy1VcCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODU0NywyMDE0LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsQ09OU1RBVFJFLEEgU3R1ZHkgb2YgUmVsYXBzZSBQcmV2ZW50aW9uIGFuZCB0aGUgRWZmZWN0aXZlbmVzcyBvZiBMb25nLUFjdGluZyBJbmplY3RhYmxlIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIFRhYmxldHMgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaW96YWZmZWN0aXZlIERpc29yZGVyLEphbnNzZW4tQ2lsYWcgSW50ZXJuYXRpb25hbCBOViAoQkUpLEludGVydmVudGlvbmFsLDIwOTk4LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgRG91YmxlLWJsaW5kLCBSYW5kb21pemVkLCBDb250cm9sbGVkIFRyaWFsIG9mIEFyaXBpcHJhem9sZSB2ZXJzdXMgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQW1waGV0YW1pbmUtaW5kdWNlZCBQc3ljaG9zaXMiLEtlcm1hbnNoYWggVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE3MTcwOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFpBQywiSW1wcm92aW5nIE1ldGFib2xpYyBQYXJhbWV0ZXJzIG9mIEFudGlwc3ljaG90aWMgQ2hpbGQgVHJlYXRtZW50IFdpdGggWmlwcmFzaWRvbmUsIEFyaXBpcHJhem9sZSwgYW5kIENsb3phcGluZSIsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwxNzAwNjAsMjAwNy0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsT24gdGhlIHF1ZXN0aW9uIG9mIG5ldXJvbGVwdGljLWluZHVjZWQgbWV0YWJvbGljIHN5bmRyb21lLlN0dWR5IDE6IEZhdCBkaXN0cmlidXRpb24gYW5kIHNwZWNpZmljIGhvcm1vbmFsIHBhcmFtZXRlcnMuIEEgcHJvc3BlY3RpdmUgY29tcGFyYXRpdmUgc3R1ZHkgb2YgZml2ZSBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzkyMTAsMjAwNi0wOS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTAzMzgyNzkyLDY1Mzc0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmlkZW50aWZpZWQgaW5kaWNhdGlvbiwxMDA1LG51bGwsQSBTdHVkeSBUbyBMb29rIEF0IFNhZmV0eSBBbmQgQmxvb2QgQ29uY2VudHJhdGlvbnMgQWZ0ZXIgTXVsdGlwbGUgRG9zZXMgT2YgUEYtMDMzODI3OTIgSW4gSGVhbHRoeSBFbGRlcmx5IEluZGl2aWR1YWxzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ5NjEsMjAxMC0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbm9yZXhpYSBuZXJ2b3NhLDI0LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24gZm9yIE91dHBhdGllbnRzIFdpdGggQW5vcmV4aWEgTmVydm9zYSxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzEzNTEsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNsZWVwIGRpc29yZGVyLDMwNCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdHJlYXRpbmcgcGF0aWVudHMgd2l0aCBkZWxheWVkIHNsZWVwIHBoYXNlIHN5bmRyb21lIGFuZCBoeXBlcnNvbW5vbGVuY2UgZGlzb3JkZXIsQWtpdGEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQ1OTEsMjAxNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LEhFRE5ldDIsQW4gUkNUIHRvIENvbXBhcmUgTmFwcm94ZW4gdG8gU3VtYXRyaXB0YW4gZm9yIEhlYWRhY2hlIFBhdGllbnRzIERpc2NoYXJnZWQsTW9udGVmaW9yZSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCw2ODYwNywyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxQcmV0cmVhdG1lbnQgV2l0aCBTdW1hdHJpcHRhbiBvbiBDaWxvc3Rhem9sLUluZHVjZWQgSGVhZGFjaGUgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjk4MzUwLDIwMTctMDUtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2ZWx1c2V0cmFnLDU0Njg4LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcGhhc2UgSSwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgZWZmaWNhY3kgb2YgdmVsdXNldHJhZyBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgY29uc3RpcGF0aW9uIChDQykgY29tcGFyZWQgd2l0aCBoZWFsdGh5IHZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCw1ODk2OSwyMDA5LTA2LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsRGVwcmVzc2lvbi1Db2cgVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIENvZ25pdGl2ZSBJbXBhaXJtZW50OiBBIFByb3NwZWN0aXZlIENvbXBhcmF0aXZlIFN0dWR5LCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjgyMjM1LDIwMTYtMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsWmlwcmFzaWRvbmUgZm9yIEltcHJvdmluZyBJbnN1bGluIFNlbnNpdGl2aXR5IGluIFBlb3BsZSBXaXRoIFNjaGl6b3BocmVuaWEgV2hvIEFyZSBhdCBSaXNrIGZvciBEaWFiZXRlcyxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTgyMTcsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFRyaWFsIFRvIEV2YWx1YXRlIEFic29ycHRpb24sIERpc3Bvc2l0aW9uLCBNZXRhYm9saWMgRmF0ZSwgYW5kIEVsaW1pbmF0aW9uIG9mIFRoZSBEb3BhbWluZSBBZ29uaXN0IFJvdGlnb3RpbmUgaW4gTWFuOiBBZG1pbmlzdHJhdGlvbiBieSBJbnRyYXZlbm91cyBJbmZ1c2lvbiBvciBUcmFuc2Rlcm1hbCBEZWxpdmVyeSIsVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsMTQ0MTE2LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixUQUstOTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFYXRpbmcgZGlzb3JkZXIsMTA2LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgYSBTaW5nbGUtRG9zZSBvZiBJbnRyYXZlbm91cyBURC04OTU0IENvbXBhcmVkIFdpdGggTWV0b2Nsb3ByYW1pZGUgaW4gQ3JpdGljYWxseSBJbGwgUGF0aWVudHMgV2l0aCBFbnRlcmFsIEZlZWRpbmcgSW50b2xlcmFuY2UiLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxNTYxNDcsMjAxNC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxUQUstOTU0LDYwMjkyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUmVuYWwgZmFpbHVyZSw2OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBSZW5hbCBJbXBhaXJtZW50IGFuZCBEaWFseXNpcyBUcmVhdG1lbnQgb24gdGhlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBvZiBhIFNpbmdsZSBJbnRyYXZlbm91cyAoSVYpIFRBSy05NTQsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTQzMjQsMjAxNy0xMS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSA0LXdlZWssIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZCwgb3Blbi1sYWJlbCwgcGFyYWxsZWwgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSB2ZXJzdXMgY2xvemFwaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgcHN5Y2hvdGljIHN5bXB0b21zIGluIFBhcmtpbnNvbiBkaXNlYXNlIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NjEwLDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIDI0LWggc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIHRoZSBhY3V0ZSBjb250cm9sIGFuZCBzaG9ydC10ZXJtIG1hbmFnZW1lbnQgb2YgYWdpdGF0ZWQgcHN5Y2hvdGljIHBhdGllbnRzIixDb21wcmVoZW5zaXZlIE5ldXJvU2NpZW5jZSBJbmMsSW50ZXJ2ZW50aW9uYWwsNzU2NjYsMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU2FmZXR5IEFuZCBFZmZpY2FjeSBTdHVkeSBPZiBaaXByYXNpZG9uZSBJbiBQZWRpYXRyaWMgUHN5Y2hvdGljIElsbG5lc3MsTWVkaWNhbCBDb2xsZWdlIG9mIFdpc2NvbnNpbixJbnRlcnZlbnRpb25hbCwzMjg1OCwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBzdHVkeSBvZiB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwc3ljaG9zaXMgaW4gcGF0aWVudHMgd2hvIGhhZCBhbHJlYWR5IGhhZCBiZW5lZml0cyBmcm9tIHppcHJhc2lkb25lIHRyZWF0bWVudCBpbiBhIHByZXZpb3VzIHN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjE0MDcsMjAwMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBuZXVyb2xlcHRpYy1pbmR1Y2VkIG1ldGFib2xpYyBzeW5kcm9tZS5TdHVkeSAxOiBGYXQgZGlzdHJpYnV0aW9uIGFuZCBzcGVjaWZpYyBob3Jtb25hbCBwYXJhbWV0ZXJzLiBBIHByb3NwZWN0aXZlIGNvbXBhcmF0aXZlIHN0dWR5IG9mIGZpdmUgYXR5cGljYWwgYW50aXBzeWNob3RpY3MsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTM5MjEwLDIwMDYtMDktMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBwcm9zcGVjdGl2ZSBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFjdXB1bmN0dXJlIHZlcnN1cyB2YWxwcm9pYyBhY2lkIGluIHRoZSBwcm9waHlsYXhpcyBvZiBtaWdyYWluZSB3aXRob3V0IGF1cmEsVW5pdmVyc2l0eSBvZiBQYWRvdmEsSW50ZXJ2ZW50aW9uYWwsMTU3MTMwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVzb3BoYWdlYWwgZGlzZWFzZSwyNDIsbnVsbCxFZmZlY3Qgb2YgbW9zYXByaWRlIG9uIFVFUyxTaGltYW5lIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjcxMzk2LDIwMTYtMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIG9uIENvY2FpbmUgQ3JhdmluZyBhbmQgU2VsZi1BZG1pbmlzdHJhdGlvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzQwNjcsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYmVwaHJlbmljIHNjaGl6b3BocmVuaWEsMTkzMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgcHJvcHJhbm9sb2wgcGx1cyBmcm92YXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixWZXJuYWxpcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMTA5NzI2LDE5OTktMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLFNhZmV0eSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHkgb2YgZnJvdmF0cmlwdGFuIHBsdXMgZXJnb3RhbWluZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLFZlcm5hbGlzIHBsYyxJbnRlcnZlbnRpb25hbCwxMDk3MTcsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgTW9zYXByaWRlIGZvciBHRVJEIFBhdGllbnRzIFdpdGggU2xlZXAgRGlzb3JkZXJzLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNjIxNTUsMjAxMy0xMS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUmFuZG9taXplZCwgUGFyYWxsZWwtR3JvdXAsIFNpbmdsZS1BdHRhY2sgYW5kIElucGF0aWVudCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBGaXZlIERvc2UgTGV2ZWxzIG9mIFN1bWF0cmlwdGFuIFN1cHBvc2l0b3JpZXMgKDYsIDEyLjUsIDI1LCA1MCBhbmQgMTAwIG1nKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggYW5kIFdpdGhvdXQgQXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDY4NTEsMTk5Mi0xMC0wOCAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgU2luZ2xlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIE5vbi1SYW5kb21pemVkLCBDcm9zcy1vdmVyLCBTaW5nbGUtQXR0YWNrLCBJbnBhdGllbnQsIFR3by1QYXJ0IFN0dWR5IHRvIFJlY2hhbGxlbmdlIFdpdGggc2MgR1ItNDMxNzVDLCBQYXRpZW50cyBXaG8gSGFkIFByZXZpb3VzbHkgRXhwZXJpZW5jZWQgYW4gQWR2ZXJzZSBFdmVudCBJbnZvbHZpbmcgRGlzY29tZm9ydCBvciBQYWluIGluIHRoZSBDaGVzdCBGb2xsb3dpbmcgR1ItNDMxNzVDIEFkbWluaXN0cmF0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDIwMjAyNCwxOTkwLTEyLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY3kgU3R1ZHkgb2YgTmFyYXRyaXB0YW4gSHlkcm9jaGxvcmlkZSAyLjUgbWcgVW5kZXIgRmVkIENvbmRpdGlvbnMsV2VzdC1XYXJkIENvbHVtYnVzLEludGVydmVudGlvbmFsLDE3ODI4NiwyMDA3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsVHJleGltZXQgKEZvcm1lcmx5IEtub3duIGFzIFRyZXhpbWEpIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIFByb2JhYmxlIE1pZ3JhaW5lLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQwNDksMjAwNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJFbGV0cmlwdGFuIHZlcnN1cyBTdW1hdHJpcHRhbjogQSBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgTXVsdGlwbGUgTWlncmFpbmUgQXR0YWNrIFN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTY4OCwxOTk2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFuY3JlYXRpdGlzLDI1MCxudWxsLFRoZSBDbGluaWNhbCBTdHVkeSBvZiBBY3V0ZSBQYW5jcmVhdGl0aXMgVHJlYXRlZCBieSBUb25nRnVTYW4sQmVpamluZyBGcmllbmRzaGlwIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwNjk4MSwyMDE0LTAzLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIGNvbXBhc3Npb25hdGUgcHJvdG9jb2wgb2YgemlwcmFzaWRvbmUgZm9yIHBhdGllbnRzIHdobyBoYWQgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhIHByZXZpb3VzIHppcHJhc2lkb25lIHN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODkzMTAsMjAwMC0wNy0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElWLCBtdWx0aWNlbnRlciwgNi13ZWVrLCBvcGVuLWxhYmVsLCBub24tY29tcGFyYXRpdmUsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgZXhhY2VyYmF0aW9uIG9mIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NDAyLDIwMDItMDktMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcGhhc2UgSUksIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBleGFjZXJiYXRpb24gb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0ODQsMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMDIsMjAwMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmZWN0IGFuZCBzYWZldHkgb2YgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gb3RoZXIgYXR5cGljYWwgYW50aS1wc3ljaG90aWMgZHJ1ZyBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExMjAsMjAwMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBc3BlcmdlcnMgYW5kIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVyLEluZGlhbmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzA5NzAsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNwaW5hbCBjb3JkIGluanVyeSwxMjU4LG51bGwsIlN0dWR5IHRvIEFzc2VzcyBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgTVREIG9mIGEgQ2VudHJhbCBQYXR0ZXJuIEdlbmVyYXRvci1hY3RpdmF0aW5nIFRyaXRoZXJhcHkgKFNwaW5hbG9uKSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3BpbmFsIENvcmQgSW5qdXJ5IixOb3JkaWMgTGlmZSBTY2llbmNlIFBpcGVsaW5lIEluYyxJbnRlcnZlbnRpb25hbCw4MzEwOSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTXVsdGlwbGUgRG9zZXMgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMDk1MzAsMjAxNy0wOC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzAxMjk0LDIwMTctMDYtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLFBydWNhbG9wcmlkZSBUcmVhdG1lbnQgZm9yIFJlZnJhY3RvcnkgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSxVbml2ZXJzaXRhaXJlIFppZWtlbmh1aXplbiBMZXV2ZW4sSW50ZXJ2ZW50aW9uYWwsMzUzODAwLDIwMTgtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzdGhtYSwzMSxudWxsLFRyZWF0aW5nIENhcmVnaXZlciBEZXByZXNzaW9uIHRvIEltcHJvdmUgQ2hpbGRob29kIEFzdGhtYTogSW1wYWN0IGFuZCBNZWRpYXRvcnMsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjYzOTcwLDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLENvbXBhcmUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgdGhlIENvbWJpbmF0aW9uIG9mIEFyaXBpcHJhem9sZSBhbmQgU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIChTU1JJcykgVXNlZCBpbiBNYWpvciBEZXByZXNzaW9uLENoaS1NZWkgTWVkaWNhbCBDZW50ZXIgT2YgVGFpd2FuLEludGVydmVudGlvbmFsLDUwNjYwLDIwMDctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLE9QVElNVU0sT3B0aW1pemluZyBPdXRjb21lcyBvZiBUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24gaW4gT2xkZXIgQWR1bHRzLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwyNzg4MjksMjAxNy0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRocm9tYm9zaXMsMTA3NixudWxsLCJTaW5nbGUtRG9zZSwgU2FmZXR5IFN0dWR5IG9mIEFQRC03OTEgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM2NTQxLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEFiaWxpZnkgVGhlcmFweSBmb3IgUmVkdWNpbmcgQ29tb3JiaWQgU3Vic3RhbmNlIEFidXNlLENyZWlnaHRvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTA1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHJlbnphcHJpZGUsNDIxMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgbXVsdGktY2VudHJlLCBwbGFjZWJvLWNvbnRyb2wsIHNpbmdsZSBibGluZCB0cmlhbCB3YXMgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCB0b2xlcmFiaWxpdHkgYW5kIHNhZmV0eSBvZiBBVEwtMTI1MSBpbiBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIHBhdGllbnRzIixTbWl0aEtsaW5lIEJlZWNoYW0gcGxjLEludGVydmVudGlvbmFsLDIwMjk0LDIwMDAtMDMtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJlbnphcHJpZGUsNDIxMSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2wsIGRvc2UtcmFuZ2luZyBzdHVkeSB3YXMgdG8gYXNzZXNzIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIHJlbnphcHJpZGUgaW4gY29uc3RpcGF0aW9uLXByZWRvbWluYW50IElCUyBwYXRpZW50cyIsU21pdGhLbGluZSBCZWVjaGFtIHBsYyxJbnRlcnZlbnRpb25hbCwyMDI3NywyMDAyLTA0LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChpbnRyYW5hc2FsLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw3Mzc0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHRocmVlLXdheSwgc2luZ2xlLWRvc2UsIHJhbmRvbWl6ZWQsIGNyb3NzLW92ZXIgc3R1ZHkgb24gdGhlIHBoYXJtYWNva2luZXRpYyBjaGFyYWN0ZXJpemF0aW9uIGFuZCBkb3NlIHNlbGVjdGlvbiBvZiBhIG5vdmVsIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGZvcm11bGF0aW9uLCBERk4tMDIiLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjY1MzUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBtb3RpbGl0eSBkaXNvcmRlciwzNzk3LG51bGwsVGltaW5nIG9mIGFkbWluaXN0cmF0aW9uIG9mIG1vc2FwcmlkZSBvbiBmZWVkaW5nIGludG9sZXJhbmNlIGluIFRCSSBwYXRpZW50cyxUaGlyZCBNaWxpdGFyeSBNZWRpY2FsIFVuaXZlcnNpdHkgb2YgdGhlIENoaW5lc2UgUExBLEludGVydmVudGlvbmFsLDM3MTMxMywyMDE5LTAyLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU29jaWFsIHBob2JpYSwzMTUwLG51bGwsVm9ydGlveGV0aW5lIFZlcnN1cyBQbGFjZWJvIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgQ29tb3JiaWQgV2l0aCBTb2NpYWwgQW54aWV0eSBEaXNvcmRlcixUaGUgTWVkaWNhbCBSZXNlYXJjaCBOZXR3b3JrLEludGVydmVudGlvbmFsLDIxNjI1MCwyMDE0LTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnRlbnNpb24sMTc4LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxudWxsLERldG94aWZpY2F0aW9uIGFuZCBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBNZWRpY2F0aW9uIE92ZXJ1c2UgSGVhZGFjaGUsIk5ldyBFbmdsYW5kIENlbnRlciBmb3IgSGVhZGFjaGUsIFAuQy4iLEludGVydmVudGlvbmFsLDE0NDcyLDIwMDctMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxyZW56YXByaWRlLDQyMTEsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLEEgY2FyZGlhYyBzYWZldHkgdHJpYWwgb2YgcmVuemFwcmlkZSBpbiBwYXRpZW50cyB3aXRoIGdhc3Ryb3BhcmVzaXMsRW5kb0xvZ2ljIExMQyxJbnRlcnZlbnRpb25hbCwzMzk3MDAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBlb3BsZSBXaXRoIEZpcnN0LUVwaXNvZGUgUHN5Y2hvc2lzLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM1MjY4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsIkEgMjYtV2VlaywgUHJvc3BlY3RpdmUgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIExvbmctVGVybSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEsIFNjaGl6b3BocmVuaWZvcm0gRGlzb3JkZXIsIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE0NDQ5NSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGVzIG1lbGxpdHVzLDk3LG51bGwsRWZmZWN0IG9mIHRlZ2FzZXJvZCBvbiBnYXN0cmljIGVtcHR5aW5nIGluIHBhdGllbnRzIHdpdGggZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw5NDEwLDIwMDctMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXVzZWEsMjI2LFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJ6b2xtaXRyaXB0YW4gKGluaGFsYXRpb24gcG93ZGVyLCBtaWdyYWluZSksIEFjb3JkYSIsOTQ2MzksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3RobWEsMzEsbnVsbCxBIFN0dWR5IG9mIHRoZSBQdWxtb25hcnkgU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFpvbG1pdHJpcHRhbiBJbmhhbGF0aW9uIFBvd2RlcixBY29yZGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwyNzE4ODgsMjAxNi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFZhc2N1bGFyIGRlbWVudGlhLDE2MzQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsQWN1dGUgSW1wYWN0IG9mIEludHJhbXVzY3VsYXIgKElNKSBBcmlwaXByYXpvbGUgYW5kIE9sYW56YXBpbmUgb24gSW5zdWxpbiBSZXNpc3RhbmNlIGluIEhpZ2ggUmlzayBQcmVkaWFiZXRpY3MsVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE5MjE0MiwyMDA5LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcGlsb3QsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcGFyb3hldGluZSBhdWdtZW50ZWQgd2l0aCByaXNwZXJpZG9uZSwgdmFscHJvYXRlLCBidXNwaXJvbmUsIHRyYXpvZG9uZSwgb3IgdGh5cm9pZCBob3Jtb25lIGluIGFkdWx0IENoaW5lc2UgcGF0aWVudHMgd2l0aCB0cmVhdG1lbnQtcmVzaXN0YW50IG1ham9yIGRlcHJlc3Npb24iLCJBc3RyYVplbmVjYSBwbGMsIE1pbmlzdHJ5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgb2YgdGhlIFBlb3BsZbRzIFJlcHVibGljIG9mIENoaW5hLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgTmF0aW9uYWwgTmF0dXJhbCBTY2llbmNlIEZvdW5kYXRpb24gb2YgQ2hpbmEsIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgQ29tbWlzc2lvbiBvZiBTaGFuZ2hhaSBNdW5pY2lwYWxpdHkiLEludGVydmVudGlvbmFsLDgxMDg5LDIwMTEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlBpbG90IHN0dWR5IG9mIHNpbmdsZS1kb3NlIG9yYWwgYmlvZXF1aXZhbGVuY2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLCB0d28tdHJlYXRtZW50cywgdHdvLXNlcXVlbmNlcywgdHdvLXBlcmlvZHMsIGNyb3NzZWQgb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIG9mIDIwIG1nIGluIGV4dGVuZGVkIHJlbGVhc2UgdGFibGV0cyBvZiBMdXBpbmUgTGltaXRlZCwgSW5kaWEgY29tcGFyZWQgd2l0aCB0aGUgYWRtaW5pc3RyYXRpb24gb2YgQmVsdmlxIFhSIChMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUpIG9mIDIwIG1nIGluIGV4dGVuZGVkIHJlbGVhc2UgdGFibGV0cyBmcm9tIEFyZW5hIFBoYXJtYWNldXRpY2FscyBHbWJoLCBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMgb2YgdGhlIG1hbGUgZ2VuZGVyIGluIHRoZSBwb3N0cHJhbmRpYWwgc3RhdGUiLCJMYWJvcmF0b3Jpb3OgR3JpbiwgTHVwaW4gTHRkIixJbnRlcnZlbnRpb25hbCwzNDc2ODksMjAxNy0wMi0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT256ZXRyYSBYc2FpbCAoU3VtYXRyaXB0YW4gTmFzYWwgUG93ZGVyKSBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBFcGlzb2RpYyBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSBpbiBBZG9sZXNjZW50cyxBdmFuaXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTkyMTcsMjAxNy0xMS0wMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxIaWdoLURvc2UgTHVyYXNpZG9uZSBmb3IgUGF0aWVudHMgV2l0aCBUcmVhdG1lbnQtUmVzaXN0YW50IFNjaGl6b3BocmVuaWEsTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsODYyMDYsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLWNvbnRyb2xsZWQsIFBvc3QtbWFya2V0aW5nLCBHZW5ldGljIEFzc29jaWF0aW9uIFN0dWR5IG9uIEluZGl2aWR1YWwgRGlmZmVyZW5jZSBvZiBUaGVyYXBldXRpYyBFZmZlY3RzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbiIsIk1pbmlzdHJ5IG9mIEhlYWx0aCBvZiB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEsIFBla2luZyBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCw5ODc3MiwyMDA4LTAxLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi1tb250aCwgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGNvbXBhcmF0aXZlIGVmZmVjdGl2ZW5lc3Mgb2Ygc3dpdGNoaW5nIGFudGlwc3ljaG90aWMgZHJ1ZyB0cmVhdG1lbnQgdG8gYXJpcGlwcmF6b2xlIG9yIHppcHJhc2lkb25lIGZvciBpbXByb3ZpbmcgbWV0YWJvbGljIHByb2ZpbGUgYW5kIGF0aGVyb2dlbmljIGR5c2xpcGlkZW1pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBDZXBoYWxvbiBJbmMsIEVsaSBMaWxseSAmIENvLCBKb2huc29uICYgSm9obnNvbiwgTWVyY2sgJiBDbyBJbmMsIE5hdGlvbmFsIEFsbGlhbmNlIGZvciBSZXNlYXJjaCBvbiBTY2hpem9waHJlbmlhIGFuZCBEZXByZXNzaW9uLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBQZml6ZXIgSW5jLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTcxMTQsMjAxMi0wMS0wOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgYWN0aXZlLWNvbnRyb2wgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmZWN0cyBvZiB6aXByYXNpZG9uZSBhbmQgb2xhbnphcGluZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvcGhyZW5pYyBkaXNvcmRlciwgcHJldmlvdXNseSB0cmVhdGVkIHdpdGggYSB0eXBpY2FsIG5ldXJvbGVwdGljIGRydWcgKGZsdXBoZW5hemluZSkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2ODcsMjAwMC0wNC0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSUksIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIHByZS10cmVhdGVkIG9yIHVudHJlYXRlZCBzdWJqZWN0cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVycywgb3ZlciAxMiB3ZWVrcyB3aXRoIGFuIGV4dGVuc2lvbiBwaGFzZSBvZiB1cCB0byA2IG1vbnRocyBmb3IgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYwNTksMjAwMS0wNy0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gOC13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGFjdGl2ZS1jb250cm9sbGVkLCBoZWFkLXRvLWhlYWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIHJpc3Blcmlkb25lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU3MiwxOTk1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgSW4gUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24iLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU3NjQsMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFBhdGllbnRzIFdobyBXZXJlIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsT2xhbnphcGluZSBWZXJzdXMgQWN0aXZlIENvbXBhcmF0b3IgaW4gdGhlIFRyZWF0bWVudCBvZiBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMzg1NSwyMDAxLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksNSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgUm9sZSBvZiBtaVItMzAgRmFtaWx5IER5c3JlZ3VsYXRpb24gaW4gUmVzcG9uc2UgdG8gQW50aXBzeWNob3RpYyBUcmVhdG1lbnQsU2hhbnhpIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNTA1NDYsMjAxMy0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkNvbXBhcmlzb24gb2YgbWV0YWJvbGljIHNpZGUtZWZmZWN0IG9mIG9sYW56YXBpbmUgb3IgemlwcmFzaWRvbmUgbW9ub3RoZXJhcHksIHppcHJhc2lkb25lIHJlcGxhY2VtZW50IGFuZCB6aXByYXNpZG9uZSBqb2ludCBvbGFuemFwaW5lIHRyZWF0bWVudCBvbiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEgbGlrZSBwYXRpZW50cyAtIGFuIG9wZW4sIGNvbnRyb2xsZWQgc3R1ZHkiLFhpamluZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNDgzMDUsMjAxNS0xMC0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgc3R1ZHkgb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmFtdXNjdWxhciB6aXByYXNpZG9uZSBmb2xsb3dlZCBieSBvcmFsIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNob3NpcyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIxNDEzLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksS2FobiwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgdmVyc3VzIG9sYW56YXBpbmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmVjZW50LW9uc2V0IHBzeWNob3NpczsgQSBmbGV4aWJsZS1kb3NlLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIwOTY5LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgT2YgRG9uZXBlemlsIEFkanVuY3RpdmUgVHJlYXRtZW50IFRvIFppcHJhc2lkb25lIE9uIENvZ25pdGl2ZSBEZWZpY2l0cyBJbiBTY2hpem9waHJlbmlhIixCaXNwZWJqZXJnIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NzU0MixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJyYWluIEFjdGl2YXRpb24gRHVyaW5nIE1lbW9yeSBUYXNrcyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgVW5kZXIgVHJlYXRtZW50IG9mIFJpc3Blcmlkb25lIG9yIFppcHJhc2lkb25lLiBBIEZNUlQgSW52ZXN0aWdhdGlvbiwiUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiwgVW5pdmVyc2l0eSBIb3NwaXRhbCwgQWFjaGVuIixJbnRlcnZlbnRpb25hbCwxMzE2MjMsMjAwNi0wMS0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgdG8gQ29tcGFyZSB0aGUgRWZmaWNhY3kgb2YgWmlwcmFzaWRvbmUgKFplbGRveCkgYW5kIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgb24gQ29nbml0aXZlIEZ1bmN0aW9uaW5nIGFuZCBRdWFsaXR5IG9mIFNsZWVwIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYyBQYXRpZW50cyxMdWR3aWctTWF4aW1pbGlhbnMgVW5pdmVyc2l0eSBvZiBNdW5pY2gsSW50ZXJ2ZW50aW9uYWwsMTI5ODA2LDIwMDctMTItMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIDIxLWRheSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgcmVwbGljYXRpb24gdHJpYWwgb2YgemlwcmFzaWRvbmUgaW4gYWN1dGUgYmlwb2xhciBtYW5pYSIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCw3MDM1MiwyMDA1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI0NTksMjAwMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBQcm9zcGVjdGl2ZSwgT3Blbi1MYWJlbCBUcmVhdG1lbnQgVHJpYWwgb2YgWmlwcmFzaWRvbmUgTW9ub3RoZXJhcHkgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggQmlwb2xhciBEaXNvcmRlciIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0NTUwNyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgMjEtZGF5LCBwaGFzZSBJSUksIG11bHRpY2VudGVyLCBpbi1wYXRpZW50LCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGJpcG9sYXIgbWFuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM1NTMsMjAwMi0wNC0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQSAzLVdlZWsgU3R1ZHkgdG8gRXZhbHVhdGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBXaXRoIEVpdGhlciBMaXRoaXVtIG9yIERpdmFscHJvZXggaW4gQWN1dGVseSBNYW5pYyBTdWJqZWN0cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzOTIzLDIwMDYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IE9mIEZsZXhpYmxlIERvc2VzIE9mIE9yYWwgWmlwcmFzaWRvbmUgSW4gQ2hpbGRyZW4gQW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBPciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2NjQ1NCwyMDEwLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxHZW9kb24gaW4gV2VpZ2h0IExvc3MgU3R1ZHkgZm9yIEJpcG9sYXIgRGlzb3JkZXJzLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMTEsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJSUksIGRvdWJsZS1ibGluZCwgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtb2RlcmF0ZSBkZXByZXNzaW9uIixGYWJyZSBLcmFtZXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0NTk0MiwyMDA1LTA2LTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1OTE5LDIwMDMtMDUtMTcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQW4gOC13ZWVrLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgZGVwcmVzc2lvbiIsIkdsYXhvU21pdGhLbGluZSBwbGMsIFN1bW1pdCBSZXNlYXJjaCBOZXR3b3JrLCBJbmMiLEludGVydmVudGlvbmFsLDQ1OTI5LDIwMDMtMDUtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgdW5jb250cm9sbGVkLCBvcGVuLWxhYmVsIG11bHRpLWF0dGFjayBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gYXMgc2hvcnQtdGVybSBwcm9waHlsYWN0aWMgdHJlYXRtZW50IGZvciBtZW5zdHJ1YWxseS1hc3NvY2lhdGVkIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NjIwLDIwMDAtMDMtMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJYiwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBwaWxvdCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIG5hcmF0cmlwdGFuIGluIHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgb2YgcHVyZSBtZW5zdHJ1YWwgbWlncmFpbmUgYXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU0MywyMDAwLTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3RzIG9mIG5hcmF0cmlwdGFuIGluIHRoZSBjb252ZXJzaW9uIG9mIGEgY2hyb25pYyBkYWlseSBoZWFkYWNoZSBwYXR0ZXJuIGNvbnNpc3RlbnQgd2l0aCB0cmFuc2Zvcm1lZCBtaWdyYWluZSB0byBhbiBlcGlzb2RpYyBtaWdyYWluZSBwYXR0ZXJuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3Mjk3LDE5OTgtMDQtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLXJhbmdpbmcsIG91dHBhdGllbnQsIHNpbmdsZS1hdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZm91ciBkb3NlcyBvZiBuYXJhdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIGEgc2luZ2xlIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1OSwxOTk1LTA3LTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIG9jdWxhciBlZmZlY3RzIG9mIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgZmVtYWxlIHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MjQ0LDE5OTYtMDItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiB2ZXJzdXMgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTYxNzAsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBDcm9zc292ZXIsIERvdWJsZS1ibGluZCwgQ29tcGFyYXRpdmUgU3R1ZHkgb2YgTmFyYXRyaXB0YW4gYW5kIE5hcHJveGVuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEVyYXNtdXMgVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBSb3R0ZXJkYW0sSW50ZXJ2ZW50aW9uYWwsMTE0NDM4LDIwMDMtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ29tcGFyYXRpdmUsIERvc2UtZmluZGluZywgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSwgRWZmaWNhY3kgQW5kIEVhcmx5IENsaW5pY2FsIEV4cGVyaWVuY2UgV2l0aCBTdWJjdXRhbmVvdXMgTmFyYXRyaXB0YW4gSW4gVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsR2xheG8gV2VsbGNvbWUgUmVzZWFyY2ggYW5kIERldmVsb3BtZW50IEx0ZCxJbnRlcnZlbnRpb25hbCwxMDc0MjYsMTk5OC0wOS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUtYmxpbmQsIDItd2VlayBwcm9vZiBvZiBjb25jZXB0IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHF1YWxpdHkgb2YgbGlmZSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgREEtOTcwMSBhbmQgbW9zYXByaWRlIixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDE3NjQyLDIwMDgtMDMtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJDb29wZXJhdGl2ZSBHcm91cCBmb3IgQ2xpbmljYWwgUmVzZWFyY2ggaW4gRy1QT0VNIChQT1ApLCBKaWFuZ3N1LCBDaGluYSIsVGhlIEFmZmlsaWF0ZWQgWmhvbmdkYSBIb3NwaXRhbCBvZiBTb3V0aGVhc3QgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyODc0ODMsMjAxNy0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmVjdCBvZiBtb3NhcHJpZGUgd2l0aCBlc29tZXByYXpvbGUgaW4gaW1wcm92aW5nIGVzb3BoYWdlYWwgcGVyaXN0YWx0aWMgZnVuY3Rpb24gaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIixEYWV3b29uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM5MzczLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx4YWxpcHJvZGVuLDQ0NzQsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxOZXVyb3BhdGh5LDY3OCxudWxsLEFuIGV4cGxvcmF0b3J5IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuIGluIGVsaW1pbmF0aW5nIGNoZW1vdGhlcmFweS1pbmR1Y2VkIG5ldXJvcGF0aHkgaW4gcGF0aWVudHMgd2l0aCBjb2xvcmVjdGFsIGNhbmNlcixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDgsMjAwNy0wMi0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIlByZS1FbXB0aXZlIE9yYWwgR1ItNDMxNzVDIFRyZWF0bWVudCBEdXJpbmcgYSBDbHVzdGVyIEhlYWRhY2hlIFBlcmlvZCCWICgxMDAgbWcgdGlkIGZvciA3IERheXMpIJYgYSBEb3VibGUtQmxpbmQsIFBhcmFsbGVsLUdyb3VwLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU4NzgxLDE5OTEtMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IGluIFN1YmplY3RzIFdpdGggQWN1dGUgTWlncmFpbmVzIEhlYWRhY2hlcyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw5MzkyNywyMDA4LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgb3V0cGF0aWVudCwgc2luZ2xlIGF0dGFjayBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiB0YWJsZXRzIDUwIGFuZCAxMDAgbWcgdmVyc3VzIHBsYWNlYm8gZHVyaW5nIGEgbWlncmFpbmUgaGVhZGFjaGUgYXQgdGhlIGZpcnN0IHNpZ24gb2YgcGFpbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzg3NiwyMDAwLTA3LTAzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIGluLWNsaW5pYywgcGlsb3Qgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgMTAwIG1nIHN1bWF0cmlwdGFuIGFkbWluaXN0ZXJlZCBhcyBhIGZpbG0tY29hdGVkLCBmYXN0IGRpc2ludGVncmF0aW5nIHRhYmxldCBpbiBzdWJqZWN0cyB3aXRoIG1vZGVyYXRlIG9yIHNldmVyZSBtaWdyYWluZSBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NzE4LDIwMDItMDgtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHBpbG90LCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBjcm9zc292ZXIsIHN0cmF0aWZpZWQsIG11bHRpYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IGJldHdlZW4gc3VtYXRyaXB0YW4gc3VwcG9zaXRvcnkgMjUgbWcgYW5kIHN1bWF0cmlwdGFuIHRhYmxldCA1MCBtZyBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lICh3aXRoIGFuZCB3aXRob3V0IGF1cmEpIGFzc29jaWF0ZWQgd2l0aCB0aGUgbWVuc3RydWFsIGN5Y2xlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3Njc5LDIwMDAtMDUtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY3Jvc3Mtb3ZlciwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHN1YmplY3Qgc2F0aXNmYWN0aW9uIHdpdGggbmFyYXRyaXB0YW4gY29tcGFyZWQgd2l0aCBzdW1hdHJpcHRhbiBpbiBzdWJqZWN0cyB3aG8gaGFkIGxhcHNlZCBmcm9tIHRoZWlyIHByZXZpb3VzIG9yYWwgb3Igc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIGJlY2F1c2Ugb2YgbGFjayBvZiBlZmZpY2FjeSBvciB0b2xlcmFiaWxpdHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzc5ODQsMTk5Ny0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBvZiBTdW1hdHJpcHRhbiBXaXRoIE5hcHJvc3luIGluIE1pZ3JhaW5lIFdpdGggQXVyYSxEZW50IE5ldXJvbG9naWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDU0MjIwLDIwMTAtMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIE5hcHJveGVuIFNvZGl1bSBDb21iaW5hdGlvbiBUYWJsZXQsIFN1bWF0cmlwdGFuIFRhYmxldCwgYW5kIE5hcHJveGVuIFNvZGl1bSBUYWJsZXQgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBUcmVhdGluZyBNaWdyYWluZSBIZWFkYWNoZXMgVGhhdCBPY2N1ciBEdXJpbmcgYSA2LU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwzNjI0NywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElJSUIsIERvdWJsZS1CbGluZCwgTXVsdGljZW50ZXIsIFBhcmFsbGVsLUdyb3VwLCBHZW5lcmFsIFByYWN0aWNlIFN0dWR5IHRvIENvbXBhcmUgU3VtYXRyaXB0YW4gV2l0aCBNaWdyYWxldmUgKFBmaXplcikgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDc1NDAsMTk5MC0wMS0xNiAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgUmVwZWF0LURvc2UgT3JhbCBTdW1hdHJpcHRhbiAxMDAgbWcgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50IE1pZ3JhaW5lIER1cmluZyBhIFNpeCBNb250aCBQZXJpb2QsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNjk3MjksMTk5NS0wNS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJPcGVuLCBQaWxvdCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFRvbGVyYWJpbGl0eSBhbmQgU2FmZXR5IG9mIGEgQ29tYmluYXRpb24gb2YgU3VtYXRyaXB0YW4gT3JhbCAoNTAgbWcpICsgT3JhbCBNZXRvY2xvcHJhbWlkZSAoMTAgbWcpICsgT3JhbCBBc3BpcmluICg5MDAgbWcpIGluIHRoZSBUcmVhdG1lbnQgb2YgYSBTaW5nbGUgTWlncmFpbmUgQXR0YWNrIGluIFBhdGllbnRzIE5vdCBVc3VhbGx5IFBhaW4gRnJlZSBEdXJpbmcgUHJldmlvdXMgQXR0YWNrcywgV2l0aCB0aGUgRm9sbG93aW5nIE1vbGVjdWxlcywgVGFrZW4gYnkgT3JhbCBSb3V0ZSBhcyBNb25vdGhlcmFweTogVHJpcHRhbiBhbmQgQXNwaXJpbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTIzMTUsMTk5OS0wOS0wMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4gRGVzaWduLCBNdWx0aXBsZSBUcmVhdG1lbnQgU3R1ZHkgdG8gRXZhbHVhdGUgU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuICg2IG1nKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIENsdXN0ZXIgSGVhZGFjaGUgQXR0YWNrcyBEdXJpbmcgYSAzLU1vbnRoIFBlcmlvZCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDkzNTEsMTk5MS0wOS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU29kaXVtIFZhbHByb2F0ZSBhbmQgU3VtYXRyaXB0YW4gaW4gQWN1dGUgTWlncmFpbmUgQXR0YWNrLFNoYWhpZCBTYWRvdWdoaSBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMgYW5kIEhlYWx0aCBTZXJ2aWNlcyxJbnRlcnZlbnRpb25hbCwxMzI4ODksMjAxMS0xMC0yMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJpc29uIHRoZSBFZmZlY3Qgb2YgUHJvcG9mb2wgd2l0aCBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW5lIGluIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBIZWFkYWNoZSxTaGFoaWQgU2Fkb3VnaGkgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzIGFuZCBIZWFsdGggU2VydmljZXMsSW50ZXJ2ZW50aW9uYWwsMTI3NTA5LDIwMTItMDMtMTkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIFN1bWF0cmlwdGFuIFBsdXMgT3JhbCBQcm9tZXRoYXppbmUgaW4gTWlncmFpbmUgVHJlYXRtZW50LFNoYWhlZWQgQmVoZXNodGkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExNjUzMSwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgcmFuZG9taXplZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50cmF2ZW5vdXMgYWNldHlsc2FsaWN5bGljIGFjaWQgbHlzaW5hdGUgY29tcGFyZWQgdG8gc3ViY3V0YW5lb3VzIHN1bWF0cmlwdGFuIGFuZCBwYXJlbnRlcmFsIHBsYWNlYm8gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0YXRza2xpbmlrdW0gRXNzZW4sSW50ZXJ2ZW50aW9uYWwsMTA4NjU2LDE5OTktMDctMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgQ29tcGFyYXRpdmUsIENyb3NzLW92ZXIsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSB0byBhc3Nlc3MgUml6YXRyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIixTYW4gRnJhbmNpc2NvIChDYWxpZikgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDEwNzU1NywxOTk4LTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQgc3R1ZHkgb2Ygc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgYW5kIGRpaHlkcm9lcmdvdGFtaW5lIG5hc2FsIHNwcmF5IGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLENFTlRSRSBBTlRJLURPVUxFVVIsSW50ZXJ2ZW50aW9uYWwsMTA3MTMwLDIwMDAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFpvbG1pdHJpcHRhbiBieSBTdWJsaW5ndWFsIEFkbWluaXN0cmF0aW9uLFhpamluZyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjMzMTYsMjAxOC0wMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gYW5kIGlidXByb2ZlbiBpbiBtaWdyYWluZSBwYXRpZW50cyIsU2FuamF5IEdhbmRoaSBQb3N0Z3JhZHVhdGUgSW5zdGl0dXRlIG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsNjc0NzAsMjAwNy0wNC0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJpemF0cmlwdGFuIGZvciBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDU0NDc0LDIwMDktMDYtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgRG9zZS1GaW5kaW5nIFN0dWR5IG9mIE1LLTA5NzQgaW4gQWN1dGUgTWlncmFpbmUsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM5OTMsMjAwNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQlAyLEJlcmdlbiBQc3ljaG9zaXMgUHJvamVjdCAyIC0gVGhlIEJlc3QgSW50cm8gU3R1ZHksSGF1a2VsYW5kIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsODEzMzAsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNi13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiBtaXJ0YXphcGluZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwb3NpdGl2ZSBhbmQgbmVnYXRpdmUgc3ltcHRvbXMgb2Ygc2NoaXpvcGhyZW5pYSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjI4OTAsMjAwMy0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBbiBFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIEV4dGVuZGVkLVJlbGVhc2UgKEVSKSBQYWxpcGVyaWRvbmUgaW4gQWRvbGVzY2VudCBQYXJ0aWNpcGFudHMgV2l0aCBTY2hpem9waHJlbmlhLEphbnNzZW4gUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBMTEMsSW50ZXJ2ZW50aW9uYWwsNjE3MjMsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCA0LXdlZWssIHBsYWNlYm8tIGFuZCBoYWxvcGVyaWRvbC1jb250cm9sbGVkLCBwaGFzZSBJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gYWN1dGVseSByZWxhcHNpbmcgc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTIxOCwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ09BVFMsQ29tcGFyaXNvbiBvZiBPcHRpbWFsIEFudGlwc3ljaG90aWMgVHJlYXRtZW50cyBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSxUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzc4NDUsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzczMzk4LDIwMTktMDUtMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNUQVItMSxVc2Ugb2YgR2FsYW50YW1pbmUgYW5kIENEUC1DaG9saW5lIChDaXRpY29saW5lKSB0byBUcmVhdCBBZHVsdHMgd2l0aCBTY2hpem9waHJlbmlhLEdlb3JnZXRvd24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjM1MywyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJPQUNUSVZFLFByZXZlbnRpbmcgUmVsYXBzZSBpbiBTY2hpem9waHJlbmlhOiBPcmFsIEFudGlwc3ljaG90aWNzIENvbXBhcmVkIFRvIEluamVjdGFibGVzOiBFdmFsdWF0aW5nIEVmZmljYWN5LE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjk0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTRkJSSSxDb2duaXRpdmUgSW1wcm92ZW1lbnQgV2l0aCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxMb3Vpc2lhbmEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjIyMiwyMDAzLTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJFU1QsIkJlc3QgRXZlbnQgU2NoaXpvcGhyZW5pYSBUcmlhbC1BIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIGluIFNjaGl6b3BocmVuaWEiLEtldHRlcmluZyBIZWFsdGggTmV0d29yayxJbnRlcnZlbnRpb25hbCwzNTc2NiwyMDA1LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgT2xhbnphcGluZSBWZXJzdXMgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNDg1MiwyMDAzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBTEZBLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBpbiBHZW5lcmFsIFBzeWNoaWF0cmljIFByYWN0aWNlcywiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzQ1MDMsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBc3Nlc3NtZW50IG9mIEFkdmVyc2UgRXZlbnRzIGluIGEgTmFpdmUgUGVkaWF0cmljIFBvcHVsYXRpb24gVHJlYXRlZCBXaXRoIGFuIEFudGlwc3ljaG90aWMsQ2VudHJlIEhvc3BpdGFsaWVyIFVuaXZlcnNpdGFpcmUgRGUgTmljZSxJbnRlcnZlbnRpb25hbCwzMzY2NjQsMjAxMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgcHJlbGltaW5hcnkgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFkanVuY3RpdmUgYXJpcGlwcmF6b2xlIG9uIHNleHVhbCBkeXNmdW5jdGlvbiBpbiBzY2hpem9waHJlbmlhLCJNaW5pc3RyeSBvZiBFZHVjYXRpb24sIEN1bHR1cmUsIFNwb3J0cywgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSBvZiBKYXBhbiIsSW50ZXJ2ZW50aW9uYWwsMzA4ODU5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxRVUFJTCxRVUFJTC1TdHVkeSxLYW5zYWkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI3NTQ3MywyMDE2LTA4LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEJpb2F2YWlsYWJpbGl0eSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENvbXBhcmF0aXZlIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgMTAgbWcgT3JhbCBTb2x1YmxlIEZpbG0gdmVyc3VzIEFiaWxpZnkgMTAgbWcgVGFibGV0IGluIEhlYWx0aHkgVm9sdW50ZWVycyxDTUcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIzNTExNSwyMDE1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIE1hZ25ldGljIFJlc29uYW5jZSBTcGVjdHJvc2NvcHkgU3R1ZHkgdG8gRXZhbHVhdGUgQXR5cGljYWwgQW50aXBzeWNob3RpYyBEcnVnIFRyZWF0bWVudCBpbiBGaXJzdC1FcGlzb2RlIFBhdGllbnRzIHdpdGggRWFybHkgT25zZXQgU2NoaXpvcGhyZW5pYSxObyA5MSBob3NwaXRhbCBvZiBQTEEsSW50ZXJ2ZW50aW9uYWwsMjMxMDY5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsOSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LERSRWFNLEEgU3R1ZHkgdG8gQ29tcGFyZSBEaXNlYXNlIFByb2dyZXNzaW9uIGFuZCBNb2RpZmljYXRpb24gRm9sbG93aW5nIFRyZWF0bWVudCB3aXRoIFBhbGlwZXJpZG9uZSBQYWxtaXRhdGUgTG9uZy1BY3RpbmcgSW5qZWN0aW9uIG9yIE9yYWwgQW50aXBzeWNob3RpY3MgaW4gUGFydGljaXBhbnQncyB3aXRoIFJlY2VudC1PbnNldCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b3BocmVuaWZvcm0sSmFuc3NlbiBTY2llbnRpZmljIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMjI4ODkxLDIwMTUtMDctMDggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMzEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUElDLEFudGlwc3ljaG90aWMgSW5kdWNlZCBTdHJ1Y3R1cmFsIGFuZCBGdW5jdGlvbmFsIEJyYWluIENoYW5nZXMsUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbixJbnRlcnZlbnRpb25hbCwyMjg2MDgsMjAxNS0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUkVWRU5ULCJTZWNvbmRhcnkgUHJldmVudGlvbiBvZiBTY2hpem9waHJlbmlhLiBBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwiLFVuaXZlcnNpdHkgb2YgQ29sb2duZSxJbnRlcnZlbnRpb25hbCwyMjgxNzEsMjAwNy0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaGFzZSBJViBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIFZlcnN1cyBPdGhlciBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTk0MTksMjAwNy0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBJbXByb3ZlbWVudCBvZiBBcmlwaXByYXpvbGUgZm9yIEphcGFuZXNlIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsVG90dG9yaSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE4NDU4NiwyMDE0LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiB0aGUgRFJEMyBTZXI5R2x5IGFuZCBIVFIyQSBBLTE0MzhHL1QxMDJDIFBvbHltb3JwaGlzbXMgb24gQXJpcGlwcmF6b2xlIEVmZmljYWN5IGluIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgYXMgTW9kaWZpZWQgQnkgQ2xpbmljYWwgRmFjdG9ycyxOYXRpb25hbCBEb25nLUh3YSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0ODU5NixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIFsxOEZdZmFsbHlwcmlkZSBQRVQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJyYWluIGFuZCBwbGFzbWEgcGhhcm1hY29raW5ldGljcyBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4sSW50ZXJ2ZW50aW9uYWwsMTQ3NTY4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCBTaW5nbGUtR3JvdXAgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEZpcnN0LUVwaXNvZGUgRHJ1Zy1OYWl2ZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLFRva3lvIFdvbWVuJ3MgTWVkaWNhbCBDb2xsZWdlLEludGVydmVudGlvbmFsLDE0NDU0MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcnMiLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDQzOTEsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBEb3NlIFJhbmdpbmcgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXJpcGlwcmF6b2xlIGluIEFjdXRlbHkgUmVsYXBzaW5nIEhvc3BpdGFsaXplZCBTY2hpem9waHJlbmljIFBhdGllbnRzLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ0MDIwLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgUmFuZG9taXplZCBPcGVuLWxhYmVsIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBpbiBPdmVyd2VpZ2h0IGFuZCBPYnN0cnVjdGl2ZSBTbGVlcCBBcG5lYSBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxCaXdha28gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM2Mzk3LDIwMTEtMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgQXJpcGlwcmF6b2xlIG9uIFN3YWxsb3dpbmcgRnVuY3Rpb24sVG9ob2t1IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTIwNjYzLDIwMTItMDUtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEEgU2hvcnQgVHJlYXRtZW50IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDg4Mjc4LDIwMTItMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxFdmFsdWF0aW5nIHRoZSBFZmZlY3RpdmVuZXNzIG9mIEFyaXBpcHJhem9sZSBhbmQgRC1DeWNsb3NlcmluZSB0byBUcmVhdCBTeW1wdG9tcyBBc3NvY2lhdGVkIFdpdGggQXV0aXNtLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTEzOCwyMDA1LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLENvbWJpbmF0aW9uIFRyZWF0bWVudCBmb3IgQXVnbWVudGluZyBMYW5ndWFnZSBpbiBDaGlsZHJlbiBXaXRoIEFTRCxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsMjQzMDkyLDIwMTItMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzQ2ODYsMjAxNC0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBYmlsaWZ5IFRoZXJhcHkgZm9yIFJlZHVjaW5nIENvbW9yYmlkIFN1YnN0YW5jZSBBYnVzZSxDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzEwNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSAxMi1tb250aCwgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGNvbXBhcmF0aXZlIGVmZmVjdGl2ZW5lc3Mgb2Ygc3dpdGNoaW5nIGFudGlwc3ljaG90aWMgZHJ1ZyB0cmVhdG1lbnQgdG8gYXJpcGlwcmF6b2xlIG9yIHppcHJhc2lkb25lIGZvciBpbXByb3ZpbmcgbWV0YWJvbGljIHByb2ZpbGUgYW5kIGF0aGVyb2dlbmljIGR5c2xpcGlkZW1pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBDZXBoYWxvbiBJbmMsIEVsaSBMaWxseSAmIENvLCBKb2huc29uICYgSm9obnNvbiwgTWVyY2sgJiBDbyBJbmMsIE5hdGlvbmFsIEFsbGlhbmNlIGZvciBSZXNlYXJjaCBvbiBTY2hpem9waHJlbmlhIGFuZCBEZXByZXNzaW9uLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBQZml6ZXIgSW5jLCBTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTcxMTQsMjAxMi0wMS0wOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU3ltcHRvbXMgb2YgQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDUwNiwyMDAyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsU3R1ZHkgRXZhbHVhdGluZyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBGaXhlZC1kb3NlIE9uY2UtZGFpbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIHdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw5ODM5MSwyMDEyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgdG8gUmVkdWNlIE1lZGljYWwgUmlza3MgaW4gQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIFBpdHRzYnVyZ2gsSW50ZXJ2ZW50aW9uYWwsMzQxOTksMjAwOC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEFyaXBpcHJhem9sZSBmb3IgQmlwb2xhciBEaXNvcmRlciBhbmQgQWxjb2hvbCBVc2UgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjczMjIwLDIwMTYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgVHJpYWwgdG8gTWVhc3VyZSB0aGUgRGlmZmVyZW5jZSBpbiBBbGwtY2F1c2UgSG9zcGl0YWxpemF0aW9ucyBmb3IgUGF0aWVudHMgV2hvIEFyZSBVc2luZyBBYmlsaWZ5IE15Q2l0ZSBWZXJzdXMgVmlydHVhbCBNYXRjaGVkIENvbnRyb2xzIGluIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgMSBEaXNvcmRlciwgYW5kIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM1MTIxMywyMDE4LTA2LTI5IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBU0NFUlRBSU5UUkQsQ29tcGFyYXRpdmUgRWZmZWN0aXZlbmVzcyBSZXNlYXJjaCBUcmlhbCBmb3IgQW50aWRlcHJlc3NhbnQgSW5jb21wbGV0ZSBhbmQgTm9uLXJlc3BvbmRlcnMgV2l0aCBUUkQsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MDgyNCwyMDE3LTA1LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEV4cGxvcmF0b3J5IFRyaWFsIHRvIEFzc2VzcyB0aGUgRnVuY3Rpb25hbGl0eSBvZiBhbiBJbnRlZ3JhdGVkIENhbGwgQ2VudGVyIGZvciB0aGUgRGlnaXRhbCBNZWRpY2luZSBTeXN0ZW0sT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjU2OTg1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsUFJBREEsUHJlZGljdGlvbiBvZiBSZXNwb25zZSB0byBBbnRpLWRlcHJlc3NhbnQsVW5pdmVyc2l0eSBvZiBPY2N1cGF0aW9uYWwgJiBFbnZpcm9ubWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyMTkxNDUsMjAxNC0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQXJpcGlwcmF6b2xlIFZlcnN1cyBEdWxveGV0aW5lIGluIENvbWJpbmF0aW9uIFdpdGggTWlydGF6YXBpbmUgZm9yIFRyZWF0bWVudC1SZXNpc3RhbnQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcjogQSBSYXRlci1NYXNrZWQsIFJhbmRvbWl6ZWQgVHJpYWwiLEZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTQ3MjIsMjAxMy0wOC0xNCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgUGxhY2Viby0gYW5kIFJvcGluaXJvbGUtQ29udHJvbGxlZCBTdHVkeSBmb3IgU1BNLTk2MiBpbiBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg3NTIsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBUcmlhbCB0byBDb21wYXJlIHRoZSBFZmZpY2FjeSBvZiBSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoIHRvIFRoYXQgb2YgUm9waW5pcm9sZSBvbiBFYXJseSBNb3JuaW5nIE1vdG9yIEltcGFpcm1lbnQgYW5kIFNsZWVwIERpc29yZGVycyBpbiBTdWJqZWN0cyBXaXRoIEVhcmx5LXN0YWdlLCBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UiLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY2NTEsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEltcGFjdCBvZiBVc2luZyBXZWFyYWJsZSBEZXZpY2VzIGluIEFkZGl0aW9uIHRvIFN0YW5kYXJkIENsaW5pY2FsIFByYWN0aWNlIG9uIFBhcmtpbnNvbidzIFN1YmplY3QgU3ltcHRvbXMgTWFuYWdlbWVudCxVQ0IgQmlvcGhhcm1hIFNQUkwsSW50ZXJ2ZW50aW9uYWwsMjkzMzc0LDIwMTctMDMtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxIb25leW1vb24sTm9uIE1vdG9ycyBBc3BlY3RzIGluIERlIE5vdm8gUGFya2luc29uJ3MgRGlzZWFzZSwiVW5pdmVyc2l0eSBIb3NwaXRhbCwgR3Jlbm9ibGUiLEludGVydmVudGlvbmFsLDI2MjYyNywyMDEyLTA2LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsUGhhcm1hY29raW5ldGljcyxOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIlBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIE5ldXBybyBQYXRjaCBBZG1pbmlzdHJhdGVkIGF0IDIsIDQsIDYgYW5kIDggbWcvZGF5IFdlZWtseSBpbiBQYXRpZW50cyBXaXRoIEVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIERpc2Vhc2UiLEx1eWUgUGhhcm1hIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTc1MTYsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCxQaGFzZSBJSUkgT3Blbi1MYWJlbCBFeHRlbnNpb24gVHJpYWwgV2l0aCBSb3RpZ290aW5lIGluIElkaW9wYXRoaWMgUmVzdGxlc3MgTGVncyBTeW5kcm9tZSBTdWJqZWN0cyxVQ0IgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsQSBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgZm9yIFNQTS05NjIgaW4gUmVzdGxlc3MgTGVncyBTeW5kcm9tZSAoUkxTKSBQYXRpZW50cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE2OTQ1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRmxpYmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIGluIFBvc3RtZW5vcGF1c2FsIFdvbWVuIGluIE5vcnRoIEFtZXJpY2EsQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCw2MzcxMCwyMDEwLTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLCJBbiBpbnRlcnZlbnRpb25hbCwgcmFuZG9taXplZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN0ZWFkeS1zdGF0ZSBleHBvc3VyZSB0byBmbGliYW5zZXJpbiBvbiB0aGUgc2luZ2xlLWRvc2UgcGhhcm1hY29raW5ldGljcyBvZiB0aGUgY29udHJhY2VwdGl2ZSBzdGVyb2lkcyBldGhpbnlsZXN0cmFkaW9sIGFuZCBsZXZvbm9yZ2VzdHJlbCBpbiBoZWFsdGh5IHByZW1lbm9wYXVzYWwgd29tZW4iLCJCYXVzY2ggSGVhbHRoIENvbXBhbmllcyBJbmMsIEJvZWhyaW5nZXIgSW5nZWxoZWltIEludGVybmF0aW9uYWwgR21iSCIsSW50ZXJ2ZW50aW9uYWwsMzM0NzMyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksVklPTEVULCIyNC1XZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgb2YgRmxpYmFuc2VyaW4gT25jZS1EYWlseSBpbiBQcmVtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzY2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LERBSVNZLFVwdGl0cmF0aW9uIFRyaWFsIG9mIEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIsU3Byb3V0IFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMzI4MywyMDA2LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1BVFJJWChNaWdyYWluZXIgQXNzZXNzIFRSaXB0YW5lIGVYYW1pbmF0aW9uKSxVbml2ZXJzaXR5IG9mIFRzdWt1YmEsSW50ZXJ2ZW50aW9uYWwsMTMyNzg1LDIwMTAtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgZWxldHJpcHRhbiB2ZXJzdXMgbmFyYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMTYxNzAsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIHRoZSBlZmZlY3RpdmVuZXNzIG9mIG9yYWwgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGluIHJlZHVjaW5nIHRoZSB0aW1lIGxvc3MgYW5kIG92ZXJhbGwgaW1wYWN0IG9mIG1pZ3JhaW5lIGF0dGFja3MiLFBmaXplciBDZW50cmFsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDEwOTczOSwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLElsbHVtaW5hdGUsTHVyYXNpZG9uZSBQZWRpYXRyaWMgQmlwb2xhciBTdHVkeSwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDE2OTg3OSwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBBU1RFTCxBIFBoYXNlIElJSSBTdHVkeSBvZiBTTS0xMzQ5NiAoTHVyYXNpZG9uZSBIQ2wpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODIxNCwyMDEyLTA3LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxEaWdveGluIERydWctRHJ1ZyBJbnRlcmFjdGlvbiBXaXRoIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDY0Njc4LDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgbHVyYXNpZG9uZSBoeWRyb2NobG9yaWRlLCJKaWFuZyBTdSBHdW9kYW4gQmlvbG9naWNhbCBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE5hbmppbmcgSHVhd2UgTWVkaWNpbmUgVGVjaG5vbG9neSBEZXZlbG9wbWVudCBDbyBMdGQiLEludGVydmVudGlvbmFsLDM2MTIwNixudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgdG8gVGVzdCB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgYSBOZXcgTWVkaWNhdGlvbiBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsIkZVTkRBQ0lPTiBFU1BBTk9MQSBQQVJBIEVMIERFU0FSUk9MTE8gREUgTEEgTkVVUk9NRVRSSUEsIFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQiLEludGVydmVudGlvbmFsLDM0NzIyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMdXJhc2lkb25lIEVmZmVjdHMgb24gVGlzc3VlIEdsdXRhbWF0ZSBpbiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIwNjQ2NSwyMDEzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCssUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxCaW9zaWduYXR1cmVzIG9mIExhdHVkYSBmb3IgQmlwb2xhciBEZXByZXNzaW9uLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMTAzMTYsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBpbG90IFN0dWR5IHRvIENvbXBhcmUgRnJvdmF0cmlwdGFuIHZlcnN1cyBUb3BpcmFtYXRlIGZvciBQcmV2ZW50aW9uIG9mIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDQ2MzI1LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIENvbnRyb2xsZWQgVHJpYWwgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRnJvdmF0cmlwdGFuIHRvIFByZXZlbnQgTWVuc3RydWFsIE1pZ3JhaW5lLEVuZG8gSGVhbHRoIFNvbHV0aW9ucyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwODUsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBvcGVuLWxhYmVsLCBub24tcmFuZG9taXplZCwgY29tcGFyaXNvbiwgcGlsb3Qgc3R1ZHkgb2YgZnJvdmF0cmlwdGFuIHZlcnN1cyBuYXByb3hlbiBzb2RpdW0gdmVyc3VzIG5vIHRoZXJhcHkgZm9yIHRoZSBzeW1wdG9tYXRpYyBvciBwcm9waHlsYWN0aWMgdHJlYXRtZW50IG9mIHdlZWtlbmQgbWlncmFpbmUiLFZhbGR1Y2UgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTM1MDU0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgQ3Jvc3NvdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBSaXphdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsVGhlIE1lbmFyaW5pIEdyb3VwLEludGVydmVudGlvbmFsLDExNzA1MiwyMDA3LTA0LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSG90IGZsYXNoZXMsMjUyOSxudWxsLFZpbGF6b2RvbmUgZm9yIE1lbm9wYXVzYWwgSG90IEZsYXNoZXMsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsOTEwMTAsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQ29tcGFyaXNvbiBvZiBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHZpbGF6b2RvbmUsIGVzY2l0YWxvcHJhbSBhbmQgYW1pdHJpcHR5bGluZSBpbiBwYXRpZW50cyBvZiBkZXByZXNzaW9uIiwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIE5hZ3B1ciIsSW50ZXJ2ZW50aW9uYWwsMzE3Njg1LDIwMTYtMDItMDggMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MyxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUaGUgRWZmZWN0cyBvZiBWaWxhem9kb25lIG9uIEdsdXRhbWF0ZSBpbiB0aGUgQW50ZXJpb3IgQ2luZ3VsYXRlIENvcnRleCBpbiBBbnhpb3VzIFVuaXBvbGFyIERlcHJlc3NpdmVzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjYyMzcsMjAxMy0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3dpdGNoaW5nIEZyb20gR2VuZXJpYyBTZWxlY3RpdmUgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgKFNTUklzKSBhbmQgU2VsZWN0aXZlIFNlcm90b25pbiBhbmQgTm9yZXBpbmVwaHJpbmUgUmV1cHRha2UgSW5oaWJpdG9ycyAoU05SSXMpIHRvIFRocmVlIERpZmZlcmVudCBEb3NlIEluaXRpYXRpb24gU3RyYXRlZ2llcyBXaXRoIFZpbGF6b2RvbmUsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE2NDQ0NSwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSBwaGFzZSBJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODY1LDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQSBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBhbHRlcm5hdGluZyBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3NDQsMjAwMC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIEFzaWFuLVBhY2lmaWMgcGF0aWVudHMgd2l0aCBub24tZGlhcnJoZWEgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChub24tRC1JQlMpIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxOSwyMDAyLTEwLTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEEgcGhhc2UgSUkgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgcGF0aWVudHMsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTUsMTk5OC0wOS0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkFuIG9wZW4tbGFiZWwsIG11bHRpY2VudGVyIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBjb25zdGlwYXRpb24tZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGluIGFuIEFzaWFuIChQYWtpc3RhbikgcG9wdWxhdGlvbiIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk2NjksMjAwMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBIFRyZWF0bWVudCBJbnZlc3RpZ2F0aW9uYWwgTmV3IERydWcgKHRJTkQpIFByb2dyYW0gb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIFdpdGggQ29uc3RpcGF0aW9uIG9yIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODE5MiwyMDA3LTA4LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLFRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIFBhdHRlcm5zIG9mIEZsb3cgaW4gdGhlIFNtYWxsIEJvd2VsIG9mIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4MDU0LDIwMDQtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHBoYXNlIEkgdHJpYWwgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc1MiwyMDAwLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsVW5pdmVyc2l0eSBvZiBJbGxpbm9pcyxJbnRlcnZlbnRpb25hbCwxOTY1NiwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBvbHlldGh5bGVuZWdseWNvbC0zMzUwIFZlcnN1cyBUZWdhc2Vyb2QgSW4gVHJlYXRtZW50IE9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24sQnJhaW50cmVlIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTAxNDAyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLEQyMzAxRTEsRXh0ZW5zaW9uIFN0dWR5IHRvIEFzc2VzcyB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBUZWdhc2Vyb2QgaW4gV29tZW4gV2l0aCBTeW1wdG9tcyBvZiBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsNDI1MDQsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3Mtb3ZlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gZ2FzdHJvZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3ODgsMjAwNS0wNS0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYWxtb3RyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMsQWxtaXJhbGwgUHJvZGVzZmFybWEgU0EsSW50ZXJ2ZW50aW9uYWwsMTA5NjY5LDIwMDAtMDQtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLGVsb3BpcHJhem9sZSwxMTIwMSxQaGFybWFjb2tpbmV0aWNzLFksWSxEaXNjb250aW51ZWQsRFgsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIEkgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgY29tcGFyaW5nIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIHR3byBkb3NlcyBvZiBEVS0yOTg5NCB3aXRoIGZsZXNpbm94YW4sIHN1bHByaWRlLCBoYWxvcGVyaWRvbCBhbmQgcGxhY2VibyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDUwMTE3LDE5OTUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gc21hbGwgYm93ZWwgYW5kIGNvbG9uaWMgdHJhbnNpdCBpbiBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgY29uc3RpcGF0aW9uIG9yIGNvbnN0aXBhdGlvbi1wcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5MCwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmVjdCBvZiBQcnVjYWxvcHJpZGUgaW4gUGF0aWVudHMgV2l0aCBTZXZlcmUgQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDI1LDE5OTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgdGhlIEVmZmVjdCBvZiBEb3NlLXRpdHJhdGlvbiBvZiBQcnVjYWxvcHJpZGUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBDb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxODQyNCwxOTk4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSBmb3IgdGhlIFJlLVRyZWF0bWVudCBvZiBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDEzLDE5OTktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MTIsMTk5NS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIENvbnN0aXBhdGVkIEVsZGVybHkgU3ViamVjdHMgTGl2aW5nIGluIGEgTnVyc2luZyBGYWNpbGl0eSxTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDExLDE5OTktMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sT3V0bGljZW5zZWQsT0wsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFNhcml6b3RhbiBpbiBQYXJraW5zb24gUGF0aWVudHMgV2l0aCBMLURvcGEtSW5kdWNlZCBEeXNraW5lc2lhLEVNRCBTZXJvbm8gSW5jLEludGVydmVudGlvbmFsLDcwMzEsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixPdXRsaWNlbnNlZCxPTCxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLFBBRERZLU8sIkFuIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyLCBNdWx0aW5hdGlvbmFsLCBQaGFzZSBJSUkgRm9sbG93LVVwIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBMb25nLVRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTYXJpem90YW4gSENsIDEgbWcgYmlkIGluIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudC1Bc3NvY2lhdGVkIER5c2tpbmVzaWEiLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsMTQzMDc2LDIwMDUtMDktMDggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaWxvdCBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBhZnRlciBtdWx0aXBsZSBvcmFsIGFkbWluaXN0cmF0aW9uIG9mIERVLTEyNzA5MCB0byBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycywgdXNpbmcgMTFDLXJhY2xvcHJpZGUgYnkgbWVhbnMgb2YgcG9zaXRpb24gZW1pc3Npb24gdG9tb2dyYXBoeSAoUEVUKSIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDQxNDYzLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRvIEV2YWx1YXRlIHRoZSBJbXBhY3Qgb2YgVHJlYXRtZW50IEludGVycnVwdGlvbiBvbiBSZS1pbml0aWF0aW9uIG9mIEJpZmVwcnVub3gsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0NjM2LDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBYmF0YWNlcHQgYXMgR1ZIRCBQcm9waHlsYXhpcyBQaGFzZSAyLFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NTAwLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQcm9ncmVzc2l2ZWx5IERlY3JlYXNpbmcgVGl0cmF0aW9uIFNjaGVkdWxlcyBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIERpc29yZGVyLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDQ1OSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwaWNsb3pvdGFuLDIyODA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU3Ryb2tlLDY1LG51bGwsRWZmaWNhY3kgb2YgU1VOLU40MDU3IGluIFN1YmplY3RzIFdpdGggQWN1dGUgaXNjaGVtaWMgc3Ryb2tlIGFuZCBtZWFzdXJhYmxlIHBlbnVtYnJhIG9uIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIChNUkkpLERhaWljaGkgU2Fua3lvIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1NDc0LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBQaW1hdmFuc2VyaW4gKEFDUC0xMDMpIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjExNywyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxDTEFSSVRZLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFkanVuY3RpdmUgUGltYXZhbnNlcmluIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjg1MDcxLDIwMTYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXBlc2Vyb2QsMjc4MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSBwaGFzZSBJSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIGNhcGVzZXJvZCBpbiBwYXRpZW50cyB3aXRoIG1pbGQtdG8tbW9kZXJhdGUgQWx6aGVpbWVycyBkaXNlYXNlIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNTQxNzAsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYWRvcHJhemluZSwyOTQ5MyxTYWZldHksTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXNjZW5kaW5nIE11bHRpcGxlIERvc2Ugb2YgU0xWLTMxMyBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLFd5ZXRoLEludGVydmVudGlvbmFsLDM2NjA0LDIwMDgtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgdG8gRXZhbHVhdGUgVHJleGltZXQgaW4gQWRvbGVzY2VudHMgV2l0aCBNaWdyYWluZSBhbmQgSGVhbHRoeSBTdWJqZWN0cyBBZG1pbmlzdGVyZWQgYXQgVGhyZWUgRG9zZXMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw2MDgzOCwyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBhaW4tZnJlZSByZXNwb25zZSB0byBlYXJseS1pbnRlcnZlbnRpb24gd2l0aCBUcmV4aW1ldCBpbiBwYXRpZW50cyB3aXRoIGVwaXNvZGljIG1pZ3JhaW5lIixDYXJvbGluYSBIZWFkYWNoZSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTc4MjU4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiVHJleGltZXQgKFN1bWF0cmlwdGFuL05hcHJveGVuIFNvZGl1bSksIEZvcm1lcmx5IEtub3duIGFzIFRSRVhJTUEsIGZvciBNZW5zdHJ1YWwgTWlncmFpbmUgaW4gV29tZW4gV2l0aCBEeXNtZW5vcnJoZWEiLEdsYXhvU21pdGhLbGluZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwMjcsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFBoYXJtYWNva2luZXRpY3MgQW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBNQVAtMDAwNCBDby1hZG1pbmlzdGVyZWQgV2l0aCBLZXRvY29uYXpvbGUsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDgyMjE4LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEhlYWRhY2hlLDE0OCxudWxsLFBoYXJtYWNva2luZXRpY3MgQW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBNQVAtMDAwNCBDby1hZG1pbmlzdGVyZWQgV2l0aCBLZXRvY29uYXpvbGUsQWxsZXJnYW4gSW5jLEludGVydmVudGlvbmFsLDgyMjE4LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsUGhhcm1hY29raW5ldGljcyxZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRydWctaW50ZXJhY3Rpb24gc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZlY3RzIG9mIENZUDNBNCBpbmhpYml0aW9uIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIExldmFkZXggKE1BUC0wMDA0LCBvcmFsbHkgaW5oYWxlZCBESEUpIGluIGhlYWx0aHkgc3ViamVjdHMiLE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc4NTMyLDIwMTEtMDYtMjMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE1BUC0wMDA0IGluIFNtb2tpbmcgYW5kIE5vbi1TbW9raW5nIEFkdWx0IFZvbHVudGVlcnMsIkFsbGVyZ2FuIEluYywgTUFQIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDcwNDk0LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLERvdWJsZS1ibGluZCBUcmlhbCBvZiBCdXNwaXJvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQW54aWV0eSBpbiBZb3V0aCBXaXRoIEF1dGlzbSBTcGVjdHJ1bSBEaXNvcmRlcnMsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDc5MzM3LDIwMTEtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYnVzcGlyb25lIG9uY2UtYS1kYXkgdHJhbnNkZXJtYWwgc3ByYXkgd2hlbiBjb21wYXJlZCB0byBvcmFsIGJ1c3Bpcm9uZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYW54aWV0eSBkaXNvcmRlcixBY3J1eCBMdGQsSW50ZXJ2ZW50aW9uYWwsNTUxNTcsMjAwMy0wOC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCxQaGFybWFjb2tpbmV0aWNzLE4sWSxMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIFBoYXNlIEkgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEJ1c3Bpcm9uZSBmcm9tIGEgTWV0ZXJlZCBEb3NlIFRyYW5zZGVybWFsIFN5c3RlbSAoTURUUykgaW4gYW54aWV0eSxBY3J1eCBMdGQsSW50ZXJ2ZW50aW9uYWwsMjYwNzg2LDIwMDItMTAtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxkaWh5ZHJvZXJnb3RhbWluZSBtZXN5bGF0ZSw0NDQxMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFJlc2VhcmNoIFN0dWR5IEV4YW1pbmluZyBNaWdyYW5hbCBhbmQgU2tpbiBTZW5zaXRpdml0eSBpbiBTdWJqZWN0cyBXaXRoIE1pZ3JhaW5lLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDAzOCwyMDA2LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3MgKFBLKSBTdHVkeSBvZiBTaW5nbGUtQXNjZW5kaW5nIERvc2VzIG9mIENWVC00MjcgKFpvbG1pdHJpcHRhbiBJbmhhbGF0aW9uIFBvd2RlcikgSW4gSGVhbHRoeSBBZHVsdHMsQWNvcmRhIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjQ2NTk0LDIwMTUtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBBUEQtMzU2IGluIHRoZSB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4Njc5LDIwMDUtMDYtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwic3VtYXRyaXB0YW4gKG5lZWRsZWxlc3MgZGVsaXZlcnksIEludHJhamVjdCksIEVuZG8iLDQ3NzU5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb24gdGhlIFVzYWJpbGl0eSBvZiB0aGUgTmVlZGxlLUZyZWUgSW50cmFqZWN0IFN5c3RlbSBpbiBBZHVsdCBQYXRpZW50cyBEdXJpbmcgQWN1dGUgTWlncmFpbmUgQXR0YWNrLFpvZ2VuaXggSW5jLEludGVydmVudGlvbmFsLDE0MTAxLDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxDT05ORUNULEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgb24gQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4NjAzMywyMDEyLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIEx1LUFBMjEwMDQgZm9yIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJJQ09OIENsaW5pY2FsIFJlc2VhcmNoLCBUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw3Mjg3OSwyMDEwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDY5MDU4LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiT3Blbi1sYWJlbCwgU2FmZXR5LCBFeHRlbnNpb24gU3R1ZHkgb2YgNSBhbmQgMTAgbWcgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBMb25nLXRlcm0gVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gQWR1bHRzIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNDc5OSwyMDA3LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxUSElOQy1pdCBWb3J0aW94ZXRpbmUgLSBTZW5zaXRpdml0eSB0byBDaGFuZ2UsQnJhaW4gYW5kIENvZ25pdGlvbiBEaXNjb3ZlcnkgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyODgzMjUsMjAxNy0wNS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFZPUi1JSVNSLCJQYXR0ZXJuIFNlcGFyYXRpb24sIEJyYWluIERlcml2ZWQgTmV1cm90cm9waGljIEZhY3RvcnMsIGFuZCBNZWNoYW5pc21zIG9mIFZvcnRpb3hldGluZSIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3OTkwNywyMDE3LTA4LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBJbml0aWFsIEFkbWluaXN0cmF0aW9uIG9mIDE3IG1nIFZvcnRpb3hldGluZSBpdiBXaXRoIDEwIG1nL0RheSBWb3J0aW94ZXRpbmUgcG8gaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDI3MzQzNywyMDE2LTA5LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiTG9uZy10ZXJtLCBPcGVuLWxhYmVsLCBGbGV4aWJsZS1kb3NlLCBFeHRlbnNpb24gU3R1ZHkgb2YgVm9ydGlveGV0aW5lIGluIENoaWxkIGFuZCBBZG9sZXNjZW50IFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSBGcm9tIDcgdG8gMTggWWVhcnMgb2YgQWdlIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyNjg5MzgsMjAxNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQWN0aXZlIFJlZmVyZW5jZSAoRmx1b3hldGluZSkgRml4ZWQtRG9zZSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgaW4gUGVkaWF0cmljIFBhdGllbnRzIEFnZWQgNyB0byAxMSBZZWFycyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMjU1OTI4LDIwMTYtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBQaGFzZSBJSUkgU3R1ZHkgb2YgTHUtQUEyMTAwNCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjUxODYsMjAxNS0wNC0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlZvcnRpb3hldGluZSA1LCAxMCBhbmQgMjAgbWcsIFJlbGFwc2UgUHJldmVudGlvbiBTdHVkeSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIyMjkxOCwyMDE1LTAyLTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQXRXb1JDLEFzc2Vzc21lbnQgaW4gV29yayBQcm9kdWN0aXZpdHkgYW5kIHRoZSBSZWxhdGlvbnNoaXAgd2l0aCBDb2duaXRpdmUgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBNREQgVGFraW5nIFZvcnRpb3hldGluZSxMdW5kYmVjayBDYW5hZGEgSW5jLEludGVydmVudGlvbmFsLDIxOTU5MywyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixQUlgtMzE0MCw0ODczOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljIGFuZCBQaGFybWFjb2R5bmFtaWMgc3R1ZHkgb2YgUFJYLTAzMTQwIGZvciB0aGUgVHJlYXRtZW50IG9mIEFsemhlaW1lcidzIERpc2Vhc2UiLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM4OTMsMjAwNS0wMy0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxQUlgtMzE0MCw0ODczOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTaG9ydCBUZXJtIEVmZmVjdHMgb2YgUFJYLTAzMTQwIGluIFBhdGllbnRzIFdpdGggTWlsZCBBbHpoZWltZXIncyBEaXNlYXNlIEJlaW5nIFRyZWF0ZWQgV2l0aCBBcmljZXB0LEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMDI5LDIwMDYtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgTG9uZy1UZXJtIFN0dWR5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgUGhhc2Ugb3IgRWxkZXJseSBTY2hpem9waHJlbmlhLE1pdHN1YmlzaGkgVGFuYWJlIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDg4NjI1LDIwMTItMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ2FyaXByYXppbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBBZG9sZXNjZW50IFBhcnRpY2lwYW50cyAoMTMgdG8gMTcgWWVhcnMgb2YgQWdlKSBXaXRoIFNjaGl6b3BocmVuaWEsQWxsZXJnYW4gcGxjLEludGVydmVudGlvbmFsLDM2Nzk0NiwyMDE5LTA2LTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgYSBGaXhlZC1Eb3NlIFJlZ2ltZW4gb2YgQ2FyaXByYXppbmUgQ29tcGFyZWQgdG8gUGxhY2VibyBmb3IgVHJlYXRtZW50IG9mIHRoZSBEZXByZXNzaXZlIEVwaXNvZGUgaW4gUGFydGljaXBhbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDI1MjMzMywyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiU2FmZXR5LCBUb2xlcmFiaWxpdHksIGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24iLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc5MzE4LDIwMTEtMDctMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiVGhlIE9iamVjdCBvZiBUaGlzIFN0dWR5IGlzIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkgV2hvIEhhdmUgSGFkIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnRzIEFsb25lIixBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU5NzgzLDIwMTgtMTEtMTAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIERvc2UgUGhhc2UgSSBTdHVkeSBUbyBBc3Nlc3MgVGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IEFuZCBQaGFybWFjb2tpbmV0aWNzIE9mIFRELTUxMDggRm9yIFRoZSBQb3RlbnRpYWwgVHJlYXRtZW50IE9mIEdhc3Ryb2ludGVzdGluYWwgKEdJKSBNb3RpbGl0eSBEaXNvcmRlcnMgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc5OTMsMjAwNi0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsdGVtYW5vZ3JlbCw1NDY5OSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsIlNpbmdsZS1Eb3NlLCBTYWZldHkgU3R1ZHkgb2YgQVBELTc5MSBpbiBIZWFsdGh5IFZvbHVudGVlcnMiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzY1NDEsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsbnVsbCwiUGhhcm1hY29raW5ldGljLCBTaW5nbGUtRG9zZSBTdHVkeSBvZiBPcmFsIExhc21pZGl0YW4gaW4gU3ViamVjdHMgV2l0aCBOb3JtYWwgYW5kIEltcGFpcmVkIEhlcGF0aWMgRnVuY3Rpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI4NzExMCwyMDE3LTAzLTE0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGlyb21lbGF0aW5lLDU4NjM1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE9jdWxhciBoeXBlcnRlbnNpb24sMjQwLG51bGwsVHJlYXRtZW50IG9mIHBpcm9tZWxhdGluZSBpbiBwYXRpZW50cyB3aXRoIG9jdWxhciBoeXBlcnRlbnNpb24gb3IgcHJpbWFyeSBvcGVuIGFuZ2xlIGdsYXVjb21hLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI3MjUxLDIwMTYtMDktMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixJbnNvbW5pYSw3NTAsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIE5ldS1QMTEgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDY4NjgyLDIwMTAtMDYtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEktOTI0Miw1OTAxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2luZ2xlLWFzY2VuZGluZyBkb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIEFUSS05MjQyIGluIGhlYWx0aHkgc3ViamVjdHMiLEFSWXggVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzNjU5NywyMDA4LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBSYW5kb21pemVkLCBDb250cm9sbGVkLCBNdWx0aWNlbnRlciBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIHRvIENvbXBhcmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgREEtOTcwMSBhbmQgSXRvcHJpZGUgSHlkcm9jaGxvcmlkZSIsQ2F0aG9saWMgVW5pdmVyc2l0eSBvZiBLb3JlYSxJbnRlcnZlbnRpb25hbCwyMzcyMTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsU3R1ZHkgb2YgTW90aWxpdG9uZSB0byBUcmVhdCBGdW5jdGlvbmFsIER5c3BlcHNpYSxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDIyMjQxMiwyMDE1LTAzLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgRW1wdHlpbmcgaW4gUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYTogRXZhbHVhdGlvbiBVc2luZyBNUkkgTWV0aG9kLFNhbXN1bmcgTWVkaWNhbCBDZW50ZXIgKFNNQyksSW50ZXJ2ZW50aW9uYWwsMTkyODUwLDIwMTQtMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFzZSBJIE11bHRpY2VudGVyIENsaW5pY2FsIFN0dWR5IG9mIFJQLTUwNjMsUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MDkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLCJjbGF2dWxhbmljIGFjaWQgKGltbWVkaWF0ZS1yZWxlYXNlLCBtYWxlIHNleHVhbCBkaXNvcmRlcnMpLCBSZXhhaG4iLDYwMzcyLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRXJlY3RpbGUgZHlzZnVuY3Rpb24sMTg2LG51bGwsRWZmaWNhY3kgU3R1ZHkgb2YgUlgtMTAxMDAgdG8gVHJlYXQgRXJlY3RpbGUgRHlzZnVuY3Rpb24gKEVEKSxSZXhhaG4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjY4NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsImJ1c3Bpcm9uZSArIG1lbGF0b25pbiAoZGVwcmVzc2lvbiksIEJyYWluQ2VsbHMiLDYwNjYzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgYSBDb21iaW5hdGlvbiBQcm9kdWN0IChCQ0ktMDI0IGFuZCBCQ0ktMDQ5KSB0byBUcmVhdCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzA1NiwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLENlbnRyYWwgbmVydm91cyBzeXN0ZW0gZGlzZWFzZSw2MCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFZFQ1RPUixTdHVkeSBvZiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBUaHJlZSBEaWZmZXJlbnQgRG9zZXMgb2YgT1BDLTM0NzEyIGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3OTMyMiwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxCcmV4cGlwcmF6b2xlIGZvciBhY3V0ZSBzY2hpem9waHJlbmlhLEZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzcwMDYsMjAxOC0wNC0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGhhc2UgSSwgU2FmZXR5IGFuZCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTXVsdGlwbGUgRG9zZSBCcmV4cGlwcmF6b2xlIGluIEphcGFuZXNlIFBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzE5NDgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUlMV0lORCxDb21wYXJpc29uIG9mIHRoZSBFZmZlY3RpdmVuZXNzIG9mIEJyZXhwaXByYXpvbGUgV2l0aCBUaGF0IG9mIFJpc3Blcmlkb25lLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDI1OTg4NywyMDE2LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTGlnaHRob3VzZSxCcmV4cGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxMTU4NjUsMjAxMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxBIFN0dWR5IG9mIEZsZXhpYmxlIERvc2UgQnJleHBpcHJhem9sZSBhcyBNb25vdGhlcmFweSBvciBDb21iaW5hdGlvbiBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggUG9zdC10cmF1bWF0aWMgU3RyZXNzIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI4NjMyMSwyMDE3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLEJyZXhwaXByYXpvbGUgZm9yIHRoZSBMb25nLXRlcm0gVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1ODMzNCwyMDE4LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsU2FmZXR5LE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgMTItd2VlaywgRXh0ZW5zaW9uIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDcxMTMsMjAxOC0xMC0xMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQWdpdGF0aW9uLDM2MDksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBGbGV4aWJsZSBEb3Npbmcgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNTA2MDYsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBZ2l0YXRpb24sMzYwOSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIFR3byBGaXhlZC1Eb3NlcyBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU3ViamVjdHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXJzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM0Mzg5LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgTG9uZy1UZXJtIFN0dWR5IG9mIEJyZXhwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCwzNTk2MzksMjAxOC0xMC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHRyaWFsIHRvIGFzc2VzcyB0aGUgbG9uZy10ZXJtIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYnJleHBpcHJhem9sZSBhcyBhZGp1bmN0aXZlIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1MjY1NCwyMDE4LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIFBsdXMgS2V0YW1pbmUgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uIChUUkQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyOTgxMDMsMjAxNy0wOS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBQcmV2aW91cyBBZGp1bmN0aXZlIFRoZXJhcHksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYzOTI5LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLExvbmctdGVybSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIGFzIEFkanVuY3QgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNTUwNTEsMjAxMy0xMC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUcmVhdG1lbnQgb2YgSXJyaXRhYmlsaXR5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgYW4gSW5hZGVxdWF0ZSBSZXNwb25zZSB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5LEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDE1NDY0NywyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCxQaGFybWFjb2tpbmV0aWNzLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEEgc3R1ZHkgdG8gY29tcGFyZSBwaGFybWFjb2tpbmV0aWMgKFBLKSBleHBvc3VyZSBvZiBHaW1vdGkgdmVyc3VzIFJlZ2xhbiBpbiBoZWFsdGh5IHN1YmplY3RzIGZvciB0aGUgcmVsaWVmIG9mIHN5bXB0b21zIGFzc29jaWF0ZWQgd2l0aCBhY3V0ZSBhbmQgcmVjdXJyZW50IGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwzMDg3NjcsMjAxNy0wOC0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LEVmZmljYWN5LFksWSxQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxUUVQsIkEgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXksIGZvdXItd2F5LCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBFVkstMDAxIG9uIGNhcmRpYWMgdmVudHJpY3VsYXIgcmVwb2xhcml6YXRpb24gKFFUIGludGVydmFsKSBpbiBtYWxlIGFuZCBmZW1hbGUgaGVhbHRoeSB2b2x1bnRlZXJzIixFdm9rZSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDIxMDE1OCwyMDE0LTA4LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsbnVsbCxNdWx0aWNlbnRlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBNZXRvY2xvcHJhbWlkZSBOYXNhbCBTcHJheSBpbiBXb21lbiBXaXRoIERpYWJldGljIEdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxNjU2OTAsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiVHJpYWwgb2YgQXJpcGlwcmF6b2xlIEludHJhbXVzY3VsYXIgRGVwb3QgKE9QQy0xNDU5NywgTHUtQUY0MTE1NSkgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBBZHVsdHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDkwMTE5LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gT3Blbi1MYWJlbCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgSW50cmFtdXNjdWxhciBJbmplY3Rpb24gaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODk2NTUsMjAxMi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEFyaXBpcHJhem9sZSBMb25nLWFjdGluZyBJbmplY3Rpb24gaW4gUmVjZW50IE9uc2V0IGFuZCBDaHJvbmljIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsQ2hvbmJ1ayBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3MDM1OCwyMDE4LTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgSU0gRGVwb3QgZm9yIENoaW5lc2UgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBCZWlqaW5nIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMTMyNjUsMjAxNy0wNi0yMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFyaXBpcHJhem9sZSwgQWJpbGlmeSBNYWludGVuYSBDb2xsYWJvcmF0aXZlIENsaW5pY2FsIFByb3RvY29sIixGbG9yaWRhIEF0bGFudGljIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU2NDk5LDIwMTYtMDMtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjEyNjcsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUVVBTElGWSxBcmlwaXByYXpvbGUgT25jZS1Nb250aGx5IFZlcnN1cyBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIGluIEFkdWx0IFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxMTE1NjQsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIGFuIEludHJhbXVzY3VsYXIgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIChPUEMtMTQ1OTcpIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBCaXBvbGFyIEkgUGF0aWVudHMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDg2MTIwLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEJELUNBRUwsQ0FFIFBsdXMgTEFJIGluIEluZGl2aWR1YWxzIFdpdGggQmlwb2xhciBEaXNvcmRlciBhdCBSaXNrIGZvciBUcmVhdG1lbnQgTm9uLWFkaGVyZW5jZSxVbml2ZXJzaXR5IEhvc3BpdGFscyBPZiBDbGV2ZWxhbmQsSW50ZXJ2ZW50aW9uYWwsMzI3NDcxLDIwMTgtMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1ibGluZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgIHBoYXJtYWNva2luZXRpY3Mgb2YgUEYtMDQ5OTUyNzQgaW4gaGVhbHRoeSBzdWJqZWN0cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4MDQxMiwyMDExLTA3LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmVjdHMgb2YgRFNQLTY5NTIgb24gdGhlIFFUL1FUYyBpbiBIZWFsdGh5IE1hbGUgYW5kIEZlbWFsZSBWb2x1bnRlZXJzLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNDc2NywyMDE3LTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbWluZXNhcHJpZGUsNzI4NDksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLENvbnN0aXBhdGlvbiBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MixudWxsLERvc2UtZmluZGluZyBTdHVkeSBvZiBEU1AtNjk1MiBpbiBQYXRpZW50cyB3aXRoIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSB3aXRoIENvbnN0aXBhdGlvbixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODM4MTQsMjAxNi0xMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsbWluZXNhcHJpZGUsNzI4NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxDb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDM4NjIsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIERvdWJsZS1ibGluZCwgUGFyYWxsZWwtZ3JvdXAsIEV4cGxvcmF0b3J5IFN0dWR5IG9mIERTUC02OTUyIGluIFBhdGllbnRzIHdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIHdpdGggQ29uc3RpcGF0aW9uIixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDQ0NTUsMjAxMi0xMi0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJab2xtaXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBaUCBQYXRjaCB0ZWNobm9sb2d5LCBtaWdyYWluZS9jbHVzdGVyIGhlYWRhY2hlKSwgWm9zYW5vIFBoYXJtYSIsNzcyMDgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsbnVsbCxBIEZvdXItd2F5IENyb3Nzb3ZlciBTdHVkeSBvZiBUaHJlZSBGb3JtdWxhdGlvbnMgb2YgTS0yMDcgd2l0aCBJbnRyYW5hc2FsIHpvbG1pdHJpcHRhbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM4MzcxOCwyMDE5LTA1LTI5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwiWm9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUvY2x1c3RlciBoZWFkYWNoZSksIFpvc2FubyBQaGFybWEiLDc3MjA4LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLEEgY3Jvc3NvdmVyIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIFpQLVRyaXB0YW4gY29tcGFyZWQgdG8gc3ViY3V0YW5lb3VzIGluamVjdGlvbiBvZiBzdW1hdHJpcHRhbiBhbmQgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiB6b2xtaXRyaXB0YW4gdHJlYXRtZW50cyBmb3IgbWlncmFpbmUgaGVhZGFjaGVzLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwyMzkzOTUsbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsWUgtMTI4NTIsODIwNTgsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgQWJzb3JwdGlvbiwgTWV0YWJvbGlzbSwgYW5kIEV4Y3JldGlvbiBhbmQgdGhlIEFic29sdXRlIEJpb2F2YWlsYWJpbGl0eSBvZiBZSC0xMjg1MiIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjM1NDEsMjAxNy0wMy0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLFlILTEyODUyLDgyMDU4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxQaGFzZSBJL0lJYSBUcmlhbCBvZiBZSC0xMjg1MiBpbiBIZWFsdGh5IFN1YmplY3RzIGFuZCBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgQ29uc3RpcGF0aW9uLFl1aGFuIENvcnAsSW50ZXJ2ZW50aW9uYWwsMjM5NTQ0LDIwMTUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZGloeWRyb2VyZ290YW1pbmUgKGFlcm9zb2wgbmFzYWwsIG1pZ3JhaW5lKSwgSW1wZWwgTmV1cm9QaGFybWEiLDk3NTU1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxTVE9QLTMwMSxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBQT0QgREhFIChJTlAtMTA0KSBpbiBNaWdyYWluZSxJbXBlbCBOZXVyb1BoYXJtYSxJbnRlcnZlbnRpb25hbCwzNDMwMjksMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQrLFBoYXNlIDQgQ2xpbmljYWwsQzQsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTk1EQSBBbnRhZ29uaXN0cyBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyMTgzMSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImxpdG94ZXRpbmUsIEl4YWx0aXMiLDEwMjI5OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixNaXhlZCB1cmluYXJ5IGluY29udGluZW5jZSwyMzc5LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsaXRveGV0aW5lIGluIHdvbWVuIHdpdGggdXJpbmFyeSBpbmNvbnRpbmVuY2UsSXhhbHRpcyBTQSxJbnRlcnZlbnRpb25hbCwzMzYyNzcsMjAxNy0wMy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgNTItd2VlaywgbG9uZy10ZXJtLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBhbmQgbGl0aGl1bSBpbiBwYXRpZW50cyB3aXRoIGJpcG9sYXIgSSBkaXNvcmRlciIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4NzEzOCwyMDExLTAyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJMb3ctRG9zZSBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGVwcmVzc2lvbjogRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBpbG90IFN0dWR5IixEb3VnbGFzIE1lbnRhbCBIZWFsdGggVW5pdmVyc2l0eSBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsODQzNTUsMjAxMi0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQQU1TLFNpZGUgRWZmZWN0IFN0dWR5IG9mIEFudGlwc3ljaG90aWMgTWVkaWNpbmVzIHRvIFRyZWF0IENoaWxkaG9vZCBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgTWFyeWxhbmQsSW50ZXJ2ZW50aW9uYWwsMzQ4NzgsMjAwOC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxUcmVhdG1lbnQgYW5kIE91dGNvbWUgb2YgRWFybHkgT25zZXQgQmlwb2xhciBEaXNvcmRlciwiTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMzQ0NzcsMjAwMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGFuZCBMYW1vdHJpZ2luZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgVHlwZSBJIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ0NTUsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaXRoIGEgTWFqb3IgRGVwcmVzc2lvbiBFcGlzb2RlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5MjA1LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIENvbXBhcmlzb24gb2YgVHdvIEZpeGVkIERvc2VzIG9mIEFyaXBpcHJhem9sZSBXaXRoIFBsYWNlYm8gaW4gQWN1dGVseSBSZWxhcHNlZCwgSG9zcGl0YWxpemVkIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBJIChNYW5pYyBvciBNaXhlZCkgSW4gU3VicG9wdWxhdGlvbnMiLFVuaXZlcnNpdHkgb2YgTG91aXN2aWxsZSxJbnRlcnZlbnRpb25hbCwxNDQwMjYsbnVsbCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHNpbmdsZS0gYW5kIG11bHRpcGxlLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIHRvbGVyYWJpbGl0eSBvZiBjaW5pdGFwcmlkZSAoQ0lOKSBpbiBoZWFsdGh5IENoaW5lc2Ugc3ViamVjdHMiLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDM3NDM5MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiU2FmZXR5LEJpb2VxdWl2YWxlbmNlIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDbGluaWNhbCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBjaW5pdGFwcmlkZSAxIG1nIHRhYmxldHMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucywiVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMTk3MjE3LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlcGF0aXRpcyBDIHZpcnVzIGluZmVjdGlvbiwxNTMsbnVsbCxHYXN0cm9wYXJlc2lzIER1cmluZyBQZWd5bGF0ZWQgSW50ZXJmZXJvbiBUaGVyYXB5IGZvciBDaHJvbmljIEhlcGF0aXRpcyBDOiBFZmZlY3RzIG9mIE1vc2FwcmlkZSxPc2FrYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0MDg4MCwyMDA2LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVW5kaWZmZXJlbnRpYXRlZCBzY2hpem9waHJlbmlhLDE5MzMsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRyaWFsIHRvIGNvbXBhcmUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGVmZmljYWN5IG9mIHpvbG1pdHJpcHRhbiAoWm9taWcpIHdpdGggZGV4ZmVuZmx1cmFtaW5lIG9uIGNlbnRyYWwgc2Vyb3RvbmVyZ2ljIG5ldXJvdHJhbnNtaXNzaW9uIGFzIGFzc2Vzc2VkIGJ5IGFjdGl2ZSBvZGRiYWxsIGF1ZGl0b3J5IGV2ZW50LXJlbGF0ZWQgcG90ZW50aWFscyBpbiBoZWFsdGh5IHZvbHVudGVlcnMgd2l0aG91dCBtaWdyYWluZSIsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDEwODU4OSwxOTk5LTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSByYW5kb21pemVkLCBjb250cm9sbGVkIHN0dWR5IGFzc2Vzc2luZyB0aGUgZWZmaWNhY3kgb2Ygb3JhbCBsb3Jub3hpY2FtIGluIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUgYXR0YWNrIiwiQmFraXJrb3kgRHIuIFNhZGkgS29udWsgUmVzZWFyY2ggYW5kIFRyYWluaW5nIEhvc3BpdGFsLCBJc3RhbmJ1bCBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwyMDExNzMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkVsZXRyaXB0YW4gdmVyc3VzIFN1bWF0cmlwdGFuOiBBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2sgU3R1ZHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxNjg4LDE5OTYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxNQlJQICsgVm9ydGlveGV0aW5lIHZlcnN1cyBNQlJQIG9uIFByZXZlbnRpbmcgUmVsYXBzZSBpbiBDaHJvbmljIE1BIFVzZXJzLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjkxNTQsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVsaXJpdW0sMzA2MyxNSU5ELVVTQSxUaGUgTW9kaWZ5aW5nIHRoZSBJbXBhY3Qgb2YgSUNVLUFzc29jaWF0ZWQgTmV1cm9sb2dpY2FsIER5c2Z1bmN0aW9uLVVTQSBTdHVkeSxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNzA5OTMsMjAxMS0xMi0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZWxpcml1bSwzMDYzLG51bGwsWmlwcmFzaWRvbmUgVmVyc3VzIFN0YW5kYXJkIFRoZXJhcHkgZm9yIEFnaXRhdGVkIFBhdGllbnRzIGluIHRoZSBFRCxHZW9yZ2UgV2FzaGluZ3RvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0MjkzLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLFBydWNhbG9wcmlkZSBWZXJzdXMgUGxhY2VibyBpbiBEaWFiZXRpYyBHYXN0cm9wYXJlc2lzLFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCwxNjY5MjQsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhbmljIGRpc29yZGVyLDEyNzksbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUmVmcmFjdG9yeSBBbnhpZXR5LE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMTMzMSwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMzY5LG51bGwsIkEgcHJvc3BlY3RpdmUsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzd2l0Y2hpbmcgdG8gYXJpcGlwcmF6b2xlIG9uIHNleHVhbCBkeXNmdW5jdGlvbiBhbmQgdGhlIGh5cG90aGFsYW1pYy1waXR1aXRhcnktZ29uYWRhbCBheGlzIGluIG1hbGUgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0ZWQgd2l0aCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4OTAwNCwyMDEyLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSBhbmQgdHJlYXRtZW50LWluZHVjZWQgbW90b3IgZHlzZnVuY3Rpb24iLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2ODcsMjAwNC0wOC0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cmljIG1vdGlsaXR5IGRpc29yZGVyLDM3NixudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0aHJlZS1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiA0IG1nIFNUQVRkb3NlIHRvIHN1bWF0cmlwdGFuIDYgbWcgU1RBVGRvc2UgYWZ0ZXIgZG9zZS1ub3JtYWxpemF0aW9uLCBhbmQgdG8gYXNzZXNzIHRoZSByZWxhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgb2YgNCBtZyBzdW1hdHJpcHRhbiBpbmplY3RlZCB1c2luZyB0aGUgU1RBVGRvc2UgZGV2aWNlIGNvbXBhcmVkIHRvIDQgbWcgc3VtYXRyaXB0YW4gaW5qZWN0ZWQgbWFudWFsbHkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3NTEsMjAwNC0wOS0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiBmYXN0IGRpc2ludGVncmF0aW5nIHN1bWF0cmlwdGFuIHRhYmxldHMgKDUwIGFuZCAxMDAgbWcgdGFibGV0cykgY29tcGFyZWQgd2l0aCB0aGUgY3VycmVudGx5IG1hcmtldGVkIHN1bWF0cmlwdGFuIHRhYmxldHMgKDUwIGFuZCAxMDAgbWcgSW1pdHJleCAvSW1pZ3JhbiB0YWJsZXRzKSwgaW4gaGVhbHRoeSBtYWxlIGFuZCBmZW1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzY0OSwyMDAyLTA1LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHNpbmdsZSBkb3NlLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBhbmQgdGFzdGUgYWNjZXB0YWJpbGl0eSBvZiB0d28gZGlmZmVyZW50IDIwIG1nLzEwMCBtaWNyb2wgc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgZm9ybXVsYXRpb25zIGNvbXBhcmVkIHRvIHRoZSBjdXJyZW50IDIwIG1nLzEwMCBtaWNyb2wgc3VtYXRyaXB0YW4gbmFzYWwgc3ByYXkgbWFya2V0IGZvcm11bGF0aW9uIGluIGhlYWx0aHkgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2MjAsMjAwMC0wNy0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciwgdHdvLXBlcmlvZCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBTdW1hdHJpcHRhbi1MZWtUIGZpbG0tY29hdGVkIHRhYmxldHMsIDEwMCBtZyAoT0pTQyBUeXVtZW4gQ2hlbWljYWwtUGhhcm1hY2V1dGljYWwgUGxhbnQsIFJ1c3NpYSkgYW5kIEltaWdyYW4gdGFibGV0cywgY29hdGVkIHdpdGggMTAwIG1nIChHbGF4b1NtaXRoS2xpbmUgVHJhZGluZywgUnVzc2lhKSB3aXRoIHRoZSBwYXJ0aWNpcGF0aW9uIG9mIGhlYWx0aHkgdm9sdW50ZWVycyBvbiBhbiBlbXB0eSBzdG9tYWNoIixKU0MgIlBhdGVudCBGYXJtIixJbnRlcnZlbnRpb25hbCwzMjU2MjMsMjAxNy0xMi0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZlY3Qgb2YgRXJlbnVtYWIgb24gQmxvb2QgUHJlc3N1cmUgV2hlbiBHaXZlbiBDb25jb21pdGFudGx5IFdpdGggU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuLEFtZ2VuIEluYyxJbnRlcnZlbnRpb25hbCwyNTg0NjYsMjAxNi0wMi0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIENyb3Nzb3ZlciBTdHVkeSBUbyBBc3Nlc3MgVHJpcHRhbi1JbmR1Y2VkIERpc3J1cHRpb24gT2YgVHJpZ2VtaW5vLUNvcnRpY2FsIENvbm5lY3Rpdml0eSIsVW5pdmVyc2l0eSBvZiBIYW1idXJnLEludGVydmVudGlvbmFsLDIzMTU5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSBJbnRyYS1TdWJqZWN0IFZhcmlhYmlsaXR5IGFuZCBTZXggRGlmZmVyZW5jZXMgaW4gdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgMTAwIG1nIFN1bWF0cmlwdGFuIEZvbGxvd2luZyBPcmFsIERvc2luZyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1OTU3OSwxOTkzLTA1LTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBvZiBUd28gU2luZ2xlIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSBUYSBCbGV0cyAoQWRtaW5pc3RlcmVkIFR3byBIb3VycyBBcGFydCkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzY3NSwyMDA0LTEwLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpYyBhbmQgUGhhcm1hY29keW5hbWljIFByb2ZpbGUgb2YgSW50cmFuYXNhbCBTdW1hdHJpcHRhbiBhdCBEb3NlcyBvZiA1LCAxMCBhbmQgMjAgTWciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNDc3LDE5OTMtMDktMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlLCBkb3VibGUtYmxpbmQsIHR3by1wYXJhbGxlbC1ncm91cCwgZm91ci1wZXJpb2QgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgTHUtQUEyMTAwNCBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLCJIIEx1bmRiZWNrIEEvUywgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsODE2MjYsMjAxMS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgb24gdGhlIENvbmNlbnRyYXRpb25zIG9mIFNlbGVjdGVkIE5ldXJvdHJhbnNtaXR0ZXJzIGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cywiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCw3NDg3MSwyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0OTIzMCwyMDE4LTA4LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LEJVU1BBUkssQnVzcGlyb25lIFRyZWF0bWVudCBvZiBJYXRyb2dlbmljIER5c2tpbmVzaWFzIGluIEFkdmFuY2VkIFBhcmtpbnNvbiBEaXNlYXNlLEFzc2lzdGFuY2UgUHVibGlxdWUgSG9waXRhdXggZGUgUGFyaXMsSW50ZXJ2ZW50aW9uYWwsMjQ3MjQ2LDIwMTYtMDYtMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxEQUFNU0VMLCJEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBmb3IgU3ltcHRvbWF0aWMgSHlwZXJwcm9sYWN0aW5lbWlhIEluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDc2NTg0LDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnByb2xhY3RpbmVtaWEsMTc3LG51bGwsUmVzZWFyY2ggb2YgdGhlIHZhcmlhbmNlIG9uIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSB0cmVhdGVkIHdpdGggbG93IGRvc2UgYXJpcGlwcmF6b2xlIG9uIGh5cGVycHJvbGFjdGluZW1pYSBpbmR1Y2VkIGJ5IHRoZSBzZWNvbmQgZ2VuZXJhdGlvbiBhbnRpcHN5Y2hvdGljcyxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMTExMzYsMjAxMy0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBZGp1bmN0aXZlIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgZm9yIHJpc3Blcmlkb25lLWluZHVjZWQgaHlwZXJwcm9sYWN0aW5lbWlhOiBhbiA4LXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNvbXBhcmF0aXZlIGNsaW5pY2FsIHRyaWFsIixYaW5YaWFuZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU1MTY1LDIwMTItMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFZNTC02NzAsMTk5NTUsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsIkEgcGhhc2UgSUlhLCBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIFZNTC02NzAgaW4gcGF0aWVudHMgd2l0aCBzZXh1YWwgZHlzZnVuY3Rpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDU1ODc4LDIwMDItMDUtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgY2xpbmljYWwgdHJpYWwgb2YgYnVzcGlyb25lIGZvciB0cmVhdGluZyBhdXRpc20gc3BlY3RydW0gZGlzb3JkZXJzIixTaGlyYXogVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE4NjY1NiwyMDEyLTEyLTA1IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxEQS05NzAxLDU5MDUwLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxUcmlhbCBvZiBQcm90b24gUHVtcCBJbmhpYml0b3IgV2l0aCBQcm9raW5ldGljcyBvciBQbGFjZWJvIGluIFBhdGllbnRzIFdpdGggTGFyeW5nb3BoYXJ5bmdlYWwgUmVmbHV4IERpc2Vhc2UsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwyMzg2NTEsMjAxNi0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFwcGV0aXRlIGxvc3MsMzAzOCxQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLFVzZSBvZiBhIE1vYmlsZSBIZWFsdGggU2Vuc29yIGluIGFuIE9wZW4tTGFiZWwgVHJpYWwgb2YgTG9yY2FzZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBDYW5uYWJpcyBVc2UgRGlzb3JkZXIsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDI3NTMzOSwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsVHJleGltZXQgZm9yIFByZXZlbnRpb24gb2YgUG9zdCBUcmF1bWF0aWMgSGVhZGFjaGUgQXNzb2NpYXRlZCBXaXRoIENvZ25pdGl2ZSBEeXNmdW5jdGlvbixDbGludmVzdCxJbnRlcnZlbnRpb25hbCw2MzU0NCwyMDEwLTA1LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxSZW5hbCBmYWlsdXJlLDY5LG51bGwsVHJpYWwgRXZhbHVhdGluZyBPUEMtMzQ3MTIgaW4gU3ViamVjdHMgV2l0aCBOb3JtYWwgUmVuYWwgRnVuY3Rpb24gYW5kIFJlbmFsbHkgSW1wYWlyZWQgU3ViamVjdHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNzQ0MzUsMjAxMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIpLCBPdHN1a2EvQk1TIiw1MzI1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxJbnRyYW11c2N1bGFyIEFyaXBpcHJhem9sZSBpbiBBY3V0ZWx5IEFnaXRhdGVkIFBhdGllbnRzIERpYWdub3NlZCBXaXRoIERlbWVudGlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNDUsMjAwMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmF1c2VhLDIyNixudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRXhwbG9yYXRvcnkgU3R1ZHkgb2YgdGhlIEVmZmVjdHMgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBvbiBDb2duaXRpb24gYW5kIEJsb29kIE94eWdlbiBMZXZlbCBEZXBlbmRlbnQgKEJPTEQpIEZ1bmN0aW9uYWwgTWFnbmV0aWMgUmVzb25hbmNlIEltYWdpbmcgKGZNUkkpIFNpZ25hbHMgaW4gU3ViamVjdHMgUmVtaXR0ZWQgRnJvbSBEZXByZXNzaW9uIGFuZCBpbiBDb250cm9scyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4Nzg4MSwyMDEyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgZG91YmxlLWJsaW5kLCB0d28tcGFyYWxsZWwtZ3JvdXAsIGZvdXItcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIEx1LUFBMjEwMDQgaW4gaGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIiwiSCBMdW5kYmVjayBBL1MsIFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDgxNjI2LDIwMTEtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxFZmZpY2FjeSBvZiBMdS1BQTIxMDA0IG9uIHRoZSBDb25jZW50cmF0aW9ucyBvZiBTZWxlY3RlZCBOZXVyb3RyYW5zbWl0dGVycyBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzQ4NzEsMjAxMS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNtZW5vcnJoZWEsMTA1LG51bGwsTWVuc3RydWFsIE1pZ3JhaW5lIFRyZWF0bWVudCBXaXRoIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDE1LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHNpbmdsZS1jZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2YgemlwcmFzaWRvbmUgb24gcG9seXNvbW5vZ3JhcGhpYyBzbGVlcCBzdHJ1Y3R1cmUgYW5kIHN1YmplY3RpdmUgc2xlZXAgcXVhbGl0eSBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLFVuaXZlcnNpdHkgb2YgR290dGluZ2VuLEludGVydmVudGlvbmFsLDY5NTU1LDIwMDQtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRpYyBkaXNvcmRlciwyOTQwLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIENocm9uaWMgVGljIERpc29yZGVyIG9yIFRvdXJldHRlJ3MgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxOTAwNiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LE5DVDAzNTI1ODA4LEJyZXhwaXByYXpvbGUgU3R1ZHksVW5pdmVyc2l0eSBvZiBNYXNzYWNodXNldHRzLEludGVydmVudGlvbmFsLDMzOTY4OCwyMDE4LTAzLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLEVmZmVjdCBvZiBDYWxvcmllcyBhbmQgRmF0IENvbnRlbnQgb24gdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgTHVyYXNpZG9uZSBIQ2wsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3Mjg0MSwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsR2VwaXJvbmUgVmVyc3VzIFBsYWNlYm8gaW4gVHJlYXRtZW50IG9mIENvY2FpbmUgRGVwZW5kZW5jZSAtIDMsVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEsSW50ZXJ2ZW50aW9uYWwsMzM2OTYsMTk5MC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLEJSRUFUSCxCdXNwaXJvbiBmb3IgY2hlbW9yZWZsZXggbW9kdWxhdGlvbiBhbmQgY2VudHJhbCBBcG5lYSB0cmVhdG1lbnQgaW4gSGVhcnQgZmFpbHVyZSBwYXRpZW50cyxGb25kYXppb25lIFRvc2NhbmEgR2FicmllbGUgTW9uYXN0ZXJpbyxJbnRlcnZlbnRpb25hbCwzNjU5OTIsMjAxNi0wNS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIHBvc3QtbWFya2V0aW5nIHN1cnZlaWxsYW5jZSwgcGhhc2UgSVYgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIEltaWdyYW4gKHN1bWF0cmlwdGFuKSBhZG1pbmlzdGVyZWQgaW4gS29yZWFuIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBvciB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTk2NzIsMTk5Ny0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxDT01QQVNTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMjAgbWcgU3VtYXRyaXB0YW4gUG93ZGVyIERlbGl2ZXJlZCBJbnRyYW5hc2FsbHkgV2l0aCB0aGUgQmktZGlyZWN0aW9uYWwgRGV2aWNlIENvbXBhcmVkIFdpdGggMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRWxldHJpcHRhbiB2ZXJzdXMgU3VtYXRyaXB0YW46IEEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFjayBTdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE2ODgsMTk5Ni0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxURE0tVklHSUwsTXVsdGljZW50ZXIgdHJpYWwgaW4gdG8gaW52ZXN0aWdhdGUgdGhlIHVzYWdlIG9mIGFudGlkZXByZXNzYW50IGFuZCBhbnRpcHN5Y2hvdGljcyAod2l0aCAvIHdpdGhvdXQgYXBwcm92YWwpIGluIHBhdGllbnRzIGF0IHRoZSBhZ2Ugb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzLFd1ZXJ6YnVyZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM3NTQ3OCwyMDE3LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaXp6aW5lc3MsMzQ1NCxudWxsLFJpemF0cmlwdGFuIGZvciBFcGlzb2RpYyBEaXp6aW5lc3MgaW4gVmVzdGlidWxhciBNaWdyYWluZSxVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgTG9zIEFuZ2VsZXMsSW50ZXJ2ZW50aW9uYWwsMjMwMjM4LDIwMTQtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBYnVzZSBQb3RlbnRpYWwgb2YgU2luZ2xlIERvc2VzIG9mIExvcmNhc2VyaW4gaW4gSGVhbHRoeSBSZWNyZWF0aW9uYWwgUG9seWRydWcgVXNlcnMsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjE5NSwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBpbG90IHN0dWR5IG9mIGNvbXBhcmF0aXZlIGJpb2F2YWlsYWJpbGl0eSBiZXR3ZWVuIHR3byBkcnVncyBmb3Igb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBMb3JjYXNlcmluIEh5ZHJvY2hsb3JpZGUgaW4gcHJvbG9uZ2VkLXJlbGVhc2UgdGFibGV0cyB3aXRoIDIwIG1nIGluIGhlYWx0aHkgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLFp5ZHVzIENhZGlsYSBIZWFsdGhjYXJlIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzY3MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIGJhbGFuY2VkLCB0d28td2F5LCBjcm9zcy1vdmVyIHJhbmRvbWl6YXRpb24gc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBjb25jb21pdGFudCBmb29kIGludGFrZSBvbiB0aGUgb3JhbCBiaW9hdmFpbGFiaWxpdHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIGhlYWx0aHkgc3ViamVjdHMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNTg5NjAsMjAwOS0wNi0wMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsRXN0aW1hdGluZyBhbmQgUmVkdWNpbmcgdGhlIENhcmRpb3Zhc2N1bGFyIFJpc2sgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIERydWdzIEZyb20gTGlwaWQgTWVhc3VyZXMgYW5kIElzY2hlbWljIEVsZWN0cm9jYXJkaW9ncmFwaGljIENoYW5nZXMsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3NDI3MSwyMDA2LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJCb2R5IE1hc3MgSW5kZXggKEJNSSkgYW5kIE1ldGFib2xpYyBDaGFuZ2VzIEZvbGxvd2luZyBTd2l0Y2ggdG8gQXJpcGlwcmF6b2xlIEZyb20gT2xhbnphcGluZSwgUmlzcGVyaWRvbmUgYW5kIFF1ZXRpYXBpbmUiLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMzI4ODMsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxCRVRBLEJyb2FkIGVmZmVjdGl2ZW5lc3M6IFN0dWR5IHdpdGggYXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5Mzk1LDIwMDItMDUtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgdGFuZG9zcGlyb25lIHZlcnN1cyBzZXJ0cmFsaW5lIG1vbm90aGVyYXB5IGZvciBzb2NpYWwgYW54aWV0eSBkaXNvcmRlciIsRnVkYW4gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzgwNDQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3RobWEsMzEsbnVsbCxUcmVhdGluZyBDYXJlZ2l2ZXIgRGVwcmVzc2lvbiB0byBJbXByb3ZlIENoaWxkaG9vZCBBc3RobWE6IEltcGFjdCBhbmQgTWVkaWF0b3JzLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI2Mzk3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gKExZLTU3MzE0NCkgT3ZlciBGb3VyIE1pZ3JhaW5lIEF0dGFja3MsIkVsaSBMaWxseSAmIENvLCBFbGkgTGlsbHkgJiBDbyBvZiBJbmRpYSBJbmMiLEludGVydmVudGlvbmFsLDM1MzQ5NiwyMDE5LTA2LTIwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscGFyZG9wcnVub3gsMjQyMDIsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc3RyaWF0YWwgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IG9mIHBhcmRvcHJ1bm94LCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIFBhcmtpbnNvbidzIGRpc2Vhc2UiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MjcwNiwyMDAyLTExLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGhhZ2lhLDIwODUsSUVNUHJ1LFRyZWF0bWVudCBvZiBEeXNwaGFnaWEgYW5kIEluZWZmZWN0aXZlIEVzb3BoYWdlYWwgTW90aWxpdHkgV2l0aCBQcnVjYWxvcHJpZGU6IEEgUGlsb3QgU3R1ZHksVW5pdmVyc2l0eSBvZiBDYWxnYXJ5LEludGVydmVudGlvbmFsLDMwODI3MSwyMDE3LTEwLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLFVJMDVNU1AwMTVDVCw4NDg1OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLE1BUlMsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBVSTA1TVNQMDE1Q1QgaW4gRnVuY3Rpb25hbCBEeXNwZXBzaWEsS29yZWEgVW5pdGVkIFBoYXJtIEluYyxJbnRlcnZlbnRpb25hbCwzMDYwOTAsMjAxNC0xMS0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBvZiBUd28gU2luZ2xlIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSBUYSBCbGV0cyAoQWRtaW5pc3RlcmVkIFR3byBIb3VycyBBcGFydCkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MzY3NSwyMDA0LTEwLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFNpbmdsZS1Eb3NlLCBUd28tUGVyaW9kLCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgU3VtYXRyaXB0YW4gUGhhcm1hY29raW5ldGljcyBmb3IgYSBUcmV4aW1hIChTdW1hdHJpcHRhbiA4NSBtZyBhbmQgTmFwcm94ZW4gU29kaXVtIDUwMCBtZykgVGFibGV0IENvbXBhcmVkIFdpdGggYW4gSW1pdHJleCAoU3VtYXRyaXB0YW4pIDEwMCBtZyBUYWJsZXQiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyMDEyLDIwMDYtMDItMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLERydWcgVXNlIEludmVzdGlnYXRpb24gZm9yIEltaWdyYW4gSW5qZWN0aW9uIChTdW1hdHJpcHRhbiksR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDkzNTMsMjAwMC0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNlcm90b25pbiAxQSBBZ29uaXN0cyBhbmQgQ29nbml0aW9uIGluIFNjaGl6b3BocmVuaWEsTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzU3OTAsMjAwMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQXJpcGlwcmF6b2xlIGFuZCBMZXhhcHJvIERydWcgSW50ZXJhY3Rpb24gU3R1ZHksIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMTkyMjgsMjAwNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvY2FpbmUgYWRkaWN0aW9uLDc2LG51bGwsUGhhc2UgSSBGdW5jdGlvbmFsIE1hZ25ldGljIFJlc29uYW5jZSBJbWFnaW5nIChmTVJJKSBQaGFybWFjb2R5bmFtaWMgU3R1ZGllcyBvZiBDb21wb3VuZHMgZm9yIE9waW9pZCBVc2UgRGlzb3JkZXIgYW5kIENvY2FpbmUgVXNlIERpc29yZGVyLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5Nzk1OSwyMDE1LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxBc3Nlc3NtZW50IG9mIHRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kICgyIG1nIFRpZCBhbmQgNiBtZyBUaWQpIG9uIER5c3BlcHRpYyBTeW1wdG9tcyBpbiBEaWFiZXRpYyBQYXRpZW50cyBXaXRoIFN5bXB0b21zIG9mIERpYWJldGljIEdhc3Ryb3BhdGh5LE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyMzIsMjAwNC0wNS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsRXhwbG9yaW5nIE9jY3VwYW5jeSBvZiBEb3BhbWluZSBEMyBSZWNlcHRvciBieSBCdXNwaXJvbmUgaW4gSHVtYW5zIFVzaW5nIFBFVCxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw5MzU5NywyMDEyLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEVmZmVjdCBvZiBNb3NhcHJpZGUgb24gR3V0IFRyYW5zaXQgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiBvciBDb25zdGlwYXRlZCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgYW5kIEhlYWx0aHkgU3ViamVjdHMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMjg0NzcsMjAxNS0wNS0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJtb3RpbGlkZSwgS2l0YXNhdG8vU2hpbWl6dS9UYWtlZGEiLDMwMjAsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLEEgcGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBFTS01MjNMIG9uIGdhc3RyaWMgZW1wdHlpbmcgZnVuY3Rpb24gYW5kIHRoZSBjaGFuZ2UgaW4gcGxhc21hIGdsdWNvc2UgbGV2ZWxzIGFmdGVyIGVhdGluZyBpbiBwYXRpZW50cyB3aXRoIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMsS2l0YXNhdG8gSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIwMTA4LDE5OTQtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdHVkeSBDb21wYXJpbmcgdGhlIEdhc3Ryby1pbnRlc3RpbmFsIFRvbGVyYWJpbGl0eSBhbmQgQWJzb3JwdGlvbiBQcm9maWxlIG9mIFZvcnRpb3hldGluZSBBZnRlciBBZG1pbmlzdHJhdGlvbiBvZiBNb2RpZmllZC1yZWxlYXNlIEZvcm11bGF0aW9ucyBhbmQgSW1tZWRpYXRlLXJlbGVhc2UgRm9ybXVsYXRpb24gaW4gSGVhbHRoeSBXb21lbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxODE4NzUsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnaXRhdGlvbiwzNjA5LG51bGwsIkZvdXIgSW50ZXJ2ZW50aW9ucyBpbiB0aGUgTWFuYWdlbWVudCBvZiBQc3ljaG9tb3RvciBBZ2l0YXRpb24sIFNhZmV0eSBhbmQgRWZmaWNhY3kgRXZhbHVhdGlvbiIsVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsODMwMTMsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSAyNi13ZWVrLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBuZXVyb2NvZ25pdGl2ZSBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB3aXRoIG9sYW56YXBpbmUgaW4gc3RhYmxlIG91dHBhdGllbnRzIHdpdGggc3RhYmxlIHBzeWNob3NpcyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIxMjcsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgb2YgdGhlIFByb2Ryb21lLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDMzOTg0LDIwMDQtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENvbXBhcmlzb24gb2YgdGhlIGJlZ2lubmluZyBvZiB0aGVyYXBldXRpYyByZXNwb25zZSBiZXR3ZWVuIGRpZmZlcmVudCB0eXBpY2FsIGFuZCBhdHlwaWNhbCBhbnRpcHN5Y2hvdGljcyBpbiBhY3V0ZSBwc3ljaG9zaXMsQWh2YXogSnVuZGlzaGFwdXIgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMjA2OSwyMDE2LTEwLTE2IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDcsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiUGFyYWxsZWwtR3JvdXAsIE11bHRpcGxlLURvc2UsIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgb2YgRml2ZSBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb25zIGluIFBzeWNoaWF0cmljIFBhcnRpY2lwYW50cyIsSmFuc3NlbiBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwxNzc5MDMsMjAxNC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHJldmV4ZXByaWRlLDU3NDczLFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsU1NQLTAwMjM1OCBEcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggT21lcHJhem9sZSxTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzk5NTQsMjAxMS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsaWJpcGluYWJhbnQsMzgwOTQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLEJNUy02NDYyNTYgaW4gb2Jlc2UgYW5kIG92ZXJ3ZWlnaHQgdHlwZSAyIERpYWJldGljcyxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNTEzOCwyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZlbHVzZXRyYWcsNTQ2ODgsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB2ZWx1c2V0cmFnIGFzIGEgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBjaHJvbmljIGNvbnN0aXBhdGlvbiwgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTg5NjcsMjAwOS0wNi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLCJtZWxveGljYW0gKyByaXphdHJpcHRhbiAoZml4ZWQtZG9zZSBjb21iaW5hdGlvbi9vcmFsLCBtaWdyYWluZSksIEF4c29tZSIsMTA4NDYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LE1PTUVOVFVNLE1heGltaXppbmcgT3V0Y29tZXMgaW4gVHJlYXRpbmcgQWN1dGUgTWlncmFpbmUsQXhzb21lIFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzIwODg4LDIwMTktMDMtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgZm9yIHRoZSBlYXJseSB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBwc3ljaG90aWMgc2lzb3JkZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2MTQ1LDIwMDItMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDI1LFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLE5PTlNUT1AsQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFRyZWF0bWVudCB2ZXJzdXMgRGlzY29udGludWF0aW9uIGluIGEgRmlyc3QgRXBpc29kZSBvZiBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyxGdW5kYWNp824gUPpibGljYSBBbmRhbHV6YSBQYXJhIExhIEdlc3Rp824gRGUgTGEgSW52ZXN0aWdhY2nzbiBFbiBTYWx1ZCBEZSBTZXZpbGxhLEludGVydmVudGlvbmFsLDEwNDM1MiwyMDEyLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIpLCBPdHN1a2EvQk1TIiw1MzI1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIEFjdXRlbHkgQWdpdGF0ZWQgUGF0aWVudHMgRGlhZ25vc2VkIFdpdGggRGVtZW50aWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM0NSwyMDAzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxBcmlwaXByYXpvbGUgZm9yIFByZXZlbnRpb24gb2YgUmVsYXBzZSB0byBDb2NhaW5lIFVzZSBpbiBNZXRoYWRvbmUtTWFpbnRlbmFuY2UgUGF0aWVudHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMzIxMDEsMjAwOC0wNS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkZyb3ZhdHJpcHRhbiBWZXJzdXMgWm9sbWl0cmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIGEgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE3MTcyLDIwMDctMDMtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdG9tYWNoIHVsY2VyLDgwNSxudWxsLFRoZSBPcGVuIFN0dWR5IGZvciB0aGUgRWZmZWN0cyBvZiBNb3NhcHJpZGUgQ2l0cmF0ZSBvbiBHYXN0cmljIFVsY2VyIEhlYWxpbmcgYWZ0ZXIgRW5kb3Njb3BpYyBTdWJtdWNvc2FsIERpc2VjdGlvbixLeW90byBQcmVmZWN0dXJhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzNDgwOCwyMDEwLTA3LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxFZmZlY3RpdmVuZXNzIG9mIEJ1c3Bpcm9uZSBhbmQgTW90aXZhdGlvbmFsIEVuaGFuY2VtZW50IFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFyaWp1YW5hIERlcGVuZGVuY2UgLSAxLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjI3MywyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLFN0dWR5IG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRpbmcgQW50aXBzeWNob3RpYyBOYWl2ZSBvciBRdWFzaS1OYWl2ZSBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw5ODkzMCwyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxNQkQsTlJYLTEwMSBmb3IgTW9kZXJhdGUgQmlwb2xhciBEZXByZXNzaW9uIGFuZCBTdWljaWRhbCBJZGVhdGlvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUyOTEsMjAxOS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxudWxsLEJpb3NpZ25hdHVyZXMgb2YgTGF0dWRhIGZvciBCaXBvbGFyIERlcHJlc3Npb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDIxMDMxNiwyMDE1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyLCB0d28tYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5ICgxMCBvciAyMCBtZykgaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGFjdXRlIG1pZ3JhaW5lIHdpdGggYW5kIHdpdGhvdXQgYXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzEyOCwyMDAxLTAxLTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElsZXVzLDE1MTksbnVsbCxQcnVjYWxvcHJpZGUgZm9yIFBvc3Qtb3BlcmF0aXZlIElsZXVzIGluIFBhdGllbnRzIFVuZGVyZ29pbmcgR2FzdHJvaW50ZXN0aW5hbCBTdXJnZXJ5LEppbmxpbmcgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTYzMTUwLDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiWm9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUvY2x1c3RlciBoZWFkYWNoZSksIFpvc2FubyBQaGFybWEiLDc3MjA4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLEFEQU0sQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBNLTIwNyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzMTI1NTQsMjAxNy0xMS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLWxhYmVsLCBwaGFzZSBJLCBzaW5nbGUgZG9zZSBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBHUi04NTU0OCBpbiBzdWJqZWN0cyB3aXRoIGltcGFpcmVkIHJlbmFsIGZ1bmN0aW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4Mjc1LDE5OTQtMTEtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERpYWJldGVzIG1lbGxpdHVzLDk3LG51bGwsQW50aXBzeWNob3RpY3MgYW5kIEdlbmUgRXhwcmVzc2lvbiBpbiBTb2Z0IFRpc3N1ZXMsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFZpZW5uYSxJbnRlcnZlbnRpb25hbCwxOTI1OTAsMjAxMC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxQaGFzZSBJSUkgRWZmaWNhY3kgVHJpYWwgb2YgQnVzcGlyb25lIHdpdGggQ29tcGFyaXNvbiB0byBTZXJ0cmFsaW5lIGluIFRyZWF0bWVudCBvZiBHZW5lcmFsIEFueGlldHkgRGlzb3JkZXIsTGliYnMgRmFybWFjZXV0aWNhIEx0ZGEsSW50ZXJ2ZW50aW9uYWwsMTI0NDYxLDIwMTItMDYtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmVjdHMgb2YgNyBEYXkgUHJ1Y2Fsb3ByaWRlIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNDQ2MjcsMjAxOC0wNi0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgVG8gQXNzZXNzIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgWmlwcmFzaWRvbmUgSW4gVG91cmV0dGUncyBTeW5kcm9tZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMTAwODYsMTk5OS0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsSWRlbnRpZmljYXRpb24gYW5kIFRyZWF0bWVudCBSZXNwb25zZSBQcmVkaWN0aW9uIG9mIEFudGlwc3ljaG90aWMtUmVsYXRlZCBNZXRhYm9saWMgU3luZHJvbWUsTmF0aW9uYWwgVGFpd2FuIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNTk1MTEsMjAwOS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN5bmRyb21lIFgsMTU4NSxudWxsLFRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBQYXRpZW50cyBXaXRoIE1ldGFib2xpYyBTeW5kcm9tZSxVUyBEZXBhcnRtZW50IG9mIFZldGVyYW5zIEFmZmFpcnMsSW50ZXJ2ZW50aW9uYWwsMzQ1OTcsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3luZHJvbWUgWCwxNTg1LG51bGwsQSBQaGFzZSBJViBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIFZlcnN1cyBPdGhlciBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTk0MTksMjAwNy0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGVyaXBoZXJhbCBuZXVyb3BhdGh5LDI1OSxYRU5PTixSb2xlIG9mIFhhbGlwcm9kZW4gb24gUmVjb3ZlcnkgUmF0ZSBGcm9tIFNldmVyZSBOZXVyb3BhdGh5IGluIFBhdGllbnRzIFdobyBIYXZlIENvbXBsZXRlZCBBZGp1dmFudCBDaGVtb3RoZXJhcHkgV2l0aCBPeGFsaXBsYXRpbiBCYXNlZCBSZWdpbWVucywiUG9saWNsaW5pY28gVW5pdmVyc2l0YXJpbyBBZ29zdGlubyBHZW1lbGxpLCBTYW5vZmkgU0EiLEludGVydmVudGlvbmFsLDI2MjA3LDIwMDgtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGFuZG9zcGlyb25lLDM2MTksRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgQXVnbWVudGF0aW9uIFRoZXJhcHkgV2l0aCBUYW5kb3NwaXJvbmUgb24gQ29nbml0aW9uIGFuZCBTb2NpYWwgRnVuY3Rpb24gaW4gU2NoaXpvcGhyZW5pYSwiSGl6ZW4gUHN5Y2hpYXRyaWMgQ2VudGVyLCBKaWtlaSBVbml2ZXJzaXR5LCBLYW5hemF3YSBNZWRpY2FsIFVuaXZlcnNpdHksIEthbnNhaSBNZWRpY2FsIFVuaXZlcnNpdHksIE9rYXlhbWEgVW5pdmVyc2l0eSwgT3Nha2EgVW5pdmVyc2l0eSwgU3QgTWFyaWFubmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFRveWFtYSBVbml2ZXJzaXR5IixJbnRlcnZlbnRpb25hbCwxMTgyMTYsMjAxMi0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW4gOC13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGFjdGl2ZS1jb250cm9sbGVkLCBoZWFkLXRvLWhlYWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIHJpc3Blcmlkb25lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU3MiwxOTk1LTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEhEWixIaWdoLURvc2UgT3JhbCBaaXByYXNpZG9uZSBWZXJzdXMgQ29udmVudGlvbmFsIERvc2luZyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBSZXNpZHVhbCBTeW1wdG9tcywiTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLCBQZml6ZXIgSW5jIixJbnRlcnZlbnRpb25hbCwzNjMwMSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJTdHVkeSBFdmFsdWF0aW5nIFRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgQW5kIEVmZmljYWN5IE9mIFN3aXRjaGluZyBGcm9tIFF1ZXRpYXBpbmUgVG8gWmlwcmFzaWRvbmUiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU4MTAsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQ2xvemFwaW5lLUF1Z21lbnRhdGlvbiBXaXRoIFppcHJhc2lkb25lIG9yIFJpc3Blcmlkb25lLCBhIFJhbmRvbWl6ZWQsIFByb3NwZWN0aXZlIFRyaWFsIixDZW50cmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM1NzkyLDIwMDMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEFQIFByb2plY3QsRG9zZSByZWR1Y3Rpb24gb3Igc3dpdGNoIHRvIHppcHJhc2lkb25lIGZvbGxvd2VkIGJ5IGNsb3phcGluZSB0aGVyYXB5OiB3aGF0IHdvcmtzIGJldHRlciBpbiBhIGxvbmcgc3RheSBzY2hpem9waHJlbmlhIGdyb3VwPyxVbml2ZXJzaXRlaXQgVXRyZWNodCxJbnRlcnZlbnRpb25hbCwyNzAyMDMsMjAwNy0wNy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LE5SWC1HTFgsTlJYMTAxIEdseCBCaW9tYXJrZXIgVmFsaWRhdGlvbiBTdHVkeSwiTmV1cm9SeCBJbmMsIE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDIzLDIwMTgtMTEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsQ0wtSDFULDYyNjA2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLEVzdGltYXRpbmcgYW5kIFJlZHVjaW5nIHRoZSBDYXJkaW92YXNjdWxhciBSaXNrIG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBEcnVncyBGcm9tIExpcGlkIE1lYXN1cmVzIGFuZCBJc2NoZW1pYyBFbGVjdHJvY2FyZGlvZ3JhcGhpYyBDaGFuZ2VzLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzQyNzEsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxNZWNoYW5pc3RpYyBJbnZlc3RpZ2F0aW9uIE9mIEludGVzdGluYWwgQ3l0b2Nocm9tZSBwNDUwIDNBNCBGb2xsb3dpbmcgUm91eC1lbi1ZIFN1cmdlcnkgQW5kIEl0cyBFZmZlY3Qgb24gUGxhc21hIENvbmNlbnRyYXRpb25zIG9mIEJ1c3Bpcm9uZSxOb3J0aCBEYWtvdGEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzM5ODcsMjAxNS0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsQmlvYXZhaWxhYmlsaXR5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiAoQnVzcGFyKSBCdXNwaXJvbmUgSENsIFRhYmxldHMgVW5kZXIgRmFzdGluZyBhbmQgRmVkIENvbmRpdGlvbnMsUGFyIFBoYXJtYWNldXRpY2FsIENvIEluYyxJbnRlcnZlbnRpb25hbCwxOTg0MDQsMTk5OC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCxCaW9hdmFpbGFiaWxpdHksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIChCdXNwYXIpIEJ1c3Bpcm9uZSBIQ2wgVGFibGV0cyBVbmRlciBGYXN0aW5nIENvbmRpdGlvbnMsUGFyIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwxOTE4MDgsMTk5OC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLERvZXMgVmlsYXpvZG9uZSBIZWxwIFdpdGggQW50aWRlcHJlc3NhbnQtYXNzb2NpYXRlZCBTZXh1YWwgRHlzZnVuY3Rpb24/LFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzIwNzUsMjAxMy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFN0dWR5IHRvIEFzc2VzcyBEb3BhbWluZSBSZWNlcHRvciBNb2R1bGF0aW9uIFdpdGggUm90aWdvdGluZSB0byBFbmhhbmNlIE1vcnBoaW5lIEFuYWxnZXNpYSBpbiB0aGUgRGVudGFsIE1vZGVsLEVhc3QgQ2Fyb2xpbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxODQyODcsMjAxNS0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzLCBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBhcyBhbiBhZGQtb24gbWVkaWNhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgcmVzaXN0YW50IHRvIGNsb21pcHJhbWluZSB0cmVhdG1lbnQiLFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgTmFwb2xpIEZlZGVyaWNvIElJLEludGVydmVudGlvbmFsLDg1NTkyLDIwMTEtMDMtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLERvcGFtaW5lcmdpYyBFZmZlY3RzIG9mIEFkanVuY3RpdmUgQXJpcGlwcmF6b2xlIG9uIHRoZSBCcmFpbiBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24sV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDU5NTUwLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQWJpbGlmeSBBdWdtZW50YXRpb24gb2YgU1NSSSBUaGVyYXB5IGluIFRyZWF0bWVudCBSZWZyYWN0b3J5IERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxMDYsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCwiQSA0LVdlZWssIE9wZW4tTGFiZWwsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IFRvIENvbXBhcmUgTWlydGF6YXBpbmUgTW9ub3RoZXJhcHkgVmVyc3VzIENvbWJpbmF0aW9uIFRoZXJhcHkgV2l0aCBNaXJ0YXphcGluZSBhbmQgQXJpcGlwcmF6b2xlIGluIERlcHJlc3NlZCBQYXRpZW50cyBXaXRob3V0IFBzeWNob3RpYyBGZWF0dXJlcyIsTHVkd2lnLU1heGltaWxpYW5zIFVuaXZlcnNpdHkgb2YgTXVuaWNoLEludGVydmVudGlvbmFsLDE0NTc2NCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLExpdmVyIGRpc2Vhc2UsMjAxLG51bGwsIlBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZvcnRpb3hldGluZSBpbiBOb3JtYWwgSGVwYXRpYyBGdW5jdGlvbiBvciBTZXZlcmUgSGVwYXRpYyBJbXBhaXJtZW50IixUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE5ODgzNiwyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIENhcmlwcmF6aW5lIFN0dWR5IGluIHRoZSBQcmV2ZW50aW9uIG9mIFJlbGFwc2UgaW4gQmlwb2xhciBJIERpc29yZGVyIFBhdGllbnRzIFdob3NlIEN1cnJlbnQgRXBpc29kZSBpcyBNYW5pYyBvciBEZXByZXNzaXZlLCBXaXRoIG9yIFdpdGhvdXQgTWl4ZWQgRmVhdHVyZXMiLCJBbGxlcmdhbiBTaW5nYXBvcmUgUFRFIEx0ZCwgRm9yZXN0IExhYm9yYXRvcmllcyBJbmMiLEludGVydmVudGlvbmFsLDM0NDkxOCwyMDE4LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3RvciBuZXVyb25lIGRpc2Vhc2UsMjEyLG51bGwsRG9wYW1pbmUgQWdvbmlzdCBmb3IgSGVtaXNwYXRpYWwgTmVnbGVjdCBhbmQgTW90b3IgRGVmaWNpdCBQb3N0IFN0cm9rZSxVbml2ZXJzaXR5IENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExMDg2LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1Db250cm9sbGVkIHBpbG90IHN0dWR5IG9mIGF1Z21lbnRhdGlvbiB0aGVyYXB5IHRvIGV2YWx1YXRlIHppcHJhc2lkb25lIGF1Z21lbnRhdGlvbiBvZiBTU1JJcyBpbiBwYXRpZW50cyB3aXRoIHBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciIsIk90c3VrYSBIb2xkaW5ncyBDbyBMdGQsIFBmaXplciBJbmMiLEludGVydmVudGlvbmFsLDM3NDc0NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYWxjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsIEFzc2lnbm1lbnQsIFBoYXNlIElWIFN0dWR5IHRvIEV2YWx1YXRlIFRoZSBFZmZpY2FjeSBvZiBaaXByYXNpZG9uZSAoR2VvZG9uKSBpbiBUaGUgVHJlYXRtZW50IG9mIENpdmlsaWFuIE1lbiBBbmQgV29tZW4gV2l0aCBTZXZlcmUgUG9zdCBUcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIChQVFNEKSIsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjEwNzQsMjAwMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsVGhlIENsaW5pY2FsIFN0dWR5IG9mIEFjdXRlIFBhbmNyZWF0aXRpcyBUcmVhdGVkIGJ5IFRvbmdGdVNhbixCZWlqaW5nIEZyaWVuZHNoaXAgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA2OTgxLDIwMTQtMDMtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsIkJvZHkgTWFzcyBJbmRleCAoQk1JKSBhbmQgTWV0YWJvbGljIENoYW5nZXMgRm9sbG93aW5nIFN3aXRjaCB0byBBcmlwaXByYXpvbGUgRnJvbSBPbGFuemFwaW5lLCBSaXNwZXJpZG9uZSBhbmQgUXVldGlhcGluZSIsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjg4MywyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQM18xWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBPbmUtWWVhciBGb2xsb3ctVXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg1NDcsMjAxNC0wNS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDksUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsRFJFYU0sQSBTdHVkeSB0byBDb21wYXJlIERpc2Vhc2UgUHJvZ3Jlc3Npb24gYW5kIE1vZGlmaWNhdGlvbiBGb2xsb3dpbmcgVHJlYXRtZW50IHdpdGggUGFsaXBlcmlkb25lIFBhbG1pdGF0ZSBMb25nLUFjdGluZyBJbmplY3Rpb24gb3IgT3JhbCBBbnRpcHN5Y2hvdGljcyBpbiBQYXJ0aWNpcGFudCdzIHdpdGggUmVjZW50LU9uc2V0IFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvcGhyZW5pZm9ybSxKYW5zc2VuIFNjaWVudGlmaWMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwyMjg4OTEsMjAxNS0wNy0wOCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLCJSZXZlcnNhbCBvZiBBbnRpcHN5Y2hvdGljLUluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhLCBXZWlnaHQgR2FpbiwgSHlwZXJnbHljZW1pYSBhbmQgRHlzbGlwaWRlbWlhIixHZW5vdmF0ZSBCaW90ZWNobm9sb2d5IENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDE5OCwyMDA3LTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHJlbWVuc3RydWFsIHN5bmRyb21lLDQ4MCxudWxsLCJBIFNpbmdsZS1jZW50ZXIsIFNpbmdsZS1CbGluZCwgUmFuZG9taXplZCBUcmlhbCBUbyBDb21wYXJlIFRoZSBFZmZpY2FjeSBPZiBCdXNwaXJvbmUgVmVyc3VzIEZsdW94ZXRpbmUgSW4gVGhlIFRyZWF0bWVudCBPZiBQcmVtZW5zdHJ1YWwgU3luZHJvbWUiLExvcmVzdGFuIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE4OTg0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBhIENvbWJpbmF0aW9uIFByb2R1Y3QgKEJDSS0wMjQgYW5kIEJDSS0wNDkpIHRvIFRyZWF0IE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIzMDU2LDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgYnVzcGlyb25lIGZvciB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBzZXZlcmUgZGVwcmVzc2lvbiIsVW5pdmVyc2l0eSBvZiBIZWxzaW5raSxJbnRlcnZlbnRpb25hbCwxMTA3ODgsMjAwMS0wNi0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxXZWlnaHQgZ2FpbiwyOTU0LG51bGwsTG9yY2FzZXJpbiBmb3IgV2VpZ2h0IExvc3MgTWFuYWdlbWVudCBpbiBQYXRpZW50cyBvbiBBbnRpcHN5Y2hvdGljczogQSBQaWxvdCBTdHVkeSxTb3V0aGVybiBDYWxpZm9ybmlhIEluc3RpdHV0ZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbixJbnRlcnZlbnRpb25hbCwxNTgzNDQsMjAxNC0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsTm9yZExPVFMgc3RlcCAzLE5vcmRpYyBMb25nLVRlcm0gT2JzZXNzaXZlIENvbXB1bHNpdmUgRGlzb3JkZXIgKE9DRCkgVHJlYXRtZW50IFN0dWR5LCJDZW50cmUgZm9yIENoaWxkIGFuZCBBZG9sZXNjZW50IE1lbnRhbCBIZWFsdGgsIEVhc3Rlcm4gYW5kIFNvdXRoZXJuIE5vcndheSIsSW50ZXJ2ZW50aW9uYWwsMTQ4MDI0LDIwMDgtMDEtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIkFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gb2YgU2Vyb3RvbmluIFJldXB0YWtlIEluaGliaXRvcnMgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcjogQSAxMC1XZWVrLCBPcGVuLUxhYmVsIFN0dWR5IixHdWxoYW5lIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ2NzYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxST0NBQVMsIlJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgZm9yIE9DRCBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIHRvIFNTUkkiLEt5dXNodSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEzODAzOSwyMDEzLTEwLTAxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsQ09NUEFTUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDIwIG1nIFN1bWF0cmlwdGFuIFBvd2RlciBEZWxpdmVyZWQgSW50cmFuYXNhbGx5IFdpdGggdGhlIEJpLWRpcmVjdGlvbmFsIERldmljZSBDb21wYXJlZCBXaXRoIDEwMCBtZyBTdW1hdHJpcHRhbiBUYWJsZXRzIGluIEFkdWx0cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkwMzAzLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixudWxsLCJFZmZpY2FjeSBvZiBCdXNwaXJvbmUsIGEgRnVuZHVzLVJlbGF4aW5nIERydWcsIGluIFBhdGllbnRzIHdpdGggRnVuY3Rpb25hbCBEeXNwZXBzaWEiLEthdGhvbGlla2UgVW5pdmVyc2l0ZWl0IExldXZlbixJbnRlcnZlbnRpb25hbCwxNDYxMDMsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFBoYXNlIElJLCBNdWx0aWNlbnRlciwgT3Blbi1MYWJlbCBTdHVkeSBPZiBDbGluaWNhbCBQaGFybWFjb2xvZ3ksIFNhZmV0eSwgQW5kIFRvbGVyYWJpbGl0eSBPZiBaaXByYXNpZG9uZSBJbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLE1laWppIFNlaWthIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTg4MTEsMjAxMi0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LVdlZWssIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIEZsZXhpYmxlLURvc2UsIFBhcmFsbGVsLURlc2lnbiwgQ29udHJvbGxlZCBTdHVkeSBUbyBDb21wYXJlIEVmZmljYWN5IEFuZCBUb2xlcmFiaWxpdHkgT2YgWmlwcmFzaWRvbmUgVmVyc3VzIE9sYW56YXBpbmUgSW4gTmFpdmUgRmlyc3QtRXBpc29kZSBTY2hpem9waHJlbmlhIixYaWFuZ3lhIEhvc3BpdGFsIE9mIENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw5NDM1NCwyMDEyLTAxLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA2LXdlZWssIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZmxleGlibGUtZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgaW0vb3JhbCB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY3MTksMjAwMi0wMy0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBkb3NlLWVzY2FsYXRpb24gc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBjZW50cmFsIGRvcGFtaW5lIEQyIHJlY2VwdG9yIG9jY3VwYW5jeSBieSB6aXByYXNpZG9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzUwNiwxOTkzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUksIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBleGFjZXJiYXRpb24gb2Ygc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNTM0ODQsMTk5OC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFByb3Bvc2FsIFRvIERldmVsb3AgQSBSYXBpZCBBbmQgQ29zdC1FZmZlY3RpdmUgRGlhZ25vc3RpYyBUZXN0IEZvciBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgQXJpem9uYSxJbnRlcnZlbnRpb25hbCwzNjM5ODUsMjAxNy0xMS0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBTVBVUyxUaGUgQ0FNUFVTIFByb2plY3Q6IENob2xpbmVyZ2ljIEF1Z21lbnRhdGlvbiBvZiBDb2duaXRpdmUgRGVmaWNpdHMgaW4gU2NoaXpvcGhyZW5pYSxCaXNwZWJqZXJnIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2MjgwLDIwMDItMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMzYyMDIsMjAwMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQZml6ZXIvSVZHVFQvWmlwcmFzaWRvbmUvT2xhbnphcGluZSxXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QgTG91aXMsSW50ZXJ2ZW50aW9uYWwsMzU4MCwyMDAwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgQ29tcGFyaW5nIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFppcHJhc2lkb25lIGFuZCBSaXNwZXJpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTQ3NCwyMDAzLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IENvbXBhcmluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIEhvc3BpdGFsaXplZCBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDY5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljcyxCcm9ueCBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxNTMsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMzEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQSUMsQW50aXBzeWNob3RpYyBJbmR1Y2VkIFN0cnVjdHVyYWwgYW5kIEZ1bmN0aW9uYWwgQnJhaW4gQ2hhbmdlcyxSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuLEludGVydmVudGlvbmFsLDIyODYwOCwyMDE1LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAyLCJDb21wYXJhdGl2ZSBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIFF1ZXRpYXBpbmUgYW5kIFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpcyIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMTc0NjEsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDbGluaWNhbCBlZmZlY3Qgb2YgY3Jvc3MgdGl0cmF0aW9uIG9mIGFudGktcHN5Y2hvdGljcyB3aXRoIHppcHJhc2lkb25lIGluIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjA5NjgsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAyNC1XZWVrLCBPcGVuLUxhYmVsIFN0dWR5IG9uIFppcHJhc2lkb25lJ3MgRWZmaWNhY3kgYW5kIEluZmx1ZW5jZSBvbiBHbHVjb2xpcGlkIE1ldGFib2xpc20gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGFuZCBNZXRhYm9saWMgRGlzb3JkZXIiLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDE1NzM3MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgVHJpYWwgVG8gRXZhbHVhdGUgU3dpdGNoaW5nIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSB0byBaaXByYXNpZG9uZSBGcm9tIENvbnZlbnRpb25hbCBvciBPdGhlciBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyxKYWhuIEZlcmVuYyBEZWwtcGVzdGkgS29yaGF6LEludGVydmVudGlvbmFsLDE0Njk5OCxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgMjgtV2VlayBUcmlhbCBUbyBDb21wYXJlIFppcHJhc2lkb25lIGFuZCBIYWxvcGVyaWRvbCBpbiBPdXRwYXRpZW50cyBXaXRoIFN0YWJsZSBTY2hpem9waHJlbmlhLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ1MTkzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgc2l4LXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGltcGFjdCBvZiBjYWxvcmllcyBhbmQgZmF0IGNvbnRlbnQgb2YgbWVhbHMgb24gb3JhbCB6aXByYXNpZG9uZSBhYnNvcnB0aW9uIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsIGJpcG9sYXIgZGlzb3JkZXIsIG9yIHBzeWNob3RpYyBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2Mjk5OCwyMDA2LTA3LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxNb29kIFN0YWJpbGl6ZXIgKE1TKSBwbHVzIEFudGlkZXByZXNzYW50IHZlcnN1cyBNUyBwbHVzIFBsYWNlYm8gaW4gTWFpbnRlbmFuY2Ugb2YgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsNTk1NzUsMjAxMC0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IG9mIExpY2FyYmF6ZXBpbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBNYW5pYyBFcGlzb2RlcyBvZiBCaXBvbGFyIERpc29yZGVyLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDM2NTI2LDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsR2VvZG9uIGluIFdlaWdodCBMb3NzIFN0dWR5IGZvciBCaXBvbGFyIERpc29yZGVycyxTdGFuZm9yZCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1MTExLDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBvciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzg0NCwyMDA2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBbiA4LVdlZWssIE11bHRpY2VudGVyLCBPcGVuLUxhYmVsIFN0dWR5IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgU3dpdGNoaW5nIHRvIFppcHJhc2lkb25lIGZyb20gT2xhbnphcGluZSBpbiBQYXRpZW50cyB3aXRoIEJpcG9sYXIgSSBEaXNvcmRlciIsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNTk3NTAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFppcHJhc2lkb25lIFdpdGggQWRqdW5jdGl2ZSBNb29kIFN0YWJpbGl6ZXIgaW4gdGhlIE1haW50ZW5hbmNlIFRyZWF0bWVudCBvZiBCaXBvbGFyIEkgRGlzb3JkZXI6IExvbmctVGVybSBDaGFuZ2VzIGluIFdlaWdodCBhbmQgTWV0YWJvbGljIFByb2ZpbGVzLENhc2UgV2VzdGVybiBSZXNlcnZlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ2MTc5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgcGhhc2UgSUksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBlZmZpY2FjeSBzdHVkeSBvZiBnZXBpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGF0eXBpY2FsIGRlcHJlc3Npb24iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNDUwNzEsMTk5NC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQ29wZXJuaWNvLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgYSBGaXhlZC1kb3NlIENvbWJpbmF0aW9uIG9mIE5hcmF0cmlwdGFuIGFuZCBOYXByb3hlbiBpbiBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsQWNoZSBMYWJvcmF0b3Jpb3MgRmFybWFjZXV0aWNvcyBTQSxJbnRlcnZlbnRpb25hbCw5ODE5NiwyMDE0LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBuYXJhdHJpcHRhbiBhcyBwcm9waHlsYWN0aWMgdHJlYXRtZW50IGZvciBtZW5zdHJ1YWxseS1hc3NvY2lhdGVkIG1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTk0LDE5OTktMTItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBhc2NlbmRpbmcgZG9zZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIHBoYXJtYWNvZHluYW1pYyBhbmQgcGhhcm1hY29raW5ldGljIHJlc3BvbnNlIHRvIHR3byBkb3NlcyBvZiBvcmFsIEdSLTg1NTQ4QSBzZXBhcmF0ZWQgYnkgNCBoIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3OTgyLDE5OTMtMTAtMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgYWN0aXZlLSwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbmFyYXRyaXB0YW4gY29tcGFyZWQgd2l0aCBuYXByb3hlbiBzb2RpdW0gb24gbWlncmFpbmUtcmVsYXRlZCBxdWFsaXR5IG9mIGxpZmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyMDUsMTk5Ny0xMC0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgdHdvLWF0dGFjaywgY3Jvc3Mtb3ZlciBvdXRwYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIG5hcmF0cmlwdGFuIHdpdGggb3JhbCBzdW1hdHJpcHRhbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIHBhdGllbnRzIHN1c2NlcHRpYmxlIHRvIGhlYWRhY2hlIHJlY3VycmVuY2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxOTcsMTk5NS0wOS0xNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBuYXJhdHJpcHRhbiBvbiBjYXJkaWFjIGhlbW9keW5hbWljcyBpbiBwYXRpZW50LXZvbHVudGVlcnMgd2l0aCBleGlzdGluZyBvciBzdXNwZWN0ZWQgY29yb25hcnkgYXJ0ZXJ5IGRpc2Vhc2UiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxNzMsMTk5NS0wOS0yNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBvbiB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTY3LDE5OTYtMDItMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBoYXNlIElJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgbG9uZy10ZXJtIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbmFyYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzEyMiwxOTk1LTA2LTI2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNQVRSSVgoTWlncmFpbmVyIEFzc2VzcyBUUmlwdGFuZSBlWGFtaW5hdGlvbiksVW5pdmVyc2l0eSBvZiBUc3VrdWJhLEludGVydmVudGlvbmFsLDEzMjc4NSwyMDEwLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIGRvc2UtcmFuZ2luZywgbGF0ZSBwaGFzZSBJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgbmV1cm9zaXMiLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTAyNTIsMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZS1kaWFycmhlYSBhbmQgYW54aWV0eSIsVGhlIEZpcnN0IEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgWmhlbmd6aG91IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjM5NzIxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixKTU1TLCJBIFByb3NwZWN0aXZlLCBMYXJnZS1TY2FsZSwgT3Blbi1MYWJlbCwgUmFuZG9taXplZCBDbGluaWNhbCBTdHVkeSBvZiBNb3NhcHJpZGUgb3IgVGVwcmVub25lIGluIFRyZWF0aW5nIEZ1bmN0aW9uYWwgRHlzcGVwc2lhOiBKYXBhbiBNb3NhcHJpZGUgTWVnYS1TdHVkeSAoSk1NUykiLFRIRSBXQUtTTUFOIEZPVU5EQVRJT04gT0YgSkFQQU4gSU5DLEludGVydmVudGlvbmFsLDE3MzM1NCxudWxsLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkludmVzdGlnYXRpb24gT2YgUmVsYXRpb25zaGlwcyBBbW9uZyBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMsIEZpbmRpbmdzIE9mIEVzb3BoYWdvZ2FzdHJvZHVvZGVub3Njb3B5IChFR0QpIEFuZCBRdWFsaXR5IE9mIExpZmUgKFFPTCkgQW5kIENvbXBhcmluZyBTdHVkeSBPZiBUaGVyYXBldXRpYyBFZmZlY3RzIE9mIFZhcmlvdXMgR2FzdHJvaW50ZXN0aW5hbCBEcnVncyBPbiBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMgT2YgUGF0aWVudHMgV2l0aCBGdW5jdGlvbmFsIER5c3BlcHNpYSAoRkQpIE9yIE5vbi1Fcm9zaXZlIFJlZmx1eCBEaXNlYXNlIChORVJEKSBCeSBVc2luZyBRdWVzdGlvbm5haXJlcyBUbyBFdmFsdWF0ZSBVcHBlciBBYmRvbWluYWwgU3ltcHRvbXMgKEdPUykgQW5kIFFPTCAoU0YtOCkiLE1peWFnaSBDYW5jZXIgU29jaWV0eSxJbnRlcnZlbnRpb25hbCwxMzYzNjQsMjAwOS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUNvbXBhcmlzb24sIENyb3Nzb3ZlciBTdHVkeSAgb2YgU3ViY3V0YW5lb3VzIEdSLTQzMTc1YyAoNiBhbmQgMTIgbWcpIGZvciBUaGUgQWN1dGUgVHJlYXRtZW50IG9mIENsdXN0ZXIgSGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTgyOTAwLDE5OTAtMTAtMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQW4gT3BlbiBEZXNpZ24sIE11bHRpcGxlIFRyZWF0bWVudCBTdHVkeSB0byBFdmFsdWF0ZSBTdWJjdXRhbmVvdXMgU3VtYXRyaXB0YW4gKDYgbWcpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgQ2x1c3RlciBIZWFkYWNoZSBBdHRhY2tzIER1cmluZyBhIDMtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0OTM1MSwxOTkxLTA5LTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgY3Jvc3NvdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiBpbiBjbHVzdGVyIGhlYWRhY2hlIixMZWlkZW4gVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMTYyNzYsMjAwMy0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgYSBtaWdyYWluZSBoZWFkYWNoZSBhdCB0aGUgZmlyc3Qgc2lnbiBvZiBwYWluIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODQ5LDIwMDEtMDItMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIlJpemF0cmlwdGFuIDUgYW5kIDEwIG1nLCBTdW1hdHJpcHRhbiAxMDAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0Njc1LDE5OTUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEJHRy00OTIgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSwiTm92YXJ0aXMgQUcsIE5vdmFydGlzIFBoYXJtYSBBRyIsSW50ZXJ2ZW50aW9uYWwsNTM4MDQsMjAwOS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiU29mdXNhIFN5c3RlbSBXaXRoIFN1bWF0cmlwdGFuIChLQy01MDEwKSBQaGFzZSBJLCBEb3NlLUVzY2FsYXRpb24gYW5kIFNhZmV0eSBTdHVkeSIsS2ltYmVybHktQ2xhcmsgV29ybGR3aWRlIEluYyxJbnRlcnZlbnRpb25hbCwzMDY2MDEsMjAxOC0wMS0xNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmUgUEsgYW5kIEJpb2F2YWlsYWJpbGl0eSBvZiBUd28gTlAtMTAxIFBhdGNoZXMgV2l0aCBPcmFsIEltaXRyZXggaW4gSGVhbHRoeSBBZHVsdHMsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzgwNDUsMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUliLCBtdWx0aWNlbnRlciwgZG91bGJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIGFjdGl2ZS1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBzdW1hdHJpcGFuIG9yIE1pZ3JpbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTg5MzIsMTk5MC0xMC0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUcmV4aW1hIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGVzLFBPWkVOIEluYyxJbnRlcnZlbnRpb25hbCwxNDA2MCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG91dHBhdGllbnQsIGZvdXItcGVyaW9kLCBjcm9zc292ZXIsIGZvdXItYXR0YWNrIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIDI1LCA1MCBhbmQgMTAwIG1nIHBvIHN1bWF0cmlwdGFuIGluIGFkb2xlc2NlbnQgbWlncmFpbmUgc3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTI4ODE3LDE5OTUtMDMtMDMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGludHJhdmVub3VzIHZhbHByb2ljIGFjaWQgKGlWUEEpIHdpdGggaW50cmFtdXNjdWxhciBtZXRvY2xvcHJhbWlkZSBhbmQgc3ViY3V0YW5lb3VzIChzYykgc3VtYXRyaXB0YW4gZm9yIHByb2xvbmdlZCBhY3V0ZSBtaWdyYWluZSIsR3VpbGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjg4MDYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBQcm9zcGVjdGl2ZSwgT3BlbiwgTXVsdGktYXR0YWNrIFN0dWR5IG9mIFBhdGllbnQgUHJlZmVyZW5jZSBhbmQgRWZmaWNhY3kgYmV0d2VlbiBab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXkgNSBtZyBhbmQgU3VtYXRyaXB0YW4gUkRUIDEwMCBtZyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHb3RoZW5idXJnIE1pZ3JhaW5lIENsaW5pYyxJbnRlcnZlbnRpb25hbCwxMTcxNzMsMjAwNy0xMC0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYWxtb3RyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixQaGFybWFjaWEgQ29ycCxJbnRlcnZlbnRpb25hbCwxMDk3NDEsMjAwMC0wNC0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGZvciB0aGUgY29tcGFyaXNvbiBvZiB0aGUgZWZmZWN0aXZlbmVzcyBvZiBvcmFsIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBpbiByZWR1Y2luZyB0aGUgdGltZSBsb3NzIGFuZCBvdmVyYWxsIGltcGFjdCBvZiBtaWdyYWluZSBhdHRhY2tzIixQZml6ZXIgQ2VudHJhbCBSZXNlYXJjaCxJbnRlcnZlbnRpb25hbCwxMDk3MzksMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZmluZGluZyBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDg4NTQsMTk5OS0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIE9wZW4tTGFiZWxlZCB0byBBc3Nlc3MgU3VtYXRyaXB0YW4gaW4gTWlncmFpbmUsR290aGVuYnVyZyBNaWdyYWluZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTA3Nzc0LDE5OTgtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3ksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgUGhhcm1hY29raW5ldGljcyAoUEspIFN0dWR5IG9mIFNpbmdsZS1Bc2NlbmRpbmcgRG9zZXMgb2YgQ1ZULTQyNyAoWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyKSBJbiBIZWFsdGh5IEFkdWx0cyxBY29yZGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwyNDY1OTQsMjAxNS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiB2ZXJzdXMgem9sbWl0cmlwdGFuIGluIG1pZ3JhaW5lIixJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwxMTUxOTEsMjAwMy0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiB6b2xtaXRyaXB0YW4gb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCBpcyBlZmZlY3RpdmUgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsS2luZ3MgQ29sbGVnZSBIb3NwaXRhbCBOSFMgVHJ1c3QsSW50ZXJ2ZW50aW9uYWwsMTEyODUxLDIwMDItMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBEb3NlLUZpbmRpbmcsIE11bHRpY2VudGVyIFN0dWR5IFRvIEFzc2VzcyBTYWZldHkgQW5kIEVmZmljYWN5IE9mIFpvbG1pdHJpcHRhbiBJbiBNaWdyYWluZSIsR290aGVuYnVyZyBNaWdyYWluZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTA3MjU1LDE5OTgtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFmcmljYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAscml6YXRyaXB0YW4sNTMyOCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxEb2VzIGEgTWlncmFpbmUgTWVkaWNhdGlvbiBEZWNyZWFzZSBSb3RhdGlvbmFsIE1vdGlvbiBTaWNrbmVzcyBpbiBQZW9wbGUgU3VmZmVyaW5nIEZyb20gTWlncmFpbmVzLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw3MDY5LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCB0aHJlZS13YXkgY3Jvc3NvdmVyIHRyaWFsIHRvIGV4YW1pbmUgdGhlIGVmZmljYWN5IG9mIHJpemF0cmlwdGFuIGFuZCB0aGUgY29uc2lzdGVuY3kgb2YgdHJlYXRtZW50IHJlc3BvbnNlIGluIG1pZ3JhaW5lIGF0dGFja3Mgb2YgY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIixVbml2ZXJzaXR5IG9mIEhlbHNpbmtpLEludGVydmVudGlvbmFsLDY4NDYyLDIwMDUtMTEtMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIGNyb3Nzb3ZlciB0cmlhbCB0byBhc3Nlc3MgcGF0aWVudCBwcmVmZXJlbmNlIGZvciBhbG1vdHJpcHRhbiBvciByaXphdHJpcHRhbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBtb2RlcmF0ZS9zZXZlcmUgbWlncmFpbmUgYXR0YWNrcyIsSG9zcGl0YWwgR2VuZXJhbCBZYWf8ZSxJbnRlcnZlbnRpb25hbCw2NjYxMywyMDA2LTAzLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUml6YXRyaXB0YW4gZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsIk1lcmNrICYgQ28gSW5jLCBNZXJjayBTaGFycCAmIERvaG1lIENvcnAiLEludGVydmVudGlvbmFsLDYxMzkwLDIwMDktMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRHJ1ZyBTdHVkeSBpbiBQZWRpYXRyaWMgU3ViamVjdHMgV2l0aCBNaWdyYWluZXMsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDE0MDgxLDIwMDctMTItMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUQU1FMSxTdHVkeSB0byBUZXN0IGFuIEFwcHJvdmVkIFByb2R1Y3QgaW4gdGhlIEVhcmx5IFRyZWF0bWVudCBvZiBNaWdyYWluZSxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMzg3NCwyMDA0LTA4LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxUUkVBVCxUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gV2l0aCBBREhEIFdobyBEbyBOb3QgRnVsbHkgUmVzcG9uZCB0byBTdGltdWxhbnRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMjU1MiwyMDA2LTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsQUFPRkRJWVdBLEFyaXBpcHJhem9sZSBBZGRlZCBvbiBmb3IgRE1ERCBpbiBZb3V0aHMgV2l0aCBBREhELFRyaS1TZXJ2aWNlIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzIxMjE5LDIwMTQtMTEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgb24gQURIRCxHb3JnYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMjEyNywyMDE2LTA1LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpbmcgcmlzcGVyaWRvbmUgYW5kIGFyaXBpcHJhem9sZSBpbiBBREhELFNoYWhyZWtvcmQgVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzIGFuZCBIZWFsdGggU2VydmljZXMsSW50ZXJ2ZW50aW9uYWwsMjAxMDI1LDIwMTItMDMtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItbW9udGgsIHByb3NwZWN0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIG9mIHN3aXRjaGluZyBhbnRpcHN5Y2hvdGljIGRydWcgdHJlYXRtZW50IHRvIGFyaXBpcHJhem9sZSBvciB6aXByYXNpZG9uZSBmb3IgaW1wcm92aW5nIG1ldGFib2xpYyBwcm9maWxlIGFuZCBhdGhlcm9nZW5pYyBkeXNsaXBpZGVtaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgQ2VwaGFsb24gSW5jLCBFbGkgTGlsbHkgJiBDbywgSm9obnNvbiAmIEpvaG5zb24sIE1lcmNrICYgQ28gSW5jLCBOYXRpb25hbCBBbGxpYW5jZSBmb3IgUmVzZWFyY2ggb24gU2NoaXpvcGhyZW5pYSBhbmQgRGVwcmVzc2lvbiwgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCwgUGZpemVyIEluYywgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDk3MTE0LDIwMTItMDEtMDkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTmVTU3ksQ2xpbmljYWwgRWZmZWN0aXZlbmVzcyBvZiBOZXdlciBBbnRpLVBzeWNob3RpY3MgaW4gQ29tcGFyaXNvbiBXaXRoIENvbnZlbnRpb25hbCBBbnRpLVBzeWNob3RpY3MgaW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXRhZXQgQnJlbWVuLEludGVydmVudGlvbmFsLDY4Mjk2LDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUFJPU0lQQUwsUHJldmVudGlvbiBvZiBSZWxhcHNlIFdpdGggT3JhbCBBbnRpcHN5Y2hvdGljcyBWZXJzdXMgSW5qZWN0YWJsZSBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlLEphbnNzZW4tQ2lsYWcgTHRkLEludGVydmVudGlvbmFsLDY0NzcxLDIwMTAtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgd2hvIHdlcmUgc3dpdGNoZWQgZnJvbSBvbGFuemFwaW5lLCByaXNwZXJpZG9uZSBvciBoYWxvcGVyaWRvbCIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE4MCwyMDAyLTA1LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxIRUFMVEgsSGVhbHRoIEV2YWx1YXRpb24gb2YgQWJpbGlmeSBMb25nLVRlcm0gVGhlcmFweSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM2MzAyLDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDExLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIFJpc3Blcmlkb25lIExvbmctQWN0aW5nIEluamVjdGlvbiBWZXJzdXMgT3JhbCBBbnRpcHN5Y2hvdGljcyBpbiBTY2hpem9waHJlbmlhIFBhcnRpY2lwYW50cyBXaXRoIGEgSGlzdG9yeSBvZiBCZWluZyBQb29ybHkgQ29tcGxpYW50IFdpdGggVGFraW5nIFRoZWlyIE1lZGljYXRpb24sIkphbnNzZW4tQ2lsYWcgTHRkLCBKYW5zc2VuLU9ydGhvIEluYyAoQ2FuYWRhKSIsSW50ZXJ2ZW50aW9uYWwsMzYyODgsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgLSBFZmZlY3RzIG9uIEdsdWNvc2UgTWV0YWJvbGlzbSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1NjAzLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN3aXRjaCBTdHVkeSBvZiBFeGlzdGluZyBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljcyB0byBCaWZlcHJ1bm94LFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NTkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTV0FULFNXaXRjaGluZyB0byBBYmlsaWZ5IFRyaWFsLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU0MzksMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGVseSBSZWxhcHNlZCBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTE0NSwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBvbiBIZWFsdGggYW5kIFNtb2tpbmcgUGFyYW1ldGVycyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWE6IEEgUGlsb3QgU3R1ZHksVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDM1MDMyLDIwMDMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBoYXJtYWNvbG9naWMgVHJlYXRtZW50IG9mIEFjdXRlIEVwaXNvZGUgb2YgU2NoaXpvcGhyZW5pYTogYSBSZWFsIFdvcmxkIFN0dWR5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMxMzQ0MCwyMDE3LTA5LTMwIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29ycmVsYXRpb24gQmV0d2VlbiBDb2duaXRpdmUgRnVuY3Rpb24gYW5kIFJlbGFwc2Ugb2YgU2NoaXpvcGhyZW5pYSBSZWdhcmRpbmcgRG9zZSBSZWR1Y3Rpb24gb2YgSGlnaC1kb3NlIEFudGlwc3ljaG90aWMgVGhlcmFweSxKdW50ZW5kbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NTA5OCwyMDExLTA0LTMwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIzMDc4LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUkVMQVBTRSxDb21wYXJpc29uIG9mIGEgTG9uZy1hY3RpbmcgSW5qZWN0YWJsZSBBbnRpcHN5Y2hvdGljIHZlcnN1cyBDbGluaWNpYW4ncyBDaG9pY2UgRWFybHkgaW4gVHJlYXRtZW50IHRvIEJyZWFrIHRoZSBDeWNsZSBvZiBSZWxhcHNlIGluIEVhcmx5IFBoYXNlIFNjaGl6b3BocmVuaWNzLFZhbmd1YXJkIFJlc2VhcmNoIEdyb3VwLEludGVydmVudGlvbmFsLDIyMTU3NywyMDE0LTEyLTExIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQ0FOU0lJLFBhbiBFdXJvcGVhbiBDb2xsYWJvcmF0aW9uIG9uIEFudGlwc3ljaG90aWMgTmFpdmUgU2NoaXpvcGhyZW5pYSBJSSxLb2ViZW5oYXZucyBVbml2ZXJzaXRldCxJbnRlcnZlbnRpb25hbCwyMjAyMjcsMjAxNC0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9wZW4tbGFiZWwgU3R1ZHkgdG8gQXNzZXNzIFVzYWJpbGl0eSBvZiB0aGUgTWVkaWNhbCBJbmZvcm1hdGlvbiBEZXZpY2UtMSAoTUlORC0xKSBTeXN0ZW0gaW4gQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSBPbiBPcmFsIEFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMDg3MzYsMjAxNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFc3RpbWF0aW5nIGFuZCBSZWR1Y2luZyB0aGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBvZiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgRHJ1Z3MgRnJvbSBMaXBpZCBNZWFzdXJlcyBhbmQgSXNjaGVtaWMgRWxlY3Ryb2NhcmRpb2dyYXBoaWMgQ2hhbmdlcyxWYW5kZXJiaWx0IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTc0MjcxLDIwMDYtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgcGhhc2UgSUlJIHRyaWFsIHRvIHN0dWR5IHRoZSB0aGVyYXBldXRpYyBlcXVpdmFsZW5jZSBhbmQgc2FmZXR5IG9mIHRoZSBkcnVnIEFyaXBpcHJhem9sZSBPRC1UZXZhLCBsb3plbmdlcyAxNSBtZyAoVGV2YSkgYW5kIHRoZSBkcnVnIEFiaWxpZnkgMTUgbWcgdGFibGV0cyAoQnJpc3RvbC1NeWVycyBTcXVpYmIgKSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbnMgb2Ygc2NoaXpvcGhyZW5pYSIsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjkwNTYsMjAxMi0wNy0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQWxwaGEtUFJPR1JFU1MgdHJpYWwsQWxwaGEtUFJPR1JFU1MgdHJpYWwsQ2hpYmEgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTY0ODM2LDIwMTMtMTEtMDUgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBub24tcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgc2luZ2xlLWdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzcG9udGFuZW91cyBicmFpbiBtYWduZXRpYyBhY3Rpdml0eSBpbiBzY2hpem9waHJlbmlhIHBhdGllbnRzIHRyZWF0ZWQgd2l0aCBhcmlwaXByYXpvbGUiLFVuaXZlcnNpdHkgb2YgTmV3IE1leGljbyxJbnRlcnZlbnRpb25hbCwxNDg0OTgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIENsb3phcGluZSBpbiBTY2hpem9waHJlbmlhIixVbml2ZXJzaXRhJyBEZWdsaSBTdHVkaSBEaSBNZXNzaW5hLEludGVydmVudGlvbmFsLDE0NjE1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEludHJhbXVzY3VsYXIgQXJpcGlwcmF6b2xlIGluIHRoZSBBY3V0ZSBNYW5hZ2VtZW50IG9mIFBzeWNob21vdG9yIEFnaXRhdGlvbixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwxNDU4NTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGZvciB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIGluIFN0YWJpbGl6ZWQgUGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgRmxvcmlkYSxJbnRlcnZlbnRpb25hbCwxNDQ5MDYsMjAwMC0xMi0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBOb24tUmFuZG9taXplZCwgT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIgTmF0dXJhbGlzdGljIFN0dWR5IG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgVHJlYXRlZCBXaXRoIEFyaXBpcHJhem9sZSIsVmVqbGUgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDQ0ODgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIk9wZW4sIFJhbmRvbWl6ZWQgVHJpYWwgT2YgVGhlIEVmZmVjdCBPZiBBcmlwaXByYXpvbGUgVmVyc3VzIFJpc3Blcmlkb25lIE9uIFNvY2lhbCBDb2duaXRpb24gSW4gU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwxNDIyODksMjAwNS0xMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gQ29nbml0aW9uIGFuZCBQc3ljaG9tb3RvciBGdW5jdGlvbiBpbiBTY2hpem9waHJlbmlhOiBBbiBPcGVuLVN0dWR5LE1pbmFtaWhhbm5vIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE0MjA2NiwyMDExLTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFQXJTIFN0dWR5LEdpZnUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzUzMTcsMjAxMS0xMC0wMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxBcmlwZk1SSSxQaWxvdCBTdHVkeSBvZiB0aGUgRWZmZWN0IG9mIEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgaW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyBvbiBGdW5jdGlvbmFsIE1hZ25ldGljIFJlc29uYW5jZSBJbWFnaW5nIChmTVJJKSBBY3RpdmF0aW9uIFBhdHRlcm5zIGFuZCBTeW1wdG9tcyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDYyNTY1LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIFZlcnN1cyBQbGFjZWJvIGluIHRoZSBSZWR1Y3Rpb24gb2YgQWdncmVzc2l2ZSBhbmQgQWJlcnJhbnQgQmVoYXZpb3IgaW4gQXV0aXN0aWMgQ2hpbGRyZW4sVW5pdmVyc2l0eSBvZiBNZWRpY2luZSBhbmQgRGVudGlzdHJ5IG9mIE5ldyBKZXJzZXksSW50ZXJ2ZW50aW9uYWwsNDU0NTksMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciAoQUQpLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDIzMjkyLDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsU1RvUC1TLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hvc2lzIGZvciBTdGltdWxhbnRzLCJMaSBLYSBTaGluZyBGYWN1bHR5IG9mIE1lZGljaW5lLCBUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmciLEludGVydmVudGlvbmFsLDMzNTA1OCwyMDE5LTA2LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgMTItd2VlaywgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gaW4tIGFuZCBvdXQtcGF0aWVudHMgd2l0aCBhY3V0ZSBtYW5pYSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIwNjIsMjAwMy0wNS0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU3R1ZHkgb2YgTGljYXJiYXplcGluZSBpbiB0aGUgVHJlYXRtZW50IG9mIE1hbmljIEVwaXNvZGVzIG9mIEJpcG9sYXIgRGlzb3JkZXIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMzY1MjYsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBDaGlsZHJlbiBXaXRoIFN5bXB0b21zIG9mIE1hbmlhLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzNDU5MCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsUExBQ0lELENvbXBhcmlzb24gb2YgdHJlYXRtZW50IHdpdGggaW5oYWxlZCBsb3hhcGluZSBhbmQgYW4gaW5qZWN0ZWQgZHJ1ZyB0byB0cmVhdCBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3IgYmlwb2xhciBkaXNvcmRlciBhbmQgd2hvIGFyZSBzZXJpb3VzbHkgYWdpdGF0ZWQsRmVycmVyIEludGVybmFjaW9uYWwgU0EsSW50ZXJ2ZW50aW9uYWwsMjI2NTM5LDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLE9tZWdhLTMgRmF0dHkgQWNpZCBBZGp1bmN0aXZlIHRvIE9wZW4tTGFiZWwgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGlzb3JkZXIgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNzcwODIsMjAwNy0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIERpc29yZGVyLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMTcyNDUyLDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxDSUJBLENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIEJpcG9sYXIgRGlzb3JkZXIgVHJlYXRlZCB3aXRoIEFyaXBpcHJhem9sZSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgR21iSCwgQ2hhcml0ZSBVbml2ZXJzaXRhZXRzbWVkaXppbiBCZXJsaW4iLEludGVydmVudGlvbmFsLDEzOTk5NSwyMDExLTAxLTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggYWN1dGUgYmlwb2xhciBtYW5pYSIsVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDExMzE0MSwyMDAzLTA5LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCxSVVBQIFBJIFBERDogRHJ1ZyBhbmQgQmVoYXZpb3JhbCBUaGVyYXB5IGZvciBDaGlsZHJlbiBXaXRoIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVycyxZYWxlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzEzNDMsMjAwNC0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBUb3VyZXR0ZSBTeW5kcm9tZSxVbml2ZXJzaXR5IG9mIEZsb3JpZGEsSW50ZXJ2ZW50aW9uYWwsNjQxNiwyMDA0LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJBIHByYWdtYXRpYywgZG91YmxlLWJsaW5kLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIGFuZCBjb21wYXJlIHRoZSBlZmZlY3RpdmVuZXNzIGFuZCBhZHZlcnNlIGVmZmVjdHMgb2YgaW50cmFtdXNjdWxhciBvbGFuemFwaW5lIGFuZCBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWdpdGF0ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixOYWtob25zYXdhbiBQc3ljaGlhdHJpYyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzUyNzMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTg0MDIsMjAxNC0wNi0xMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgSW50cmFtdXNjdWxhciBBcmlwaXByYXpvbGUgSW4gQ29tcGFyaXNvbiBXaXRoIEludHJhbXVzY3VsYXIgSGFsb3Blcmlkb2wgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgQWdpdGF0aW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFJpZ2EgTWVudGFsIEhlYWx0aCBDYXJlIENlbnRyZSxJbnRlcnZlbnRpb25hbCwxNDM3MzQsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQURNSVJFLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBhcyBhbiBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNTA4OTQsMjAwOS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFiaWxpZnkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgZm9yIFJlZnJhY3RvcnkgRGVwcmVzc2lvbixTdCBMdWtlcyBSb29zZXZlbHQgSG9zcGl0YWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM1Mzc4LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQVBPTExPLEEgU3R1ZHkgb2YgQWJpbGlmeSBUYWJsZXQgKEFyaXBpcHJhem9sZSkgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gdGhlIEJpcG9sYXIgRGVwcmVzc2lvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMyODMxMCwyMDE4LTAyLTIyIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxDQU5CSU5ENixQZXJzb25hbGl6ZWQgSW5kaWNhdGlvbnMgZm9yIENCVCBhbmQgQW50aWRlcHJlc3NhbnRzIGluIFRyZWF0aW5nIERlcHJlc3Npb24sTm92YSBTY290aWEgSGVhbHRoIEF1dGhvcml0eSxJbnRlcnZlbnRpb25hbCwyNTk0OTEsMjAxNi0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgQWRqdW5jdGl2ZSBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDE5MjEyLDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBNdWx0aWNlbnRlciwgTmF0dXJhbGlzdGljIFN0dWR5IE9mIEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24sIEFudGlkZXByZXNzYW50IENvbWJpbmF0aW9uIE9yIFN3aXRjaGluZyBUaGVyYXB5IEluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaG8gQXJlIFBhcnRpYWwtIE9yIE5vbi1SZXNwb25zaXZlIFRvIEN1cnJlbnQgQW50aWRlcHJlc3NhbnRzIixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE4OTE4NixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQ29udGludWF0aW9uIEVsZWN0cm9jb252dWxzaXZlIFRoZXJhcHkgKEMtRUNUKSBmb3IgUmVsYXBzZSBQcmV2ZW50aW9uIGluIE1ham9yIERlcHJlc3Npb24sSG9zcGl0YWwgVW5pdmVyc2l0YXJpIGRlIEJlbGx2aXRnZSxJbnRlcnZlbnRpb25hbCwxODc3ODYsMjAwOS0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIENvbXBhcmlzb24gb2YgTWVkaWNhdGlvbiBBdWdtZW50YXRpb24gYW5kIFBTVCBpbiB0aGUgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gaW4gT2xkZXIgQWR1bHRzLE5ldyBZb3JrIFN0YXRlIFBzeWNoaWF0cmljIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxNTQ1NDEsMjAxMy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiUm90aWdvdGluZSBWZXJzdXMgUGxhY2VibywgQSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgSW4gQWR2YW5jZWQgU3RhZ2UgSWRpb3BhdGhpYyBQYXJraW5zb24ncyBEaXNlYXNlIFN1YmplY3RzIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODk0MzUsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsTkVVUE9TLEEgVHJpYWwgb2YgTmV1cHJvIChSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgVW5kZXJnb2luZyBTdXJnZXJ5LCJVQ0IgUGhhcm1hIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsODM5MCwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBTdHVkeSBvZiBMWS0wMzAwMyBpbiBQYXRpZW50cyBXaXRoIEVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIERpc2Vhc2UsTHV5ZSBQaGFybWEgR3JvdXAgTHRkLEludGVydmVudGlvbmFsLDE3MTYxMSwyMDEzLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEZsaWJhbnNlcmluIFZlcnN1cyBQbGFjZWJvIGluIFByZW1lbm9wYXVzYWwgV29tZW4gV2l0aCBIU0RELFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzMxMTIsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgNCBDbGluaWNhbCxDNCxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRSWHZVc3VhbFRycHRuLERvZXMgVHJleGltZXQgSW1wcm92ZSBQcm9kdWN0aXZpdHkgYW5kIFBhdGllbnQgU2F0aXNmYWN0aW9uIER1ZSB0byBTdXN0YWluZWQgUmVzcG9uc2UgYW5kIENvbnNpc3RlbmN5IG9mIFJlc3BvbnNlPyxUaGUgQ2xldmVsYW5kIENsaW5pYyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjQ4NTgsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCSS00NDM3MCBUQSBpbiBBY3V0ZSBNaWdyYWluZSBBdHRhY2ssQm9laHJpbmdlciBJbmdlbGhlaW0gSW50ZXJuYXRpb25hbCBHbWJILEludGVydmVudGlvbmFsLDQyOTUxLDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxNaWRhem9sYW0gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggTHVyYXNpZG9uZSBIQ2wsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NDY3NiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDIsTHVyYXNpZG9uZSBIQ2wgQSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCwgU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzU1NDIsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBTdHVkeSBMb29raW5nIGF0IHRoZSBFZmZlY3RzIG9mIEx1cmFzaWRvbmUgKFNNLTEzNDk2KSBpbiBTdWJqZWN0cyB3aXRoIFNjaGl6b3BocmVuaWEiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjY0MjE1LDIwMTctMDMtMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgdGhlIEltcGFjdCBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIE9uY2UgTW9udGhseSBWZXJzdXMgU3RhbmRhcmQgb2YgQ2FyZSBPcmFsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgb24gQ2hhbmdlcyBpbiBCcmFpbiBTdHJ1Y3R1cmUgYW5kIE1ldGFib2xpc20sVW5pdmVyc2l0eSBvZiBVdGFoLEludGVydmVudGlvbmFsLDIxMDIyOCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixCaW9lcXVpdmFsZW5jZSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBCaW9lcXVpdmFsZW5jZSBPZiBUd28gRGlmZmVyZW50IEx1cmFzaWRvbmUgRm9ybXVsYXRpb25zIEluIFBhdGllbnRzLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzA5MjQsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFJJLUFNRSxSSS1BTUUgU3R1ZHkgT0YgKElzb3RoaWF6b2x5bC0zLTE0QyktTHVyYXNpZG9uZSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NDY4MywyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3BlbiBwcmVsaW1pbmFyeSB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGZyb3ZhdHJpcHRhbiBwbHVzIGRleGtldG9wcm9mZW4gaW4gdGhlIHRyZWF0bWVudCBvZiBtZW5zdHJ1YWxseSByZWxhdGVkIG1pZ3JhaW5lLFVuaXZlcnNpdHkgb2YgVHVyaW4sSW50ZXJ2ZW50aW9uYWwsMTg5NjMxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1maW5kaW5nIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgZnJvdmF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFNhbiBGcmFuY2lzY28gQ2xpbmljYWwgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDExMjY0NywyMDAyLTAxLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiU2FmZXR5LCBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gKEdBRCkgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI2NTQzLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiU2FmZXR5LCBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZpbGF6b2RvbmUgaW4gUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxMDQ0NjEsMjAxMy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZpbGF6b2RvbmUsOTk0MyxFZmZpY2FjeSxOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFNvY2lhbCBwaG9iaWEsMzE1MCxudWxsLFN0dWR5IG9mIFZpbGF6b2RvbmUgdG8gVHJlYXQgU29jaWFsIEFueGlldHkgRGlzb3JkZXIsVGhlIE1lZGljYWwgUmVzZWFyY2ggTmV0d29yayxJbnRlcnZlbnRpb25hbCw5NTcwMSwyMDEyLTEwLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWaWxhem9kb25lIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsODI0NzksMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxEb2VzIFZpbGF6b2RvbmUgSGVscCBXaXRoIEFudGlkZXByZXNzYW50LWFzc29jaWF0ZWQgU2V4dWFsIER5c2Z1bmN0aW9uPyxUaG9tYXMgSmVmZmVyc29uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTMyMDc1LDIwMTMtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiQSBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gZmVtYWxlIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTU5MCwyMDAxLTA1LTIxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBbiBFdmFsdWF0aW9uIG9mIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFRlZ2FzZXJvZCA2IG1nIEJpZCBHaXZlbiBPcmFsbHkgdG8gQ2hpbmVzZSBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzE1LDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBNdWx0aS1DZW50ZXIgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVGVnYXNlcm9kIDIgbWcgQmlkIHZlcnN1cyBQbGFjZWJvIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24iLCJIb3NwaXRhbCBBdXRob3JpdHksSG9uZyBLb25nIixJbnRlcnZlbnRpb25hbCwxODQyOSwyMDA0LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEFzc2Vzc21lbnQgb2YgdGhlIFJvbGUgb2YgVGVnYXNlcm9kIFRoZXJhcHkgaW4gdGhlIE1hbmFnZW1lbnQgb2YgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBJbmNvbXBsZXRlIFJlc3BvbnNlIHRvIFByb3RvbiBQdW1wIEluaGliaXRvcnMgKFBQSXMpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4ODAwLDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYWxtb3RyaXB0YW4sMTA1MjQsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEFDVE1pZ3JhaW5lLEFDVCBUaGVyYXB5IGZvciBIRiBNaWdyYWluZSxGb25kYXppb25lIElSQ0NTIElzdGl0dXRvIE5ldXJvbG9naWNvIENhcmxvIEJlc3RhLEludGVydmVudGlvbmFsLDMzMjIyMSwyMDE4LTAzLTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgV2hlbiBQYWluIElzIE1pbGQgVmVyc3VzIFdoZW4gUGFpbiBJcyBNb2RlcmF0ZSB0byBTZXZlcmU6IGFuIEFsbW90cmlwdGFuLCBQYXJhbGxlbCwgUGxhY2Viby1jb250cm9sbGVkLCBDbGluaWNhbCBUcmlhbCAnYWN0IFdoZW4gTWlsZD8nIixBbG1pcmFsbCBQcm9kZXNmYXJtYSBTQSxJbnRlcnZlbnRpb25hbCwzMjY3NTQsMjAwNS0xMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBzYWZldHksIGVmZmljYWN5LCBJdGFsaWFuIHN0dWR5IG9mIGZyb3ZhdHJpcHRhbiB2ZXJzdXMgYWxtb3RyaXB0YW4gZm9yIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLFVuaXZlcnNpdHkgb2YgUGFsZXJtbyxJbnRlcnZlbnRpb25hbCwxODc2MDEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEVWQS1BbG1vZ3JhbixBc3Nlc3NlZCBieSBhIFZpc3VhbCBBbmFsb2cgU2NhbGUgZm9yIFNhdGlzZmFjdGlvbiBNaWdyYWluZSBQYXRpZW50cyBBZnRlciBUcmVhdG1lbnQgZm9yIHRocmVlIENvbnNlY3V0aXZlIENyaXNlcyB3aXRoIEFsbW9ncmFuLEFsbWlyYWxsIFByb2Rlc2Zhcm1hIFNBLEludGVydmVudGlvbmFsLDEzMDU1MywyMDA2LTEwLTEwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsR2FzdHJvaW50ZXN0aW5hbCBmdW5jdGlvbiBkaXNvcmRlciwzOTUsbnVsbCxTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGluIEhlYWx0eSBWb2x1bnRlZXJzLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMzY0MTQsMjAwOC0xMS0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiUHJ1Y2Fsb3ByaWRlIGluIFBlZGlhdHJpYyBTdWJqZWN0cywgV2l0aCBGdW5jdGlvbmFsIEZlY2FsIFJldGVudGlvbiIsU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDkwMzcxLDE5OTgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEV2YWx1YXRpb24gb2YgUHJ1Y2Fsb3ByaWRlIGluIE1hbGUgU3ViamVjdHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbiwiU2hpcmUgcGxjLCBTaGlyZS1Nb3ZldGlzIE5WIixJbnRlcnZlbnRpb25hbCw2NzUxNiwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGFyYWxsZWwtZ3JvdXAgdHJpYWwgdG8gY29tcGFyZSB0aGUgc2luZ2xlLWRvc2UgYW5kIHN0ZWFkeS1zdGF0ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBzYWZldHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIGhlYWx0aHkgeW91bmcgYW5kIGVsZGVybHkgdm9sdW50ZWVycyIsSmFuc3NlbiBQaGFybWFjZXV0aWNhIE5WLEludGVydmVudGlvbmFsLDY2NTQ4LDIwMTAtMDUtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIHBhdGllbnRzIHdpdGggY29uc3RpcGF0aW9uIGR1ZSB0byBzcGluYWwgY29yZCBpbmp1cnk6IEEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkwNjUsMjAwMC0wMy0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsUFJPR0FTUyxQcnVjYWxvcHJpZGUgT24gdGhlIEdhc3RyZW9udGVyaWMgVHJhbnNpdCBpbiBTeXN0ZW1pYyBTY2xlcm9zaXMsRm9uZGF6aW9uZSBJUkNDUyBDYScgR3JhbmRhLU9zcGVkYWxlIE1hZ2dpb3JlIFBvbGljbGluaWNvLEludGVydmVudGlvbmFsLDE0OTM2NCwyMDEzLTAyLTE5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkVmZmVjdCBvZiBQcnVjYWxvcHJpZGUgb24gR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXgsIEVzb3BoYWdlYWwgTW90aWxpdHkgYW5kIEdhc3RyaWMgRW1wdHlpbmcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIiwiQWNhZGVtaWMgTWVkaWNhbCBDZW50ZXIsIFVuaXZlcnNpdHkgb2YgQW1zdGVyZGFtIixJbnRlcnZlbnRpb25hbCwxMjIxNjAsMjAxMS0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsU2FmZXR5LE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIHRoZSBUb2xlcmFiaWxpdHkgb2YgQmlmZXBydW5veCBpbiBIZWFsdGh5IFN1YmplY3RzLFd5ZXRoLEludGVydmVudGlvbmFsLDQwOTExLDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTd2l0Y2ggU3R1ZHkgb2YgRXhpc3RpbmcgQXR5cGljYWwgQW50aXBzeWNob3RpY3MgdG8gQmlmZXBydW5veCxTb2x2YXkgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTU5MywyMDA2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9wZW4gTGFiZWwgRXh0ZW5zaW9uIFN0dWR5IG9mIEJpZmVwcnVub3gsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ4MzUsMjAwNi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDYgTW9udGhzLCBEb3VibGUtQmxpbmQsIFJpc3Blcmlkb25lLVJlZmVyZW5jZWQsIEZsZXhpYmxlLURvc2UsIFBhcmFsbGVsLUdyb3VwIEV4dGVuc2lvbiBTdHVkeSBvZiBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTYxMjkwLDIwMDQtMTAtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQW4gT3Blbi1MYWJlbCBTTFYtMzA4IFNhZmV0eSBFeHRlbnNpb24gdG8gU3R1ZHkgUzMwOC4zLjAwMyBpbiBFYXJseSBQRCBQYXRpZW50cywiQWJib3R0IExhYm9yYXRvcmllcywgU29sdmF5IFNBIixJbnRlcnZlbnRpb25hbCw3MDAwLDIwMDctMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBbiBPcGVuLUxhYmVsIFNMVi0zMDggU2FmZXR5LCBFeHRlbnNpb24gdG8gU3R1ZHkgUzMwOC4zLjAwMSBpbiBFYXJseSBQRCBQYXRpZW50cyIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDY5OTksMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFZhbiBHb2doIFN0dWR5LCJBIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBhcmFsbGVsLUdyb3VwLCBQbGFjZWJvIGFuZCBQcmFtaXBleG9sZSBDb250cm9sbGVkIFN0dWR5IHRvIEFzc2VzcyBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFNMVi0zMDggYXMgQWRqdW5jdCBUaGVyYXB5IHRvIEwtRG9wYSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgRXhwZXJpZW5jaW5nIE1vdG9yIEZsdWN0dWF0aW9ucyIsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDE0MzU5NCwyMDA4LTAzLTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBIFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiAoQUNQLTEwMykgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MTI2LDIwMDctMDYtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGluIFBhdGllbnRzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSBQc3ljaG9zaXMsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTY3Mzg1LDIwMTMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU2NoaXpvcGhyZW5pYSwyOTksQURWQU5DRSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFBpbWF2YW5zZXJpbiBhcyBBZGp1bmN0aXZlIFRyZWF0bWVudCBmb3IgdGhlIE5lZ2F0aXZlIFN5bXB0b21zIG9mIFNjaGl6b3BocmVuaWEsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjc5OTgyLDIwMTYtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIHJlZHVjdGlvbiBvZiBoYWxvcGVyaWRvbC1pbmR1Y2VkIHNpZGUgZWZmZWN0cyBieSBBQ1AtMTAzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjUwLDIwMDUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsQSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWdpdGF0aW9uIGFuZCBBZ2dyZXNzaW9uIGluIFN1YmplY3RzIFdpdGggQWx6aGVpbWVyJ3MgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyOTU1MDYsMjAxNy0wMi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LFNFUkVORSxTdHVkeSB0byBFeGFtaW5lIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBBZ2l0YXRpb24gYW5kIEFnZ3Jlc3Npb24gaW4gQWx6aGVpbWVyJ3MgRGlzZWFzZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyODIxNzIsMjAxNi0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTG9uZy1UZXJtIFNhZmV0eSBvZiBUcmV4aW1ldCAoU3VtYXRyaXB0YW4vTmFwcm94ZW4gU29kaXVtKSBmb3IgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDA5NCwyMDA3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFRyZXhpbWEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBIZWFkYWNoZXMsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDYyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVHJleGltYSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlcyxQT1pFTiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQwNjAsMjAwNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsIlBSWC0wMDkzMyAob3JhbCwgb2Jlc2l0eS9kaWFiZXRlcyksIFByb3hpbWFnZW4iLDM1OTc4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCwiQSBwaGFzZSBJSWIsIFN3ZWRpc2gsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBCVlQtOTMzIGluIG9iZXNlIHBhdGllbnRzIixTd2VkaXNoIE9ycGhhbiBCaW92aXRydW0gQUIsSW50ZXJ2ZW50aW9uYWwsNTQxMzQsMjAwNC0wNC0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxCdXNwaXJvbmUgaW4gUGFya2luc29uJ3MgRGlzZWFzZSxVbml2ZXJzaXR5IG9mIFJvY2hlc3RlcixJbnRlcnZlbnRpb25hbCwyNjM1MTUsMjAxNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsQW4gb3BlbiBzdHVkeSBvZiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBidXNwaXJvbmUgaW4gYW54aWV0eSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwxMTA5MTEsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsRkstOTYyLDQ0NzYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIEZLLTk2MiBpbiBTdWJqZWN0cyBXaXRoIE1pbGQgdG8gTW9kZXJhdGUgQWx6aGVpbWVyJ3MgRGlzZWFzZSxBc3RlbGxhcyBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDI0NjIsMjAwNC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsQSBTdHVkeSBvZiBQUlgtMDAwMjMgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDM5MSwyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT1NTT00sQmVoYXZpb3JhbCBNb2RpZmljYXRpb24gYW5kIExvcmNhc2VyaW4gU2Vjb25kIFN0dWR5IGZvciBPYmVzaXR5IE1hbmFnZW1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODkzMCwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQWZyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBUEQzNTYgaW4gdGhlIFRyZWF0bWVudCBvZiBPYmVzaXR5LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2ODAsMjAwNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsT0JDLTAxLCJBIDQ4IHdlZWtzLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCBmb3IgdGhlIGV2YWx1YXRpb24gb2YgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb2Jlc2l0eSBtZWRpY2F0aW9uIG9uIG1vcmJpZCBvYmVzZSBhbmQgb2Jlc2UgcGF0aWVudHMiLCJNaW5pc3RyeSBvZiBIZWFsdGggJiBXZWxmYXJlLCBLb3JlYSIsSW50ZXJ2ZW50aW9uYWwsMjc0NzU4LDIwMTYtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKG5lZWRsZWxlc3MgZGVsaXZlcnksIEludHJhamVjdCksIEVuZG8iLDQ3NzU5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEV2YWx1YXRpb24gb2YgVHJlYXRtZW50IFNhdGlzZmFjdGlvbiBhbmQgUHJlZmVyZW5jZSBmb3IgU3VtYXZlbCBEb3NlUHJvIGluIHRoZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsWm9nZW5peCBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0MDQsMjAwOS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDIgQ2xpbmljYWwsQzIsQmluZ2UgZWF0aW5nIGRpc29yZGVyLDE5MDksbnVsbCxWb3J0aW94ZXRpbmUgZm9yIEJpbmdlIEVhdGluZyBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMjM4MDIyLDIwMTYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsQW4gRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBMdS1BQTIxMDA0IGluIFRyZWF0aW5nIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjMzMTcsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgcGhhc2UgSSwgc2luZ2xlLWJsaW5kLCBtdWx0aXBsZS1kb3NlLCBzaW5nbGUtc2VxdWVuY2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBMdS1BQTIxMDA0LCBvbiB0aGUgc3RlYWR5LXN0YXRlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIGxpdGhpdW0sIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cywgZm9yIHRoZSBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDk1MjkzLDIwMTItMDMtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxTT0xVVElPTixTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gQXNpYW4gQ291bnRyaWVzLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDg2Mjc1LDIwMTItMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiBBZHVsdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMiLEludGVydmVudGlvbmFsLDY4MjQwLDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHJhcGFzdGluZWwgYXMgbW9ub3RoZXJhcHkgaW4gbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSxOYXVyZXggSW5jLEludGVydmVudGlvbmFsLDM3MTU3NSwyMDE5LTA3LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIER1bG94ZXRpbmUtUmVmZXJlbmNlZCwgRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiAyLjUsIDUgYW5kIDEwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0OTc3LDIwMDgtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIk9wZW4tbGFiZWwsIFNhZmV0eSBFeHRlbnNpb24gU3R1ZHkgb2YgMi41LCA1IGFuZCAxMCBtZyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIExvbmctdGVybSBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBpbiBBZHVsdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM0NzkzLDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQUlgtMzE0MCw0ODczOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFN0dWR5IG9mIFBSWC0wMzE0MCBNb25vdGhlcmFweSBpbiBTdWJqZWN0cyBXaXRoIEFsemhlaW1lcidzIERpc2Vhc2UsRVBJWCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE2Njg4LDIwMDgtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBDb21wYXJpbmcgQmlvYXZhaWxhYmlsaXR5IG9mIE9yYWwgRm9ybXVsYXRpb25zIG9mIFZhYmljYXNlcmluLFd5ZXRoLEludGVydmVudGlvbmFsLDM2MjE3LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBWYWJpY2FzZXJpbiBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzYyMTQsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIFNDQS0xMzYgaW4gU3ViamVjdHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb25zIG9mIFNjaGl6b3BocmVuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDY2OSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgQ2FyaXByYXppbmUgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVsYXBzZSBvZiBTeW1wdG9tcyBpbiBQYXJ0aWNpcGFudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDc5ODcxLDIwMTEtMDktMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC1ncm91cCBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIHdpdGggUHJlZG9taW5hbnQgTmVnYXRpdmUgU3ltcHRvbXMgb2YgU2NoaXpvcGhyZW5pYSIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDEzODU1MiwyMDEzLTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIFJHSC0xODggKENhcmlwcmF6aW5lKSBpbiBCaXBvbGFyIERlcHJlc3Npb24sRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDcyOTcsMjAwOS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIENhcmlwcmF6aW5lIENhcHN1bGVzIDYgbWcgaW4gU2NoaXpvcGhyZW5pYSBvciBCaXBvbGFyIGRpc29yZGVyIEkgcGF0aWVudHMgd2hvIGFyZSByZWNlaXZpbmcgQ2FyaXByYXppbmUgY2Fwc3VsZXMgNiBtZyBhcyBzdGFibGUgZG9zZSwiQVhJUyBDbGluaWNhbHMgTGltaXRlZCwgQXVyb2JpbmRvIFBoYXJtYSBMdGQiLEludGVydmVudGlvbmFsLDM3ODQ3MSwyMDE5LTA1LTEzIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkFuIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCB0byBBbnRpZGVwcmVzc2FudCBUaGVyYXB5IChBRFQpIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciAoTUREKSIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTYzOTAsMjAxMi0xMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRvIEV2YWx1YXRlIHRoZSBMb25nLXRlcm0gU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQ2FyaXByYXppbmUgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSAoQURUKSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCksRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI0MTk3LDIwMTMtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNvZHluYW1pY3MgYW5kIGVmZmljYWN5IG9mIEFQRC0xMjUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgaW5zb21uaWEiLEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzMzNCwyMDA1LTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxJbnNvbW5pYSw3NTAsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE5lbG90YW5zZXJpbiBmb3IgVHJlYXRtZW50IG9mIFJFTSBTbGVlcCBCZWhhdmlvciBEaXNvcmRlciBpbiBTdWJqZWN0cyBXaXRoIERlbWVudGlhIChETEIgb3IgUEREKSxBeG92YW50IEdlbmUgVGhlcmFwaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTU4MzUsMjAxNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYSBDbGluaWNhbCxDMkEsUFNOLTYwMiw1NjI1MCxFZmZpY2FjeSxOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE9iZXNpdHksMjM4LG51bGwsQSBwaGFzZSBJSWEgZWZmaWNhY3kgc3R1ZHkgdG8gY29tcGFyZSBQU04tNjAyIHRvIHNpYnV0cmFtaW5lIGZvciB0cmVhdG1lbnQgb2Ygb2Jlc2l0eSxPU0kgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NDk5MiwyMDA5LTA1LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLHBpcm9tZWxhdGluZSw1ODYzNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsSW5zb21uaWEsNzUwLE1BRCwiU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpY3MgYW5kIFBoYXJtYWNvZHluYW1pY3Mgb2YgTmV1LVAxMSBpbiBTdWJqZWN0cyBXaXRoIFByaW1hcnkgSW5zb21uaWEiLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsNjYwMTUsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsQ2xpbmljYWwgVHJpYWwgb2YgTW90aWxpdG9uZSBvbiBHYXN0cmljIE1vdG9yIEZ1bmN0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDk2NzcyLDIwMTItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJFQUNPTixFZmZpY2FjeSBTdHVkeSBvZiBPUEMtMzQ3MTIgaW4gQWR1bHRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3OTE5NywyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxOQ1QwMzUyNTgwOCxCcmV4cGlwcmF6b2xlIFN0dWR5LFVuaXZlcnNpdHkgb2YgTWFzc2FjaHVzZXR0cyxJbnRlcnZlbnRpb25hbCwzMzk2ODgsMjAxOC0wMy0xOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTU2MDgsMjAxOC0wNy0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAtY29tcGFyaXNvbiB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYnJleHBpcHJhem9sZSBhcyBhZGp1bmN0aXZlIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1MjY1MywyMDE4LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBFbGRlcmx5IFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIGFuIEluYWRlcXVhdGUgUmVzcG9uc2UgdG8gQW50aWRlcHJlc3NhbnQgVHJlYXRtZW50LEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDEyMzU4MywyMDEzLTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyaXphdHJpcHRhbiAoVmVyc2FGaWxtIG9yYWwgcXVpY2sgcmVsZWFzZSwgbWlncmFpbmUpLCBJbnRlbEdlbngiLDY0MTkyLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLFksWSxSZWdpc3RlcmVkLFIsTWlncmFpbmUsMjEwLG51bGwsIkEgc2luZ2xlLWRvc2UsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHRocmVlLXdheSBjcm9zc292ZXIsIHBpdm90YWwgc3R1ZHkgdG8gY29tcGFyZSB0aGUgYmlvYXZhaWxhYmlsaXR5IG9mIFJpemFwb3J0IHdpdGggTWF4YWx0LU1MVCAoVVMgcmVmZXJlbmNlKSBhbmQgTWF4YWx0IGxpbmd1YSAoRXVyb3BlYW4gcmVmZXJlbmNlKSBpbiBoZWFsdGh5IHN1YmplY3RzIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lcyIsSW50ZWxHZW54IFRlY2hub2xvZ2llcyBDb3JwLEludGVydmVudGlvbmFsLDM1NDUyMCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIE11bHRpcGxlLWRvc2UgU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIFBoYXJtYWNva2luZXRpY3MgU3R1ZHkgaW4gQWR1bHQgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIEZvbGxvd2luZyBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEzNzgwMiwyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbWluZXNhcHJpZGUsNzI4NDksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHNpbmdsZS1kb3NlIGFzY2VuZGluZyBzdHVkeSBhbmQgYSBtdWx0aXBsZS1kb3NlIHN0dWR5IGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyBhbmQgYSBtdWx0aXBsZS1kb3NlIHN0dWR5IGluIHN1YmplY3RzIHdobyBoYXZlIG5vIG1vcmUgdGhhbiAzIHNwb250YW5lb3VzIGJvd2VsIG1vdmVtZW50cyBwZXIgd2VlayB0byBpbnZlc3RpZ2F0ZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHksIHBoYXJtYWNva2luZXRpY3MsIGFuZCBwaGFybWFjb2R5bmFtaWNzIG9mIERTUC02OTUyLCBhbmQgYSBzaW5nbGUtZG9zZSBzdHVkeSBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMgdG8gZXhhbWluZSB0aGUgZWZmZWN0IG9mIGZvb2QiLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNDc2NiwyMDExLTA4LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIlpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lL2NsdXN0ZXIgaGVhZGFjaGUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgTS0yMDcgYXQgVHdvIEFwcCBTaXRlcyBXaXRoIEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIDIuNSBtZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM1NzAyNywyMDE4LTExLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsIlpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lL2NsdXN0ZXIgaGVhZGFjaGUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsWm90cmlwLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgWlAtWm9sbWl0cmlwdGFuIEludHJhY3V0YW5lb3VzIE1pY3JvbmVlZGxlIFN5c3RlbXMgZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDI1ODczNiwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNFUC0zNjM4NTYsODE2OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBTRVAtMzYzODU2IGluIEphcGFuZXNlIE1hbGUgYW5kIEZlbWFsZSBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgaW4gVHdvIFBhcnRzIChQYXJ0IDEgYW5kIDIpIixTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMjIzNTgsMjAxNy0xMS0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNFUC0zNjM4NTYsODE2OTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixTY2hpem9waHJlbmlhLDI5OSxudWxsLCJTdHVkeSBBc3Nlc3NpbmcgdGhlIFNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzIG9mIFNFUC0zNjM4NTYgaW4gTWFsZSBhbmQgRmVtYWxlIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjE4NjIsMjAxMy0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobmFzYWwsIG1pZ3JhaW5lKSwgU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMiLDg3NzE0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJjaW5pdGFwcmlkZSArIG9tZXByYXpvbGUgKGV4dGVuZGVkIHJlbGVhc2UsIGNhcHN1bGUsIGR5c3BlcHNpYS9HRVJEKSwgQ2FkaWxhIEhlYWx0aGNhcmUiLDg5NzQxLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIENsaW5pY2FsIFRyaWFsIFRvIFN0dWR5IFRoZSBFZmZlY3RzIE9mIFR3byBEcnVncywgRml4ZWQgRG9zZSBDb21iaW5hdGlvbiBDYXBzdWxlcyBPZiBPbWVwcmF6b2xlIGFuZCBDaW5pdGFwcmlkZSBFUiBBbmQgT21lcHJhem9sZSBDYXBzdWxlcyBJbiBQYXRpZW50cyBXaXRoIE5vbi1VbGNlciBEeXNwZXBzaWEgKE5VRCkgT3IgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSAoR0VSRCkiLENhZGlsYSBQaGFybWFjZXV0aWNhbHMgKEVBKSBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYwMDQ2LDIwMDktMDQtMTggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlICsgc2VydHJhbGluZSAob3JhbCwgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciksIE90c3VrYSBQaGFybWFjZXV0aWNhbCIsODk5ODMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQVNDLTAxIGluIFBhdGllbnRzIHdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE3MDIxNSwyMDE0LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW5oYWxhdGlvbiBwb3dkZXIsIG1pZ3JhaW5lKSwgQWNvcmRhIiw5NDYzOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAxIENsaW5pY2FsLEMxLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgdGhlIFB1bG1vbmFyeSBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgWm9sbWl0cmlwdGFuIEluaGFsYXRpb24gUG93ZGVyLEFjb3JkYSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI3MTg4OCwyMDE2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLFN1aWNpZGFsIGlkZWF0aW9uLDMxMTcsU0JELUFTSUIsTlJYLTEwMSBmb3IgTWFpbnRlbmFuY2Ugb2YgUmVtaXNzaW9uIEZyb20gU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbiBpbiBQYXRpZW50cyBXaXRoIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTMwOCwyMDE5LTAxLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxNQkQsTlJYLTEwMSBmb3IgTW9kZXJhdGUgQmlwb2xhciBEZXByZXNzaW9uIGFuZCBTdWljaWRhbCBJZGVhdGlvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwzMjUyOTEsMjAxOS0wMS0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0KyxQaGFzZSA0IENsaW5pY2FsLEM0LCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LG51bGwsTk1EQSBBbnRhZ29uaXN0cyBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEyMTgzMSwyMDEzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsIm1vc2FwcmlkZSArIHJlYmFtaXBpZGUgKGZ1bmN0aW9uYWwgZHlzcGVwc2lhKSwgSWwgRG9uZyIsMTAyODg5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLER5c3BlcHNpYSw0MzIsbnVsbCxDbGluaWNhbCBUcmlhbCB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQ29tYmluYXRpb24gVGhlcmFweSBvZiBNb3RpcmViIDUvMTAwIG1nIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIFBhdGllbnRzLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI2NTQ5NCwyMDE2LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgb3JhbCBzb2x1YmxlIGZpbG0gKFNUQVJGSUxNKSwgQ01HIFBoYXJtYWNldXRpY2FsIiwxMDc3NDgsQmlvYXZhaWxhYmlsaXR5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29tcGFyYXRpdmUgQmlvYXZhaWxhYmlsaXR5IFN0dWR5IG9mIEFyaXBpcHJhem9sZSAxMCBtZyBPcmFsIFNvbHVibGUgRmlsbSB2ZXJzdXMgQWJpbGlmeSAxMCBtZyBUYWJsZXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLENNRyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjM1MTE1LDIwMTUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixuYXJvbmFwcmlkZSw0OTg0MCxQaGFybWFjb2R5bmFtaWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEVmZmVjdCBvZiBBVEktNzUwNSBvbiBHYXN0cm9pbnRlc3RpbmFsIFRyYW5zaXQgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE1heW8gQ2xpbmljIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsNjUxNzUsMjAwNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxBUklRVUVMSSxQb3RlbnRpYXRpb24gb2YgUXVldGlhcGluZSBUcmVhdG1lbnQgV2l0aCBMaXRoaXVtIG9yIEFyaXBpcHJhem9sZSBpbiBCaXBvbGFyIEkgTm9uLXJlc3BvbmRlcnMgUGF0aWVudHMsVW5pdmVyc2l0eSBvZiBTYW8gUGF1bG8sSW50ZXJ2ZW50aW9uYWwsOTUzNjYsMjAxMi0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIE11bHRpY2VudGVyLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvdWJsZS1CbGluZCBJbnZlc3RpZ2F0aXZlIEV4dGVuc2lvbiBUcmlhbCBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgRXhwZXJpZW5jaW5nIGEgTWFuaWMgb3IgTWl4ZWQgRXBpc29kZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTQ2NCwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgSW52ZXN0aWdhdGl2ZSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBFeHRlbmRlZCBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBNb29kIFN0YWJpbGl6ZXIgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyIEV4cGVyaWVuY2luZyBhIE1hbmljIG9yIE1peGVkIEVwaXNvZGUiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzE0NjEsMjAwOC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsRXhwbG9yYXRvcnkgVHJpYWwgdG8gQXNzZXNzIHRoZSBGdW5jdGlvbmFsaXR5IG9mIGFuIEludGVncmF0ZWQgQ2FsbCBDZW50ZXIgZm9yIHRoZSBEaWdpdGFsIE1lZGljaW5lIFN5c3RlbSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTY5ODUsMjAxNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBQaGFzZSBJViBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgaW4gQ29tYmluYXRpb24gV2l0aCBMYW1vdHJpZ2luZSBpbiB0aGUgTG9uZy1UZXJtIE1haW50ZW5hbmNlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlciBXaXRoIEEgUmVjZW50IE1hbmljIG9yIE1peGVkIEVwaXNvZGUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTk0MDcsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQWRoZXJlbmNlIHRvIFRyZWF0bWVudCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgdGhlIE1lZGljYWwgSW5mb3JtYXRpb24gRGV2aWNlIDEgKE1JTkQxKSBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBJIERpc29yZGVyIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjExMjQsMjAxNC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiWm9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUvY2x1c3RlciBoZWFkYWNoZSksIFpvc2FubyBQaGFybWEiLDc3MjA4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LEFEQU0sQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgTG9uZy1UZXJtIFNhZmV0eSBvZiBNLTIwNyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzMTI1NTQsMjAxNy0xMS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQW4gT3Blbi1MYWJlbCBQaWxvdCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgZm9yIE1hbGUgYW5kIEZlbWFsZSBWZXRlcmFucyBXaXRoIENocm9uaWMgUG9zdC1UcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIFdobyBSZXNwb25kIFN1Ym9wdGltYWxseSB0byBBbnRpZGVwcmVzc2FudHMsRHVyaGFtIFZBIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDE1MzIwMixudWxsLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbG9ub3Njb3B5LDMwMTAsbnVsbCxQcnVjYWxvcHJpZGUgKyBQcnVjYWxvcHJpZGUgQm9vc3RlciB2ZXJzdXMgUHJ1Y2Fsb3ByaWRlICsgUGljb3NhbGF4IEJvb3N0ZXIgZm9yIHRoZSBDb2xvbiBDYXBzdWxlLFF1ZWVuJ3MgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMzY0NDAsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0IsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksQ09NUEFTUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDIwIG1nIFN1bWF0cmlwdGFuIFBvd2RlciBEZWxpdmVyZWQgSW50cmFuYXNhbGx5IFdpdGggdGhlIEJpLWRpcmVjdGlvbmFsIERldmljZSBDb21wYXJlZCBXaXRoIDEwMCBtZyBTdW1hdHJpcHRhbiBUYWJsZXRzIGluIEFkdWx0cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLEF2YW5pciBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDkwMzAzLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBSR0gtMTg4IChDYXJpcHJhemluZSkgaW4gQmlwb2xhciBEZXByZXNzaW9uLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDQ3Mjk3LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBXaXRoIFByZXZpb3VzIFBvb3IgUmVzcG9uc2Ugb3IgVG9sZXJhbmNlIHRvIE9yYWwgU3VtYXRyaXB0YW4sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE1NjksMTk5OS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LEFOWFBELEFueGlldHkgaW4gUGFya2luc29uJ3M6IFVzZSBvZiBRdWFudGl0YXRpdmUgTWV0aG9kcyB0byBHdWlkZSBSYXRpb25hbCBUcmVhdG1lbnQsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIyMjU2MywyMDE2LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbHVzaW9uLDMxOTQsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHhhbGlwcm9kZW4sNDQ3NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlLDIzMyxudWxsLCJBIHBoYXNlIEkvSUksIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBwYXRpZW50cyB3aXRoIG5ldXJvZGVnZW5lcmF0aXZlIGRpc2Vhc2VzIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MTEsMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgU3R1ZHkgb2YgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBCYXNlZCBvbiBCaW9sb2dpY2FsIEV2aWRlbmNlIG9mIERvcGFtaW5lIFJld2FyZCBQYXRod2F5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5ODY1MCwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw0LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWV0YWJvbGljIHN5bmRyb21lIFgsMzI5NCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBzd2l0Y2hpbmcgZnJvbSBvbGFuemFwaW5lLCBxdWV0aWFwaW5lLGFuZCByaXNwZXJpZG9uZSB0byBhcmlwaXByYXpvbGUgb24gdGVuIHllYXJzIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgcmlzayBhbmQgbWV0YWJvbGljIHN5bmRyb21lIHN0YXR1cyIsIk5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoLCBUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDEzMzk3OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxSYXluYXVkcyBkaXNlYXNlLDQ3OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPcGlhdGUgZGVwZW5kZW5jZSwyNDMsbnVsbCxBcmlwaXByYXpvbGUgZm9yIFByZXZlbnRpb24gb2YgUmVsYXBzZSB0byBDb2NhaW5lIFVzZSBpbiBNZXRoYWRvbmUtTWFpbnRlbmFuY2UgUGF0aWVudHMsTmF0aW9uYWwgSW5zdGl0dXRlIG9uIERydWcgQWJ1c2UsSW50ZXJ2ZW50aW9uYWwsMzIxMDEsMjAwOC0wNS0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlbGljb2JhY3RlciBweWxvcmkgaW5mZWN0aW9uLDE0OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IEJldHdlZW4gSGVsaWNvYmFjdGVyIFB5bG9yaSBFcmFkaWNhdGlvbiBUaGVyYXB5IGFuZCBNb3RpbGl0b25lIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLENodW5nLUFuZyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE5NjEwOCwyMDE0LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDZXJlYnJhbCBQaGFybWFjb2R5bmFtaWMgRWZmZWN0cyBvZiA1LUhUMUIgUmVjZXB0b3IgU3RpbXVsYXRpb24sIlJpZ3Nob3NwaXRhbGV0LCBEZW5tYXJrIixJbnRlcnZlbnRpb25hbCwyNzUxNzUsMjAxNi0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdW1hdHJpcHRhbiBTdWNjaW5hdGUgMTAwIG1nIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFRldmEgUGhhcm1hY2V1dGljYWxzIFVTQSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4MjY2LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxTdW1hdHJpcHRhbiBTdWNjaW5hdGUgMTAwIG1nIFRhYmxldHMgVW5kZXIgTm9uLUZhc3RpbmcgQ29uZGl0aW9ucyxUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE3Nzk2MywyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IG9mIG9mIGRhaWx5IHNjIGRvc2Ugb2YgR1ItNDMxNzVDIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NjMwOCwxOTg5LTA2LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIFRvbGVyYW5jZSBvZiBTdWJjdXRhbmVvdXMgSW5qZWN0aW9uIFdpdGggR1I0MzE3NUMgYXQgQ29uY2VudHJhdGlvbnMgb2YgMTIsIDE2IGFuZCAyNCBtZy9tbCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTQwOTcsMTk4OS0wNC0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgZG91YmxlLWJsaW5kLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgcmVzcG9uc2Ugb2YgaGVhbHRoeSB2b2x1bnRlZXJzIHRvIGVsZWN0cmljYWwgc3RpbXVsaSBhZnRlciBzdW1hdHJpcHRhbiBpbmplY3Rpb24iLE5hdGlvbmFsIE5hdHVyYWwgU2NpZW5jZSBGb3VuZGF0aW9uIG9mIENoaW5hLEludGVydmVudGlvbmFsLDEzNzY1MixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxGb29kIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyB0byBJbWl0cmV4IFRhYmxldHMgMTAwIG1nLE15bGFuIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTA1NDA2LDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaXJvbWVsYXRpbmUsNTg2MzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsUmVDT0dOSVRJT04sU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaXJvbWVsYXRpbmUgaW4gTWlsZCBBbHpoZWltZXIncyBEaXNlYXNlIFBhdGllbnRzLE5ldXJpbSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ2ODUwLDIwMTUtMTEtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBGbGV4aWJsZSBEb3Npbmcgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNTA2MDYsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJlcmdvdGFtaW5lIChpbmhhbGVkLCBUZW1wbyksIFNoZWZmaWVsZCIsMjY1OTAsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciB0cmlhbCB0byBhc3Nlc3MgdGhlIHNhZmV0eSBvZiBmcm92YXRyaXB0YW4gcGx1cyBlcmdvdGFtaW5lIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsVmVybmFsaXMgcGxjLEludGVydmVudGlvbmFsLDEwOTcxNywxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFycmhlYSBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MyxudWxsLCJBIHByb3NwZWN0aXZlLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZS1kaWFycmhlYSBhbmQgYW54aWV0eSIsVGhlIEZpcnN0IEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgWmhlbmd6aG91IFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjM5NzIxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLEdlbmUtYnktU3RyZXNzIEludGVyYWN0aW9ucyBpbiBJbnRlcnZlbnRpb24gU3R1ZGllcyBTaWduaWZpY2FuY2UsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI4NDMzOCwyMDE4LTA1LTI0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LENBTUVMTElBLVRJTUksQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIExvbmctdGVybSBUcmVhdG1lbnQgV2l0aCBCZWx2aXEgKExvcmNhc2VyaW4gSENsKSBvbiB0aGUgSW5jaWRlbmNlIG9mIE1ham9yIEFkdmVyc2UgQ2FyZGlvdmFzY3VsYXIgRXZlbnRzIGFuZCBDb252ZXJzaW9uIHRvIFR5cGUgMiBEaWFiZXRlcyBNZWxsaXR1cyBpbiBPYmVzZSBhbmQgT3ZlcndlaWdodCBTdWJqZWN0cyBXaXRoIENhcmRpb3Zhc2N1bGFyIERpc2Vhc2Ugb3IgTXVsdGlwbGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBGYWN0b3JzLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwxNjUwMDAsMjAxNC0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxUcmV4aW1ldCBmb3IgUHJldmVudGlvbiBvZiBQb3N0IFRyYXVtYXRpYyBIZWFkYWNoZSBBc3NvY2lhdGVkIFdpdGggQ29nbml0aXZlIER5c2Z1bmN0aW9uLENsaW52ZXN0LEludGVydmVudGlvbmFsLDYzNTQ0LDIwMTAtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBMdS1BQTIxMDA0IGZvciBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiSUNPTiBDbGluaWNhbCBSZXNlYXJjaCwgVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNzI4NzksMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFppcHJhc2lkb25lIEhDTCBDYXBzdWxlcywgMjAgbWcgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zIixEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk5NzgxLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LEFWSVMsQWRqdW5jdGl2ZSBWb3J0aW94ZXRpbmUgaW4gU2NoaXpvcGhyZW5pYSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwyMjEzNDcsMjAxNi0wMi0yOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkFzc29jaWF0aW9uIEJldHdlZW4gQW54aWV0eSBhbmQgQmlwb2xhciBJIERpc29yZGVyIGluIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTWFpbnRlbmFuY2UgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgQ29tYmluZWQgV2l0aCBNb29kIFN0YWJpbGl6ZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ3OTg4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsQXJpcGlwcmF6b2xlIEVmZmVjdHMgb24gQWxjb2hvbCBSZWFjdGl2aXR5IGFuZCBDb25zdW1wdGlvbixNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNTcxNTksMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBhcG5lYSwxNDkwLENTQSB0cmVhdG1lbnQsQnVzcGlyb25lIGFzIGEgUG90ZW50aWFsIFRyZWF0bWVudCBmb3IgUmVjdXJyZW50IENlbnRyYWwgQXBuZWEsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDQ1ODcwLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNsZWVwIGFwbmVhLDE0OTAsUkVTVC1TQ0ksUm9sZSBvZiBFbmhhbmNpbmcgU2Vyb3RvbmluIFJlY2VwdG9ycyBBY3Rpdml0eSBmb3IgU2xlZXAgQXBuZWEgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggU0NJLFVTIERlcGFydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCwyMzA4ODcsMjAxNS0wNS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBTdW1hdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw1OTgyNiwyMDA5LTA5LTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLE11bHRpLUNlbnRlciBFdmFsdWF0aW9uIG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIHNjIEdSLTQzMTc1QyBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1pZ3JhaW5lIEF0dGFja3MgliBVc2luZyBhIFR3by1Eb3NlIFJlZ2ltZW4sIkdsYXhvU21pdGhLbGluZSBwbGMsIFNoZWFseSBJbnN0aXR1dGUgZm9yIENvbXByZWhlbnNpdmUgSGVhbHRoIENhcmUiLEludGVydmVudGlvbmFsLDE1MzY3NiwxOTg5LTAzLTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWZmZWN0cyBvZiBNb3NhcHJpZGUgb24gRXNvcGhhZ2VhbCBNb3RvciBBY3Rpdml0eSBhbmQgRXNvcGhhZ29nYXN0cmljIEp1bmN0aW9uIENvbXBsaWFuY2UgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNTU0NDcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgVHdvLVdheSwgQ3Jvc3NvdmVyIFN0dWR5IFRvIEFzc2VzcyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIFBoYXJtYWNva2luZXRpY3MsIEJpb2VxdWl2YWxlbmNlIG9mIGFuIEludmVzdGlnYXRpb25hbCBPbmNlLWRhaWx5IEV4dGVuZGVkLXJlbGVhc2UgRm9ybXVsYXRpb24gb2YgTG9yY2FzZXJpbiwgYXMgQ29tcGFyZWQgdG8gdGhlIFR3aWNlLWRhaWx5IEltbWVkaWF0ZS1yZWxlYXNlIEZvcm11bGF0aW9uIiwiQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYywgRWlzYWkgSW5jIixJbnRlcnZlbnRpb25hbCwyMjY3NDgsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBBUEQtMzU2IChsb3JjYXNlcmluKSBpbiBIZWFsdGh5IEphcGFuZXNlIEFkdWx0IFN1YmplY3RzLEVpc2FpIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDQ2NzMsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlByb3NwZWN0aXZlLCBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIgc3R1ZHkgb24gdGhlIGNvbXBhcmF0aXZlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIHRoZSBkcnVnIHBydWNhbG9wcmlkZSwgdGFibGV0cywgZmlsbS1jb2F0ZWQgMiBtZyAoSlNDICIiT2JuaW5zayBjaGVtaWNhbCBhbmQgcGhhcm1hY2V1dGljYWwgY29tcGFueSIiLCBSdXNzaWEpIGluIGNvbXBhcmlzb24gd2l0aCB0aGUgcHJlcGFyYXRpb24gUmVzb2xvciwgdGFibGV0cywgZmlsbS1jb2F0ZWQgMiBtZyAoIiJKYW5zc2VuLUNpbGFnIFNwQSAiIiwgSXRhbHkpIixPT08gIk9ibmluc2t5IFRzZW50ciBOYXVraSBJIFRla2hub2xvZ3kiLEludGVydmVudGlvbmFsLDIxOTU3NCwyMDE0LTEyLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsUkVGUkVTSCxSUC01MDYzIGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsIlJldml2YSBQaGFybWFjZXV0aWNhbHMgSW5jLCBTcmlzdGVrIENsaW5pY2FsIFJlc2VhcmNoIixJbnRlcnZlbnRpb25hbCw4MzE4OCwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgNC13ZWVrLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBBY3RpdmUtIGFuZCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBoYXNlIElJSSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBjb21wYXJlZCB3aXRoIGVpdGhlciBoYWxvcGVyaWRvbCBvciBwbGFjZWJvIGluIGhvc3BpdGFsaXplZCBwYXRpZW50cyB3aXRoIGEgRFNNLUlWIGRpYWdub3NpcyBvZiBhY3V0ZSByZWxhcHNlLCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTEyMTUsMjAwMC0wNS0xNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsRElNRVMsIkRpZ2l0YWwgTWVkaWNpbmUgU3R1ZHkgZm9yIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEsIEJpcG9sYXIgSSBEaXNvcmRlciwgb3IgTWFqb3IgRGVwcmVzc2lvbiBDdXJyZW50bHkgVXNpbmcgQXJpcGlwcmF6b2xlIixEdXJoYW0gVkEgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczOTQxLDIwMTktMDQtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZWx5IFJlbGFwc2VkIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM1MTQ1LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBpbiBPdmVyd2VpZ2h0IFBhdGllbnRzIFRyZWF0ZWQgV2l0aCBPbGFuemFwaW5lIGZvciBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMzQ1MywyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW4gb3Blbi1sYWJlbCwgdW5jb250cm9sbGVkLCA4IHdlZWssIHByZWxpbWluYXJ5IHN0dWR5IHRvIGV2YWx1YXRlIGEgY29tYmluYXRpb24gb2YgYXJpcGlwcmF6b2xlIGFuZCB0b3BpcmFtYXRlIGluIHRoZSB0cmVhdG1lbnQgb2Ygb3Bpb2lkLWRlcGVuZGVudCBwYXRpZW50cyB3aXRoIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsVW5pdmVyc2l0YScgRGVnbGkgU3R1ZGkgRGkgTWVzc2luYSxJbnRlcnZlbnRpb25hbCwyMDQ1MjEsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRyYXVtYXRpYyBicmFpbiBpbmp1cnksMzczMyxudWxsLEJ1c3Bpcm9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBUcmF1bWF0aWMgQnJhaW4gSW5qdXJ5IChUQkkpIElycml0YWJpbGl0eSBhbmQgQWdncmVzc2lvbixJbmRpYW5hIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE4NDU3LDIwMTMtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRWF0aW5nIGRpc29yZGVyLDEwNixudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXR5cGljYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uIGZvciBPdXRwYXRpZW50cyBXaXRoIEFub3JleGlhIE5lcnZvc2EsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDMxMzUxLDIwMDMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdG9waWMgZGVybWF0aXRpcywxMTAyLG51bGwsU3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHRhbmRvc3Bpcm9uZSBjaXRyYXRlICg1LUhUMWEgcmVjZXB0b3IgYWdvbmlzdCkgaW4gcGF0ZWludHMgd2l0aCBhdG9waWMgZGVybWF0aXRpcyxOaXBwb24gTWVkaWNhbCBTY2hvb2wgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxNTU5MjgsbnVsbCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCwgVGhyZWUtd2F5LCBJbmNvbXBsZXRlIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgQmlvYXZhaWxhYmlsaXR5IG9mIERpZmZlcmVudCBEb3NlIENvbWJpbmF0aW9ucyBvZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSA1MDAgbWcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE4MzYxOCwyMDA0LTAxLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbXBoZXRhbWluZSBkZXBlbmRlbmNlLDE2LG51bGwsQXNzZXNzbWVudCBvZiBJbnRlcmFjdGlvbnMgQmV0d2VlbiBNZXRoYW1waGV0YW1pbmUgYW5kIEFyaXBpcHJhem9sZS0xLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDMxMTUxLDIwMDQtMDYtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVtZW50aWEsOTAsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM0OTIzMCwyMDE4LTA4LTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBlZmZlY3Qgb2YgYWRkZWQgYnVzcGlyb24gdG8gYXR5cGljYWwgYW50aXBzeWNob3RpYyBkcnVncyBpbiB0aGUgdHJlYXRtZW50IG9mIG5lZ2F0aXZlIHN5bXB0b21zIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxBaHZheiBKdW5kaXNoYXB1ciBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjk1MzU0LDIwMTctMDItMTkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGlwc2FwaXJvbmUsMzM5OSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFJhbmRvbWl6ZWQgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdHMgb2YgTGFtb3RyaWdpbmUgb24gdGhlIDUtSFQxQSBSZWNlcHRvciBGdW5jdGlvbiBpbiBIZWFsdGh5IEh1bWFuIE1hbGVzLFVuaXZlcnNpdHkgb2YgQnJpdGlzaCBDb2x1bWJpYSxJbnRlcnZlbnRpb25hbCwxNDQwMDYsbnVsbCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgUG90ZW50aWFsIFBoYXJtYWNva2luZXRpYyBEcnVnLURydWcgSW50ZXJhY3Rpb24gQmV0d2VlbiBBcm1vZGFmaW5pbCBhbmQgQXJpcGlwcmF6b2xlIGluIEhlYWx0aHkgQWR1bHQgU3ViamVjdHMsVGV2YSBQaGFybWFjZXV0aWNhbCBJbmR1c3RyaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyMzgyNTcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2xpbmljYWwgc3R1ZHkgdG8gZGV0ZXJtaW5lIGJpb2VxdWl2YWxlbmNlIG9mIHR3byBvcmFsIG1lZGljYXRpb25zIGFyaXBpcHJhem9sZSAxMCBtZyB0YWJsZXRzIGluIGhlYWx0aHkgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMsTGFib3JhdG9yaW8gVG9ycmVudCxJbnRlcnZlbnRpb25hbCwyMzc5NjcsMjAxNS0xMC0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBvZiB0d28gb3JhbCBtZWRpY2luYWwgdGFibGV0cyBhcmlwaXByYXpvbGUgMTAgbWcgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucywiQWNjb3JkIEZhcm1hLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMjIwMTEyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzLCBiaW9lcXVpdmFsZW5jZSBhbmQgc2FmZXR5IG9mIGRydWdzIEFyaXByaXpvbCwgdGFibGV0LCAxMCBtZyAoQmVsdXBvLCBtZWRpY2luZXMgYW5kIGNvc21ldGljcyBkZCwgQ3JvYXRpYSkgYW5kIEFiaWxpZnksIHRhYmxldHMsIDEwIG1nIChCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmcsIFB1ZXJ0byBSaWNvKSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEJlbHVwbyxJbnRlcnZlbnRpb25hbCwxNzgzMjcsMjAxNC0wMy0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixMSVZFLExvcmNhc2VyaW4gSW50cmEgVmVub3VzIENvY2FpbmUgRWZmZWN0cyxNaWR3ZXN0IEJpb21lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwyNTMxODgsMjAxNS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLFN0dWR5IG9mIFRlbGNhZ2VwYW50IChNSy0wOTc0KSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNb2RlcmF0ZSB0byBTZXZlcmUgQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIk1lcmNrICYgQ28gSW5jLCBNZXJjayBTaGFycCAmIERvaG1lIENvcnAiLEludGVydmVudGlvbmFsLDEzOTI0LDIwMDctMDItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkFuIG9wZW4tbGFiZWwsIHNpbmdsZS1kb3NlLCB0aHJlZS1wZXJpb2QsIGNyb3NzLW92ZXIgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBmb29kIGFuZCBmb3JtdWxhdGlvbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyAoUEspIG9mIEx1QUEtMjEwMDQsIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIGluIGhlYWx0aHkgc3ViamVjdHMiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDk1MzA1LDIwMTItMDMtMTYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkVmZmVjdCBvZiBWb3J0aW94ZXRpbmUsIFBhcm94ZXRpbmUgYW5kIFBsYWNlYm8gb24gU2V4dWFsIEZ1bmN0aW9uaW5nIGluIEhlYWx0aHkgVm9sdW50ZWVycyIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNzUzMzIsMjAxNi0xMS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUFJFVkVOVCwiQSBzZWNvbmQtZ2VuZXJhdGlvbiwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgY29nbml0aXZlIGJlaGF2aW9yYWwgdGhlcmFweSAoQ0JUKSwgYXJpcGlwcmF6b2xlLCBhbmQgY2xpbmljYWwgbWFuYWdlbWVudCAoQ00pIGZvciB0aGUgcHJldmVudGlvbiBvZiBwc3ljaG9zaXMiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSIsSW50ZXJ2ZW50aW9uYWwsODE0MjIsMjAxMC0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgZXh0ZW5zaW9uIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBsb25nLXRlcm0gc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcGF0aWVudHMgd2hvIGNvbXBsZXRlZCB0aGUgMTAtd2VlayBhY3V0ZSBwaGFzZSBvZiB0aGUgc3R1ZHkgQ04xMzgwMDUgU1QgYW5kIGZvciB3aG9tIGNvbnRpbnVlZCB0cmVhdG1lbnQgd2FzIGluZGljYXRlZCBmb3IgcHN5Y2hvdGljIHN5bXB0b21zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyknMgdHlwZSIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNzk3MDksMjAwMC0wOC0wNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDNfbmMzWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1FcGlzb2RlIE5vbi1BZmZlY3RpdmUgUHN5Y2hvc2lzOiBUaHJlZS1ZZWFycyBGb2xsb3ctVXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwzNzQyNzQsMjAxNS0wMS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQM18zWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDI5MjY3MSwyMDE0LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFNJUCxJbXByb3ZpbmcgT3V0Y29tZXMgaW4gUHN5Y2hvc2lzIEFzc29jaWF0ZWQgV2l0aCBTdWJzdGFuY2UgVXNlIFVzaW5nIEFyaXBpcHJhem9sZSxGZWluc3RlaW4gSW5zdGl0dXRlIGZvciBNZWRpY2FsIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDIwMzM5NywyMDExLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLE5MWC0xMTIsODQxMDgsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsWzE4Rl0tRjEzNjQwIGFzIGEgTmV3IEJyYWluIFJhZGlvcGhhcm1hY2V1dGljYWwsSG9zcGljZXMgQ2l2aWxzIERlIEx5b24sSW50ZXJ2ZW50aW9uYWwsMzIwMTIzLDIwMTctMTItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wMzM4Mjc5Miw2NTM3NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVW5pZGVudGlmaWVkIGluZGljYXRpb24sMTAwNSxudWxsLCJUbyBFdmFsdWF0ZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGxhc21hIERydWcgTGV2ZWxzIEFuZCBPdGhlciBCaW9sb2dpY2FsIEVmZmVjdHMgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDYzMzExLDIwMTAtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbm9yZXhpYSBuZXJ2b3NhLDI0LEFSSUFORSxBcmlwaXByYXpvbGUgaW4gQW5vcmV4aWEgTmVydm9zYSxIb3NwaXRhbCBDbGluaWMgb2YgQmFyY2Vsb25hLEludGVydmVudGlvbmFsLDY0Njc1LDIwMTAtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsU0FNUywiQSBwcm9zcGVjdGl2ZSwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIGZvciB0aGUgcHJldmVudGlvbiBvZiBhY3V0ZSBtb3VudGFpbiBzaWNrbmVzcyAoQU1TKSIsVW5pdmVyc2l0eSBvZiBUZWhyYW4sSW50ZXJ2ZW50aW9uYWwsNjYzNDAsMjAwNi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2wsIENyb3Nzb3ZlciwgRG9zZS1Db21wYXJpc29uIFN0dWR5IG9mIFN1YmN1dGFuZW91cyBHUi00MzE3NUMsIGZvciB0aGUgVHJlYXRtZW50IG9mIENocm9uaWMgVGVuc2lvbi1UeXBlIEhlYWRhY2hlIiwiR2xheG9TbWl0aEtsaW5lIHBsYywgVW5pdmVyc2l0eSBIb3NwaXRhbCBHZW50b2Z0ZSIsSW50ZXJ2ZW50aW9uYWwsMjA3OTQwLDE5ODktMDItMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgb24gQ29nbml0aXZlIER5c2Z1bmN0aW9uIGluIFdvcmtpbmcgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIxNDgyMSwyMDE0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LG51bGwsQSBwcmVsaW1pbmFyeSBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYWRqdW5jdGl2ZSBhcmlwaXByYXpvbGUgb24gc2V4dWFsIGR5c2Z1bmN0aW9uIGluIHNjaGl6b3BocmVuaWEsIk1pbmlzdHJ5IG9mIEVkdWNhdGlvbiwgQ3VsdHVyZSwgU3BvcnRzLCBTY2llbmNlIGFuZCBUZWNobm9sb2d5IG9mIEphcGFuIixJbnRlcnZlbnRpb25hbCwzMDg4NTksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBSb3RpZ290aW5lIFRyYW5zZGVybWFsIFBhdGNoIGluIEhlYWx0aHkgQ2hpbmVzZSBTdWJqZWN0cyIsVUNCIFNBLEludGVydmVudGlvbmFsLDkwNjAzLDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNFUC0zNjM4NTYgaW4gU3ViamVjdHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyIsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI3OTg4NywyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBIFN0dWR5IG9mIHRoZSBBYnVzZSBQb3RlbnRpYWwgb2YgTGFzbWlkaXRhbiBpbiBQYXJ0aWNpcGFudHMgV2hvIEFyZSBSZWNyZWF0aW9uYWwgRHJ1ZyBVc2VycyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMTMyMzIsMjAxNy0wOS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEFTUC00MzQ1IGFzIEFkZC1vbiBUcmVhdG1lbnQgZm9yIENvZ25pdGl2ZSBJbXBhaXJtZW50IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBvbiBTdGFibGUgRG9zZXMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uLEFzdGVsbGFzIFBoYXJtYSBHbG9iYWwgRGV2ZWxvcG1lbnQgSW5jLEludGVydmVudGlvbmFsLDM0MzA5NCwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixaSVAsWmlwcmFzaWRvbmUgaW4gdGhlIFBzeWNob3NpcyBQcm9kcm9tZSxZYWxlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzM5NzMsMjAwOC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgRm9yIFRocmVlIERheXMgSW4gUGF0aWVudHMgV2l0aCBQc3ljaG90aWMgQWdpdGF0aW9uLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzU4ODMsMjAxNi0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsInRlc3Rvc3Rlcm9uZSArIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChvcmFsLCBoeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIpLCBFbW90aW9uYWwgQnJhaW4iLDg0MzYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgQ3Jvc3NvdmVyLCBMeWJyaWRvcyBEb3NlLUZpbmRpbmcgU3R1ZHkgdG8gVmFsaWRhdGUgdGhlIFByZWRpY3RpdmUgUG93ZXIgb2YgdGhlIERpYWdub3N0aWMgTW9kZWwgZm9yIEx5YnJpZG8gYW5kIEx5YnJpZG9zIEVmZmljYWN5IGFuZCB0byBJZGVudGlmeSBhbmQgRXZhbHVhdGUgQWRkaXRpb25hbCBQc3ljaG9tZXRyaWMgYW5kIEJpb2xvZ2ljYWwgTWFya2VycyBXaGljaCBJbmNyZWFzZSB0aGUgUHJlZGljdGl2ZSBQb3dlciBvZiB0aGUgRGlhZ25vc3RpYyBNb2RlbCwgaW4gV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgV2l0aCBvciBXaXRob3V0IFNleHVhbCBBcm91c2FsIERpc29yZGVyIEFuZC9vciBGZW1hbGUgT3JnYXNtaWMgRGlzb3JkZXIgb3IgU1NSSSBJbmR1Y2VkIFNleHVhbCBEeXNmdW5jdGlvbiwgaW4gdGhlIERvbWVzdGljIFNpdHVhdGlvbiIsQ29tcGFuaW9uIERpYWdub3N0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwxNzg1ODUsMjAxNC0wMS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLEEgUGxhY2Viby1Db250cm9sbGVkIFRyaWFsIG9mIEJ1c3Bpcm9uZSBmb3IgVHJlYXRtZW50IG9mIE1hcmlqdWFuYSBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMjI4MCwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTVEFCSUwtQixTZXF1ZW50aWFsIFRoZXJhcHkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2V2ZXJlIEJpcG9sYXIgRGVwcmVzc2lvbixOZXVyb1J4IEluYyxJbnRlcnZlbnRpb25hbCwyODA0NjcsMjAxOC0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiUGVkaWF0cmljIE9wZW4tTGFiZWwsIEV4dGVuc2lvbiBTdHVkeSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDg4MDQsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHBvc3QtbWFya2V0aW5nIHN1cnZlaWxsYW5jZSwgcGhhc2UgSVYgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIEltaWdyYW4gKHN1bWF0cmlwdGFuKSBhZG1pbmlzdGVyZWQgaW4gS29yZWFuIHN1YmplY3RzIHdpdGggYWN1dGUgbWlncmFpbmUgd2l0aCBvciB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsOTk2NzIsMTk5Ny0wMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIERvdWJsZS1CbGluZCwgR2VuZXJhbCBQcmFjdGljZSBTdHVkeSB0byBDb21wYXJlIEdSLTQzMTc1IFdpdGggUGFyYWNldGFtb2wgYW5kIE1ldG9jbG9wcmFtaWRlIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUzODQ1LDE5OTEtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGZvciB0aGUgY29tcGFyaXNvbiBvZiBlbGV0cmlwdGFuICg0MCB0byA4MCBtZykgYW5kIG9yYWwgc3VtYXRyaXB0YW4gKDUwIHRvIDEwMCBtZykgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUgaW4gc3VtYXRyaXB0YW4tbmFpdmUgcGF0aWVudHMiLE1lbW9yaWFsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTA5NzQ0LDE5OTktMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBwaGFzZSBJSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgaW50cmFuYXNhbCBHUi00MzE3NU4gKDEsIDUsIDEwLCAyMCBhbmQgNDAgbWcpIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUgKG9uZSBub3N0cmlsIGFwcGxpY2F0aW9uKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxMDU2MDAsMTk5MC0wOS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscHJ1Y2Fsb3ByaWRlLDE1NzE2LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElsZXVzLDE1MTksbnVsbCxBbnRpLWluZmxhbW1hdG9yeSBFZmZlY3Qgb2YgUHJlLW9wZXJhdGl2ZSBTdGltdWxhdGlvbiBvZiB0aGUgQ2hvbGluZXJnaWMgQW50aS1pbmZsYW1tYXRvcnkgUGF0aHdheSxLVSBMZXV2ZW4gUiZELEludGVydmVudGlvbmFsLDIyNzcwNywyMDE0LTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG5hcmF0cmlwdGFuLDMyMzUsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxTdGF0dXMgTWlncmFpbm9zdXMgLSBEaWZmZXJlbnRpYXRpbmcgQmV0d2VlbiBSZXNwb25kZXJzIGFuZCBOb24tcmVzcG9uZGVycyxIYXJ0Zm9yZCBIZWFsdGhjYXJlLEludGVydmVudGlvbmFsLDI4OTYzOCwyMDE2LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsVERNLVZJR0lMLE11bHRpY2VudGVyIHRyaWFsIGluIHRvIGludmVzdGlnYXRlIHRoZSB1c2FnZSBvZiBhbnRpZGVwcmVzc2FudCBhbmQgYW50aXBzeWNob3RpY3MgKHdpdGggLyB3aXRob3V0IGFwcHJvdmFsKSBpbiBwYXRpZW50cyBhdCB0aGUgYWdlIG9mIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cyxXdWVyemJ1cmcgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzNzU0NzgsMjAxNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTbGVlcCBkaXNvcmRlciwzMDQsbnVsbCwiUHJvb2Ytb2YtY29uY2VwdCB0cmlhbCBvZiBBQ1AtMTAzLCBmb3IgdGhlIHRyZWF0bWVudCBvZiBzbGVlcCBkaXN0dXJiYW5jZXMgcmVsYXRlZCB0byBQYXJraW5zb24ncyBkaXNlYXNlIGFuZCBzY2hpem9waHJlbmlhIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDQ4MzcsMjAwNi0wNC0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVybGlwaWRlbWlhLDE3NSxudWxsLFRoZSBFZmZlY3Qgb2YgU3dpdGNoaW5nIHRvIEFyaXBpcHJhem9sZSBvbiBIZWFydCBIZWFsdGggaW4gT3ZlcndlaWdodCBhbmQgT2Jlc2UgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw4NzgxLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmVjdHMgb2YgQWN1dGUgUHJ1Y2Fsb3ByaWRlIEFkbWluaXN0cmF0aW9uIGluIEhlYWx0aHkgVm9sdW50ZWVycyxVbml2ZXJzaXR5IG9mIE94Zm9yZCxJbnRlcnZlbnRpb25hbCwzNzIzNDgsMjAxNy0wMi0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMix6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxWZXJ0aWdvLDI0MzQsbnVsbCwiQSBjcm9zcy1vdmVyLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgcGlsb3Qgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiB6b2xtaXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5vdXMgdmVydGlnbyIsSHVtYm9sZHQgVW5pdmVyc2l0eSBvZiBCZXJsaW4sSW50ZXJ2ZW50aW9uYWwsMTE0MTQ4LDIwMDMtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEZLQjAxTUQsNjI2MjQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHkiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgcGhhc2UgSSBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgRktCMDFNRCxGYWJyZSBLcmFtZXIgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyNzIzMjgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsRWxldHJpcHRhbiBQcm92aWRlcyBDb25zaXN0ZW50IE1pZ3JhaW5lIFJlbGllZjogUmVzdWx0cyBPZiBBIFdpdGhpbi1QYXRpZW50IE11bHRpcGxlLURvc2UgU3R1ZHksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMzM1ODYsMjAwMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIGNvbXBhcmF0aXZlLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBmb3IgdGhlIGNvbXBhcmlzb24gb2YgZWxldHJpcHRhbiAoNDAgdG8gODAgbWcpIGFuZCBvcmFsIHN1bWF0cmlwdGFuICg1MCB0byAxMDAgbWcpIGZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGluIHN1bWF0cmlwdGFuLW5haXZlIHBhdGllbnRzIixNZW1vcmlhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTc0NCwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLGFsbmVzcGlyb25lLDQzMjQsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBleGFtaW5pbmcgdGhlIGVmZmVjdCBvZiBmb29kIG9uIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIGFsbmVzcGlyb25lIGluIGh1bWFucyxTZXJ2aWVyLEludGVydmVudGlvbmFsLDU1Mzk3LDE5OTUtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsR2VuZS1ieS1TdHJlc3MgSW50ZXJhY3Rpb25zIGluIEludGVydmVudGlvbiBTdHVkaWVzIFNpZ25pZmljYW5jZSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg0MzM4LDIwMTgtMDUtMjQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLWdyb3VwLCAzLW1vbnRocyBwaWxvdCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGJlc3Qgb3B0aW9uIGZvciB0cmFuc2l0aW9uaW5nIGZyb20gYW1pc3VscHJpZGUgdG8gemlwcmFzaWRvbmUgdGhlcmFweSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgYW1pc3VscHJpZGUgZm9yIGNocm9uaWMgb3Igc3ViY2hyb25pYyBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYzMTksMjAwMS0wNC0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGRvc2UtcmFuZ2luZywgaGFsb3Blcmlkb2wtY29udHJvbGxlZCwgZXhwbG9yYXRvcnkgc3R1ZHkgZXZhbHVhdGluZyBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIGhvc3BpdGFsaXplZCBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNDg5LDE5OTgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxPbGFuemFwaW5lIFZlcnN1cyBBY3RpdmUgQ29tcGFyYXRvciBpbiB0aGUgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMzODU1LDIwMDEtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOZXVyb2RlZ2VuZXJhdGl2ZSBkaXNlYXNlLDIzMyxudWxsLEEgU2FmZXR5IFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZHVsdCBhbmQgRWxkZXJseSBTdWJqZWN0cyBFeHBlcmllbmNpbmcgTmV1cm9wc3ljaGlhdHJpYyBTeW1wdG9tcyBSZWxhdGVkIHRvIE5ldXJvZGVnZW5lcmF0aXZlIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ0ODYyLDIwMTgtMDUtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEV2YWx1YXRpb24gU3R1ZHkgb2YgdGhlIEJpb2F2YWlsYWJpbGl0eSBvZiBCcmV4cGlwcmF6b2xlIE9yYWxseSBEaXNpbnRlZ3JhdGluZyBUYWJsZXRzIGluIEhlYWx0aHkgTWFsZSBTdWJqZWN0cyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDI2OTEzNiwyMDE2LTA5LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gV2hlbiBHaXZlbiBXaXRoIFN1bWF0cmlwdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMxNjA5OSwyMDE3LTEwLTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBYnNvcnB0aW9uLCBNZXRhYm9saXNtIGFuZCBFeGNyZXRpb24gb2YgKDE0QyktTGFzbWlkaXRhbiAtIFNpbmdsZSBPcmFsIERvc2UgQWRtaW5pc3RyYXRpb24iLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI4NzE1MywyMDE3LTA0LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcmF2ZXQgc3luZHJvbWUsNTYxNCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGV2YWx1YXRlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbG9yY2FzZXJpbiBpbiBjaGlsZHJlbiB3aXRoIGRyYXZldCBzeW5kcm9tZSxOYXRpb25hbCBJbnN0aXR1dGVzIG9mIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyODc5NjksbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHkiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCdXNwaXJvbmUgSHlkcm9jaGxvcmlkZSAzMCBtZyBUYWJsZXRzLCBGYXN0aW5nIixUZXZhIFBoYXJtYWNldXRpY2FscyBVU0EgSW5jLEludGVydmVudGlvbmFsLDE3NjA1NiwyMDAxLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIFZlcnN1cyBTd2l0Y2hpbmcgdG8gRGlmZmVyZW50IENsYXNzIG9mIEFudGlkZXByZXNzYW50cyBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEtvcmVhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsODMxMjksMjAxMS0xMS0zMCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxUaGUgQ29tYmluYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBBbnRpZGVwcmVzc2FudHMgaW4gUHN5Y2hvdGljIE1ham9yIERlcHJlc3Npb24sTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMzOTc0LDIwMDMtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBcmlwaXByYXpvbGUgYXMgQXVnbWVudGF0aW9uIGZvciBUUkQsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBTdGF0ZSBVbml2ZXJzaXR5IG9mIE5ldyBZb3JrIixJbnRlcnZlbnRpb25hbCwzMzkwMCwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDFiIENsaW5pY2FsLEMxQixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBoYXNlIEliIFRyaWFsIG9mIFBSWC0wMDAyMyBpbiBIZWFsdGh5IFN1YmplY3RzLFByZWRpeCBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE0ODA5NSxudWxsLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDAgQ2xpbmljYWwsQzAsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLElkZW50aWZpY2F0aW9uIG9mIE11bHRpLW1vZGFsIEJpby1tYXJrZXJzIGZvciBFYXJseSBEaWFnbm9zaXMgYW5kIFRyZWF0bWVudCBQcmVkaWN0aW9uIGluIFNjaGl6b3BocmVuaWEgSW5kaXZpZHVhbHMsR2VuZXJhbCBIb3NwaXRhbCBvZiBUaWFuamluIE1lZGljYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjUxNjUsMjAxOC0wOS0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHJlbnphcHJpZGUsNDIxMSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2wsIHBhcmFsbGVsLWdyb3VwLCBkb3NlLXJhbmdpbmcgc3R1ZHkgd2FzIHRvIGV2YWx1YXRlIHRocmVlIGRvc2VzIG9mIHJlbnphcHJpZGUiLFNtaXRoS2xpbmUgQmVlY2hhbSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjAyMzgsMjAwMi0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBbnRpLWRlcHJlc3NhbnQgRGlzY29udGludWF0aW9uIGluIFRyZWF0bWVudCBSZXNpc3RhbnQgRGVwcmVzc2lvbixVbml2ZXJzaXR5IG9mIExvdWlzdmlsbGUsSW50ZXJ2ZW50aW9uYWwsMzY1MzA2LDIwMTktMDItMjggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmlsYXJveGF6aW5lIGh5ZHJvY2hsb3JpZGUsNTk4OTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWRpb3BhdGhpYyBwdWxtb25hcnkgZmlicm9zaXMsMzc3MSxudWxsLEEgcGhhc2UgSUkgc3R1ZHkgb2YgUlAtNTA2MyBmb3IgdGhlIHRyZWF0bWVudCBvZiBpZGlvcGF0aGljIHB1bG1vbmFyeSBmaWJyb3NpcyAoSVBGKSxSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMzU2MjIsbnVsbCxQbGFubmVkDQpudWxsLDErLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsIlN0dWR5IG9mIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgY29tYmluYXRpb24gdGhlcmFweSB3aXRoIGxvdy12b2x1bWUgcG9seWV0aHlsZW5lIGdseWNvbCAoTW92aXByZXApLCBzb2RpdW0gcGljb3N1bGZhdGUgaHlkcmF0ZSAoUHVyc2VubmlkKSwgbW9zYXByaWRlIGNpdHJhdGUgaHlkcmF0ZSAoR2FzbW90aW4pIG9uIGJvd2VsIHByZXBhcmF0aW9uIixKdW50ZW5kbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI0ODA0MywyMDEzLTA4LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG9zZXh1YWwgZGlzb3JkZXIsNzA3LG51bGwsQSBPbmUtWWVhciBTYWZldHkgU3R1ZHkgb2YgRmxpYmFuc2VyaW4gdG8gVHJlYXQgUHJlLU1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgKEhTREQpLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMzMDUsMjAwNy0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3NleHVhbCBkaXNvcmRlciw3MDcsbnVsbCxGbGliYW5zZXJpbiBSYW5kb21pemVkIFdpdGhkcmF3YWwgVHJpYWwgaW4gUHJlLU1lbm9wYXVzYWwgV29tZW4sQm9laHJpbmdlciBJbmdlbGhlaW0gQ29ycCxJbnRlcnZlbnRpb25hbCwzMzI4NCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLENoaW5lc2UgRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhJ3MgT3B0aW1hbCBEeW5hbWljIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IFJlZ2ltZW4sU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM3NzY0LDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsIkEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCBvZiBibG9uYW5zZXJpbiB2ZXJzdXMgYXJpcGlwcmF6b2xlIGluIHBzeWNob3RpYyBkaXNvcmRlciIsIkZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSwgSG9zcGl0YWwgb2YgU3QgQ3Jvc3MsIFRoZSBKaW5kYWkgSG9zcGl0YWwsIFRoZSBPa2VoYXphbWEgSG9zcGl0YWwsIFRveW90YSBNZW1vcmlhbCBIb3NwaXRhbCIsSW50ZXJ2ZW50aW9uYWwsMTU2MDYzLDIwMTMtMDctMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxUaGUgRWZmZWN0IG9mIFZhcnlpbmcgRGVncmVlcyBvZiBIZXBhdGljIEltcGFpcm1lbnQgb24gdGhlIFNpbmdsZS1Eb3NlIFBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIE9yYWxseSBBZG1pbmlzdGVyZWQgTHVyYXNpZG9uZTogQSBQaGFzZSBJIFN0dWR5LFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE1NDk5MiwyMDA4LTExLTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU29jaWFsIHBob2JpYSwzMTUwLG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgV2l0aCBDby1Nb3JiaWQgU29jaWFsIEFueGlldHksVW5pdmVyc2l0eSBvZiBNZWRpY2luZSBhbmQgRGVudGlzdHJ5IG9mIE5ldyBKZXJzZXksSW50ZXJ2ZW50aW9uYWwsMzE0NzAsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2V4dWFsIGR5c2Z1bmN0aW9uLDM3NzQsS0lTUywiQXJpcGlwcmF6b2xlLCBBYmlsaWZ5IE1haW50ZW5hIENvbGxhYm9yYXRpdmUgQ2xpbmljYWwgUHJvdG9jb2wiLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwyMzI1NzIsMjAxNS0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbnN1bGluIHJlc2lzdGFuY2UsMjUyMCxudWxsLEVmZmVjdGl2ZW5lc3Mgb2YgQXJpcGlwcmF6b2xlIGZvciBJbXByb3ZpbmcgU2lkZSBFZmZlY3RzIG9mIENsb3phcGluZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBlb3BsZSBXaXRoIFNjaGl6b3BocmVuaWEsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE4MjE5LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxQRUFSTCAzLCJMdXJhc2lkb25lIEhDTCAtIEEgNi1XZWVrLCBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhIixTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM1NjcxLDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW92ZW1lbnQgZGlzb3JkZXIsMzY4LFRoZSByb2xlIG9mIGJ1c3Bpcm9uZSBpbiBMSURzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZS4sVGhlIHJvbGUgb2YgQnVzcGlyb25lIGluIGF0dGVudWF0aW5nIGludm9sdW50YXJ5IG1vdmVtZW50cyAoRHlza2luZXNpYXMpIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSxJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNzU0OTQsMjAxNS0wNS0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvcm9uYXJ5IGFydGVyeSBkaXNlYXNlLDgwLG51bGwsIkEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHN3aXRjaGluZyBmcm9tIG9sYW56YXBpbmUsIHF1ZXRpYXBpbmUsYW5kIHJpc3Blcmlkb25lIHRvIGFyaXBpcHJhem9sZSBvbiB0ZW4geWVhcnMgY29yb25hcnkgaGVhcnQgZGlzZWFzZSByaXNrIGFuZCBtZXRhYm9saWMgc3luZHJvbWUgc3RhdHVzIiwiTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGgsIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCIsSW50ZXJ2ZW50aW9uYWwsMTMzOTc4LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBhbmQgU3ltcHRvbXMgb2YgT2JzZXNzaXZlIENvbXB1bHNpdmUgRGlzb3JkZXIgKE9DRCksSmFtYWljYSBIb3NwaXRhbCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzMxNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsQWNjZXB0YW5jZSBhbmQgQ29tbWl0bWVudCBUaGVyYXB5IGluIFNTUkktUmVzaXN0YW50IE9ic2Vzc2l2ZSBDb21wdWxzaXZlIERpc29yZGVyLFNoYW5naGFpIE1lbnRhbCBIZWFsdGggQ2VudGVyLEludGVydmVudGlvbmFsLDI3ODI1MSwyMDE3LTA5LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaXNzb2NpYXRpdmUgZGlzb3JkZXIsMTkzOCxudWxsLEFzc2Vzc21lbnQgb2YgQWR2ZXJzZSBFdmVudHMgaW4gYSBOYWl2ZSBQZWRpYXRyaWMgUG9wdWxhdGlvbiBUcmVhdGVkIFdpdGggYW4gQW50aXBzeWNob3RpYyxDZW50cmUgSG9zcGl0YWxpZXIgVW5pdmVyc2l0YWlyZSBEZSBOaWNlLEludGVydmVudGlvbmFsLDMzNjY2NCwyMDEzLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsTHVyYXNpZG9uZSBFZmZlY3RzIG9uIFRpc3N1ZSBHbHV0YW1hdGUgaW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMDY0NjUsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyb21lcmd1cmlkZSwyNjg2LEVmZmljYWN5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgNi13ZWVrLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBicm9tZXJndXJpZGUgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsQmF5ZXIgU2NoZXJpbmcgUGhhcm1hIEFHLEludGVydmVudGlvbmFsLDU1NzI5LDE5ODgtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgc2l4LXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGltcGFjdCBvZiBjYWxvcmllcyBhbmQgZmF0IGNvbnRlbnQgb2YgbWVhbHMgb24gb3JhbCB6aXByYXNpZG9uZSBhYnNvcnB0aW9uIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsIGJpcG9sYXIgZGlzb3JkZXIsIG9yIHBzeWNob3RpYyBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2Mjk5OCwyMDA2LTA3LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLCByYW5kb21pemVkIGNsaW5pY2FsIHRyaWFsIHRvIGNvbXBhcmUgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgbG93IGRvc2VzIG9mIGhhbG9wZXJpZG9sIGFuZCByZWd1bGFyIGRvc2VzIG9mIHNlY29uZCBnZW5lcmF0aW9uIGFudGlwc3ljaG90aWNzIGluIHBhdGllbnRzIHdpdGggZmlyc3QtZXBpc29kZSBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9waHJlbmlmb3JtIGRpc29yZGVyIiwiQXN0cmFaZW5lY2EgcGxjLCBFbGkgTGlsbHkgJiBDbywgUGZpemVyIEluYywgU2Fub2ZpLVN5bnRoZWxhYm8iLEludGVydmVudGlvbmFsLDYyOTM5LDIwMDktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksWkVPU1MsWmlwcmFzaWRvbmUgaW4gRWFybHkgT25zZXQgU2NoaXpvcGhyZW5pYSBTcGVjdHJ1bSBEaXNvcmRlcnMsVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw2MTYwNiwyMDAyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIHN0dWR5IGV2YWx1YXRpbmcgdGhlIGNhcmRpb3Zhc2N1bGFyIHNhZmV0eSBvZiB6aXByYXNpZG9uZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTcxLDIwMDEtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIDI0LWggVGltZSBDb3Vyc2Ugb2YgU3RyaWF0YWwgRG9wYW1pbmUgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIFppcHJhc2lkb25lOiBBIFBFVCBTdHVkeSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw0NTcyOSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFppcHJhc2lkb25lIFBoYXJtYWNva2luZXRpY3MgVXNpbmcgYSBSZWR1Y2VkIEZvb2QgRWZmZWN0IEZvcm11bGF0aW9uIENvbXBhcmVkIHRvIFBoYXJtYWNva2luZXRpY3MgRnJvbSBDb21tZXJjaWFsIENhcHN1bGVzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNDA5ODEsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsWmlwcmFzaWRvbmUgZm9yIENsb3phcGluZS0gb3IgT2xhbnphcGluZS1Bc3NvY2lhdGVkIERpYWJldGVzIE1lbGxpdHVzLE5vcnRoIFN1ZmZvbGsgTWVudGFsIEhlYWx0aCBBc3NvY2lhdGlvbixJbnRlcnZlbnRpb25hbCwzNjAzMywyMDA1LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFppcHJhc2lkb25lIFZlcnN1cyBPbGFuemFwaW5lIEluIFRoZSBUcmVhdG1lbnQgT2YgU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1MTQyLDIwMDMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTUUtMjExMiBQaGFzZSBJSUksTWVpamkgU2Vpa2EgUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMjQxOTcsMjAxNS0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IGFuZCBzYWZldHkgb2YgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gb3RoZXIgYXR5cGljYWwgYW50aS1wc3ljaG90aWMgZHJ1ZyBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExMjAsMjAwMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVzdGltYXRpbmcgYW5kIFJlZHVjaW5nIHRoZSBDYXJkaW92YXNjdWxhciBSaXNrIG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBEcnVncyBGcm9tIExpcGlkIE1lYXN1cmVzIGFuZCBJc2NoZW1pYyBFbGVjdHJvY2FyZGlvZ3JhcGhpYyBDaGFuZ2VzLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNzQyNzEsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNi1XZWVrLCBSYW5kb21pemVkLCBCbGluZGVkLUFzc2Vzc21lbnQgU3R1ZHkgVG8gQ29tcGFyZSBJbnRyYW11c2N1bGFyIGFuZCBPcmFsIEZvcm11bGF0aW9ucyBaaXByYXNpZG9uZSBhbmQgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSBhbmQgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIixTdGVya2ZvbnRlaW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ2MjUxLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA0NC1XZWVrLCBEb3VibGUtQmxpbmQsIENvbnRpbnVhdGlvbiBTdHVkeSBUbyBDb21wYXJlIFppcHJhc2lkb25lIGFuZCBSaXNwZXJpZG9uZSBpbiB0aGUgTG9uZy1UZXJtIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIixVbml2ZXJzaXR5IG9mIENhbGdhcnksSW50ZXJ2ZW50aW9uYWwsMTQ0Mzk0LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgQW5kIFRvbGVyYWJpbGl0eSBPZiBaaXByYXNpZG9uZSBWZXJzdXMgQ2xvemFwaW5lIEluIFRoZSBUcmVhdG1lbnQgT2YgRHVhbGx5IERpYWdub3NlZCAoREQtKSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgQW5kIENhbm5hYmlzIFVzZSBEaXNvcmRlcjogYSBSYW5kb21pemVkIFN0dWR5LFVuaXZlcnNpdHkgb2YgQ29sb2duZSxJbnRlcnZlbnRpb25hbCwxNDEwMjMsMjAwNi0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxaaXByYXNpZG9uZSBpbiBCaXBvbGFyIERpc29yZGVyIFdpdGggQ28tbW9yYmlkIExpZmV0aW1lIFBhbmljIG9yIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIgKEdBRCksVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDY4NzI4LDIwMTAtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBGb3IgVGhyZWUgRGF5cyBJbiBQYXRpZW50cyBXaXRoIFBzeWNob3RpYyBBZ2l0YXRpb24sQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTg4MywyMDE2LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBkb3VibGUtZHVtbXkgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIG9yYWwgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gaGFsb3Blcmlkb2wgaW4gaW4tcGF0aWVudHMgd2l0aCBhbiBhY3V0ZSBtYW5pYyBlcGlzb2RlIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NzA2LDIwMDItMDktMTMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsIkEgcGhhc2UgSUlJLCBkb3VibGUtYmxpbmQsIG11bHRpLWNlbnRlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGdlcGlyb25lIGluIHBhdGllbnRzIHdpdGggbW9kZXJhdGUgZGVwcmVzc2lvbiIsRmFicmUgS3JhbWVyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDU5NDAsMjAwNS0wNi0yOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsImdlcGlyb25lIChleHRlbmRlZCByZWxlYXNlKSwgRmFicmUgS3JhbWVyIiwzMjAzLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLCJBIHBoYXNlIElJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY29tcGFyaXNvbiBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBnZXBpcm9uZSBhbmQgaW1pcHJhbWluZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBtYWpvciBkZXByZXNzaW9uIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDc5LDE5OTYtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUliLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsIGdyb3VwIGRlc2lnbiwgcGxhY2Viby1jb250cm9sbGVkIHNpbmdsZS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgbmFyYXRyaXB0YW4gZm9yIG1pbGQgbWVuc3RydWFsbHkgYXNzb2NpYXRlZCBtaWdyYWluZSAoTUFNKSB3aGVuIHRyZWF0bWVudCB3YXMgYWRtaW5pc3RlcmVkIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3NTI0LDIwMDEtMTEtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGFzY2VuZGluZy1kb3NlLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiB0d28gZG9zZXMgb2Ygb3JhbCBuYXJhdHJpcHRhbiBpbiB5b3VuZyBhbmQgZWxkZXJseSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI4OCwxOTk1LTA4LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBhbmQgbmFyYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCAgbW9kZXJhdGUvc2V2ZXJlIG1pZ3JhaW5lIGhlYWRhY2hlIixJZ25hdGl1cyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDc4MDksMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIENvbnRyb2xsZWQsIFByb3NwZWN0aXZlIFRyaWFsOiBDb21iaXp5bSBpbiB0aGUgUHJldmVudGlvbiBvZiBBZ2VkIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIixUaGUgR2VuZXJhbCBIb3NwaXRhbCBvZiB0aGUgUGVvcGxlJ3MgTGliZXJhdGlvbiBBcm15LEludGVydmVudGlvbmFsLDI1NzQ3MiwyMDE2LTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEVmZmljYWN5IFN0dWR5IG9mIE1vc2FwcmlkZSBmb3IgRnVuY3Rpb25hbCBEeXNwZXBzaWEsSHlvZ28gQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwyMzY5MjcsMjAxMy0wNS0wNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEVmZmVjdCBvZiBQcm90b24gUHVtcCBJbmhpYml0b3IgYW5kIE1vc2FwcmlkZSBvbiBBY2lkIFBvY2tldCBpbiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlLEdhbmduYW0gU2V2ZXJhbmNlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MTQ1MSwyMDE2LTEyLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgTW9zYXByaWRlIGZvciBHRVJEIFBhdGllbnRzIFdpdGggU2xlZXAgRGlzb3JkZXJzLFNoaW1hbmUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNjIxNTUsMjAxMy0xMS0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHBoYXNlIElJSSB0cmlhbCwgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiAoMC41IG1nL2RheSBwbykgYWdhaW5zdCBwbGFjZWJvIGluIDI0MDAgcGF0aWVudHMgd2l0aCBBbHpoZWltZXIncyBkaXNlYXNlIixTYW5vZmktU3ludGhlbGFibyxJbnRlcnZlbnRpb25hbCwzOTUzLDIwMDMtMDktMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMissUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxOZXVyb3RveGljaXR5IGRydWctaW5kdWNlZCwxMDg5LFhFTk9YLFhFTk9YIJYgRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiBpbiBSZWR1Y2luZyB0aGUgTmV1cm90b3hpY2l0eSBvZiB0aGUgT3hhbGlwbGF0aW4gKyA1LUZVL0xWIENoZW1vdGhlcmFweSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDcsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLFN0dWR5IE9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBJbmplY3Rpb24gS2l0IEluIFBhdGllbnRzIFdpdGggTWlncmFpbmUgb3IgQ2x1c3RlciBIZWFkYWNoZSBJbiBKYXBhbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDQzLDIwMDYtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzYyBzdW1hdHJpcHRhbiAoNiBtZykgdmVyc3VzIHBsYWNlYm8gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBhIG1pZ3JhaW5lIHRoYXQgd2FzIG1vZGVyYXRlIG9yIHNldmVyZSB1cG9uIGF3YWtlbmluZyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4ODAyNywyMDAxLTA5LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2sgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzYyBzdW1hdHJpcHRhbiA2IG1nIHZlcnN1cyBwbGFjZWJvIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgYSBtaWdyYWluZSB0aGF0IHdhcyBtb2RlcmF0ZSBvciBzZXZlcmUgdXBvbiBhd2FrZW5pbmciLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODgwMTgsMjAwMS0wOS0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUgYXR0YWNrLCBvdXQgcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiA1MCBhbmQgMTAwIG1nIHRhYmxldHMgYWRtaW5pc3RlcmVkIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4OTUsMjAwMS0wNi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBzaW5nbGUgYXR0YWNrLCBvdXQgcGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBzdW1hdHJpcHRhbiA1MCBhbmQgMTAwIG1nIHRhYmxldHMgYWRtaW5pc3RlcmVkIGR1cmluZyB0aGUgbWlsZCBwYWluIHBoYXNlIG9mIGEgbWVuc3RydWFsbHktYXNzb2NpYXRlZCBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4MzAsMjAwMS0wNy0wNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgdG8gQ29tcGFyZSBPcHRpTm9zZSBTdW1hdHJpcHRhbiBXaXRoIEltaXRyZXggaW4gSGVhbHRoeSBTdWJqZWN0cyxPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw4MzkxOCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBvbiB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTY3LDE5OTYtMDItMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltZXQgaW4gdGhlIFRyZWF0bWVudCBvZiBDaHJvbmljIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDY1MDU0LDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyaWFsIG9mIENvbXByZWhlbnNpdmUgTWlncmFpbmUgSW50ZXJ2ZW50aW9uLE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNjQzNzMsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIk1LLTA0NjIgNSBtZywgU3VtYXRyaXB0YW4gNTAgbWcsIGFuZCBQbGFjZWJvIENvbXBhcmlzb24gU3R1ZHkiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDU0NjY0LDE5OTUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1pZ3JhaW5lIFRyZWF0bWVudCBpbiBFRCwiTmV3IFlvcmsgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFVTIixJbnRlcnZlbnRpb25hbCwyNDk5OTksMjAxNS0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gb24gSXNvc29yYmlkZS01LW1vbm9uaXRyYXRlIEluZHVjZWQgSGVhZGFjaGUsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMzM0NjcsMjAxNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBEb3VibGUtQmxpbmQgU3R1ZHkgdG8gQ29tcGFyZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvciBPcmFsIFN1bWF0cmlwdGFuICg1MG1nIG9yIDEwMG1nKSBXaXRoIFBsYWNlYm8gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gQWRvbGVzY2VudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNzQ3NzIsMTk5MS0xMC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYSBDbGluaWNhbCxDM0Esc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBhcmFsbGVsIEdyb3VwLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFNpbmdsZS1BdHRhY2sgRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBUUkVYSU1BmSAoU3VtYXRyaXB0YW4gODVtZy9OYXByb3hlbiBTb2RpdW0gNTAwbWcpKiBUYWJsZXRzIHZzIFBsYWNlYm8gV2hlbiBBZG1pbmlzdGVyZWQgRHVyaW5nIHRoZSBNaWxkIFBhaW4gUGhhc2Ugb2YgYSBNaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNzQ3NzAsMjAwNC0xMC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTaW5nbGUgRG9zZSBQaGFybWFjb2tpbmV0aWNzIG9mIFN1bWF0cmlwdGFuIE5hc2FsIFNwcmF5IGluIFBlZGlhdHJpYyBTdWJqZWN0cyBPdXRzaWRlIGEgTWlncmFpbmUgQXR0YWNrLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUyNzA0LDE5OTktMDYtMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElJSSwgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQYXJhbGxlbC0gQXNzaWdubWVudCBTdHVkeSB0byBBc3Nlc3MgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gT3JhbCBEb3NlcyBvZiBTdW1hdHJpcHRhbiAoMTAwIG1nKSBGb2xsb3dpbmcgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggU3ViY3V0YW5lb3VzIFN1bWF0cmlwdGFuICg2IG1nKSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNDkzNTQsMTk5MC0xMS0xMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgQ3Jvc3NvdmVyLCBEb3VibGUtYmxpbmQsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIFN1bWF0cmlwdGFuIGZvciBNaWdyYWluZSBBdHRhY2tzIGluIENoaWxkcmVuIixIb3NwaXRhbCBEaXN0cmljdCBvZiBIZWxzaW5raSBhbmQgVXVzaW1hYSxJbnRlcnZlbnRpb25hbCwxMTA3MjcsMTk5Ny0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gb3BlbiBzdHVkeSBkZXNpZ25lZCB0byBzdHVkeSB0aGUgZWZmZWN0cyBvZiB0aGUgYW50aS1taWdyYWluZSBkcnVnIHN1bWF0cmlwdGFuIG9uIG11c2NsZSBlbmVyZ3kgbWV0YWJvbGlzbSBhbmQgcmVsYXRpb25zaGlwIHRvIHRoZSBzaWRlLWVmZmVjdHMsSGVucnkgRm9yZCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDExMDE3NywyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IFRvIEV2YWx1YXRlIFRoZSBFZmZlY3RpdmVuZXNzIE9mIFN1bWF0cmlwdGFuIEluIFJlZHVjaW5nIFByb2R1Y3Rpdml0eSBMb3NzIER1ZSBUbyBNaWdyYWluZSIsIkhlYWRhY2hlIENhcmUgQ2VudGVyLCBTcHJpbmdmaWVsZCIsSW50ZXJ2ZW50aW9uYWwsMTA5MzYwLDIwMDAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGluIGNoaWxkcmVuIHdpdGggbWlncmFpbmUiLFVuaXZlcnNpdHkgSG9zcGl0YWwgZm9yIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxJbnRlcnZlbnRpb25hbCwxMDgwNzQsMTk5OC0wNC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSBzdHVkeSB0byBjb21wYXJlIHRoZSBiaW9hdmFpbGFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHpvbG1pdHJpcHRhbiAoVFJaKSB3aXRoIG1hcmtldGVkIHpvbG1pdHJpcHRhbiB0YWJsZXQgYW5kIG1hcmtldGVkIHpvbG1pdHJpcHRhbiBuYXNhbCBzcHJheSBpbiBoZWFsdGh5IGFkdWx0IHZvbHVudGVlcnMiLFNoaW4gTmlwcG9uIEJpb21lZGljYWwgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw4NjQyNywyMDExLTAzLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY3Jvc3Mtb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQsIHBpbG90IHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygem9sbWl0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBtaWdyYWlub3VzIHZlcnRpZ28iLEh1bWJvbGR0IFVuaXZlcnNpdHkgb2YgQmVybGluLEludGVydmVudGlvbmFsLDExNDE0OCwyMDAzLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBab2xtaXRyaXB0YW4gYW5kIFN1bWF0cmlwdGFuIGluIFBhdGllbnRzIHdpdGggTWlncmFpbmUiLENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIGRlIFJhbmd1ZWlsLEludGVydmVudGlvbmFsLDExMDEyNSwyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIGNsaW5pY2FsIHRyaWFsIHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygem9sbWl0cmlwdGFuIDUgbWcgbmFzYWwgc3ByYXkgaW4gYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lLENpcGxhIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDM1NzksMjAwNy0xMi0wNiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGVzb3BpdHJvbiw1MTExLFNhZmV0eSxZLFksRGlzY29udGludWVkLERYLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGJhbGFuY2VkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgbGVzb3BpdHJvbiBvbiBwdXBpbCBkaWFtZXRlciBhbmQgb3JhbCB0ZW1wZXJhdHVyZSBjb21wYXJlZCB0byBidXNwaXJvbmUgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixMYWJvcmF0b3Jpb3MgRHIgRXN0ZXZlIFNBLEludGVydmVudGlvbmFsLDU2Mjc0LDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCk5hdGl2ZSBBbWVyaWNhbiBBbmNlc3RyeSwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiBSaXphdHJpcHRhbiBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIEF0dGFja3Mgb2YgUG9zdC1UcmF1bWF0aWMgSGVhZGFjaGUgaW4gVVMgTWlsaXRhcnkgVHJvb3BzIChNYXhhbHQpLEhlbnJ5IE0gSmFja3NvbiBGb3VuZGF0aW9uIGZvciB0aGUgQWR2YW5jZW1lbnQgb2YgTWlsaXRhcnkgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsNzUxMzksMjAxMS0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJNSy0wNDYyIDUgbWcsIFN1bWF0cmlwdGFuIDUwIG1nLCBhbmQgUGxhY2VibyBDb21wYXJpc29uIFN0dWR5IixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCw1NDY2NCwxOTk1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tYmluYXRpb24gdGhlcmFweSBvZiB0cmlwdGFuIGFnZW50IGFuZCBhbnRpLWVwaWxlcHRpYyBkcnVnIGluIG1pZ3JhaW5lLCJUZWlreW8gSGVpc2VpIFVuaXZlcnNpdHksIFRva3lvIFdvbWVuJ3MgTWVkaWNhbCBDb2xsZWdlIixJbnRlcnZlbnRpb25hbCwzMTgyNjIsMjAxNy0xMS0xMyAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IHRvIENvbXBhcmUgVGhlIEVmZmljYWN5IG9mIFJpemF0cmlwdGFuIDEwIE1nIEl5b3BoaWxpemVkIFdhZmVyIGluIFRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgaW4gUGF0aWVudHMgd2l0aCBVbmlsYXRlcmFsIFRyaWdlbWluYWwgQXV0b25vbWljIFN5bXB0b21zIixJUkNDUyBTYW4gUmFmZmFlbGUsSW50ZXJ2ZW50aW9uYWwsMTE2OTM4LDIwMDktMDYtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxVU01BUCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiByaXphdHJpcHRhbiBSaXphdHJpcHRhbiBpbiBtaWdyYWluZTogVGhlIFVTTUFQIChVUyBNaWdyYWluZSBBc3Nlc3NtZW50IFByb3RvY29sKSBzdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEyNjY5LDIwMDItMDEtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tbGFiZWwsIFJhbmRvbWl6ZWQsIFBpbG90IFN0dWR5IE9mIFJpemF0cmlwdGFuIENvbWJpbmVkIFdpdGggUm9mZWNveGliIFZlcnN1cyBSaXphdHJpcHRhbiBGb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBPZiBNaWdyYWluZSIsVW5pdmVyc2lkYWRlIEZlZGVyYWwgRmx1bWluZW5zZSxJbnRlcnZlbnRpb25hbCwxMTE4NDEsMjAwMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgQ3Jvc3NvdmVyLCBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCBUcmlhbCB0byBDb21wYXJlIFJpemF0cmlwdGFuIE9EVCAxMCBtZyBhbmQgU3VtYXRyaXB0YW4gNTAgbWcgZm9yIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDA0LDIwMDEtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgQ29tcGFyYXRpdmUsIENyb3NzLW92ZXIsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCBTdHVkeSB0byBhc3Nlc3MgUml6YXRyaXB0YW4gdmVyc3VzIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIixTYW4gRnJhbmNpc2NvIChDYWxpZikgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDEwNzU1NywxOTk4LTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgQmV0d2VlbiBBWkQtMzQ4MCBhbmQgQXJpcGlwcmF6b2xlIGluIEhlYWx0aHkgU3ViamVjdHMsQXN0cmFaZW5lY2EgcGxjLEludGVydmVudGlvbmFsLDIwNDM4LDIwMDgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDEyNTIsMjAwMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIkNvbXBhcmF0aXZlIHN0dWR5IG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBkcnVncyAiIk1pcml1bSBUYWJsZXRzIDEwIG1nIiIgKCIiU2ludG9uIFNwYWluIFNMIiIsIG93bmVyIG9mIHRoZSByZWdpc3RyYXRpb24gY2VydGlmaWNhdGUgb2YgSlNDICIiR3JpbmRla3MiIiwgTGF0dmlhKSBhbmQgQWJpbGlmeSBUYWJsZXRzIDEwIG1nICgiIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZyIiIFB1ZXJ0byBSaWNvKSIsIkdyaW5kZWtzLCBQdWJsaXNrYSBBa2NpanUgU2FiaWVkcmliYSIsSW50ZXJ2ZW50aW9uYWwsMjQ3MDQ0LDIwMTUtMTEtMjQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlNhZmV0eSwgVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgRVZQLTYxMjQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixGT1JVTSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg1NzQyLDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBhY2NlcHRhYmlsaXR5IG9mIGFyaXBpcHJhem9sZSBvcmFsIGRpc2ludGVncmF0aW5nIHRhYmxldHMgaW4gdGhlIHRyZWF0bWVudCBvZiBzdGFibGUgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw4MzE0MCwyMDAzLTA3LTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBhY3RpdmUtY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgc2FmZXR5LCBlZmZpY2FjeSwgYW5kIHRvbGVyYWJpbGl0eSBvZiBhcmlwaXByYXpvbGUgd2l0aCBvbGFuemFwaW5lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSB3aG8gd2VyZSBpbiBhY3V0ZSByZWxhcHNlIGFuZCByZXF1aXJlZCBob3NwaXRhbGl6YXRpb24iLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jIixJbnRlcnZlbnRpb25hbCw4MjQxNywyMDAwLTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBVFRBSU4gMjY2LEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgT3JhbCBBcmlwaXByYXpvbGUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLCJDb3ZhbmNlIFNlcnZpY2VzIE1hbGF5c2lhIFNkbiBCaGQsIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCw2NzU3MCwyMDExLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSDhZLU1DLUhCQk8sIkEgTG9uZy1UZXJtLCBPcGVuLUxhYmVsIFN0dWR5IG9uIFNjaGl6b3BocmVuaWEiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDY2NjYyLDIwMTAtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAyNi13ZWVrLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggc3RhYmxlLCBjaHJvbmljIHNjaGl6b3BocmVuaWEiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUxMTczLDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIGNvbXBhcmlzaW9uIHdpdGggaGFsb3Blcmlkb2wgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNDgzNjQsMjAwMy0xMi0wMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0LFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFNhZmV0eSBTdHVkeSBDb21wYXJpbmcgTFktMjE0MDAyMyB0byBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIFN0YW5kYXJkIFRyZWF0bWVudCBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDQ2MTMxLDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxDQU1QLENvbXBhcmlzb24gb2YgQW50aXBzeWNob3RpY3MgZm9yIE1ldGFib2xpYyBQcm9ibGVtcyBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsMzYzNjcsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29nbml0aXZlIEltcHJvdmVtZW50IFdpdGggQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgKEJNUyksTG91aXNpYW5hIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMzgsMjAwMy0wOC0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBZGRpdGlvbiBvZiBPbmRhbnNldHJvbiB0byBPbmdvaW5nIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IGZvciBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gYXQgRGVudmVyIGFuZCBIZWFsdGggU2NpZW5jZXMgQ2VudGVyLEludGVydmVudGlvbmFsLDM0ODY1LDIwMDUtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUEVYIDIzOSxBcmlwaXByYXpvbGUgaW4gQWRvbGVzY2VudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBBbWVyaWNhIFBoYXJtYWNldXRpY2FsIEluYyxJbnRlcnZlbnRpb25hbCwzNDQ5NiwyMDA0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvbiBpbmRpdmlkdWFsaXplZCBvcHRpbWFsIHRyZWF0bWVudCBmb3IgYW50aXBzeWNob3RpYyBkcnVncyxUaGUgU2l4dGggSG9zcGl0YWwgb2YgUGVraW5nIFVuaXZlcnNpdHkgKEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoKSxJbnRlcnZlbnRpb25hbCwzMjgyNzgsMjAxNi0wNy0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJSYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGNvbnRyb2xsZWQgc3R1ZHkgb2YgU2hpemhlbpJhbnNoZW4gZ3JhbnVsZXMgdGhlcmFweSBmb3IgaW5kaXZpZHVhbHMgYXQgaGlnaCByaXNrIG9mIHNjaGl6b3BocmVuaWEiLEJlaWppbmcgQW5kaW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyMDU3NiwyMDE3LTEyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQUlMT1IsQW4gZXhwZXJpbWVudGFsIHN0dWR5IGNvbXBhcmluZyBkaXNjb250aW51YXRpb24gd2l0aCBtYWludGVuYW5jZSB0aGVyYXB5IG9mIGFudGlwc3ljaG90aWMgbWVkaWNhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG5ld2x5IGRpYWdub3NlZCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b3BocmVuaWEtbGlrZSBwc3ljaG9zaXMgd2l0aG91dCBwc3ljaG90aWMgc3ltcHRvbXMsS29lYmVuaGF2bnMgVW5pdmVyc2l0ZXQsSW50ZXJ2ZW50aW9uYWwsMjk4ODYzLDIwMTctMDMtMDMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAzXzNZLEVmZmVjdGl2ZW5lc3Mgb2YgU2Vjb25kIEdlbmVyYXRpb24gQW50aXBzeWNob3RpY3MgaW4gRmlyc3QgRXBpc29kZSBQc3ljaG9zaXMgUGF0aWVudHM6IFRocmVlLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjkyNjcxLDIwMTQtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFeHBsb3JhdG9yeSBUcmlhbCB0byBBc3Nlc3MgdGhlIEZ1bmN0aW9uYWxpdHkgb2YgYW4gSW50ZWdyYXRlZCBDYWxsIENlbnRlciBmb3IgdGhlIERpZ2l0YWwgTWVkaWNpbmUgU3lzdGVtLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDI1Njk4NSwyMDE2LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiUGFydGlhbCByZWdpbWVuIHJlcGxhY2VtZW50IHdpdGggYXJpcGlwcmF6b2xlIHJlZHVjZXMgc2VydW0gcHJvbGFjdGluIGluIHBhdGllbnRzIHdpdGggYSBsb25nIGhpc3Rvcnkgb2Ygc2NoaXpvcGhyZW5pYTogYSBwcm9zcGVjdGl2ZSwgb3Blbi1sYWJlbCBzdHVkeSIsVW5pdmVyc2l0eSBvZiBNaXlhemFraSxJbnRlcnZlbnRpb25hbCwyNTYxNzAsMjAxMC0wOC0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIENsaW5pY2FsIFV0aWxpdHkgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9uIExldmVscyBpbiBQbGFzbWEgYXMgRGV0ZXJtaW5lZCBieSBMaXF1aWQgQ2hyb21hdG9ncmFwaHktVGFuZGVtIE1hc3MgU3BlY3Ryb21ldHJ5LEphbnNzZW4gUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBMTEMsSW50ZXJ2ZW50aW9uYWwsMjM0MDEzLDIwMTUtMDUtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIEZvbGxvdy1vbiBTdHVkeSBvZiB0aGUgTG9uZy10ZXJtIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMjI4NjgyLDE5OTgtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIFRocmVlIERvc2VzIG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkyMDgsMjAwMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsIENvbXBhcmlzb24gb2YgdHdvIFN3aXRjaGluZyBTdHJhdGVnaWVzIHRvIEFyaXBpcHJhem9sZSBUcmVhdG1lbnQgaW4gU2NoaXpvcGhyZW5pYyBQYXRpZW50czogQWRkLU9uLCBXYWl0LCBhbmQgVGFwZXJpbmcgb2YgUHJldmlvdXMgQW50aXBzeWNob3RpY3MgVmVyc3VzIEFkZC1vbiBhbmQgU2ltdWx0YW5lb3VzIFRhcGVyaW5nIixPaXp1bWkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ4MjQ5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgTm9uLVJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdGl2ZW5lc3MsIEFjY2VwdGFiaWxpdHksIGFuZCBSaXNrcyBpbiB0aGUgSW5uZXItQ2l0eSBIb3NwaXRhbCBTZXR0aW5nIG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1hbGUgUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhIixHdXkncyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDY2MzUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgMTItV2VlaywgT3Blbi1MYWJlbCwgTmF0dXJhbGlzdGljIFN3aXRjaCBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBBcmlwaXByYXpvbGUgaW4gU3RhYmxlIE91dHBhdGllbnRzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQ2MDAzLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCBQaWxvdCBTdHVkeSBvZiBVc2luZyBBcmlwaXByYXpvbGUgdG8gUmVzb2x2ZSBBbnRpcHN5Y2hvdGljLUluZHVjZWQgU3ltcHRvbWF0aWMgSHlwZXJwcm9sYWN0aW5lbWlhIixLb3JlYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0NTQ0OSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgQ2xpbmljYWwgT2JzZXJ2YXRpb24gb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBvZiBDbG96YXBpbmUgaW4gVHJlYXRtZW50LXJlc2lzdGFudCBTY2hpem9waHJlbmlhLEhhbm5vdmVyIE1lZGljYWwgU2Nob29sLEludGVydmVudGlvbmFsLDE0NTEyOSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ2hpYmEtQkVUQSxDaGliYSBCcm9hZCBFZmZlY3RpdmVuZXNzIFRyaWFsIFdpdGggIEFyaXBpcHJhem9sZSxDaGliYSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMzk5NTMsMjAwOS0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ2xpbmljYWwgYW5kIE5ldXJvcHN5Y2hvbG9naWNhbCBGYWN0b3JzIEFzc29jaWF0ZWQgV2l0aCBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljIFJlc3BvbnNlIGluIFBhdGllbnRzIERpYWdub3NlZCBXaXRoIEZpcnN0IEVwaXNvZGUgb2YgRWFybHkgT25zZXQgU2NoaXpvcGhyZW5pYSBTcGVjdHJ1bSBEaXNvcmRlcnMsRnVuZGFjafMgU2FudCBKb2FuIGRlIETpdSxJbnRlcnZlbnRpb25hbCwxMzcwNjMsMjAxMi0wMS0wMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJFdmFsdWF0aW9uIE9mIEVmZmljYWN5LCBTYWZldHksIFF1YWxpdHkgT2YgTGlmZSAoUU9MKSwgQW5kIFRvbGVyYWJpbGl0eSBJbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgV2hvIEFyZSBTd2l0Y2hlZCBGcm9tIFByaW9yIEFudGlwc3ljaG90aWNzIFRvIEFyaXBpcHJhem9sZSIsS3lvdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjUzMzksMjAxMS0wNi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCByYW5kb21pemVkIHN0dWR5IG9mIGFyaXBpcHJhem9sZSBpbiBzY2hpem9waHJlbmlhIixWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxMTMxMzEsMjAwMy0wNC0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCwiQSBMb25nLXRlcm0sIEV4dGVuZGVkIFRyZWF0bWVudCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGVkaWF0cmljIFBhdGllbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODgzMDYsMjAxMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsQXJpcGlwcmF6b2xlIGluIEF1dGlzbSxQaGFzZSBJViBMb25nLXRlcm0gTWFpbnRlbmFuY2UgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgSXJyaXRhYmlsaXR5IEFzc29jaWF0ZWQgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCw3MTYzOSwyMDExLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBXaXRoIEF1dGlzbTogQSBQaWxvdCBTdHVkeSxEcmV4ZWwgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDQyNTQwLDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxIZWFydEFyaVF1ZSxIZWFydCBSYXRlIENoYW5nZXMgaW4gU2NoaXpvcGhyZW5pYyBhbmQgQmlwb2xhciBQYXRpZW50cyBVbmRlciB0aGUgTWVkaWNhdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFF1ZXRpYXBpbmUsVGFpY2h1bmcgVmV0ZXJhbnMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw2MzQwOSwyMDA5LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsTWV0YWJvbGljIEVmZmVjdHMgb2YgU3dpdGNoaW5nIHRvIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXJzLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNDcxMzYsMjAwOC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBBcmlwaXByYXpvbGUgUHJlc2NyaWJpbmcgUGF0dGVybnMgYW5kIFNpZGUgRWZmZWN0cyBpbiBFbGRlcmx5IFBzeWNoaWF0cmljIElucGF0aWVudHMsVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDE0NDc5MCxudWxsLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsUGVydmFzaXZlIGNoaWxkIGRldmVsb3BtZW50YWwgZGlzb3JkZXIsMTk0NyxudWxsLFN3aXRjaGluZyB0byBBcmlwaXByYXpvbGUgaW4gU3ViamVjdHMgd2l0aCBQZXJ2YXNpdmUgRGV2ZWxvcG1lbnRhbCBEaXNvcmRlcnMgU2hvd2luZyBUb2xlcmFiaWxpdHkgSXNzdWVzIHdpdGggUmlzcGVyaWRvbmUsVW5pdmVyc2l0eSBvZiBGdWt1aSxJbnRlcnZlbnRpb25hbCwxNTIyMzcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkFuIDgtd2Vlaywgc2luZ2xlLWJsaW5kLCByYW5kb21pemVkLCBjb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIGFzIGFuIGFkanVuY3QgdG8gdmFscHJvaWMgYWNpZCAoQXJpICsgVmFsKSwgY29tcGFyZWQgd2l0aCBoYWxvcGVyaWRvbCBwbHVzIHZhbHByb2ljIGFjaWQgKEhhbCArIFZhbCksIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgbWFuaWEiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg3MzIsMjAxMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgQWRtaW5pc3RlcmVkIFdpdGggTGl0aGl1bSBvciBWYWxwcm9hdGUgT3ZlciAxMiBXZWVrcyBpbiB0aGUgVHJlYXRtZW50IG9mIE1hbmlhIGluIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDE5NDI2LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsQVdBUkUgMjczLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgT25jZS1XZWVrbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDgwMDk4LDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxUb3VyZXR0ZSBzeW5kcm9tZSwyOTQxLG51bGwsIkEgcHJvc3BlY3RpdmUgb3Blbi1sYWJlbCBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgcG90ZW50aWFsIGVmZmVjdGl2ZW5lc3Mgb2YgYXJpcGlwcmF6b2xlIGZvciB0aWNzLCBzb2NpYWwgYWRqdXN0bWVudCwgYW5kIHBhcmVudGFsIHN0cmVzcyBpbiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCBUb3VyZXR0ZSdzIGRpc29yZGVyIixDaGFuZyBHdW5nIE1lbW9yaWFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2NDQyNSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxBUE9MTE8sQSBTdHVkeSBvZiBBYmlsaWZ5IFRhYmxldCAoQXJpcGlwcmF6b2xlKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiB0aGUgQmlwb2xhciBEZXByZXNzaW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI4MzEwLDIwMTgtMDItMjIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdG5hdGFsIGRlcHJlc3Npb24sMzUxNCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQWdpdGF0aW9uLDM2MDksbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIDYtV2VlaywgUHJvc3BlY3RpdmUsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBBdWdtZW50YXRpb24gb2YgQXJpcGlwcmF6b2xlIGZvciBEZXByZXNzZWQgUGF0aWVudHMgV2l0aCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50IFRyZWF0bWVudCIsSGFsbHltIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTU2MjMzLG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ0FOLUJJTkQtMSxDYW5hZGlhbiBCaW9tYXJrZXIgSW50ZWdyYXRpb24gTmV0d29yayBmb3IgRGVwcmVzc2lvbiBTdHVkeSxUaGUgVW5pdmVyc2l0eSBIZWFsdGggTmV0d29yayxJbnRlcnZlbnRpb25hbCwxMDAzNzIsMjAxMi0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tTGFiZWwsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gRWFybHktU3RhZ2UgUGFya2luc29ucyBEaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsODM4OSwyMDAyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxSRUNPVkVSIGV4dGVuc2lvbiBzdHVkeSxMb25nLVRlcm0gRXh0ZW5zaW9uIG9mIFJlY292ZXIgTG9uZy1UZXJtIEVmZmVjdCBvZiB0aGUgMjRoIFRyYW5zZGVybWFsIERlbGl2ZXJ5IG9mIFJvdGlnb3RpbmUgaW4gU3ViamVjdHMgV2l0aCBJZGlvcGF0aGljIFBhcmtpbnNvbidzIERpc2Vhc2UsVUNCIFNBLEludGVydmVudGlvbmFsLDgzNzMsMjAwNy0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxTUDcxNSxBbiBPcGVuLUxhYmVsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBvZiBMb25nLVRlcm0gVHJlYXRtZW50IG9mIFJvdGlnb3RpbmUgaW4gQWR2YW5jZS1TdGFnZSBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw3MTE4LDIwMDItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFuIE9wZW4tTGFiZWwgRXh0ZW5zaW9uIFRyaWFsIHRvIEFzc2VzcyB0aGUgU2FmZXR5IG9mIExvbmctVGVybSBUcmVhdG1lbnQgb2YgUm90aWdvdGluZSBpbiBBZHZhbmNlZC1TdGFnZSBQYXJraW5zb24ncyBEaXNlYXNlLCJTY2h3YXJ6IFBoYXJtYSBTcEEsIFVDQiBCSU9TQ0lFTkNFUyBHbWJILCBVQ0IgU0EiLEludGVydmVudGlvbmFsLDY4MTUsMjAwNC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkEgNi1tb250aCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIHJvdGlnb3RpbmUgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZC1zdGFnZSBwYXJraW5zb24ncyBkaXNlYXNlIixVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTc4OTEsMjAwOS0wNi0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiB0aGUgdHJlYXRtZW50IG9mIFBhcmtpbnNvbidzIGRpc2Vhc2UgKFBEKSxBZGVyaXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1MTUzNSwxOTg4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsQSA2LU1vbnRoIE1pbmltdW0gRWZmZWN0aXZlIERvc2Ugb2YgRmxpYmFuc2VyaW46IDI1IHZlcnN1cyA1MCBtZyBiaWQgdmVyc3VzIDUwIG1nIGhzIHZlcnN1cyBQbGFjZWJvIGluIFlvdW5nZXIgV29tZW4gaW4gTm9ydGggQW1lcmljYSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMzA2LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRmVtYWxlIHNleHVhbCBkeXNmdW5jdGlvbiwxMjc2LG51bGwsQSBPbmUtWWVhciBTYWZldHkgU3R1ZHkgb2YgRmxpYmFuc2VyaW4gdG8gVHJlYXQgUHJlLU1lbm9wYXVzYWwgV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIgKEhTREQpLEJvZWhyaW5nZXIgSW5nZWxoZWltIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzMzMDUsMjAwNy0wMi0yOCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmbGliYW5zZXJpbiw4NTQ5LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsRmxpYmFuc2VyaW4gKEFkZHlpKSB2ZXJzdXMgRmxpYmFuc2VyaW4gYW5kIFNleCBUaGVyYXB5LFNhbiBEaWVnbyBTZXh1YWwgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjU2MzcyLDIwMTctMDEtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBOb3QgU2F0aXNmaWVkIFdpdGggUml6YXRyaXB0YW4gVGhlcmFweSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0MDgyLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1hIGFuZCBSZWxwYXggR2FzdHJpYyBTY2ludGlncmFwaHkgSW5zaWRlIGFuZCBPdXRzaWRlIGEgTWlncmFpbmUsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDQ2LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUHJvc3BlY3RpdmUgU3VydmV5IG9mIE1lbnN0cnVhbCBNaWdyYWluZSBhbmQgUHJldmVudGlvbiBXaXRoIEVsZXRyaXB0YW4sVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDE0MDAxLDIwMDQtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG9zZS1maW5kaW5nLCBkb3VibGUtYmxpbmQsIG11bHRpY2VudGVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHksIGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBlbGV0cmlwdGFuIGZvciB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLCJOZXcgRW5nbGFuZCBDZW50ZXIgZm9yIEhlYWRhY2hlLCBQLkMuIixJbnRlcnZlbnRpb25hbCwxMTQxMDcsMjAwMy0wMy0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsSGlnaC1Eb3NlIEx1cmFzaWRvbmUgZm9yIFBhdGllbnRzIFdpdGggVHJlYXRtZW50LVJlc2lzdGFudCBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDg2MjA2LDIwMTEtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU3dpdGNoIEV4dCxBIFN0dWR5IG9mIFN1YmplY3RzIFN3aXRjaGVkIHRvIEx1cmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NzI2OSwyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNXSVRDSENvcmUsQSBTdHVkeSBFdmFsdWF0aW5nIEx1cmFzaWRvbmUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gU3ViamVjdHMgU3dpdGNoZWQgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIEFnZW50cyxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY3MjYwLDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBTTS0xMzQ5NiAobHVyYXNpZG9uZSBIQ2wpIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBEYWluaXBwb24gUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTQ3MCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIEFjdGl2ZS1Db250cm9sLCBPcGVuLWxhYmVsLCBDb21wYXJhdGl2ZSwgUmFuZG9taXplZCwgVGhyZWUtYXJtLCBQYXJhbGxlbC1ncm91cCwgTXVsdGljZW50ZXIsIFBoYXNlLUlJSSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSBUaGUgRWZmaWNhY3kgQW5kIFNhZmV0eSBPZiBUd28gRG9zZXMgT2YgTHVyYXNpZG9uZSBDb21wYXJlZCBXaXRoIFF1ZXRpYXBpbmUgSW4gTmV3bHkgRGlhZ25vc2VkIFBhdGllbnRzIE9mIEFjdXRlIFNjaGl6b3BocmVuaWEiLE1TTiBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDE4MDc1NywyMDE0LTA0LTA3IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLFBoYXJtYWNva2luZXRpY3MsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3Qgb2YgQ2Fsb3JpZXMgYW5kIEZhdCBDb250ZW50IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIEx1cmFzaWRvbmUgSENsLFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzI4NDEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFNob3J0LVRlcm0gKDYtV2VlaykgUGhhc2UgSUksIEx1cmFzaWRvbmUgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkIFRyaWFsIGluIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQzODQwLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFBFUlNJU1RFeHQsIlRoaXMgaXMgYW4gT3Blbi1sYWJlbCwgTXVsdGljZW50ZXIsIEV4dGVuc2lvbiBTdHVkeSBEZXNpZ25lZCB0byBFdmFsdWF0ZSB0aGUgTG9uZ2VyIFRlcm0gU2FmZXR5LCBUb2xlcmFiaWxpdHkgYW5kIEVmZmVjdGl2ZW5lc3Mgb2YgTHVyYXNpZG9uZSwgRmxleGlibHkgRG9zZWQsIEFkanVuY3RpdmUgdG8gTGl0aGl1bSBvciBEaXZhbHByb2V4IGZvciB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIFdobyBIYXZlIFBhcnRpY2lwYXRlZCBpbiBTdHVkeSBEMTA1MDI5NiIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4NjQxMiwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxQUkVWQUlMIDEsTHVyYXNpZG9uZSAtIEEgNi1XZWVrIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERlcHJlc3Npb24gKEFkZC1vbiksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0OTkwOSwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LElsbHVtaW5hdGUsTHVyYXNpZG9uZSBQZWRpYXRyaWMgQmlwb2xhciBTdHVkeSwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDE2OTg3OSwyMDE0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsZnJvdmF0cmlwdGFuLDkwMjIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsRnJvdmF0cmlwdGFuIGFzIGEgVHJhbnNpdGlvbmFsIFRoZXJhcHkgaW4gTWVkaWNhdGlvbiBPdmVydXNlIEhlYWRhY2hlLFVuaXZlcnNpdHkgb2YgQ2FsZ2FyeSxJbnRlcnZlbnRpb25hbCw2MzI4MCwyMDEwLTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUmVzZWFyY2ggU3R1ZHkgVG8gRXZhbHVhdGUgSWYgRnJvdmF0cmlwdGFuIElzIFNhZmUgQW5kIEVmZmVjdGl2ZSBJbiBQcmV2ZW50aW5nIE1pZ3JhaW5lIEhlYWRhY2hlIEFmdGVyIEZhc3RpbmcsVGhvbWFzIEplZmZlcnNvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE0MDczLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIlNhZmV0eSwgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBWaWxhem9kb25lIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyNDgyLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWaWxhem9kb25lIGluIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDE0MDIxNSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsU0RaLU1BUi0zMjcsMTAwMDMsUGhhcm1hY29keW5hbWljcyxZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG1heGltdW0gdG9sZXJhdGVkIGRvc2Ugc3R1ZHkgb2YgU0RaLU1BUi0zMjcgaW4gaG9zcGl0YWxpemVkIHNjaGl6b3BocmVuaWMgcGF0aWVudHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQ5OTc3LDE5OTUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gd29tZW4gd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKElCUykgd2l0aCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTgzLDIwMDQtMTEtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBc3Nlc3NtZW50IG9mIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgVGVnYXNlcm9kIGluIE1hbGUgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODcxNCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFRyZWF0bWVudCBJbnZlc3RpZ2F0aW9uYWwgTmV3IERydWcgKHRJTkQpIFByb2dyYW0gb2YgVGVnYXNlcm9kIGluIFdvbWVuIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIFdpdGggQ29uc3RpcGF0aW9uIG9yIFdpdGggQ2hyb25pYyBJZGlvcGF0aGljIENvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxODE5MiwyMDA3LTA4LTAzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZSBFZmZlY3Qgb2YgVGVnYXNlcm9kIG9uIFBhdHRlcm5zIG9mIEZsb3cgaW4gdGhlIFNtYWxsIEJvd2VsIG9mIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4MDU0LDIwMDQtMTEtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEFzc2Vzc21lbnQgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgVHJlYXRtZW50IGFuZCBQbGFjZWJvIGluIFdvbWVuIFdpdGggRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNDk5LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uIFdpdGggT21lcHJhem9sZSBHaXZlbiBPcmFsbHkgaW4gUGF0aWVudHMgV2l0aCBTeW1wdG9tcyBvZiBTeW1wdG9tYXRpYyBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChzR0VSRCkiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNjM0LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtZG9zZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhbG1vdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixLaW5nJ3MgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsNzQxNDIsMjAwMi0wNy0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgRWZmZWN0aXZlbmVzcyBvZiBBbG1vdHJpcHRhbiBNYWxhdGUgKEFYRVJUKSAxMi41IG1ncyBXaGVuIFRha2VuIGF0IHRoZSBPbnNldCBvZiBNaWdyYWluZSBQYWluLE9ydGhvLU1jTmVpbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTM4NDMsMjAwNC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLEZLLTk2MCwxNTA3MyxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIHBoYXNlIElJIGVmZmljYWN5IHN0dWR5IG9mIEZLLTk2MCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgY29nbml0aXZlIGRpc29yZGVyLEZ1amlzYXdhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAxMCwyMDA0LTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU3R1ZHkgdG8gRXZhbHVhdGUgTG9uZy1UZXJtIFRvbGVyYWJpbGl0eSBhbmQgU2FmZXR5IG9mIE9yYWwgUHJ1Y2Fsb3ByaWRlIGluIENocm9uaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjQzMzYsMTk5OC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgTG9uZy1UZXJtIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBhbmQgU2F0aXNmYWN0aW9uIFdpdGggUHJ1Y2Fsb3ByaWRlIGluIENocm9uaWMgQ29uc3RpcGF0aW9uIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDYwNzkyLDE5OTgtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZSBBcHBsaWNhdGlvbiBvZiBMYWN0dWxvc2UgYW5kIFBydWNhbG9wcmlkZSBpbiBJbnRlc3RpbmUgUHJlcGFyYXRpb24gaW4gQ2hyb25pYyBDb25zdGlwYXRpb24gUGF0aWVudHMgYmVmb3JlIENvbG9ub3Njb3B5LEppbmdqaWFuZyBQZW9wbGUncyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMDUzODYsMjAxNy0wMy0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gY29sb25pYyB0cmFuc2l0IGluIHBhdGllbnRzIHdpdGggc2xvdyBhbmQgbm9ybWFsIHRyYW5zaXQgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkwOTksMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc2FyaXpvdGFuIGh5ZHJvY2hsb3JpZGUsMTY1NjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE91dGxpY2Vuc2VkLE9MLFRhcmRpdmUgZHlza2luZXNpYSwzMjAsbnVsbCxTYXJpem90YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIFRhcmRpdmUgRHlza2luZXNpYSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw2NDAyLDIwMDQtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJpZmVwcnVub3ggRXh0ZW5zaW9uIHRvIEV4dGVuc2lvbiBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsNDg3NDIsMjAwNi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1maW5kaW5nLCBwaGFzZSBJSWIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgYmlmZXBydW5veCBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ1MywyMDAzLTAzLTA5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgQUNQLTEwMyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDksMjAwMy0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEV4dGVuc2lvbiBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gZm9yIHRoZSBBZGp1bmN0aXZlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI5NTM4NiwyMDE2LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsQ0xBUklUWSAzLCJBIHBoYXNlIElJSSwgNi13ZWVrLCBwYXJhbGxlbC1kZXNpZ25lZCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIG11bHRpY2VudGVyIHN0dWR5IHRvIGFzc2VzcyBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHBpbWF2YW5zZXJpbiBhcyBhbiBhZGp1bmN0aXZlIHRyZWF0bWVudCBmb3IgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciAoTUREKSIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzc4MjM4LG51bGwsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ0dSUCwgRXN0cm9nZW4sIENvcnRpc29sLCBWSVAsIGEtQW15bGFzZSwgUEdFMiwgUEcxMiBhbmQgQmV0YS1FbmRvcnBoaW4gTGV2ZWxzIGluIE1lbnN0cnVhbCBNaWdyYWluZSBCZWZvcmUgYW5kIEFmdGVyIFRyZXhpbWV0IixDbGludmVzdCxJbnRlcnZlbnRpb25hbCw3NjI1OSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsUi0xMzc2OTYsMzQ3ODMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGFzc2lnbm1lbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgUi0xMzc2OTYgaW4gZnVuY3Rpb25hbCBkeXNwZXBzaWEgcGF0aWVudHMgd2l0aCB2aXNjZXJhbCBoeXBlcnNlbnNpdGl2aXR5IChWSCkgb3IgaW1wYWlyZWQgYWNjb21tb2RhdGlvbiIsSm9obnNvbiAmIEpvaG5zb24sSW50ZXJ2ZW50aW9uYWwsMTk4MDYsMjAwNC0wNS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsaWJpcGluYWJhbnQsMzgwOTQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sRGlzY29udGludWVkLERYLE9iZXNpdHksMjM4LG51bGwsIk11bHRpcGxlLURvc2UgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFBoYXJtYWNva2luZXRpY3Mgb2YgQk1TLTY0NjI1NiBpbiBPYmVzZSBTdWJqZWN0cyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMzgyMzksMjAwNi0xMS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEhlYWRhY2hlLDE0OCxudWxsLFBoYXJtYWNva2luZXRpY3MgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBvZiBNQVAtMDAwNCBpbiBTbW9raW5nIGFuZCBOb24tU21va2luZyBBZHVsdCBWb2x1bnRlZXJzLCJBbGxlcmdhbiBJbmMsIE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw3MDQ5NCwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImRpaHlkcm9lcmdvdGFtaW5lIChtaWdyYWluZSwgVGVtcG8taW5oYWxlZC9vcmFsKSwgQWxsZXJnYW4iLDM5NDkxLFNhZmV0eSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEhlYWRhY2hlLDE0OCxudWxsLCJBIDEyLW1vbnRoLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyBvdmVyYWxsIHNhZmV0eSAoaW5jbHVkaW5nIHB1bG1vbmFyeSBhbmQgY2FyZGlvdmFzY3VsYXIpIG9mIGRpaHlkcm9lcmdvdGFtaW5lIGF0IDYgYW5kIDEyIG1vbnRocyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjYzNDYsMjAxMC0wNS0xMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsU2FmZXR5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgbG9uZy10ZXJtLCBvcGVuLWxhYmVsIHN0dWR5IGFzc2Vzc2luZyB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2YgTGV2YWRleCBvcmFsbHkgaW5oYWxlZCBkaWh5ZHJvZXJnb3RhbWluZSBpbiBhZHVsdCBtaWdyYWluZXVycyIsTUFQIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzg1MjgsMjAxMS0wNi0yMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLE9jY3VwYW5jeSBvZiBEb3BhbWluZSBEMyBhbmQgRDIgUmVjZXB0b3JzIGJ5IEJ1c3Bpcm9uZTogQSBbKDExKUNdLSgrKS1QSE5PIFBFVCBTdHVkeSBpbiBIdW1hbnMsVW5pdmVyc2l0eSBvZiBUb3JvbnRvLEludGVydmVudGlvbmFsLDI0OTQ4MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxkaWh5ZHJvZXJnb3RhbWluZSBtZXN5bGF0ZSw0NDQxMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEV2YWx1YXRpb24gb2YgdGhlIFBoYXJtYWNva2luZXRpY3MgYW5kIFNhZmV0eSBvZiBEaWh5ZHJvZXJnb3RhbWluZSBBZG1pbmlzdGVyZWQgdmlhIFR3byBJbnRyYW5hc2FsIERlbGl2ZXJ5IERldmljZXMsSU1QQVggTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxOTA2OTEsMjAxNC0wNS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJidXNwaXJvbmUgKHRyYW5zZGVybWFsIHNwcmF5LCBNRFRTL0FDUk9TUyksIEFjcnV4Iiw0NjQyMCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEEgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYnVzcGlyb25lIG9uY2UtYS1kYXkgdHJhbnNkZXJtYWwgc3ByYXkgd2hlbiBjb21wYXJlZCB0byBvcmFsIGJ1c3Bpcm9uZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYW54aWV0eSBkaXNvcmRlcixBY3J1eCBMdGQsSW50ZXJ2ZW50aW9uYWwsNTUxNTcsMjAwMy0wOC0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRFRU5aLFpvbWlnIC0gVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIEhlYWRhY2hlIGluIEFkb2xlc2NlbnRzLCJBc3RyYVplbmVjYSBBQiwgQXN0cmFaZW5lY2EgcGxjIixJbnRlcnZlbnRpb25hbCw3MDgwMSwyMDEwLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgRm91ci13YXkgQ3Jvc3NvdmVyIFN0dWR5IG9mIFRocmVlIEZvcm11bGF0aW9ucyBvZiBNLTIwNyB3aXRoIEludHJhbmFzYWwgem9sbWl0cmlwdGFuIGluIEhlYWx0aHkgVm9sdW50ZWVycyxab3Nhbm8gUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzgzNzE4LDIwMTktMDUtMjkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LCJ6b2xtaXRyaXB0YW4gKGludHJhbmFzYWwpLCBBc3RyYVplbmVjYSIsNDcyMDIsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgUmFuZG9taXplZCwgUHJvc3BlY3RpdmUsIE9wZW4sIE11bHRpLWF0dGFjayBTdHVkeSBvZiBQYXRpZW50IFByZWZlcmVuY2UgYW5kIEVmZmljYWN5IGJldHdlZW4gWm9sbWl0cmlwdGFuIE5hc2FsIFNwcmF5IDUgbWcgYW5kIFN1bWF0cmlwdGFuIFJEVCAxMDAgbWcgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsR290aGVuYnVyZyBNaWdyYWluZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTE3MTczLDIwMDctMTAtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksRGlzY29udGludWVkLERYLE5pY290aW5lIGRlcGVuZGVuY2UsMjM1LG51bGwsQWRkcmVzc2luZyBQb3N0IENlc3NhdGlvbiBXZWlnaHQgR2FpbixNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyNjUzMywyMDE2LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsQkxPT00tRE0sQmVoYXZpb3JhbCBNb2RpZmljYXRpb24gYW5kIExvcmNhc2VyaW4gZm9yIE92ZXJ3ZWlnaHQgYW5kIE9iZXNpdHkgTWFuYWdlbWVudCBpbiBEaWFiZXRlcyBNZWxsaXR1cyxBcmVuYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc0MDEsMjAwNy0xMi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYSBDbGluaWNhbCxDMUEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsIkEgcGhhc2UgSWEsIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljIGNsaW5pY2FsIHN0dWR5IG9mIGxvcmNhc2VyaW4sIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjI0NywyMDA0LTA3LTE0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpBZnJpY2FuIEFuY2VzdHJ5LDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxTYWZldHkgYW5kIGVmZmljYWN5IG9mIEFQRC0zNTYgaW4gdGhlIHRyZWF0bWVudCBvZiBvYmVzaXR5LEFyZW5hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg2NzksMjAwNS0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxQcmVkaWN0b3JzIG9mIExvcmNhc2VyaW4tSW5kdWNlZCBXZWlnaHQgTG9zcyxDb2x1bWJpYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMyMDU5MiwyMDE4LTAxLTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxBIGNsaW5pY2FsIFN0dWR5IHRvIFN0dWR5IHRoZSBFZmZlY3Qgb2YgTG9yY2FzZXJpbiBUYWJsZXRzIGluIHRoZSBUcmVhdG1lbnQgb2YgT2Jlc2l0eSxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjk5Nzg1LDIwMTctMDYtMDggMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCwiU2luZ2xlLURvc2UgU3R1ZHkgdG8gRGV0ZXJtaW5lIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgYW5kIFBoYXJtYWNva2luZXRpYyBQcm9wZXJ0aWVzIG9mIExvcmNhc2VyaW4gSHlkcm9jaGxvcmlkZSAoQmVsdmlxKSBpbiBPYmVzZSBBZG9sZXNjZW50cyBGcm9tIDEyIHRvIDE3IFllYXJzIG9mIEFnZSIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjU4NzYsMjAxMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAobmVlZGxlbGVzcyBkZWxpdmVyeSwgSW50cmFqZWN0KSwgRW5kbyIsNDc3NTksIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiBzdW1hdHJpcHRhbiBkZWxpdmVyZWQgdmlhIHRoZSBpbnRyYWplY3Qgc3lzdGVtLFpvZ2VuaXggSW5jLEludGVydmVudGlvbmFsLDE4NDkzLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LFksTixEaXNjb250aW51ZWQsRFgsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEludmVzdGlnYXRpbmcgdGhlIEVmZmVjdCBvZiBWb3J0aW94ZXRpbmUgaW4gQWR1bHQgQURIRCBQYXRpZW50cyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMTkwNzcsMjAxNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgZm9yIFRyZWF0bWVudCBvZiBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIGluIEFkdWx0cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNTIyLDIwMDgtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFZpQmlELFZvcnRpb3hldGluZSBhZGQtb24gVHJlYXRtZW50IEltcHJvdmVzIHRoZSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0NzY3NiwyMDE4LTA4LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBwaGFzZSBJLCBtdWx0aWNlbnRlciwgc2luZ2xlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS0gYW5kIG11bHRpcGxlLWRvc2UsIHBhcmFsbGVsIGdyb3VwIHBoYXJtYWNva2luZXRpYyAoUEspIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBpbnRyaW5zaWMgZmFjdG9ycyBpbmZsdWVuY2luZyB0aGUgZHJ1ZyBkaXNwb3NpdGlvbiBvZiBMdUFBLTIxMDA0ICBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciBpbiBoZWFsdGh5IHN1YmplY3RzIixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw5NTMwMSwyMDEyLTAzLTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCk6IE9wZW4tTGFiZWwgRXh0ZW5zaW9uIFN0dWR5LFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjc4MTcsMjAxMC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsNjc2OTgsMjAxMC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgV2l0aCBWb3J0aW94ZXRpbmUgb24gRW1vdGlvbmFsIEZ1bmN0aW9uaW5nIGluIFBhdGllbnRzIFdpdGggRGVwcmVzc2lvbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjk2NjYsMjAxOS0wMi0wNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRoZSBSZWxhdGlvbnNoaXAgQW1vbmcgQ2hhbmdlcyBpbiBCcmFpbiBOZXR3b3JrIEFjdGl2YXRpb24gaW4gQWR1bHQgT3V0cGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLCJQc3ljaGlhdHJpYyBNZWRpY2luZSBBc3NvY2lhdGVzIExMQywgUnVzaCBVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIixJbnRlcnZlbnRpb25hbCwyNTkyMDksMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLFBSWC0zMTQwLDQ4NzM5LEVmZmljYWN5LE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBTdHVkeSBvZiBQUlgtMDMxNDAgTW9ub3RoZXJhcHkgaW4gU3ViamVjdHMgV2l0aCBBbHpoZWltZXIncyBEaXNlYXNlIFJlY2VpdmluZyBhIFN0YWJsZSBEb3NlIG9mIERvbmVwZXppbCxFUElYIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTI0NTMsMjAwOC0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsR2FzdHJpYyBtb3RpbGl0eSBkaXNvcmRlciwzNzYsbnVsbCwiQSBwaGFzZSBJLCBtdWx0aXBsZS1hc2NlbmRpbmcgZG9zZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gYXNzZXNzIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBuYXJvbmFwcmlkZSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFSWXggVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCw3NzYwMCwyMDExLTA1LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCxFZmZpY2FjeSxZLFksRGlzY29udGludWVkLERYLEdhc3RyaWMgbW90aWxpdHkgZGlzb3JkZXIsMzc2LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgQVRJLTc1MDUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixQcm9jdGVyICYgR2FtYmxlIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc2MTMsMjAwNi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsRWZmaWNhY3ksWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIEFUSS03NTA1IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsUHJvY3RlciAmIEdhbWJsZSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE3NjEzLDIwMDYtMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTG9uZy1UZXJtIFN0dWR5IG9mIE1QLTIxNCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsTWl0c3ViaXNoaSBUYW5hYmUgUGhhcm1hIENvcnAsSW50ZXJ2ZW50aW9uYWwsODg2NjEsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTVAtMjE0IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw4ODY1NSwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixPdXRsaWNlbnNlZCxPTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFNheGVuZGEgaW4gT2Jlc2Ugb3IgT3ZlcndlaWdodCBQYXRpZW50cyBXaXRoIFN0YWJsZSBCaXBvbGFyIERpc29yZGVyIChJbnZlc3RpZ2F0b3IgSW5pdGlhdGVkKSxUaGUgTGluZG5lciBDZW50ZXIgb2YgSE9QRSxJbnRlcnZlbnRpb25hbCwyOTkxNDMsMjAxNy0wNC0yNiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1hbmlhLDE5NTcsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGZvciBNYW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2MzcwNCwyMDEwLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLExvbmctdGVybSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBDYXJpcHJhemluZSBmb3IgQmlwb2xhciBJIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDYzODAzLDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2xlZXAgZGlzb3JkZXIsMzA0LG51bGwsU3R1ZHkgRXZhbHVhdGluZyBOZWxvdGFuc2VyaW4gZm9yIFRyZWF0bWVudCBvZiBSRU0gU2xlZXAgQmVoYXZpb3IgRGlzb3JkZXIgaW4gU3ViamVjdHMgV2l0aCBEZW1lbnRpYSAoRExCIG9yIFBERCksQXhvdmFudCBHZW5lIFRoZXJhcGllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjU1ODM1LDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxURC0yNzQ5LDUyNjM0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixGdW5jdGlvbmFsIGJvd2VsIGRpc29yZGVyLDEyNjksbnVsbCwiQSBwaGFzZSBJLCBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljLCBzaW5nbGUtZG9zZSBzdHVkeSBvZiBURC0yNzQ5LCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCwxNzU0MCwyMDA1LTAxLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFNpbmdsZSBBc2NlbmRpbmcgRG9zZSBQaGFzZSBJIFN0dWR5IFRvIEFzc2VzcyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIFBoYXJtYWNva2luZXRpY3MgT2YgVEQtNTEwOCBGb3IgVGhlIFBvdGVudGlhbCBUcmVhdG1lbnQgT2YgR2FzdHJvaW50ZXN0aW5hbCAoR0kpIE1vdGlsaXR5IERpc29yZGVycyBJbiBIZWFsdGh5IFZvbHVudGVlcnMiLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCwxNzk5MCwyMDA1LTEyLTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLFksTixQcmUtcmVnaXN0cmF0aW9uLFBSLE1pZ3JhaW5lLDIxMCxudWxsLERvc2UtUmFuZ2luZyBTdHVkeSBvZiBPcmFsIENPTC0xNDQgaW4gQWN1dGUgTWlncmFpbmUgVHJlYXRtZW50LENvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1MjUxMSwyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUFNOLTYwMiw1NjI1MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsT2Jlc2l0eSwyMzgsbnVsbCwiQSBmaXJzdC1pbi1odW1hbiwgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgc3R1ZHkgb2YgUFNOLTYwMiBpbiBoZWFsdGh5IGxlYW4gYW5kIG92ZXJ3ZWlnaHQvb2Jlc2Ugc3ViamVjdHMiLCJPU0kgUGhhcm1hY2V1dGljYWxzIEluYywgUHJvc2lkaW9uIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzYxMTEsMjAwOC0wNi0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgUHJvc3BlY3RpdmUgUGhhc2UgSSwgU2luZ2xlLURvc2UsIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyIENsaW5pY2FsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBTYWZldHkgb2YgTS0wMDAzIGluIFlvdW5nIENoaWxkcmVuIEFnZWQgQmV0d2VlbiAxIGFuZCAzNiBNb250aHMiLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTM4NjQ3LDIwMDgtMDktMjIgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiTlhOLTE4OCAob3JhbCksIE5ldXJBeG9uIiw1Nzc0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiBzdHVkeSBvZiBOWE4tMTg4IGluIGhlYWx0aHkgdm9sdW50ZWVycywgZm9yIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLE5ldXJBeG9uIEluYyxJbnRlcnZlbnRpb25hbCwyNTc0NSwyMDA3LTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxBVEktOTI0Miw1OTAxNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSBEMiBSZWNlcHRvciBPY2N1cGFuY3kgRm9sbG93aW5nIFNpbmdsZSBJbnRyYXZlbm91cyBBZG1pbmlzdHJhdGlvbiBvZiBBVEktOTI0MixCcmFlYnVybiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI2NTEzNywyMDE2LTA2LTIwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFZmZpY2FjeSBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgQWNjb21tb2RhdGlvbiBpbiBIZWFsdGh5IEFkdWx0IFBhdGllbnRzOiBFdmFsdWF0aW9uIFVzaW5nIE1SSSBNZXRob2QsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzgzNzYsMjAxMy0wOC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsUlEtMDAwMDAwMTAsNTkyMzQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxDb25zdGlwYXRpb24sNDA0LG51bGwsUlEtMDAwMDAwMTAgZm9yIEdhc3Ryb3BhcmVzaXMgYW5kIENvbnN0aXBhdGlvbiBpbiBQYXJraW5zb25zIERpc2Vhc2UsVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjY2MTA3LDIwMTYtMDYtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsVEFLLTk1NCw2MDI5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLEVmZmVjdCBvZiBUQUstOTU0IG9uIEdhc3Ryb2ludGVzdGluYWwgYW5kIENvbG9uaWMgVHJhbnNpdCBpbiBEaWFiZXRpYyBvciBJZGlvcGF0aGljIEdhc3Ryb3BhcmVzaXMgUGFydGljaXBhbnRzLFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzEyNDY2LDIwMTgtMDEtMDIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJzdW1hdHJpcHRhbiAobG93LWRvc2UgaW50cmFuYXNhbCwgbWlncmFpbmUpLCBPcHRpTm9zZS9BVkFOSVIiLDYwNjkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIGFuZCBlZmZpY2FjeSBzdHVkeSBvZiBpbnRyYW5hc2FsIHN1bWF0cmlwdGFuLCBkZWxpdmVyZWQgdXNpbmcgYW4gT3B0aU5vc2UgZGV2aWNlLCBmb3IgdGhlIHBvdGVudGlhbCB0cmVhdG1lbnQgb2YgYWN1dGUgbWlncmFpbmUiLE9wdGlOb3NlIEFTLEludGVydmVudGlvbmFsLDY0NDM3LDIwMDctMTEtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxTVEVQLUEsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT1BDLTM0NzEyIGFzIGEgQ29tcGxlbWVudGFyeSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHQgQXR0ZW50aW9uIERlZmljaXQvSHlwZXJhY3Rpdml0eSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw2NDQwOCwyMDEwLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sRGlzY292ZXJ5LERSLERlcHJlc3Npb24sOTMsbnVsbCxBIFN0dWR5IG9mIEJyZXhwaXByYXpvbGUgUGx1cyBLZXRhbWluZSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24gKFRSRCksTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI5ODEwMywyMDE3LTA5LTE0IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEdlbm9taWNzIEFuYWx5c2lzIC0gU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzMDU3MywyMDE4LTAyLTE5IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTW9ub3RoZXJhcHkgQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBUcmlhbCBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIFNjaGl6b3BocmVuaWEgV2l0aCBJbXB1bHNpdml0eSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMDYxNzIsMjAxNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksTGlnaHRob3VzZSBleHRlbnNpb24sQnJleHBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTE2MjQ2LDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWFuaWEsMTk1NyxudWxsLEEgVHJpYWwgdG8gQXNzZXNzIEJyZXhwaXByYXpvbGUgVmVyc3VzIFBsYWNlYm8gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWFuaWMgRXBpc29kZXMgQXNzb2NpYXRlZCBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTAxMDMsMjAxNy0xMC0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgcGhhc2UgSUlJLCAxMi13ZWVrLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCBvZiAgYnJleHBpcHJhem9sZSBpbiB0aGUgdHJlYXRtZW50IG9mIGFnaXRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIGRlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyB0eXBlIiwiSCBMdW5kYmVjayBBL1MsIE90c3VrYSBIb2xkaW5ncyBDbyBMdGQiLEludGVydmVudGlvbmFsLDM0MDU3MSwyMDE4LTA2LTMwIDAwOjAwOjAwLFBsYW5uZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gdGhlIFRyZWF0bWVudCBvZiBBZHVsdCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsODEzMjEsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsOCxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxQb2xhcmlzLFN0dWR5IG9mIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFR3byBGaXhlZCBEb3NlcyBvZiBPUEMtMzQ3MTIgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIHRoZSBUcmVhdG1lbnQgb2YgQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDc3NjMzLDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDgrLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgTWFpbnRlbmFuY2UgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM0MTAwNiwyMDE4LTA3LTEzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBTYWZldHkgb2YgQWRqdW5jdCBCcmV4cGlwcmF6b2xlIGluIEVsZGVybHkgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGFuZCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50IFRyZWF0bWVudCxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMjU0NDIsMjAxNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJtZXRvY2xvcHJhbWlkZSAob3B0aW1pemVkIGludHJhbmFzYWwgZm9ybXVsYXRpb24sIGRpYWJldGljIGdhc3Ryb3BhcmVzaXMpLCBNYXJpbmEvUXVlc3Rjb3IvRXZva2UiLDYzMzE4LFBoYXJtYWNva2luZXRpY3MsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsRGlhYmV0aWMgZ2FzdHJvcGFyZXNpcywzMjAzLG51bGwsQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIGFuIG9wdGltaXplZCBmb3JtdWxhIG9mIEVWSy0wMDEgZm9yIHRyZWF0bWVudCBvZiBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLEV2b2tlIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsNTQzNDUsMjAwOC0wNi0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBUcmlhbCBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgVHJlYXRtZW50IGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSBTdGFiaWxpemVkIG9uIE9yYWwgQW50aXBzeWNob3RpY3MgT3RoZXIgVGhhbiBBcmlwaXByYXpvbGUsT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLEludGVydmVudGlvbmFsLDg1NjI0LDIwMTItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSwiQW4gT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIsIFJvbGxvdmVyLCBMb25nLVRlcm0gU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIEludHJhbXVzY3VsYXIgRGVwb3QgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw2NjY1OCwyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxBUklMQUksIkVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIChMQUkpIG9uIFBzeWNob3NvY2lhbC9Db2duaXRpdmUgRnVuY3Rpb25pbmcsIFBhdGllbnQgUmVwb3J0ZWQgQWNjZXB0YWJpbGl0eSBvZiBUcmVhdG1lbnQgaW4gU2NoaXpvcGhyZW5pYSIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyNTUwMTcsMjAxNy0wMS0wNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUcmVhdG1lbnQgU3R1ZHkgQ29tcGFyaW5nIEFyaXBpcHJhem9sZSBPbmNlIE1vbnRobHkgV2l0aCBTdGFuZGFyZCBvZiBDYXJlIE1lZGljYXRpb24gaW4gT3V0cGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDIxNDk3MiwyMDE0LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBBbmQgVG9sZXJhYmlsaXR5IFN0dWR5IE9mIEFyaXBpcHJhem9sZSBpbSBEZXBvdCBJbiBBZHVsdCBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ3ODczLDIwMTMtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgY29tcGFyaXNvbiB0cmlhbCBvZiBhcmlwaXByYXpvbGUgSU0gZGVwb3QgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDEwMTI4OSwyMDEwLTA3LTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgZG9zZS1yYW5naW5nIHN0dWR5IG9mIHNhZmV0eSBvZiBhcmlwaXByYXpvbGUgbGF1cm94aWwgKEFyaXN0YWRhKSBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwzMzQ1OTIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBub24taW5mZXJpb3JpdHkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIG9uY2UtbW9udGhseS1hbiBleHRlbmRlZC1yZWxlYXNlIGluamVjdGFibGUgc3VzcGVuc2lvbiB2ZXJzdXMgb3JhbCBhcmlwaXByYXpvbGUgKEFSSSkgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNTE2NTAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIExhdXJveGlsIGluIFN1YmplY3RzIHdpdGggU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDI0OTMyNiwyMDE1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU3R1ZHkgSW4gSGVhbHRoeSBTdWJqZWN0cyBUbyBFdmFsdWF0ZSBUaGUgQ2hhbmdlcyBJbiBUaGUgUHJvdGVpbiBzQVBQLUFscGhhIEluIENlcmVicm9zcGluYWwgRmx1aWQgRm9sbG93aW5nIEEgU2luZ2xlIE9yYWwgRG9zZSBPZiBQRi0wNDk5NTI3NCxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY5ODQwLDIwMTAtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCwiQSBTdHVkeSBUbyBFdmFsdWF0ZSBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHkgQW5kIFBsYXNtYSBEcnVnIExldmVscyBGb2xsb3dpbmcgQSBTaW5nbGUtRG9zZSBPZiBQRi0wNDk5NTI3NCBJbiBIZWFsdGh5IEFkdWx0IFZvbHVudGVlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjUxMzcsMjAxMC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJtb3NhcHJpZGUgY2l0cmF0ZSAoZHlzcGVwc2lhLCBzdXN0YWluZWQgcmVsZWFzZSksIERhZXdvb25nIiw2NzU3OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEV0otMTI1MiBpbiB0aGUgVHJlYXRtZW50IG9mIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODU0NzksMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxtaW5lc2FwcmlkZSw3Mjg0OSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsQSBTdHVkeSB0byBJbnZlc3RpZ2F0ZSB0aGUgRWZmZWN0cyBvZiBEU1AtNjk1MiBvbiB0aGUgUVQvUVRjIGluIEhlYWx0aHkgTWFsZSBhbmQgRmVtYWxlIFZvbHVudGVlcnMsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzI0NzY3LDIwMTctMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDczNzQwLFNhZmV0eSxOLE4sUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLCJERk4tMDIgT3Blbi1MYWJlbCwgU2FmZXR5IFN0dWR5IGluIFBhdGllbnRzIFdpdGggQWN1dGUgTWlncmFpbmUiLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyMTQ2MDcsMjAxNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixudWxsLEx5YnJpZG9zIEZvb2QgZWZmZWN0IHN0dWR5IFZvZWRzZWwgZWZmZWN0IG9uZGVyem9layBuYWFyIEx5YnJpZG9zLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwyMTY1MzksMjAxNS0wMS0yNiAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJ0ZXN0b3N0ZXJvbmUgKyBidXNwaXJvbmUgaHlkcm9jaGxvcmlkZSAob3JhbCwgaHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyKSwgRW1vdGlvbmFsIEJyYWluIiw4NDM2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksUGhhc2UgMiBDbGluaWNhbCxDMixGZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDEyNzYsbnVsbCxMeWJyaWRvcyBpbiBQcmUgYW5kIFBvc3RtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwxODAyNTMsMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAoYWVyb3NvbCBuYXNhbCwgbWlncmFpbmUpLCBJbXBlbCBOZXVyb1BoYXJtYSIsOTc1NTUsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsTWlncmFpbmUsMjEwLG51bGwsIkJpb2F2YWlsYWJpbGl0eSBvZiBESEUgQWRtaW5pc3RlcmVkIGJ5IEktMTIzIFBPRCBEZXZpY2UsIElWIEluamVjdGlvbiBhbmQgTWlncmFuYWwgTmFzYWwgU3ByYXkgaW4gSGVhbHRoeSBBZHVsdHMiLCJDbGluaWNhbCBOZXR3b3JrIFNlcnZpY2VzLCBJbXBlbCBOZXVyb1BoYXJtYSIsSW50ZXJ2ZW50aW9uYWwsMzI2MDU2LDIwMTctMTAtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJzdW1hdHJpcHRhbiAobWlncmFpbmUsIFpFTkVPKSwgQ3Jvc3NqZWN0IiwxMDk0NzIsU2FmZXR5LE4sTixEaXNjb3ZlcnksRFIsTWlncmFpbmUsMjEwLG51bGwsQSBjbGluaWNhbCBzdHVkeSBvZiBzdW1hdHJpcHRhbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBzZXZlcmUgbWlncmFpbmUsQ3Jvc3NqZWN0LEludGVydmVudGlvbmFsLDMzMDIxNywyMDE3LTEyLTMxIDAwOjAwOjAwLFBsYW5uZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxFZmZlY3Qgb2YgTW9zYXByaWRlIENpdHJhdGUgaW4gVHlwZSAyIERpYWJldGljIFBhdGllbnQncyBHTFAtMSxDaGliYSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIyNDk1NywyMDE1LTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsIm1vc2FwcmlkZSArIHJlYmFtaXBpZGUgKGZ1bmN0aW9uYWwgZHlzcGVwc2lhKSwgSWwgRG9uZyIsMTAyODg5LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxJRF9Nb3RpUmViXzEzMDIsUHJvc3BlY3RpdmUgc3R1ZHkgaW4gY29tcGFyaW5nIHRoZSBzYWZldHkgYW5kIHRoZSBwaGFybWFjb2tpbmV0aWNzIG9mIE1vc2FwcmlkZSBhbmQgUmViYW1pcGlkZSBoYXZpbmcgdGhlIGVmZmVjdHMgb24gZ2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlcyB3aGVuIGFkbWluaXN0ZXJlZCBhcyBzaW5nbGUgZHJ1ZyBvciBhIGNvbXBsZXggaW4gaGVhbHRoeSBrb3JlYW4gbWFsZSBhZHVsdHMsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkyMTQ1LDIwMTQtMDQtMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwibW9zYXByaWRlICsgcmViYW1pcGlkZSAoZnVuY3Rpb25hbCBkeXNwZXBzaWEpLCBJbCBEb25nIiwxMDI4ODksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIERydWcgSW50ZXJhY3Rpb24gU3R1ZHkgb2YgTW9zYXByaWRlIGFuZCBSZWJhbWlwaWRlLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE4MTA5OSwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxJbXBhY3Qgb2YgQnVzcGlyb25lIE1haW50ZW5hbmNlIG9uIHRoZSBSZWluZm9yY2luZyBFZmZlY3RzIG9mIENvY2FpbmUsVW5pdmVyc2l0eSBvZiBLZW50dWNreSxJbnRlcnZlbnRpb25hbCw4OTYxMywyMDEyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIE1hbmlhLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDgxMjE2LDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBc3Nlc3NpbmcgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgVHJlYXRtZW50IGJ5IEFyaXBpcHJhem9sZSBhbmQgUGxhY2VibyBmb3IgQ29udHJvbCBvZiBPYnNlc3Npb24gaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIE1vb2QgRGlzb3JkZXIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDI0MjUsMjAxNi0wNS0xNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQXJpcGlwcmF6b2xlIGVmZmVjdCBpbiB0aGUgdHJlYXRtZW50IG9mIG1hbmlhLFVuaXZlcnNpdHkgb2YgU29jaWFsIFdlbGZhcmUgYW5kIFJlaGFiaWxpdGF0aW9uIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMwMTkwNCwyMDE1LTEwLTIzIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxCaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBhcmlwaXByYXpvbGUgd2hlbiBhZG1pbmlzdGVyZWQgYXMgYSAxNSBtZyBvcmFsbHkgZGlzaW50ZWdyYXRpbmcgdGFibGV0IHJlbGF0aXZlIHRvIGEgMTUgbWcgY29tbWVyY2lhbCB0YWJsZXQgaW4gaGVhbHRoeSBtYWxlIGFuZC9vciBmZW1hbGUgc3ViamVjdHMgdW5kZXIgZmFzdGluZyBjb25kaXRpb24sS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNDQxMzMsMjAxMi0wOC0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEVsZXRyaXB0YW4gUHJvdmlkZXMgQ29uc2lzdGVudCBNaWdyYWluZSBSZWxpZWY6IFJlc3VsdHMgT2YgQSBXaXRoaW4tUGF0aWVudCBNdWx0aXBsZS1Eb3NlIFN0dWR5LFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTMzNTg2LDIwMDAtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBpbiBzdW1hdHJpcHRhbi1uYWl2ZSBwYXRpZW50cyIsTWVtb3JpYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDk3NDQsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSwgYSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzIsMjAwNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxudWxsLFRyZWF0bWVudCBvZiBIYWxsdWNpbm9zaXMvUHN5Y2hvc2lzIGluIFBhcmtpbnNvbidzIERpc2Vhc2UgYnkgYW4gSW52ZXN0aWdhdGlvbmFsIERydWcsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjA5NCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsQ0wtSDFULDYyNjA2LEJpb2F2YWlsYWJpbGl0eSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFzZSBJIHN0dWR5IHRvIEV2YWx1YXRlIEJpb2F2YWlsYWJpbGl0eSBvZiBDTC1IMVQsQ2hhcmxlc3RvbiBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIzNjYxMixudWxsLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQUNQLTEwMyB0byBUcmVhdCBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA5MywyMDA0LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFJlZnJhY3RvcnkgQW54aWV0eSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzEzMzEsMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQnJlYXN0IHR1bW9yLDQ5LG51bGwsIlZvcnRpb3hldGluZSBmb3IgTURELCBDb2duaXRpb24sIGFuZCBTeXN0ZW1pYyBJbmZsYW1tYXRvcnkgQmlvbWFya2VycyIsVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCwyNDkyMjUsMjAxNi0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXRhdG9uaWMgc2NoaXpvcGhyZW5pYSwxOTMyLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhdGF0b25pYyBzY2hpem9waHJlbmlhLDE5MzIsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgU3VtYXRyaXB0YW4gMTAwIG1nIFRhYmxldHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCw1MDM0NiwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBUYWJsZXRzIDEwMCBtZyBpbiBGZWQgQ29uZGl0aW9ucyxEciBSZWRkeSdzIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjAwOTY2LDIwMDUtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBDcm9zcy1vdmVyLCBQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSB0byBJbnZlc3RpZ2F0ZSBBbnkgSW50ZXJhY3Rpb24gQmV0d2VlbiBQaXpvdGlmZW4gYW5kIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM3NDYsMTk4OS0wNi0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1MYWJlbCwgUmFuZG9taXplZCwgU2luZ2xlLURvc2UsIFR3by1QZXJpb2QsIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSBTdW1hdHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIGZvciBhIFRyZXhpbWEgKFN1bWF0cmlwdGFuIDg1IG1nIGFuZCBOYXByb3hlbiBTb2RpdW0gNTAwIG1nKSBUYWJsZXQgQ29tcGFyZWQgV2l0aCBhbiBJbWl0cmV4IChTdW1hdHJpcHRhbikgMTAwIG1nIFRhYmxldCIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTIwMTIsMjAwNi0wMi0xMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgQ05TIGVmZmVjdHMgb2Ygc3VtYXRyaXB0YW4gcml6YXRyaXB0YW4gaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsQ2VudHJlIGZvciBIdW1hbiBEcnVnIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDExMTM5NywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIFN1bWF0cmlwdGFuIDEwMCBtZyBUYWJsZXRzIFVuZGVyIEZlZCBDb25kaXRpb25zLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDAzMjQsMjAwOC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWdncmVzc2lvbiw5LG51bGwsRWZmaWNhY3kgb2YgYSBUcmlwdGFuIGluIHRoZSBUcmVhdG1lbnQgb2YgSG9zdGlsaXR5IGFuZCBBZ2dyZXNzaW9uIEFtb25nIENvbnZpY3RzIFdpdGggYSBQc3ljaGlhdHJpYyBUcmVhdG1lbnQgT3JkZXIsVW5pdmVyc2l0YWlyIE1lZGlzY2ggQ2VudHJ1bSBVdHJlY2h0ICxJbnRlcnZlbnRpb25hbCwyMTQ2OSwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQUNQLTEwMyB0byBUcmVhdCBQYXJraW5zb24ncyBEaXNlYXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsNjA5MywyMDA0LTA2LTI1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVsZW5vcHJpZGUsNjM1NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uIHByZWRvbWluYW50IGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwzODYyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBZS1AtMTA4MTEgaW4gU3ViamVjdHMgV2l0aCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgV2l0aCBDb25zdGlwYXRpb24sU0sgQ2hlbWljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNzcwMjksMjAxMy0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLENhcmlwcmF6aW5lIEVmZmVjdHMgb24gQnJhaW4gYW5kIEJlaGF2aW9yIGluIENvY2FpbmUgVXNlIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhLEludGVydmVudGlvbmFsLDMyOTAwMiwyMDE4LTA0LTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQ29tcGFyaW5nIHRoZSBUaGVyYXBldXRpYyBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIERBLTk3MDEgV2l0aCBEb21wZXJpZG9uZSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyODUzMzAsMjAxMy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdXRpc20sNDIzLEItQUNFLEJ1c3Bpcm9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIDIgdG8gNiBZZWFyIE9sZCBDaGlsZHJlbiBXaXRoIEF1dGlzdGljIERpc29yZGVyLFdheW5lIFN0YXRlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNTA0OTgsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cG9wcm9sYWN0aW5lbWlhLDI3NzQsbnVsbCwiUmV2ZXJzYWwgb2YgQW50aXBzeWNob3RpYy1JbmR1Y2VkIEh5cGVycHJvbGFjdGluZW1pYSwgV2VpZ2h0IEdhaW4sIEh5cGVyZ2x5Y2VtaWEgYW5kIER5c2xpcGlkZW1pYSIsR2Vub3ZhdGUgQmlvdGVjaG5vbG9neSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTQxOTgsMjAwNy0xMC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgTmFwcm94ZW4gU29kaXVtIENvbWJpbmF0aW9uIFRhYmxldCwgU3VtYXRyaXB0YW4gVGFibGV0LCBhbmQgTmFwcm94ZW4gU29kaXVtIFRhYmxldCBvbiBCbG9vZCBQcmVzc3VyZSBXaGVuIFRyZWF0aW5nIE1pZ3JhaW5lIEhlYWRhY2hlcyBUaGF0IE9jY3VyIER1cmluZyBhIDYtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDM2MjQ3LDIwMDgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMWEgQ2xpbmljYWwsQzFBLExZLTMxNTUzNSwxNDEzMSxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlciwxMjY5LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBzaW5nbGUgcmlzaW5nIGRvc2UsIHBoYXNlIElhIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBMWS0zMTU1MzUsIGEgcG90ZW50aWFsIHRyZWF0bWVudCBmb3IgZnVuY3Rpb25hbCBib3dlbCBkaXNvcmRlcnMiLFNoaXJlIHBsYyxJbnRlcnZlbnRpb25hbCwxOTY3MywxOTk3LTExLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXVzZWEsMjI2LG51bGwsU3R1ZHkgdG8gVGVzdCBhIE1hcmtldGVkIFByb2R1Y3QgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZS1Bc3NvY2lhdGVkIE5hdXNlYSxNZXJjayBTaGFycCAmIERvaG1lIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM5OTUsMjAwNi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBlcmlwaGVyYWwgdmFzY3VsYXIgZGlzZWFzZSwyNjAsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxSb3NhY2VhLDIxNjQsbnVsbCxQQUNBUC0zOCBJbmR1Y2VkIEhlYWRhY2hlIGFuZCBSb3NhY2VhLWxpa2UgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBSb3NhY2VhLERhbmlzaCBIZWFkYWNoZSBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzczNzc1LDIwMTgtMTEtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxQaGFybWFjb2tpbmV0aWNzIGFuZCBUb2xlcmFiaWxpdHkgb2YgTHUtQUEyMTAwNCBpbiBDaGlsZCBhbmQgQWRvbGVzY2VudCBQYXRpZW50cyBXaXRoIERlcHJlc3NpdmUgb3IgQW54aWV0eSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw4MzIyMCwyMDEyLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIFRyZWF0aW5nIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIlRha2VkYSBEZXZlbG9wbWVudCBDZW50ZXIgQW1lcmljYXMsIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzUwNTcsMjAwOC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxTVG9QLUMsU3Vic3RhbmNlIE1pc3VzZSBUbyBQc3ljaGlhdHJpYyBEaXNvcmRlcnMgZm9yIENhbm5hYmlzLFRoZSBVbml2ZXJzaXR5IG9mIEhvbmcgS29uZyxJbnRlcnZlbnRpb25hbCwzMzQ5NDMsMjAxOC0wNy0yNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxGcm9udG90ZW1wb3JhbCBkZW1lbnRpYSwyNDI1LG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBEZW1lbnRpYS1yZWxhdGVkIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTc2MDYsMjAxNy0wOS0yNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUaWMgZGlzb3JkZXIsMjk0MCxudWxsLCJUd2ljZS13ZWVrbHkgYXJpcGlwcmF6b2xlIGZvciB0cmVhdGluZyBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCB0aWMgZGlzb3JkZXIsIGEgcmFuZG9taXplZCwgY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCIsU2hpcmF6IFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwyMTA5MzgsMjAxNC0wMS0xMyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsVGljIGRpc29yZGVyLDI5NDAsbnVsbCxPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBUb3VyZXR0ZSdzIERpc29yZGVyLCJOZXcgWW9yayBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNZWRpY2luZSwgVVMiLEludGVydmVudGlvbmFsLDIwNTkxLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiY2FyYmlkb3BhICsgbGV2b2RvcGEgKyBidXNwaXJvbmUgKG9yYWwsIHNwaW5hbCBjb3JkIGluanVyeSksIE5vcmRpYyBMaWZlIFNjaWVuY2VzIFBpcGVsaW5lIiw3NTM4MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNwaW5hbCBjb3JkIGluanVyeSwxMjU4LG51bGwsIlN0dWR5IHRvIEFzc2VzcyBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgTVREIG9mIGEgQ2VudHJhbCBQYXR0ZXJuIEdlbmVyYXRvci1hY3RpdmF0aW5nIFRyaXRoZXJhcHkgKFNwaW5hbG9uKSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3BpbmFsIENvcmQgSW5qdXJ5IixOb3JkaWMgTGlmZSBTY2llbmNlIFBpcGVsaW5lIEluYyxJbnRlcnZlbnRpb25hbCw4MzEwOSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWxjb2hvbGlzbSwxMSxudWxsLEFyaXBpcHJhem9sZSBFZmZlY3RzIG9uIEFsY29ob2wgRHJpbmtpbmcgYW5kIENyYXZpbmcsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDc0NTk1LDIwMTEtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLE5BTEFQWixBbiBFeHBsb3JhdG9yeSBTdHVkeSBvZiBOYWx0cmV4b25lIFBsdXMgQXJpcGlwcmF6b2xlIGZvciBBbGNvaG9sIERlcGVuZGVuY2UsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDU3MTU2LDIwMDgtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHNldWRvb2JzdHJ1Y3Rpb24sMjE1OCxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSB0byBUcmVhdCBDaHJvbmljIEludGVzdGluYWwgUHNldWRvLU9ic3RydWN0aW9uIChDSVApLCJKb2huc29uICYgSm9obnNvbiwgU2hpcmUtTW92ZXRpcyBOViIsSW50ZXJ2ZW50aW9uYWwsMzY0MTUsMjAwOC0xMS0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIHN5bXB0b20sMTk0MyxudWxsLEEgU2FmZXR5IFN0dWR5IG9mIFBpbWF2YW5zZXJpbiBpbiBBZHVsdCBhbmQgRWxkZXJseSBTdWJqZWN0cyBFeHBlcmllbmNpbmcgTmV1cm9wc3ljaGlhdHJpYyBTeW1wdG9tcyBSZWxhdGVkIHRvIE5ldXJvZGVnZW5lcmF0aXZlIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ0ODYyLDIwMTgtMDUtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3RvbWFjaCB0dW1vciwxMjcsU01XLEVmZmljYWN5IFN0dWR5IG9mIGEgTG93IFZvbHVtZSBvZiBXYXRlciBJbnRha2UgYW5kIE1vc2FwcmlkZSBmb3IgRW5kb3Njb3B5IGluIFBhdGllbnRzIFdpdGggU3VidG90YWwgR2FzdHJlY3RvbXksSW5qZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDc0Mjg0LDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhcm1hY29raW5ldGljIHByb3BlcnRpZXMgb2YgbG9yY2FzZXJpbiBpbiBzdWJqZWN0cyB3aXRoIHJlbmFsIGltcGFpcm1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjE5MiwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsVGhvcm91Z2ggQ29ycmVjdGVkIFFUIEludGVydmFsIChRVGMpIFN0dWR5IFRvIEV2YWx1YXRlIFBvc3NpYmxlIEVmZmVjdHMgb2YgUHJ1Y2Fsb3ByaWRlIG9uIEVsZWN0cm9jYXJkaW9ncmFwaHkgKEVDRykgUGFyYW1ldGVycyxTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDU1NDMwLDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMzKyxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2xlcm9kZXJtYSwxMTA1LFBDVFMsUHJhZ21hdGljIENsaW5pY2FsIFRyaWFscyBpbiBTY2xlcm9kZXJtYSxVbml2ZXJzaXR5IG9mIFdlc3QgTG9uZG9uLEludGVydmVudGlvbmFsLDM0OTIzMywyMDE4LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxTdHVkeSBvZiBMdXJhc2lkb25lIGluIFRyZWF0aW5nIEFudGlwc3ljaG90aWMgTmFpdmUgb3IgUXVhc2ktTmFpdmUgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsOTg5MzAsMjAxMi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFNGQlJJLENvZ25pdGl2ZSBJbXByb3ZlbWVudCBXaXRoIEFyaXBpcHJhem9sZSAoQWJpbGlmeSkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLExvdWlzaWFuYSBTdGF0ZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM2MjIyLDIwMDMtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxDb2duaXRpdmUgSW1wcm92ZW1lbnQgV2l0aCBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSAoQk1TKSxMb3Vpc2lhbmEgU3RhdGUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNTEzOCwyMDAzLTA4LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQM18zWSxFZmZlY3RpdmVuZXNzIG9mIFNlY29uZCBHZW5lcmF0aW9uIEFudGlwc3ljaG90aWNzIGluIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzIFBhdGllbnRzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDI5MjY3MSwyMDE0LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhbmljIGRpc29yZGVyLDEyNzksbnVsbCxaaXByYXNpZG9uZSBpbiBCaXBvbGFyIERpc29yZGVyIFdpdGggQ28tbW9yYmlkIExpZmV0aW1lIFBhbmljIG9yIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIgKEdBRCksVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDY4NzI4LDIwMTAtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxGSy05NjAsMTUwNzMsUGhhcm1hY29raW5ldGljcyxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBGSy05NjAgaW4gaGVhbHRoeSB2b2x1bnRlZXJzLEZ1amlzYXdhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAwOSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsVGVsY2FnZXBhbnQgKE1LLTA5NzQpIExvbmctdGVybSBTYWZldHkgU3R1ZHkgaW4gQWR1bHQgUGFydGljaXBhbnRzIFdpdGggQWN1dGUgTWlncmFpbmUsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDEzOTIyLDIwMDctMDItMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsQnJleHBpcHJhem9sZSBmb3IgdGhlIExvbmctdGVybSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBZ2l0YXRpb24gQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzU4MzM0LDIwMTgtMTEtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbWVudGlhLDkwLG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgRmxleGlibGUgRG9zaW5nIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTUwNjA2LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRlemFtcGFuZWwgY29tcGFyZWQgdG8gc3VtYXRyaXB0YW4gaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw0MTA0OSwyMDAzLTA2LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxCRC1DQUVMLENBRSBQbHVzIExBSSBpbiBJbmRpdmlkdWFscyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYXQgUmlzayBmb3IgVHJlYXRtZW50IE5vbi1hZGhlcmVuY2UsVW5pdmVyc2l0eSBIb3NwaXRhbHMgT2YgQ2xldmVsYW5kLEludGVydmVudGlvbmFsLDMyNzQ3MSwyMDE4LTA0LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIEJldHdlZW4gU2luZ2xlIEFkbWluaXN0cmF0aW9uIG9mIEFTQy0wMSAoQXJpcGlwcmF6b2xlL1NlcnRyYWxpbmUgQ29tYmluYXRpb24gRHJ1ZykgYW5kIENvbmNvbWl0YW50IFNpbmdsZSBBZG1pbmlzdHJhdGlvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFNlcnRyYWxpbmUsIGFuZCBGb29kIEVmZmVjdCBvbiBQaGFybWFjb2tpbmV0aWNzIG9mIEFTQy0wMSBpbiBIZWFsdGh5IE1hbGUgQWR1bHRzIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxOTYxMywyMDE3LTExLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIk9wZW4sIHJhbmRvbWl6ZWQsIGNvbmR1Y3RlZCBpbiB0d28gcGhhc2VzLCBjcm9zcy1zZWN0aW9uYWwgc3R1ZHkgb2YgZHJ1ZyBiaW9lcXVpdmFsZW5jZSBvZiBQaXB6b2wgdGFibGV0cyAxMCBtZyAoQWxlbWJpYyBQaGFybWFjZXV0aWNhbHMgTGltaXRlZCwgSW5kaWEpIGFuZCBBYmlsaWZ5IHRhYmxldHMgMTAgbWcgKEJyaXN0b2wtTXllcnMgU3F1aWJiIENvbXBhbnkgTWFudWZhY3R1cmluZywgUHVlcnRvIFJpY28pIHdpdGggYSBzaW5nbGUgZG9zZSBvbiBhbiBlbXB0eSBzdG9tYWNoIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQWxlbWJpYyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjEzOTY3LDIwMTQtMTAtMTUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBDb21wYXJlIENhcGlsbGFyeSBhbmQgVmVub3VzIFdob2xlIEJsb29kIGFuZCBQbGFzbWEgQ29uY2VudHJhdGlvbnMgb2YgRml2ZSBBbnRpcHN5Y2hvdGljcyxKYW5zc2VuIFJlc2VhcmNoICYgRGV2ZWxvcG1lbnQgTExDLEludGVydmVudGlvbmFsLDE5MTA5MywyMDEyLTAyLTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLFlMLTA5MTksOTA1MTMsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxIeWRyb3h5cHlyaWRvbmUgSHlkcm9jaGxvcmlkZSBUYWJsZXRzIEkgQ2xpbmljYWwgVHJpYWwgRm9vZCBFZmZlY3RzLCJJbnN0aXR1dGUgb2YgUGhhcm1hY29sb2d5IGFuZCBUb3hpY29sb2d5IEFjYWRlbXkgb2YgTWlsaXRhcnkgTWVkaWNhbCBTY2llbmNlcyBQTEEsIFpoZWppYW5nIEh1YWhhaSBQaGFybWFjZXV0aWNhbCBHcm91cCBDbyBMdGQiLEludGVydmVudGlvbmFsLDI5NDg2MSxudWxsLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxSZWJhbGFuY2luZyB0aGUgU2Vyb3RvbmVyZ2ljIFN5c3RlbSBpbiBDb2NhaW5lIERlcGVuZGVuY2UsTWNMZWFuIEhvc3BpdGFsIENvcnAsSW50ZXJ2ZW50aW9uYWwsMzEwODk3LDIwMTgtMTAtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuIChhdXRvaW5qZWN0b3IsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDk2Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLFJFU1RPUixERk4tMTEgSW5qZWN0aW9uIGluIEVwaXNvZGljIE1pZ3JhaW5lIFdpdGggb3IgV2l0aG91dCBBdXJhLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDIyNzIsMjAxNS0wOS0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGxvc3MsMjk1NSxNRUxULE1ldGZvcm1pbiBhbmQgTG9yY2FzZXJpbiBmb3IgV2VpZ2h0IExvc3MgaW4gU2NoaXpvcGhyZW5pYSxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDI2Mjk0MCwyMDE2LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOaWNvdGluZSBkZXBlbmRlbmNlLDIzNSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBzZXJ0cmFsaW5lIGFuZCBidXNwaXJvbmUgY29tYmluYXRpb24gaW4gbm9uLWRlcHJlc3NlZCBzbW9rZXJzIixGZWRlcmFsIFVuaXZlcnNpdHkgb2YgUmlvIEdyYW5kZSBkbyBTdWwsSW50ZXJ2ZW50aW9uYWwsNjYwNzgsMjAwNi0wOC0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixJQlMtNUhULU1PVCxFZmZlY3Qgb2YgNS1IVDQgcmVjZXB0b3IgYWdvbmlzdCBvbiBzZW5zb3JpbW90b3IgcmVjdG9zaWdtb2lkIGZ1bmN0aW9uIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChJQlMpLFRvaG9rdSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDkzNjc3LDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMywibWVsb3hpY2FtICsgcml6YXRyaXB0YW4gKGZpeGVkLWRvc2UgY29tYmluYXRpb24vb3JhbCwgbWlncmFpbmUpLCBBeHNvbWUiLDEwODQ2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxNT01FTlRVTSxNYXhpbWl6aW5nIE91dGNvbWVzIGluIFRyZWF0aW5nIEFjdXRlIE1pZ3JhaW5lLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDMyMDg4OCwyMDE5LTAzLTA0IDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LE1PTk9OT0ZVLEEgU3R1ZHkgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBpbiBhIFNpbmdsZSBNaWdyYWluZSBBdHRhY2sgaW4gSmFwYW5lc2UgUGFydGljaXBhbnRzIFdpdGggTWlncmFpbmUsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzgyMTY3LDIwMTktMDYtMDMgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIEFsemhlaW1lcidzIFR5cGUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODA5ODUsMjAwMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBmdWxseSBjb3VudGVyYmFsYW5jZWQsIHJhbmRvbWlzZWQgd2l0aGluLXN1YmplY3QsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2YgYXJpcGlwcmF6b2xlIGFuZCBoYWxvcGVyaWRvbCBvbiBicmFpbiBhY3RpdmF0aW9uIGR1cmluZyB3b3JraW5nIG1lbW9yeSBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEtpbmcncyBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwyNjE0NzcsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDJfM1ksIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgUHN5Y2hvc2lzOiBUaHJlZS15ZWFyIEZvbGxvdy11cCIsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzc2NjgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsUFJFVkVOVCwiU2Vjb25kYXJ5IFByZXZlbnRpb24gb2YgU2NoaXpvcGhyZW5pYS4gQSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixVbml2ZXJzaXR5IG9mIENvbG9nbmUsSW50ZXJ2ZW50aW9uYWwsMjI4MTcxLDIwMDctMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsRXZhbHVhdGlvbiBvZiBlZmZlY3RpdmVuZXNzIG9mIFJpc3BlcmRhbCBDb25zdGEgY29tcGFyZWQgdG8gQWJpbGlmeSBvdmVyIGEgdHdvLXllYXIgcGVyaW9kIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxKb2huc29uICYgSm9obnNvbiBQaGFybWFjZXV0aWNhbCBSZXNlYXJjaCAmIERldmVsb3BtZW50IExMQyxJbnRlcnZlbnRpb25hbCwyMTExMSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLEEgQ29tcGFyaXNvbiBvZiBSaXNwZXJpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciBUcmVhdG1lbnQgb2YgUGF0aXJudHMgV2l0aCBNZXRoYW1waGV0YW1pbmUtQXNzb2NpYXRlZCBQc3ljaG9zaXMsQ2VudHJhbCBTb3V0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDExNjUyMiwyMDEyLTA3LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEFyaXBpcHJhem9sZSBpbiBMLWRvcGEtSW5kdWNlZCBEeXNraW5lc2lhczogQSBPbmUteWVhciBPcGVuLWxhYmVsIFBpbG90IFN0dWR5LFVuaXZlcnNpdGEgZGVnbGkgU3R1ZGkgZGkgUm9tYSBMYSBTYXBpZW56YSxJbnRlcnZlbnRpb25hbCwxNDcwODIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCwiQ2hhbmdlcyBpbiBBZGlwb3NpdHksIE1ldGFib2xpYyBNZWFzdXJlcyBGcm9tIEF0eXBpY2FscyB0byBBcmlwaXByYXpvbGUiLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwyMTY3MSwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLDEvMi1NQzRSIEdlbm90eXBlIGFuZCBQZWRpYXRyaWMgQW50aXBzeWNob3RpYyBEcnVnLUluZHVjZWQgV2VpZ2h0IEdhaW4sTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTI2OTE4LDIwMTMtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTGl2ZXIgZGlzZWFzZSwyMDEsbnVsbCxFdmFsdWF0aW9uIG9mIFBydWNhbG9wcmlkZSBpbiBTdWJqZWN0cyBXaXRoIE1vZGVyYXRlIGFuZCBTZXZlcmUgSGVwYXRpYyBJbXBhaXJtZW50LFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjY4NzgsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEluc3VsaW4gcmVzaXN0YW5jZSwyNTIwLG51bGwsSW1wcm92aW5nIERpYWJldGVzIFJpc2sgRmFjdG9ycyBpbiBNZXhpY2FuLUFtZXJpY2FuIFBlcnNvbnMgV2l0aCBTY2hpem9waHJlbmlhIGJ5IFN3aXRjaGluZyB0byBaaXByYXNpZG9uZSxVbml2ZXJzaXR5IG9mIFRleGFzIEhlYWx0aCBTY2llbmNlIENlbnRlciBTYW4gQW50b25pbyxJbnRlcnZlbnRpb25hbCw1MDg5LDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBEaWZmZXJlbnQgRm9ybXVsYXRpb25zIG9mIFJvdGlnb3RpbmUgUGF0Y2hlcyBEZWxpdmVyIEVxdWl2YWxlbnQgRHJ1ZyBBbW91bnQgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDYzODQ5LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJvcmRlcmxpbmUgcGVyc29uYWxpdHkgZGlzb3JkZXIsMTkyOSxudWxsLFppcHJhc2lkb25lIGluIHRoZSBUcmVhdG1lbnQgb2YgQm9yZGVybGluZSBQZXJzb25hbGl0eSBEaXNvcmRlcixGdW5kYWNpbyBQcml2YWRhIEkgSW5zdGl0dXQgRGUgUmVjZXJjYSBEZSBMJ0hvc3BpdGFsIERlIExhIFNhbnRhIENyZXUgSSBTYW50IFBhdSxJbnRlcnZlbnRpb25hbCwzMzAzMCwyMDA0LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsUGhhcm1hY29keW5hbWljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiRXZhbHVhdGlvbiBvZiBIaXN0YW1pbmUsIENHUlAgYW5kIFZJUCBhcyBNYXJrZXJzIGZvciBBY3RpdmF0aW9uIG9mIFRyaWdlbWluYWwgYW5kIFBhcmFzeW1wYXRoZXRpYyBOZXJ2ZSBGaWJlcnMiLENsaW52ZXN0LEludGVydmVudGlvbmFsLDU4ODE3LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgZG9zZS1maW5kaW5nLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGhlbW9keW5hbWljIGFuZCBlbGVjdHJvY2FyZGlvZ3JhcGhpYyBlZmZlY3Qgb2YgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixIYW1tZXJzbWl0aCBNZWRpY2luZXMgUmVzZWFyY2gsSW50ZXJ2ZW50aW9uYWwsMTEwNTYyLDIwMDEtMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHksIFRvbGVyYWJpbGl0eSwgUGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBQaGFybWFjb2R5bmFtaWNzIChQRCkgb2YgVEFLLTk1NCBpbiBIZWFsdGh5IEFkdWx0IFBhcnRpY2lwYW50cyIsVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDM3MzE2MywyMDE5LTAzLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb3JvbmFyeSBhcnRlcnkgZGlzZWFzZSw4MCxudWxsLFZvcnRpb3hldGluZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgYW5kIENvcm9uYXJ5IEFydGVyeSBEaXNlYXNlLFRob21hcyBKZWZmZXJzb24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyMzA1NzksMjAxNi0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGF1dG9pbmplY3RvciwgbWlncmFpbmUpLCBQcm9taXVzIFBoYXJtYSIsOTYyNzksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksUkVTVE9SLERGTi0xMSBJbmplY3Rpb24gaW4gRXBpc29kaWMgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsRHIgUmVkZHkncyBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDI0MjI3MiwyMDE1LTA5LTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFBBRklQMl8zWSwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiBUcmVhdG1lbnQgb2YgRmlyc3QgRXBpc29kZSBQc3ljaG9zaXM6IFRocmVlLXllYXIgRm9sbG93LXVwIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzNzY2OCwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLFRlbGNhZ2VwYW50IChNSy0wOTc0KSBMb25nLXRlcm0gU2FmZXR5IFN0dWR5IGluIEFkdWx0IFBhcnRpY2lwYW50cyBXaXRoIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMzkyMiwyMDA3LTAyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxCdXNwaXJvbmUgYXMgYSBDYW5kaWRhdGUgTWVkaWNhdGlvbiBmb3IgTWV0aGFtcGhldGFtaW5lIEFidXNlLFVuaXZlcnNpdHkgb2YgS2VudHVja3ksSW50ZXJ2ZW50aW9uYWwsMTI2NzQyLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIFN1bWF0cmlwdGFuIGZvciB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDU5ODI2LDIwMDktMDktMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsSW52ZXN0aWdhdGlvbiBvZiBWYXNjdWxhciBJbmZsYW1tYXRpb24gaW4gTWlncmFpbmUgVXNpbmcgTW9sZWN1bGFyIE5hbm8taW1hZ2luZyBhbmQgQmxhY2sgQmxvb2QgSW1hZ2luZyBNUkksRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNDA3NjksMjAxNS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsb3JjYXNlcmluLDQ3NTA0LEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLExvcmNhc2VyaW4gaW4gQ29tYmluYXRpb24gV2l0aCBYUi1OYWx0cmV4b25lIGZvciBSZWxhcHNlIFByZXZlbnRpb24gaW4gT3Bpb2lkIFVzZSBEaXNvcmRlcixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjk5OTM1LDIwMTctMDUtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsQSBzdHVkeSB0byBhc3Nlc3MgdGhlIGNoYW5nZXMgaW4gYm9uZSB0dXJub3ZlciBiaW9tYXJrZXJzIGFmdGVyIGFyaXBpcHJhem9sZSB0cmVhdG1lbnQgaW4gcGF0aWVudHMgd2l0aCBwc3ljaGlhdHJpYyBkaXNvcmRlcnMsVW5pdmVyc2l0eSBvZiBBbGJlcnRhLEludGVydmVudGlvbmFsLDI1NDY2NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwibW9zYXByaWRlIGNpdHJhdGUgKGR5c3BlcHNpYSwgc3VzdGFpbmVkIHJlbGVhc2UpLCBEYWV3b29uZyIsNjc1NzgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIFRyaWFscyB0byBDb21wYXJlIE1vc2FwcmlkZSBCaW9hdmFpbGFiaWxpdHkgQmV0d2VlbiBEV0otMTI1MiBhbmQgTW9zYXByaWRlIE1lZGljaW5lLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NTE4OCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IFN0dWR5IG9mIEFiZG9taW5hbCBNYXNzYWdlIFRoZXJhcHkgdG8gVHJlYXQgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBvZiBEZWZpY2llbmN5IG9mIEJvdGggSGVhcnQgYW5kIFNwbGVlbiBUeXBlLEZpcnN0IFRlYWNoaW5nIEhvc3BpdGFsIG9mIFRpYW5qaW4gVW5pdmVyc2l0eSBvZiBUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDIwMzY0NCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCxUaGUgRWZmZWN0IG9mIFBzeWNob3RoZXJhcHkgYW5kIFBoYXJtYWNvdGhlcmFweSBvbiBBbnhpZXR5LFRhYnJpeiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTIxNjczLDIwMTItMDYtMDQgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJvcmRlcmxpbmUgcGVyc29uYWxpdHkgZGlzb3JkZXIsMTkyOSxudWxsLCJBIDgtd2VlaywgcGFyYWxsZWwtZ3JvdXAsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBvbGFuemFwaW5lIHZlcnN1cyBhcmlwaXByYXpvbGUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgQm9yZGVybGluZSBQZXJzb25hbGl0eSBEaXNvcmRlciAoQlBEKSIsVW5pdmVyc2l0eSBvZiBTb2NpYWwgV2VsZmFyZSBhbmQgUmVoYWJpbGl0YXRpb24gU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMjM5MDYxLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEJyZXhwaXByYXpvbGUgKE9QQy0zNDcxMikgYXMgYW4gQWRqdW5jdGl2ZSBUcmVhdG1lbnQgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgQW54aWV0eSBTeW1wdG9tcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNjQwMTYsMjAxMy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IENvbXBhcmluZyB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBhbmQgQXJpcGlwcmF6b2xlIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIEhvc3BpdGFsaXplZCBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1NDY5LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk4LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsVGhlIEVmZmljYWN5IEFuZCBTYWZldHkgT2YgSW50cmFtdXNjdWxhciBaaXByYXNpZG9uZSBGb3IgVGhyZWUgRGF5cyBJbiBQYXRpZW50cyBXaXRoIFBzeWNob3RpYyBBZ2l0YXRpb24sQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI3NTg4MywyMDE2LTEwLTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LEthaG4sIkludmVzdGlnYXRpb24gb2YgdGhlIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIHZlcnN1cyBvbGFuemFwaW5lIGluIHRoZSBtYW5hZ2VtZW50IG9mIHJlY2VudC1vbnNldCBwc3ljaG9zaXM7IEEgZmxleGlibGUtZG9zZSwgcGFyYWxsZWwtZ3JvdXAsIGRvdWJsZS1ibGluZCBzdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OSwyMDAzLTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCBzdHVkeSB3YXMgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpYyBhbmQgcGhhcm1hY29keW5hbWljIGludGVyYWN0aW9uIGJldHdlZW4gcml6YXRyaXB0YW4gYW5kIHBhcm94ZXRpbmUgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTA5MjY1LDE5OTktMDItMjggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLFBBTVMsU2lkZSBFZmZlY3QgU3R1ZHkgb2YgQW50aXBzeWNob3RpYyBNZWRpY2luZXMgdG8gVHJlYXQgQ2hpbGRob29kIEJpcG9sYXIgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZCxJbnRlcnZlbnRpb25hbCwzNDg3OCwyMDA4LTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYW5uYWJpcyBkZXBlbmRlbmNlLDMyODMsbnVsbCxCdXNwaXJvbmUgVHJlYXRtZW50IGZvciBNYXJpanVhbmEgRGVwZW5kZW5jZSxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgU291dGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsNTA3NDksMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNoaWF0cmljIGRpc29yZGVyLDIwNyxudWxsLCJTdHVkeSB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBvZiBQaW1hdmFuc2VyaW4gaW4gQWRvbGVzY2VudHMgd2l0aCBQc3ljaGlhdHJpYyBEaXNvcmRlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM2MDM5MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIG9uIHRoZSBIZWFydCBpbiBIZWFsdGh5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMzI2MzcsMjAxMS0wOS0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFRyaWNob3RpbGxvbWFuaWEsMTkyNixudWxsLFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBUcmljaG90aWxsb21hbmlhLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNTkxNDMsMjAwOS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOYXVzZWEsMjI2LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBHYWxhbnRhbWluZSBhbmQgQnVzcGlyb25lIG9uIFNlcm90b25lcmdpYy9DaG9saW5lcmdpYyBJbWJhbGFuY2Ugb2YgRGVwcmVzc2lvbiBhbmQgaXRzIFJlbGF0ZWQgQWJub3JtYWxpdGllcyBpbiBTbGVlcCBTdHJ1Y3R1cmUgb2YgSGVhbHRoeSBGZW1hbGUgU3ViamVjdHMsVW5pdmVyc2l0eSBvZiBPdHRhd2EsSW50ZXJ2ZW50aW9uYWwsMjQzMzYwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSBkZXRlcm1pbmluZyB3aGV0aGVyIHBydWNhbG9wcmlkZSB3b3VsZCBhdWdtZW50IHNlY29uZGFyeSBwZXJpc3RhbHNpcyBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIHdpdGggaW5lZmZlY3RpdmUgZXNvcGhhZ2VhbCBtb3RpbGl0eSIsSHVhbGllbiBUenUgQ2hpIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMzNjUyMCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxBQ0VTIDI1NSwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjU5MjEsMjAxMC0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbiBQbHVzIERvbmVwZXppbCBmb3IgVHJlYXRpbmcgTGF0ZS1MaWZlIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBQaXR0c2J1cmdoLEludGVydmVudGlvbmFsLDIwNjMxLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsQXJpcGlwcmF6b2xlIGluIE1peGVkIERlcHJlc3Npb24sS3VyZGlzdGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMzA2MDQsMjAxMi0xMi0yMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwaGFnaWEsMjA4NSxQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxBIHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhcmlwaXByYXpvbGUgb24gdGhlIHN0ZWFkeS1zdGF0ZSBwaGFybWFjb2tpbmV0aWNzIG9mIGVzY2l0YWxvcHJhbSBvciB2ZW5sYWZheGluZSBpbiBzdWJqZWN0cyB3aXRoIGRlcHJlc3NpdmUgb3IgYW54aWV0eSBkaXNvcmRlcnMsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNzc5NzksMjAwNy0wNS0wMiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBoYWxvcGVyaWRvbCBvciBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQW54aWV0eS1EZXByZXNzZWQgQXR0YWNrIixXYXJha3VrYWkgTWVkaWNhbCBDb3JwLEludGVydmVudGlvbmFsLDM0NTMyMCwyMDE4LTAyLTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGxlc29waXRyb24sNTExMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiQSA2LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwsIHBsYWNlYm8gYW5kIGxvcmF6ZXBhbS1jb250cm9sbGVkLCBwaGFzZSBJSSwgc2luZ2xlLWNlbnRlciwgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsZXNvcGl0cm9uIGluIGEgcGF0aWVudHMgd2l0aCBhbnhpZXR5IGhpc3RvcnkiLExhYm9yYXRvcmlvcyBEciBFc3RldmUgU0EsSW50ZXJ2ZW50aW9uYWwsNTYyNjIsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxSRVNPTFZFMyxNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggTWl4ZWQgRmVhdHVyZXMgLSBFeHRlbnNpb24sU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4MDMxNywyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGFuZG9zcGlyb25lLDM2MTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRHlzcGVwc2lhLDQzMixudWxsLEVmZmVjdCBvZiBUYWRvc3Bpcm9uZSBDaXRyYXRlIG9uIFN5bXB0b20gUmVzb2x1dGlvbiBvZiBQYXRpZW50cyBXaXRoIEZ1bmN0aW9uYWwgRHlzcGVwc2lhIC0gQSBEb3VibGUtYmxpbmQgUGxhY2Viby1Db250cm9sbGVkIHRyaWFsLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTYzNzk2LDIwMDUtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsRnJlZS1yZXNpZHVlIE51dHJpZW50cyBmb3IgdGhlIEJvd2VsIFByZXBhcmF0aW9uIG9mIENvbG9uIENhcHN1bGUgRW5kb3Njb3B5LFhpamluZyBIb3NwaXRhbCBvZiBEaWdlc3RpdmUgRGlzZWFzZXMsSW50ZXJ2ZW50aW9uYWwsMjcwNDkzLDIwMTQtMDEtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2ludGVzdGluYWwgZGlzZWFzZSwxMjksbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHBydWNhbG9wcmlkZSAoUmVzb2xvcikgZ2l2ZW4gc3ViY3V0YW5lb3VzbHkgaW4gcGF0aWVudHMgdW5kZXJnb2luZyBlbGVjdGl2ZSBwYXJ0aWFsIGNvbGVjdG9taWVzIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE5MTA0LDIwMDgtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxPQy1EREksIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBsdXJhc2lkb25lIEhDbCBvbiBvcmFsIGNvbnRyYWNlcHRpdmUgcGhhcm1hY29raW5ldGljcyBpbiBoZWFsdGh5IGZlbWFsZSBzdWJqZWN0cyIsU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDQyMjcxLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLEFyaXBpcHJhem9sZSBhcyBhbiBBZGp1bmN0IHRvIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIGZvciBXZWlnaHQgUmVkdWN0aW9uIGFuZCBJbXByb3ZlbWVudCBpbiBNZXRhYm9saWMgUHJvZmlsZSxJbnN0aXR1dGUgT2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyNzc5ODIsMjAxNi0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxMaXBpZCBtZXRhYm9saXNtIGRpc29yZGVyLDU4NCxudWxsLCJSZXZlcnNhbCBvZiBBbnRpcHN5Y2hvdGljLUluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhLCBXZWlnaHQgR2FpbiwgSHlwZXJnbHljZW1pYSBhbmQgRHlzbGlwaWRlbWlhIixHZW5vdmF0ZSBCaW90ZWNobm9sb2d5IENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDE5OCwyMDA3LTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFdlaWdodCBnYWluLDI5NTQsbnVsbCxMb3JjYXNlcmluIGZvciBQcmV2ZW50aW5nIFdlaWdodCBHYWluIEFtb25nIFNtb2tlcnMsIk1heW8gQ2xpbmljLCBNaW5uZXNvdGEiLEludGVydmVudGlvbmFsLDIyNDc3NCwyMDEzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIkVmZmVjdCBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIG9yIENsb21pcHJhbWluZSBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyOiBBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IixVbml2ZXJzaXRhJyBEZWdsaSBTdHVkaSBEaSBNZXNzaW5hLEludGVydmVudGlvbmFsLDE0NDQ5MixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQgQ2xpbmljYWwgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIEF1Z21lbnRhdGlvbiBpbiBUcmVhdG1lbnQtUmVzaXN0YW50IE9ic2Vzc2l2ZS1Db21wdWxzaXZlIERpc29yZGVyIixJbWFtIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTAxODE2LDIwMTItMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsRHlzcGVwc2lhIC0gQnVzcGlyb24sIkFjYWRlbWljIE1lZGljYWwgQ2VudGVyLCBVbml2ZXJzaXR5IG9mIEFtc3RlcmRhbSIsSW50ZXJ2ZW50aW9uYWwsMTE5NDU0LDIwMDUtMDYtMDEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNdXNjbGUgd2Vha25lc3MsNjY4LEVNSUxJLEV2YWx1YXRpbmcgTXVzY2xlIFdlYWtuZXNzIEltcHJvdmVtZW50IFdpdGggTG9yY2FzZXJpbiBpbiBJQ1UsSm9obnMgSG9wa2lucyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzNzUwNiwyMDE1LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLEJNUy0xODExMDAsMjY0NyxTYWZldHksWSxOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIEkvSUksIG9wZW4tbGFiZWwgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgdG9sZXJhbmNlIG9mIEJNUy0xODExMDAgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTA0NDEsMTk5MS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQXJpcGlwcmF6b2xlIGFuZCBaaXByYXNpZG9uZSBBbW9uZyBTY2hpem9waHJlbmljIFBhdGllbnRzIFdpdGggTWV0YWJvbGljIFN5bmRyb21lLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDk1ODkxLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBjb21wYXNzaW9uYXRlIHByb3RvY29sIG9mIHppcHJhc2lkb25lIGZvciBwYXRpZW50cyB3aG8gaGFkIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg5MzEwLDIwMDAtMDctMTggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gb3BlbiBleHRlbnNpb24gc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdobyBoYXZlIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg4ODc4LDIwMDItMDUtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJViwgbXVsdGljZW50ZXIsIDYtd2Vlaywgb3Blbi1sYWJlbCwgbm9uLWNvbXBhcmF0aXZlLCBmbGV4aWJsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCB6aXByYXNpZG9uZSBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjQwMiwyMDAyLTA5LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcmFuZG9taXplZCwgNDAtd2VlaywgZG91YmxlLWJsaW5kIHN0dWR5LCBmb2xsb3dlZCBieSBhIGRvdWJsZS1ibGluZCBjb250aW51YXRpb24gdHJpYWwgdXAgdG8gMTU2IGFkZGl0aW9uYWwgd2Vla3MgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0cmVhdG1lbnQgb3V0Y29tZXMgb2YgemlwcmFzaWRvbmUgdmVyc3VzIGhhbG9wZXJpZG9sIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIFNhbiBEaWVnbyxJbnRlcnZlbnRpb25hbCw2ODc4MCwyMDEwLTA4LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFpFSVNJRywiQSAxMi13ZWVrLCBwcm9zcGVjdGl2ZSwgZmxleGlibGUtZG9zZSwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwgb2JzZXJ2YXRpb25hbCBjbGluaWNhbCBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB6aXByYXNpZG9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixVbml2ZXJzaXTkdHNrbGluaWt1bSBIYW1idXJnLUVwcGVuZG9yZixJbnRlcnZlbnRpb25hbCw2NzIxMSwyMDA1LTExLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW5mbHVlbmNlIG9mIGEgaGlnaC1mYXQgbWVhbCBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB6aXByYXNpZG9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ5MiwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEFSLTEsVXNlIG9mIEdhbGFudGFtaW5lIGFuZCBDRFAtQ2hvbGluZSAoQ2l0aWNvbGluZSkgdG8gVHJlYXQgQWR1bHRzIHdpdGggU2NoaXpvcGhyZW5pYSxHZW9yZ2V0b3duIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzYzNTMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQ2xvemFwaW5lLUF1Z21lbnRhdGlvbiBXaXRoIFppcHJhc2lkb25lIG9yIFJpc3Blcmlkb25lLCBhIFJhbmRvbWl6ZWQsIFByb3NwZWN0aXZlIFRyaWFsIixDZW50cmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM1NzkyLDIwMDMtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFeHRlbnNpb24gU3R1ZHkgb2YgUGF0aWVudHMgU3VjY2Vzc2Z1bGx5IFRyZWF0ZWQgYnkgWmlwcmFzaWRvbmUgaW4gU3R1ZHkgQTEyODEwMzEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNDk4MiwyMDAxLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE1FLTIxMTIgUGhhc2UgSUlJLE1laWppIFNlaWthIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjI0MTk2LDIwMTUtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw2LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IG9mIHRoZSBJbXBhY3Qgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBPbmNlIE1vbnRobHkgVmVyc3VzIFN0YW5kYXJkIG9mIENhcmUgT3JhbCBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb25zIG9uIENoYW5nZXMgaW4gQnJhaW4gU3RydWN0dXJlIGFuZCBNZXRhYm9saXNtLFVuaXZlcnNpdHkgb2YgVXRhaCxJbnRlcnZlbnRpb25hbCwyMTAyMjgsMjAxNC0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSw3LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCBUcmlhbCBXaXRoIFNpeCBBbnRpcHN5Y2hvdGljIERydWdzIGZvciBTY2hpem9waHJlbmlhIixCZWlqaW5nIEh1aS1Mb25nLUd1YW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjA2MTI5LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsWmlwcmFzaWRvbmUgZm9yIEltcHJvdmluZyBJbnN1bGluIFNlbnNpdGl2aXR5IGluIFBlb3BsZSBXaXRoIFNjaGl6b3BocmVuaWEgV2hvIEFyZSBhdCBSaXNrIGZvciBEaWFiZXRlcyxWZXRlcmFucyBNZWRpY2FsIFJlc2VhcmNoIEZvdW5kYXRpb24sSW50ZXJ2ZW50aW9uYWwsMTgyMTcsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNissUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFRBQVMsVGFuZG9zcGlyb25lIENvbWJpbmVkIFdpdGggQXR5cGljYWwgQW50aXBzeWNob3RpYyBEcnVncyBpbiBTY2hpem9waHJlbmlhLEd1YW5nemhvdSBQc3ljaGlhdHJpYyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjg5NjgsMjAxNC0wMi0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVVGRVNULFRoZSBFdXJvcGVhbiBGaXJzdCBFcGlzb2RlIFNjaGl6b3BocmVuaWEgVHJpYWwgKEVVRkVTVCk6IENvbXBhcmlzb24gT2YgT3V0Y29tZSBJbiBGaXJzdCBFcGlzb2RlIFNjaGl6b3BocmVuaWEgV2l0aCBEaWZmZXJlbnQgTG93IERvc2UgQW50aXBzeWNob3RpYyBEcnVnIFJlZ2ltZW5zLCJBc3RyYVplbmVjYSBwbGMsIFBmaXplciBJbmMsIFNhbm9maSBTQSwgVGhlIEV1cm9wZWFuIEdyb3VwIGZvciBSZXNlYXJjaCBpbiBTY2hpem9waHJlbmlhIChFR1JJUykiLEludGVydmVudGlvbmFsLDE0Njc2MCwyMDAyLTEyLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIE9wZW4gQ2xpbmljYWwgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIENvbWJpbmF0aW9uIG9mIENsb3phcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBTY2hpem9waHJlbmlhLEhhbm5vdmVyIE1lZGljYWwgU2Nob29sLEludGVydmVudGlvbmFsLDE0NDI3MCxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxaaXAgQWQsWmlwcmFzaWRvbmUgU3dpdGNoaW5nIGluIFJlc3BvbnNlIHRvIEFkaGVyZW5jZSBhbmQgUHN5Y2hvdHJvcGljLVJlbGF0ZWQgV2VpZ2h0IEdhaW4gQ29uY2VybnMgQW1vbmcgUGF0aWVudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCw3NDcxNiwyMDExLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxTYWZldHksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIHN0dWR5IGV2YWx1YXRpbmcgdGhlIGNhcmRpb3Zhc2N1bGFyIHNhZmV0eSBvZiB6aXByYXNpZG9uZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTcxLDIwMDEtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgWmlwcmFzaWRvbmUgSW4gQ2hpbGRyZW4gQW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyIChNYW5pYyBPciBNaXhlZCksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw2NjEzMCwyMDEwLTA2LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxFeHRlbnNpb24gU3R1ZHkgRXZhbHVhdGluZyBUaGUgU2FmZXR5IEFuZCBUb2xlcmFiaWxpdHkgT2YgRmxleGlibGUgRG9zZXMgT2YgT3JhbCBaaXByYXNpZG9uZSBJbiBDaGlsZHJlbiBBbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNjI4NjQsMjAxOC0xMi0yMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFkanVuY3RpdmUgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBCaXBvbGFyIEkgRGVwcmVzc2lvbixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDMzOTM3LDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIlRyZWF0bWVudCBPcHRpbWl6YXRpb24gRm9yIEJpcG9sYXIgSSBEaXNvcmRlciwgTWFuaWMgT3IgTWl4ZWQgUGhhc2UiLEd1YW5nemhvdSBQc3ljaGlhdHJpYyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNDQ5MTIsMjAxMy0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgZ2VwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIChHQUQpIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1OTAyLDE5OTctMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LEVmZmljYWN5IixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIERvdWJsZS1CbGluZCBUcmlhbCBvZiBMb3ctIGFuZCBIaWdoLURvc2UgUmFuZ2VzIG9mIEdlcGlyb25lLUVSIENvbXBhcmVkIFdpdGggUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIERlcHJlc3NlZCBPdXQgUGF0aWVudHMsUGhhcm1hY29sb2d5IFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwxNTMzNDksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHNpbmdsZSBkb3NlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBuYXJhdHJpcHRhbiBpbiBtYWxlIGFuZCBmZW1hbGUgYWRvbGVzY2VudCAoMTIgdG8gMTcgeWVhcnMgb2xkKSBtaWdyYWluZSBzdWJqZWN0cyBvdXRzaWRlIGEgbWlncmFpbmUgYXR0YWNrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTM1LDE5OTYtMDUtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1ibGluZCwgYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIHRocmVlLXBlcmlvZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgKFBLKSBwcm9maWxlIG9mIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4NTE1LDE5OTQtMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGhhc2UgSSwgcmFuZG9taXplZCwgdHdvLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBhYnNvbHV0ZSBiaW9hdmFpbGFiaWxpdHkgb2Ygb3JhbCBHUi04NTU0OEEgaW4gaGVhbHRoeSBzdWJqZWN0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODI4OCwxOTk0LTA3LTEyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgY3Jvc3NvdmVyLCBtdWx0aS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgcGF0aWVudCBwcmVmZXJlbmNlIG9mIG5hcmF0cmlwdGFuIHdpdGggbmFwcm94ZW4gaW4gcGF0aWVudHMgZGlzc2F0aXNmaWVkIHdpdGggc2ltcGxlIGFuYWxnZXNpY3MgaW4gdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzMwMCwxOTk5LTAyLTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIHNhZmV0eSBvZiBuYXJhdHJpcHRhbiBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzEzMSwxOTk0LTA1LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLERlcHJlc3Npb24sOTMsbnVsbCwiQSBkb3NlLXJhbmdpbmcsIGxhdGUgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgdGFuZG9zcGlyb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIG5ldXJvc2lzIixTdW1pdG9tbyBQaGFybWFjZXV0aWNhbHMgQ28gTHRkLEludGVydmVudGlvbmFsLDUwMjUyLDE5OTItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLENsaW5pY2FsIFN0dWR5IG9uIFBvc3QgRXZhbHVhdGlvbiBBZnRlciBMaXN0aW5nIG9mIFFpemhpIFdlaXRvbmcgR3JhbnVsZXMsWGl5dWFuIEhvc3BpdGFsIENoaW5hIEFjYWRlbXkgT2YgQ2hpbmVzZSBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5ODA3MiwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBEV0otMTI1MiBpbiB0aGUgVHJlYXRtZW50IG9mIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODU0NzksMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpBc2lhbiBBbmNlc3RyeSwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsQSBjbGluaWNhbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhY290aWFtaWRlIGluIGluZGlhbiBhZHVsdCBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgZHlzcGVwc2lhLXBvc3QgcHJhbmRpYWwgZGlzdHJlc3Mgc3luZHJvbWUsSGV0ZXJvIEdyb3VwLEludGVydmVudGlvbmFsLDI1NjY5MywyMDE2LTAzLTI2IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsRWZmaWNhY3kgb2YgbW9zYXByaWRlIHBsdXMgZXNvbWVwcmF6b2xlIGNvbWJpbmF0aW9uIHRoZXJhcHkgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzODQzNzEsMjAxOS0wNy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLEludmVzdGlnYXRpb24gb2YgdGhlIEVmZmljYWN5IG9mIEVzb21lcHJhem9sZSBmb3IgOCBXZWVrcyB0byB0aGUgUHJvdG9uIFBvbXAgSW5oaWJpdG9yIChQUEkpLVJlc2lzdGFudCBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBQYXRpZW50cyxOYXRpb25hbCBIb3NwaXRhbCBPcmdhbml6YXRpb24sSW50ZXJ2ZW50aW9uYWwsMTU5MjI1LDIwMTMtMDgtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyb3hpbmRvbGUsNDI3NCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gb3Blbi1sYWJlbCB0cmlhbCB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHJveGluZG9sZSBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsNDg4MzksMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLE5ldXJvcGF0aHksNjc4LFhFTk9YLFhFTk9YIJYgRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiBpbiBSZWR1Y2luZyB0aGUgTmV1cm90b3hpY2l0eSBvZiB0aGUgT3hhbGlwbGF0aW4gKyA1LUZVL0xWIENoZW1vdGhlcmFweSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MDcsMjAwMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHhhbGlwcm9kZW4sNDQ3NCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLE5ldXJvdG94aWNpdHkgZHJ1Zy1pbmR1Y2VkLDEwODksbnVsbCxBbiBleHBsb3JhdG9yeSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgeGFsaXByb2RlbiBpbiBlbGltaW5hdGluZyBjaGVtb3RoZXJhcHktaW5kdWNlZCBuZXVyb3BhdGh5IGluIHBhdGllbnRzIHdpdGggY29sb3JlY3RhbCBjYW5jZXIsU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQ1ODA4LDIwMDctMDItMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxOZXVyb3RveGljaXR5IGRydWctaW5kdWNlZCwxMDg5LG51bGwsRXZhbHVhdGlvbiBvZiB0aGUgRWZmaWNhY3kgb2YgWGFsaXByb2RlbiAoU1ItNTc3NDZBKSBpbiBQcmV2ZW50aW5nIHRoZSBOZXVyb3RveGljaXR5IG9mIE94YWxpcGxhdGluLzVGVS9MViBDaGVtb3RoZXJhcHksU2Fub2ZpIFNBLEludGVydmVudGlvbmFsLDQxMzcwLDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGZvdXItd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0IG9mIHN1YmN1dGFuZW91cyBzdW1hdHJpcHRhbiBvbiB0aGUgc2FmZXR5LCBwaGFybWFjb2R5bmFtaWNzIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTY3LDE5OTYtMDItMDcgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQW4gT3Blbi1MYWJlbCwgTXV0aWNlbnRlciwgUG9zdC1NYXJrZXRpbmcgU3VydmVpbGxhbmNlIFN0dWR5IFRvIEV2YWx1YXRlIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgU3VtYXRyaXB0YW4gSW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSBhbmQgQ2x1c3RlciBIZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3Mzc5NiwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxOZXVyb3BlcHRpZGVzIGluIHRoZSBIdW1hbmUgSW50cmEtIG9nIEV4dHJhY2VyZWJyYWwgQ2lyY3VsYXRpb24sRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCw1NzkyMiwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkEgTXVsdGljZW50ZXIsIE9wZW4tbGFiZWwgVHJpYWwgb24gdGhlIGVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgU3VtYXRyaXB0YW4gaW4gQ2x1c3RlciBIZWFkYWNoZSIsQ2hyaXN0aWFuLUFsYnJlY2h0cy1Vbml2ZXJzaXR5IEtpZWwsSW50ZXJ2ZW50aW9uYWwsMTA3OTc2LDE5OTgtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTWlncmFpbmUgVHJlYXRtZW50IFNhdGlzZmFjdGlvbiBXaXRoIFRyZXhpbWV0IFZlcnN1cyBDb25jb21pdGFudCBUd28gQWxldmUgYW5kIEltaXRyZXgsV2VzbGV5IEhlYWRhY2hlIENsaW5pYyxJbnRlcnZlbnRpb25hbCw4MTU2MiwyMDA5LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgdHdvLWF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBkZXRlcm1pbmUgaWYgbmFyYXRyaXB0YW4gd2FzIGFibGUgdG8gdHJlYXQgbWlncmFpbmUgaGVhZGFjaGVzIGluIHN1YmplY3RzIHdpdGggYSBoaXN0b3J5IG9mIHBvb3IgcmVzcG9uc2UgdG8gc3VtYXRyaXB0YW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcyMTIsMTk5Ny0wOS0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHR3by1hdHRhY2ssIGNyb3NzLW92ZXIgb3V0cGF0aWVudCBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSwgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIG9yYWwgc3VtYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBpbiBwYXRpZW50cyBzdXNjZXB0aWJsZSB0byBoZWFkYWNoZSByZWN1cnJlbmNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTk3LDE5OTUtMDktMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxTQU1TLCJBIHByb3NwZWN0aXZlLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gZm9yIHRoZSBwcmV2ZW50aW9uIG9mIGFjdXRlIG1vdW50YWluIHNpY2tuZXNzIChBTVMpIixVbml2ZXJzaXR5IG9mIFRlaHJhbixJbnRlcnZlbnRpb25hbCw2NjM0MCwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE5ldXJvcGVwdGlkZXMgaW4gdGhlIEh1bWFuZSBJbnRyYS0gb2cgRXh0cmFjZXJlYnJhbCBDaXJjdWxhdGlvbixEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDU3OTIyLDIwMDctMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRoZSBFZmZlY3Qgb2YgU3VtYXRyaXB0YW4gYW5kIFBsYWNlYm8gSW5qZWN0aW9uIG9uIENpbG9zdGF6b2wgSW5kdWNlZCBIZWFkYWNoZSxEYW5pc2ggSGVhZGFjaGUgQ2VudGVyLEludGVydmVudGlvbmFsLDMyODQ4MCwyMDE3LTExLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBvc3QtYXBwcm92YWwgc3R1ZHkgb2YgWkVNQlJBQ0UgU3ltVG91Y2goc3VtYXRyaXB0YW4gaW5qZWN0aW9uKWZvciB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIG1pZ3JhaW5lIGhlYWRhY2hlIixQcm9taXVzIFBoYXJtYSBMTEMsSW50ZXJ2ZW50aW9uYWwsMzE5NTQ5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQ29tcGFyaXNvbiBvZiBzdW1hdHJpcHRhbiBhbmQgcHJvcG9mb2wgVlMgU3VtYXRyaXB0YW4gYW5kIHBsYWNlYm8gaW4gYWN1dGUgbWlncmFpbmUsU2hhaGlkIFNhZG91Z2hpIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDI5Mzg4MSwyMDE0LTA5LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCBTdHVkeSBvZiBhIFNlY29uZCAxMDAgbWcgT3JhbCBEb3NlIG9mIEdSNDMxNzVDIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgYSBNaWdyYWluZSBBdHRhY2sgYW5kIG9mIGEgRnVydGhlciAxMDAgbWcgRG9zZSBpbiBUcmVhdGluZyBIZWFkYWNoZSBSZWN1cnJlbmNlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MjQ4MywxOTkwLTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBEb3VibGUtQmxpbmQgU3R1ZHkgdG8gQ29tcGFyZSBPcmFsIEdSLTQzMTc1LUMgV2l0aCBPcmFsIENhZmVyZ290IChFcmdvdGFtaW5lICsgQ2FmZmVpbmUpIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTA4NjQsMTk4OS0wMS0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIk9wZW4sIEFkZGl0aW9uYWwgVHJlYXRtZW50IFdpdGggR1I0MzE3NUMgYnkgU3ViY3V0YW5lb3VzIEluamVjdGlvbiBmb3IgUGF0aWVudHMgUGFydGljaXBhdGluZyBpbiBQcm90b2NvbCBTMkJUMDIiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTUwODU5LDE5ODgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IE9mIFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSBJbmplY3Rpb24gS2l0IEluIFBhdGllbnRzIFdpdGggTWlncmFpbmUgb3IgQ2x1c3RlciBIZWFkYWNoZSBJbiBKYXBhbixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDQzLDIwMDYtMDYtMjAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgYW4gQXV0by1pbmplY3RvciBCZWluZyBVc2VkIHRvIFRyZWF0IGEgTWlncmFpbmUgQXR0YWNrLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEzNzQ1LDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IG9mIEVmZmVjdHMgb2YgTWV0b2Nsb3ByYW1pZGUgVmVyc3VzIFN1bWF0cmlwdGFuIG9uIE1pZ3JhaW5lIEhlYWRhY2hlLElzZmFoYW4gVW5pdmVyc2l0eSBvZiBtZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDExMDQwNywyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBDb21wYXJhdGl2ZSwgRG91YmxlLWJsaW5kLCBNdWx0aWNlbnRlciwgUGxhY2Viby1jb250cm9sbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBvZiBab2xtaXRyaXB0YW4gYW5kIFN1bWF0cmlwdGFuIGluIFBhdGllbnRzIHdpdGggTWlncmFpbmUiLENlbnRyZSBIb3NwaXRhbGllciBVbml2ZXJzaXRhaXJlIGRlIFJhbmd1ZWlsLEludGVydmVudGlvbmFsLDExMDEyNSwyMDAwLTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgZGljbG9mZW5hYyB2ZXJzdXMgc3VtYXRyaXB0YW4gaW4gbWlncmFpbmUgcGF0aWVudHMiLEdsYXhvIEdyb3VwIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDYwODgsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRTTSxEcnVnIGFuZCBOb24tRHJ1ZyBUcmVhdG1lbnQgT2YgU2V2ZXJlIE1pZ3JhaW5lLE9oaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDI3NzMsMjAwMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHphbG9zcGlyb25lLDQ3MTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHphbG9zcGlyb25lLCBhIHBvdGVudGlhbCB0cmVhdG1lbnQgZm9yIGFueGlldHkgZGlzb3JkZXIiLEFtZXJpY2FuIEhvbWUgUHJvZHVjdHMgSG9sZGluZ3MgKFVLKSBMdGQsSW50ZXJ2ZW50aW9uYWwsNTI1MzMsMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixDbHVzdGVyIGhlYWRhY2hlLDczLFpJTkNILEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIGlzIEVmZmVjdGl2ZSBBbmQgV2VsbCBUb2xlcmF0ZWQgSW4gQWN1dGUgQ2x1c3RlciBIZWFkYWNoZSxBc3RyYVplbmVjYSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQzNTE1LDIwMDMtMDktMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNQVRSSVgoTWlncmFpbmVyIEFzc2VzcyBUUmlwdGFuZSBlWGFtaW5hdGlvbiksVW5pdmVyc2l0eSBvZiBUc3VrdWJhLEludGVydmVudGlvbmFsLDEzMjc4NSwyMDEwLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zcy1vdmVyLCBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcyNjksMjAwNy0wNi0xMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIFBhdGllbnQgUHJlZmVyZW5jZSBTdHVkeSBvZiBGcm92YXRyaXB0YW4gVmVyc3VzIFpvbG1pdHJpcHRhbiBmb3IgVGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxMYWJvcmF0b3JpbyBHdWlkb3R0aSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE2OTYyLDIwMDctMDYtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxlbHRvcHJhemluZSw1MDI0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCwiQSBwaXZvdGFsLCBwaGFzZSBJSUkgc3R1ZHkgb2YgZWx0b3ByYXppbmUgaW4gYWR1bHRzIHdpdGggYXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciAoQURIRCkiLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwzMjE2MTEsbnVsbCxQbGFubmVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLE1vdmVtZW50IGRpc29yZGVyLDM2OCxudWxsLEEgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBFbHRvcHJhemluZSBIQ2wgZm9yIFRyZWF0aW5nIExldm9kb3BhLWluZHVjZWQgRHlza2luZXNpYSBpbiBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwyMjkyNjksMjAxNS0wNS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU3R1ZHkgb2YgUml6YXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBBdHRhY2tzIG9mIFBvc3QtVHJhdW1hdGljIEhlYWRhY2hlIGluIFVTIE1pbGl0YXJ5IFRyb29wcyAoTWF4YWx0KSxIZW5yeSBNIEphY2tzb24gRm91bmRhdGlvbiBmb3IgdGhlIEFkdmFuY2VtZW50IG9mIE1pbGl0YXJ5IE1lZGljaW5lLEludGVydmVudGlvbmFsLDc1MTM5LDIwMTEtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxyaXphdHJpcHRhbiw1MzI4LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBpbiBtaWdyYWluZSBwYXRpZW50cyxNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTU5MzIsMjAwMy0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFJFRlJFU0gsUlAtNTA2MyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLCJSZXZpdmEgUGhhcm1hY2V1dGljYWxzIEluYywgU3Jpc3RlayBDbGluaWNhbCBSZXNlYXJjaCIsSW50ZXJ2ZW50aW9uYWwsODMxODgsMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw3NzQwNSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBSSURFLEEgMTUtTW9udGggU3R1ZHkgZm9yIEFkdWx0cyBXaG8gSGF2ZSBCZWVuIERpYWdub3NlZCBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIEluY2FyY2VyYXRlZCxKYW5zc2VuIFNjaWVudGlmaWMgQWZmYWlycyxJbnRlcnZlbnRpb25hbCw2ODA0NSwyMDEwLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSGVhcnRBcmlRdWUsSGVhcnQgUmF0ZSBDaGFuZ2VzIGluIFNjaGl6b3BocmVuaWMgYW5kIEJpcG9sYXIgUGF0aWVudHMgVW5kZXIgdGhlIE1lZGljYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBRdWV0aWFwaW5lLFRhaWNodW5nIFZldGVyYW5zIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsNjM0MDksMjAwOS0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDQsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgQ29tcGFyaW5nIHRoZSBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBXaXRoIFRob3NlIG9mIFN0YW5kYXJkIG9mIENhcmUgb24gTm9uLUhETCBDaG9sZXN0ZXJvbCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgQmlwb2xhciBJIERpc29yZGVyIFdobyBIYXZlIE1ldGFib2xpYyBTeW5kcm9tZSxCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw0ODI4OCwyMDA5LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgUGxhY2Viby1Db250cm9sbGVkLCBDcm9zcy1PdmVyIFRyaWFsIG9mIEFyaXBpcHJhem9sZSIsTm9ydGggU3VmZm9sayBNZW50YWwgSGVhbHRoIEFzc29jaWF0aW9uLEludGVydmVudGlvbmFsLDM1NDU4LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFudGljb252dWxzYW50IE1vb2QgU3RhYmlsaXplcnMsIEFudGlwc3ljaG90aWMgRHJ1Z3MgYW5kIHRoZSBJbnN1bGluIFJlc2lzdGFuY2UgU3luZHJvbWUiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNDkxMCwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFQRVggMjQxLCJBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxMDYsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLENoaW5lc2UgRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhJ3MgT3B0aW1hbCBEeW5hbWljIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IFJlZ2ltZW4sU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM3NzY0LDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQm9keSBNYXNzIEluZGV4IChCTUkpIGFuZCBNZXRhYm9saWMgQ2hhbmdlcyBGb2xsb3dpbmcgU3dpdGNoIHRvIEFyaXBpcHJhem9sZSBGcm9tIE9sYW56YXBpbmUsIFJpc3Blcmlkb25lIGFuZCBRdWV0aWFwaW5lIixVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMyODgzLDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgT3B0aW1hbCBUcmVhdG1lbnQgZm9yIFRyZWF0bWVudC1yZXNpc3RhbnQgU2NoaXpvcGhyZW5pYSxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNzQ2MjAsMjAxNi0xMS0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVuaGFuY2luZyBSZWNvdmVyeSBpbiBFYXJseSBTY2hpem9waHJlbmlhLCJDZW50cmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLCBNYW5uaGVpbSIsSW50ZXJ2ZW50aW9uYWwsMjc0NjExLDIwMTctMDQtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQQUZJUDNfMVksRWZmZWN0aXZlbmVzcyBvZiBTZWNvbmQgR2VuZXJhdGlvbiBBbnRpcHN5Y2hvdGljcyBpbiBGaXJzdCBFcGlzb2RlIFBzeWNob3NpcyBQYXRpZW50czogT25lLVllYXIgRm9sbG93LVVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4NTQ3LDIwMTQtMDUtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KRXVyb3BlYW4gQW5jZXN0cnksMixQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3BlbiwgY3Jvc3NvdmVyLCByYW5kb21pemVkLCBzaW5nbGUgZG9zZSwgdHdvLXRyZWF0bWVudHMsIHR3by1wZXJpb2RzIGFuZCB0d28tc2VxdWVuY2VzIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHR3byBwaGFybWFjZXV0aWNhbCBwcmVwYXJhdGlvbnMgb2YgQXJpcGlwcmF6b2xlIDEwIG1nIHRhYmxldHMgaW4gaGVhbHRoeSBNZXhpY2FuIHBvcHVsYXRpb24gdW5kZXIgZmFzdGluZyBjb25kaXRpb25zIiwiSGV0bGFicyBNZXhpY28sIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwyMzE5MTksbnVsbCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUExBQ0lELENvbXBhcmlzb24gb2YgdHJlYXRtZW50IHdpdGggaW5oYWxlZCBsb3hhcGluZSBhbmQgYW4gaW5qZWN0ZWQgZHJ1ZyB0byB0cmVhdCBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEgb3IgYmlwb2xhciBkaXNvcmRlciBhbmQgd2hvIGFyZSBzZXJpb3VzbHkgYWdpdGF0ZWQsRmVycmVyIEludGVybmFjaW9uYWwgU0EsSW50ZXJ2ZW50aW9uYWwsMjI2NTM5LDIwMTQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSw3LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtYmxpbmQgVHJpYWwgV2l0aCBTaXggQW50aXBzeWNob3RpYyBEcnVncyBmb3IgU2NoaXpvcGhyZW5pYSIsQmVpamluZyBIdWktTG9uZy1HdWFuIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIwNjEyOSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxSZW1lZGlhdGlvbiBvZiBTY2hpem9waHJlbmlhIFNlbnNvcnkgR2F0aW5nIERlZmljaXQgV2l0aCBBcmlwaXByYXpvbGUsTmV3IE1leGljbyBWQSBIZWFsdGhjYXJlIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwxNzQ4MzIsMjAwMy0wOC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFkaGVyZW5jZSB0byBUcmVhdG1lbnQsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZSAxIChNSU5EMSkgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxMTI0LDIwMTQtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIFRyaXBsZSBUcmFjZXIgUEVUIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBEaWZmZXJlbnRpYWwgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gRCgyKSwgNS1IVCgyKSwgYW5kIDUtSFQoMUEpIFJlY2VwdG9yIE9jY3VwYW5jeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdHkgb2YgVG9yb250byxJbnRlcnZlbnRpb25hbCwxNDY2MTYsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDEyLXdlZWssIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgb2YgcGVyb3NwaXJvbmUgdmVyc3VzIGFyaXBpcHJhem9sZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzY2hpem9waHJlbmlhIGluIEphcGFuZXNlIHBhdGllbnRzIixLYW5zYWkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEyNTgxMywyMDEzLTAxLTEwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29udHJvbGxlZCBzdHVkeSBjb21wYXJpbmcgYXJpcGlwcmF6b2xlIGFuZCBvbGFuemFwaW5lIGluIHRoZSB0cmVhdG1lbnQgb2YgaW5kaXZpZHVhbHMgd2l0aCBzY2hpem9waHJlbmlhIGluIGFuIGlucGF0aWVudCBjbGluaWNhbCBzZXR0aW5nIiwiR292ZXJubWVudCBNZWRpY2FsIENvbGxlZ2UsIENoYW5kaWdhcmgiLEludGVydmVudGlvbmFsLDEyNDA4NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQXJpcGlwcmF6b2xlIE9yYWwgU29sdXRpb24gaW4gdGhlIFRyZWF0bWVudCBvZiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc3RpYyBEaXNvcmRlciwiT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLCBTaWNodWFuIE90c3VrYSBQaGFybWFjZXV0aWNhbCBDby4sIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzMxMDc1LDIwMTgtMDQtMDkgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIE5vdCBBcHBsaWNhYmxlLFBOQSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIG1hbmlhLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMDc5LDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQXJpcGlwcmF6b2xlIGluIExhdGUgTGlmZSBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzNDE3NSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBIDEyLVdlZWsgT3Blbi1MYWJlbCBUcmVhdG1lbnQgb2YgUmVmcmFjdG9yeSBCaXBvbGFyIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsMzM5MjAsMjAwNC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQWJpbGlmeSBUaGVyYXB5IGZvciBSZWR1Y2luZyBDb21vcmJpZCBTdWJzdGFuY2UgQWJ1c2UsQ3JlaWdodG9uIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMxMDUsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsVGhlIEV4YW1pbmF0aW9uIG9mIHRoZSBSZWxhdGlvbnMgd2l0aCBTbGVlcCBEaXN0dXJiYW5jZSBhbmQgdGhlIFByb2dub3NpcyBmb3IgdGhlIEJpcG9sYXIgRGlzb3JkZXIsU3QgTWFyaWFubmEgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTM4Mjk0LDIwMTItMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiRWZmZWN0aXZlbmVzcyBPZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIFRoZXJhcHkgSW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIERlcHJlc3Npb24gV2hvIERvIE5vdCBSZXNwb25kIFRvIE1vb2QgU3RhYmlsaXplcnM6IEEgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLCJLYW5zYWkgTWVkaWNhbCBVbml2ZXJzaXR5LCBVbml2ZXJzaXR5IG9mIE9jY3VwYXRpb25hbCAmIEVudmlyb25tZW50YWwgSGVhbHRoIixJbnRlcnZlbnRpb25hbCwxMjcxMTYsMjAxMi0wOC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEVmZmVjdCBvZiBhZGRpbmcgYXJpcGlwcmF6b2xlIHRvIGxpdGhpdW0gdGhlcmFweSBpbiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgd2l0aCBCUEQsVGVocmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwxMjU2MjUsMjAxMS0wOC0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGVydmFzaXZlIERldmVsb3BtZW50YWwgRGlzb3JkZXJzLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw1MDA3NCwyMDA5LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsbnVsbCwiQ29tcGFyYXRpdmUgc3R1ZHkgb2YgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGRydWdzICIiTWlyaXVtIFRhYmxldHMgMTAgbWciIiAoIiJTaW50b24gU3BhaW4gU0wiIiwgb3duZXIgb2YgdGhlIHJlZ2lzdHJhdGlvbiBjZXJ0aWZpY2F0ZSBvZiBKU0MgIiJHcmluZGVrcyIiLCBMYXR2aWEpIGFuZCBBYmlsaWZ5IFRhYmxldHMgMTAgbWcgKCIiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ29tcGFueSBNYW51ZmFjdHVyaW5nIiIgUHVlcnRvIFJpY28pIiwiR3JpbmRla3MsIFB1Ymxpc2thIEFrY2lqdSBTYWJpZWRyaWJhIixJbnRlcnZlbnRpb25hbCwyNDcwNDQsMjAxNS0xMS0yNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBNYW5pYSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBCaXBvbGFyIERpc29yZGVyLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjQ1NSwyMDAzLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1hbmlhLDE5NTcsbnVsbCxBcmlwaXByYXpvbGUgZWZmZWN0IGluIHRoZSB0cmVhdG1lbnQgb2YgbWFuaWEsVW5pdmVyc2l0eSBvZiBTb2NpYWwgV2VsZmFyZSBhbmQgUmVoYWJpbGl0YXRpb24gU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMzAxOTA0LDIwMTUtMTAtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsQVdBUkUgMjc0LFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IG9mIE9uY2Utd2Vla2x5IE9yYWwgQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIFRvdXJldHRlJ3MgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MDM0MSwyMDExLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxEaXNjb250aW51ZWQsRFgsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsVG93YXJkcyBOZXVyb2Jpb2xvZ3ktYmFzZWQgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgQWZmZWN0aXZlIERpc29yZGVycyxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQwNTcsMjAxNi0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksRGlzY29udGludWVkLERYLEFnaXRhdGlvbiwzNjA5LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLExvbmctVGVybSBBZG1pbmlzdHJhdGlvbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgYXMgYW4gQWRqdW5jdGl2ZSBUaGVyYXB5IGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyNTkxLDIwMDktMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIDEyLXdlZWsgcHJvc3BlY3RpdmUgb3Blbi1sYWJlbCBtdWx0aWNlbnRlciBzdHVkeSBmb3IgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggY2hyb25pYyBvciByZWN1cnJlbnQgbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciB3aXRoIEFyaXBpcHJhem9sZSBhdWdtZW50YXRpb24sIkRvbmdndWsgVW5pdmVyc2l0eSwgS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscywgU29vbmNodW5oeWFuZyBVbml2ZXJzaXR5LCBTdW5na3l1bmt3YW4gVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMTY0MjAzLG51bGwsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDNiIENsaW5pY2FsLEMzQiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLCJBIFBoYXNlIElJSWIsIE9wZW4tTGFiZWwsIFNhZmV0eSBhbmQgRWZmaWNhY3kgU3R1ZHkgb2YgUm90aWdvdGluZSBhcyBBZGQtT24gVGhlcmFweSBXaXRoIExvdyBEb3NlcyBvZiBQcmFtaXBleG9sZSBvciBSb3Bpbmlyb2xlIGluIFBhdGllbnRzIFdpdGggQWR2YW5jZWQgUGFya2luc29uJ3MgRGlzZWFzZSIsIkV2ZXIgUHJvZ3Jlc3NpbmcgU3lzdGVtIFB0ZSBMdGQsIFVDQiBQaGFybWEgR21iSCIsSW50ZXJ2ZW50aW9uYWwsOTc0ODIsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFJPQURNQVAsRWZmZWN0IG9mIFJvdGlnb3RpbmUgb24gTW90b3IgU3ltcHRvbXMgaW4gUGF0aWVudHMgV2l0aCBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIChQRCkgV2l0aCBNb3RvciBGbHVjdHVhdGlvbnMgYW5kIFN5bXB0b21zIG9mIEdhc3Ryb2ludGVzdGluYWwgRHlzZnVuY3Rpb24sVUNCIFBoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsODUwNTMsMjAxMi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFRyaWFsIHRvIEFzc2VzcyBQYXJraW5zb24ncyBEaXNlYXNlIChQRCkgU3ltcHRvbSBDb250cm9sIHRvIEZvdXIgRG9zZXMgb2YgUm90aWdvdGluZSBpbiBhIFRyYW5zZGVybWFsIFBhdGNoLFVDQiBTQSxJbnRlcnZlbnRpb25hbCw3MTIxLDIwMDctMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tbGFiZWwsIEV4dGVuc2lvbiBUcmlhbCB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIExvbmctVGVybSBUcmVhdG1lbnQgb2YgUm90aWdvdGluZSBpbiBTdWJqZWN0cyBXaXRoIElkaW9wYXRoaWMgUGFya2luc29uJ3MgRGlzZWFzZSIsIlNjaHdhcnogUGhhcm1hIFNwQSwgVUNCIEJJT1NDSUVOQ0VTIEdtYkgsIFVDQiBTQSIsSW50ZXJ2ZW50aW9uYWwsNjY2MiwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBmb3IgU1BNLTk2MiBpbiBFYXJseSBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjExNiwyMDA3LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsUFJFRkVSLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiBwYXRpZW50cyB3aXRoIGFkdmFuY2VkLXN0YWdlIGlkaW9wYXRoaWMgUGFya2luc29uJ3MgZGlzZWFzZSIsVUNCIFNBLEludGVydmVudGlvbmFsLDUxNTQwLDIwMDQtMTAtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSB0byBDb21wYXJlIHRoZSBBZGhlc2l2ZW5lc3Mgb2YgdHdvIERpZmZlcmVudCBSb3RpZ290aW5lIFBhdGNoZXMgVXNlZCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXJraW5zb24ncyBEaXNlYXNlLFVDQiBCSU9TQ0lFTkNFUyBHbWJILEludGVydmVudGlvbmFsLDM1MDUxMSwyMDE0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsRE9MT1JFUyxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgb2YgUm90aWdvdGluZSBvbiBQYXJraW5zb24ncyBEaXNlYXNlLWFzc29jaWF0ZWQgUGFpbixVQ0IgQklPU0NJRU5DRVMgR21iSCxJbnRlcnZlbnRpb25hbCwxNjEzNjIsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsRU5DT1JFLEVmZmVjdHMgb2YgTmV1cHJvIG9uIENhcmRpb3Zhc2N1bGFyIE9ic2VydmF0aW9ucyBpbiBQYXRpZW50cyBXaXRoIFJlc3RsZXNzIExlZ3MgU3luZHJvbWUsVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsODE3MDcsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxSZXN0bGVzcyBsZWdzIHN5bmRyb21lLDE3NzQsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgTmV1cHJvIGZvciB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBpZGlvcGF0aGljIHJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUgb3IgV2lsbGlzLUVrYm9tIGRpc2Vhc2UiLFVDQiBTQSxJbnRlcnZlbnRpb25hbCwxMzM0NDQsMjAxMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksRGlzY29udGludWVkLERYLEZpYnJvbXlhbGdpYSwyNTI3LG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIHRvIFByb3ZlIFRoYXQgVHdvIFJvdGlnb3RpbmUgUGF0Y2hlcyBIYXZlIEVxdWl2YWxlbnQgSW5ncmVkaWVudCBEZWxpdmVyeSB0byB0aGUgQm9keSxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTI4NzgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsRGVwcmVzc2lvbiw5MyxudWxsLDEyIFdlZWsgU2FmZXR5IFRyaWFsIG9mIEZsaWJhbnNlcmluIGluIERlcHJlc3NlZCBXb21lbiBUYWtpbmcgYW4gU1NSSSBvciBTTlJJIFdpdGggRGVjcmVhc2VkIFNleHVhbCBEZXNpcmUgYW5kIERpc3RyZXNzLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsNjMxODEsMjAxMC0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxmbGliYW5zZXJpbiw4NTQ5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxQaGFybWFjb2tpbmV0aWNzIG9mIEZsaWJhbnNlcmluIGluIFBvc3RtZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKSxTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDY5NTE1LDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxmbGliYW5zZXJpbiw4NTQ5LFNhZmV0eSxZLFksTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEEgcmVhbC13b3JsZCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGJlZHRpbWUgYWRtaW5pc3RyYXRpb24gb2YgQWRkeWkgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmlzayBvZiBzeW5jb3BlIGFuZCBzZXZlcmUgaHlwb3RlbnNpb24gaW4gaGVhbHRoeSBwcmVtZW5vcGF1c2FsIHdvbWVuLFNwcm91dCBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzc0NDIyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBlbGV0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDExNjE5NiwyMDAzLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCBzdHVkeSBvbiB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIHZlcnN1cyB6b2xtaXRyaXB0YW4gaW4gbWlncmFpbmUiLEltcGVyaWFsIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExNTE5MSwyMDAzLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWZpbmRpbmcgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEwOTY3MCwyMDAwLTA0LTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVBUkwgMywiTHVyYXNpZG9uZSBIQ0wgLSBBIDYtV2VlaywgUGhhc2UgSUlJIFN0dWR5IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU2NoaXpvcGhyZW5pYSIsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTY3MSwyMDA4LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMIDMgRXh0ZW5zaW9uLEx1cmFzaWRvbmUgSENsLSBBIExvbmctVGVybSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIFNjaGl6b3BocmVuaWEsIkZVTkRBQ0lPTiBFU1BBTk9MQSBQQVJBIEVMIERFU0FSUk9MTE8gREUgTEEgTkVVUk9NRVRSSUEsIFN1bWl0b21vIENoZW1pY2FsIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDM1NjcwLDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEVBUkwgMSxMdXJhc2lkb25lIEhDbDogQSBQaGFzZSBJSUkgU3R1ZHkgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBTY2hpem9waHJlbmlhLCJGVU5EQUNJT04gRVNQQU5PTEEgUEFSQSBFTCBERVNBUlJPTExPIERFIExBIE5FVVJPTUVUUklBLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCwzNTQ2OCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDb21wYXJpc29uIG9mIFN0dWR5IERydWcgV2l0aCBQbGFjZWJvIGFuZCBIYWxvcGVyaWRvbCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNTAyNywyMDAyLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSA2LXdlZWsgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTHVyYXNpZG9uZSBIQ0wgaW4gQWN1dGVseSBQc3ljaG90aWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEJ1a3dhbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzMjYwNCwyMDE4LTA0LTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBlZGlhdHJpYyBTY2hpem9waHJlbmlhIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDgxODQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEx1cmFzaWRvbmUgTG93LURvc2UgLSBIaWdoLURvc2UgU3R1ZHksU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDExODQ1NiwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLEF1dGlzbSw0MjMsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBBdXRpc20gU3R1ZHksU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE0ODE5OCwyMDEzLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBsdXJhc2lkb25lIGFzIGFkanVuY3RpdmUgdGhlcmFweSB3aXRoIGxpdGhpdW0gb3IgdmFscHJvYXRlIGZvciB0aGUgdHJlYXRtZW50IG9mIGJpcG9sYXIgSSBkZXByZXNzaW9uIixDZXBoYWxvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTgxNjQ5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGZyb3ZhdHJpcHRhbiw5MDIyLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEVmZmVjdGl2ZW5lc3MgQW5kIFNhZmV0eSBPZiBGcm92YXRyaXB0YW4gRm9yIFRoZSBNYW5hZ2VtZW50IChBY3V0ZSBUcmVhdG1lbnQpIE9mIE1lbnN0cnVhbCBNaWdyYWluZSxFbmRvIEhlYWx0aCBTb2x1dGlvbnMgSW5jLEludGVydmVudGlvbmFsLDU1NTIwLDIwMDUtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQ29tcGFyaXNvbiBPZiBUd28gQW50aS1EZXByZXNzYW50IERydWdzIEluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBKYW1tdSIsSW50ZXJ2ZW50aW9uYWwsMzI4Mjc1LDIwMTUtMTItMTQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsU2FmZXR5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgU3R1ZHkgb2YgVmlsYXpvZG9uZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIyODgwMSwyMDE1LTA1LTAyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmlsYXpvZG9uZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDIyMjkxNCwyMDE1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEEgY2xpbmljYWwgdHJpYWwgc3R1ZHkgb2YgdHdvIGRydWdzIFZpbGF6b2RvbmUgSHlkcm9jaGxvcmlkZSA0MCBtZyBvZCBhbmQgRmx1b3hldGluZSBIeWRyb2NobG9yaWRlIDIwIG1nIG9kIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlcnMsTVNOIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTY2OTQxLDIwMTQtMDEtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIG11bHRpbmF0aW9uYWwsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MzAsMTk5OS0xMS0xMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUiLFJveWFsIE5vcnRoIFNob3JlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDExNDE0NywyMDAzLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgcGhhc2UgSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSB2b2x1bnRlZXJzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODM0LDIwMDItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTcsMTk5OC0wOS0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gYXNzb2NpYXRlZCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MTEsMjAwMi0xMC0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgZGVzaWduIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc3OSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY3Jvc3NvdmVyIHRyaWFsIHRvIGFzc2VzcyBwYXRpZW50IHByZWZlcmVuY2UgZm9yIGFsbW90cmlwdGFuIG9yIHJpemF0cmlwdGFuIGZvciB0aGUgdHJlYXRtZW50IG9mIG1vZGVyYXRlL3NldmVyZSBtaWdyYWluZSBhdHRhY2tzIixIb3NwaXRhbCBHZW5lcmFsIFlhZ/xlLEludGVydmVudGlvbmFsLDY2NjEzLDIwMDYtMDMtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCByZXRyb3NwZWN0aXZlIHN0dWR5IG9mIGFsbW90cmlwdGFuIHZlcnN1cyByaXphdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIGluIFNwYWluIixVbml2ZXJzaXR5IG9mIFZhbGVuY2lhLEludGVydmVudGlvbmFsLDExMzg5MCwyMDAzLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtYmxpbmQsIE11bHRpY2VudGVyLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFJhbmRvbWl6ZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQWxtb3RyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNdWx0aXBsZSBNaWdyYWluZSBBdHRhY2tzIixTZXJ2aWNpbyBkZSBOZXVyb2xvZ+1hLEludGVydmVudGlvbmFsLDEwOTU0MCwyMDAwLTA3LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxMWS0zMzQzNzAsMTQxNzgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxNaWdyYWluZSwyMTAsbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgY2xpbmljYWwgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgTFktMzM0MzcwIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggYWN1dGUgbWlncmFpbmUiLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDc2MzIzLDIwMDEtMTAtMTMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNiwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU3R1ZHkgdG8gSW52ZXN0aWdhdGUgUHJ1Y2Fsb3ByaWRlIHZlcnN1cyBQb2x5ZXRoeWxlbmUgR2x5Y29sIDMzNTAgb24gQ29sb24gQWN0aXZpdHksU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw5NTAwOCwyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsSW1wcm92aW5nIEJvd2VsIFByZXBhcmF0aW9uIGZvciB0aGUgQ29sb24gQ2Fwc3VsZSxRdWVlbidzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsODk4MzcsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQW4gRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgaW4gUGFydGljaXBhbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24oUmVzb2xvciksSm9obnNvbiAmIEpvaG5zb24gUGhhcm1hY2V1dGljYWwgUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBMTEMsSW50ZXJ2ZW50aW9uYWwsNjYxMDEsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgc2luZ2xlIGRvc2UsIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBwcnVjYWxvcHJpZGUgaW4gcGVkaWF0cmljIHBhdGllbnRzIHdpdGggZnVuY3Rpb25hbCBmZWNhbCByZXRlbnRpb24gKEZGUikgcHJ1Y2Fsb3ByaWRlIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDU4OTYxLDIwMDktMDYtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJFZmZlY3Qgb2YgUEVHLCBCaXNhY29keWwgYW5kIFBydWNhbG9wcmlkZSBvbiBDb2xvbmljIE1vdGlsaXR5IGluIEhlYWx0aHkgU3ViamVjdHMiLCJVbml2ZXJzaXR5IEhvc3BpdGFsLCBHYXN0aHVpc2JlcmciLEludGVydmVudGlvbmFsLDMxMjM5NiwyMDEyLTEyLTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LFBSVUNBTE9DLEEgQ2xpbmljYWwgU3R1ZHkgdG8gRXZhbHVhdGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBQcnVjYWxvcHJpZGUgaW4gSW5kaWFuIEFkdWx0IFBhdGllbnRzIFdpdGggQ2hyb25pYyBGdW5jdGlvbmFsIENvbnN0aXBhdGlvbixIZXRlcm8gR3JvdXAsSW50ZXJ2ZW50aW9uYWwsMjc5MDEwLDIwMTYtMTEtMTQgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJSYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHBydWNhbG9wcmlkZSAoUmVzb2xvcikgaW4gcGF0aWVudHMgd2l0aCBvcGlvaWQtaW5kdWNlZCBjb25zdGlwYXRpb24iLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTkxMDAsMjAwOC0wNS0yMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSB0byBUcmVhdCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDM4LDE5OTgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFIwOTM4NzcgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIElkaW9wYXRoaWMgQ29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg0MTQsMTk5Ni0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgcHJ1Y2Fsb3ByaWRlIGluIHBhdGllbnRzIHdpdGggY29uc3RpcGF0aW9uIGR1ZSB0byBzcGluYWwgY29yZCBpbmp1cnkiLEFhcmh1cyBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDExMjU3MSwyMDAyLTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sT3V0bGljZW5zZWQsT0wsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEVNRC0xMjgxMzAgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGFya2luc29uJ3MgRGlzZWFzZSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgTmV1cm9sb2dpY2FsIERpc29yZGVycyBhbmQgU3Ryb2tlLEludGVydmVudGlvbmFsLDYwNDUsMjAwMS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHNhcml6b3RhbiBoeWRyb2NobG9yaWRlLDE2NTY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixPdXRsaWNlbnNlZCxPTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBRERZLU8sIkFuIE9wZW4tTGFiZWwsIE11bHRpY2VudGVyLCBNdWx0aW5hdGlvbmFsLCBQaGFzZSBJSUkgRm9sbG93LVVwIFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBMb25nLVRlcm0gU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBTYXJpem90YW4gSENsIDEgbWcgYmlkIGluIFBhdGllbnRzIFdpdGggUGFya2luc29ucyBEaXNlYXNlIFN1ZmZlcmluZyBGcm9tIFRyZWF0bWVudC1Bc3NvY2lhdGVkIER5c2tpbmVzaWEiLE1lcmNrIEtHYUEsSW50ZXJ2ZW50aW9uYWwsMTQzMDc2LDIwMDUtMDktMDggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBpbG90IHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGFmdGVyIG11bHRpcGxlIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgRFUtMTI3MDkwIHRvIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLCB1c2luZyAxMUMtcmFjbG9wcmlkZSBieSBtZWFucyBvZiBwb3NpdGlvbiBlbWlzc2lvbiB0b21vZ3JhcGh5IChQRVQpIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNDE0NjMsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSxTYWZldHksTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgQmlmZXBydW5veCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ5MjUsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBDb21wYXJpbmcgdGhlIEFmZmVjdCBvZiBCaWZlcHJ1bm94IFZlcnN1cyBPbGFuemFwaW5lIG9uIFdlaWdodCBEdXJpbmcgdGhlIFRyZWF0bWVudCBvZiBPdXRwYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzQ4MzgsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEJpZmVwcnVub3ggaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLFNvbHZheSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM0NDk5LDIwMDUtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxUbyBFdmFsdWF0ZSB0aGUgSW1wYWN0IG9mIFRyZWF0bWVudCBJbnRlcnJ1cHRpb24gb24gUmUtaW5pdGlhdGlvbiBvZiBCaWZlcHJ1bm94LFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCwzNDYzNiwyMDA1LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsVk1MLTY3MCwxOTk1NSxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLE1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLDM2OSxudWxsLCJBIHBoYXNlIElJYSwgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBWTUwtNjcwIGluIHBhdGllbnRzIHdpdGggc2V4dWFsIGR5c2Z1bmN0aW9uIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw1NTg3OCwyMDAyLTA1LTIyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsUGFya2luc29ucyBkaXNlYXNlLDI1NSxUaGUgVmVybWVlciBzdHVkeSxQYXJkb3BydW5veCBhbmQgcHJhbWlwZXhvbGUgZm9yIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIGVhcmx5IFBhcmtpbnNvbiBkaXNlYXNlLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw2ODA4LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBc2NlbmRpbmcgRG9zZSBUb2xlcmFiaWxpdHkvU2FmZXR5IG9mIFNMVi0zMDggZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGFya2luc29uJ3MgRGlzZWFzZSxBYmJvdHQgSGVhbHRoY2FyZSBQcm9kdWN0cyBCVixJbnRlcnZlbnRpb25hbCw2MTM2LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixIQVJNT05ZLCJBIHBoYXNlIElJSSwgcGl2b3RhbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHksIGV2YWx1YXRpbmcgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcGltYXZhbnNlcmluIGZvciB0aGUgdHJlYXRtZW50IG9mIGhhbGx1Y2luYXRpb25zIGFuZCBkZWx1c2lvbnMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhLXJlbGF0ZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTQ3MTAsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQW4gSW52ZXN0aWdhdGlvbiBvZiB0aGUgU2FmZXR5IGFuZCBVdGlsaXR5IG9mIFRyZXhpbWV0IGluIHRoZSBUcmVhdG1lbnQgb2YgTWVuc3RydWFsIE1pZ3JhaW5lLFVuaXZlcnNpdHkgb2YgQWxhYmFtYSBhdCBCaXJtaW5naGFtLEludGVydmVudGlvbmFsLDg2NjM4LDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsVHJleGltZXQgaW4gdGhlIFByZXZlbnRpb24gYW5kIE1vZGlmaWNhdGlvbiBvZiBEaXNlYXNlIFByb2dyZXNzaW9uIGluIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDc1MTIxLDIwMTAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1MYWJlbCwgUmFuZG9taXplZCwgVGhyZWUtUGVyaW9kIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSBTdW1hdHJpcHRhbiBQaGFybWFjb2tpbmV0aWNzIGZvciBhIFRyZXhpbWEgKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSAvIE5hcHJveGVuIFNvZGl1bSkgVGFibGV0IEZvbGxvd2VkIGJ5IEltaXRyZXggKFN1bWF0cmlwdGFuIFN1Y2NpbmF0ZSkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNTA3NjAsMjAwOC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUaGUgU2FmZXR5IE9mIENvbWJvIEZvcm11bGF0aW9uIEluIFRoZSBUcmVhdG1lbnQgT2YgTXVsdGlwbGUgRXBpc29kZXMgT2YgQWN1dGUgTWlncmFpbmUgT3ZlciAxMiBNb250aHMsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDc3LDIwMDQtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsTWVuc3RydWFsIE1pZ3JhaW5lIFRyZWF0bWVudCBXaXRoIFRyZXhpbWV0IChGb3JtZXJseSBLbm93biBhcyBUcmV4aW1hKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDE1LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEVmZmVjdHMgb2YgQnVzcGFyIG9uIERlcHJlc3NpdmUgU3ltcHRvbSBJbXByb3ZlbWVudCBhbmQgTmV1cm9wcm90ZWN0aW9uIGluIFBhdGllbnRzIFdpdGggQW54aWV0eSBEaXNvcmRlcixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDg1NDUwLDIwMTItMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCwiQSAxMi13ZWVrLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IG9mIGJ1c3Bpcm9uZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhbnhpZXR5IGluIG9waW9pZC1kZXBlbmRlbnQgcGF0aWVudHMiLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw3MjEzNiwyMDA0LTAyLTI5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLE1lYXN1cmVtZW50IG9mIHRoZSBIaXBwb2NhbXBhbCBUaGV0YSBSaHl0aG0gRnJvbSB0aGUgT3V0ZXIgRWFyIENhbmFsLFVuaXZlcnNpdHkgb2YgTWFuaXRvYmEsSW50ZXJ2ZW50aW9uYWwsMzgxMTQ4LDIwMTktMDYtMzAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEEgUGlsb3QgU3R1ZHkgb2YgQnVzcGlyb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIEFueGlldHkgaW4gWW91dGggV2l0aCBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMjkyNzEsMjAxOC0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLE9jY3VwYW5jeSBvZiBEb3BhbWluZSBEMyBhbmQgRDIgUmVjZXB0b3JzIGJ5IEJ1c3Bpcm9uZTogQSBbKDExKUNdLSgrKS1QSE5PIFBFVCBTdHVkeSBpbiBIdW1hbnMsVW5pdmVyc2l0eSBvZiBUb3JvbnRvLEludGVydmVudGlvbmFsLDI0OTQ4MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsQnVzcGlyb25lIGluIEFESEQsU2hhaGlkIEJlaGVzaHRpIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTIzNzM2LDIwMDctMDItMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLCJBIFNpbmdsZS1Eb3NlLCBQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIE9iZXNlIFBlZGlhdHJpYyBTdWJqZWN0cyA2IHRvIDExIFllYXJzIG9mIEFnZSIsRWlzYWkgQ28gTHRkLEludGVydmVudGlvbmFsLDIyNTI2OCwyMDE1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCwiQSBNdWx0aWNlbnRlciwgRG91YmxlLWJsaW5kLCBSYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCBQaWxvdCBTdHVkeSBvZiAxMi13ZWVrIER1cmF0aW9uIHRvIEFzc2VzcyB0aGUgU2hvcnQtdGVybSBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBMb3JjYXNlcmluIFBsdXMgVHdvIERvc2VzIG9mIEltbWVkaWF0ZS1yZWxlYXNlIFBoZW50ZXJtaW5lLUhDbCBDb21wYXJlZCBXaXRoIExvcmNhc2VyaW4gQWxvbmUgaW4gT3ZlcndlaWdodCBhbmQgT2Jlc2UgQWR1bHRzIixFaXNhaSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTYxMjMyLDIwMTMtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxSRVZJVkUsQSBTdHVkeSBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIENvbXBhcmlzb24gdG8gQWdvbWVsYXRpbmUgaW4gQWR1bHRzIFN1ZmZlcmluZyBGcm9tIE1ham9yIERlcHJlc3Npb24gV2l0aCBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIFByZXZpb3VzIE1lZGljYXRpb24sSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODMxMTksMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJSYW5kb21pemVkLCBQbGFjZWJvLWNvbnRyb2xsZWQsIER1bG94ZXRpbmUtcmVmZXJlbmNlZCBTdHVkeSBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIDE1IGFuZCAyMCBtZyBvZiBWb3J0aW94ZXRpbmUgKEx1LUFBMjEwMDQpIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsNjcxODUsMjAxMC0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSBpbiB0aGUgUHJldmVudGlvbiBvZiBSZWxhcHNlIG9mIE1ham9yIERlcHJlc3NpdmUgRXBpc29kZXMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzQ5NjYsMjAwNy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAwIENsaW5pY2FsLEMwLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIGluIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBhbmQgQ29yb25hcnkgQXJ0ZXJ5IERpc2Vhc2UsVGhvbWFzIEplZmZlcnNvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzMDU3OSwyMDE2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIFZlcnN1cyBQbGFjZWJvIGluIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgQ29tb3JiaWQgV2l0aCBTb2NpYWwgQW54aWV0eSBEaXNvcmRlcixUaGUgTWVkaWNhbCBSZXNlYXJjaCBOZXR3b3JrLEludGVydmVudGlvbmFsLDIxNjI1MCwyMDE0LTEyLTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMWIgQ2xpbmljYWwsQzFCLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIFNhZmV0eSwgVG9sZXJhYmlsaXR5LCBQaGFybWFjb2tpbmV0aWMgYW5kIFBoYXJtYWNvZHluYW1pYyBTdHVkeSBvZiBQUlgtMDMxNDAgZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWx6aGVpbWVyJ3MgRGlzZWFzZSIsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg5NCwyMDA1LTA3LTEzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixDb25zdGlwYXRpb24sNDA0LG51bGwsIlBoYXNlIElJLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgb2YgQVRJLTc1MDUgaW4gUGF0aWVudHMgV2l0aCBDaHJvbmljIElkaW9wYXRoaWMgQ29uc3RpcGF0aW9uIixQcm9jdGVyICYgR2FtYmxlIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc2MTQsMjAwNy0wNy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxDb21wYXJhdGl2ZSBGb3JtdWxhdGlvbiBTdHVkeSBvZiBWYWJpY2FzZXJpbixXeWV0aCxJbnRlcnZlbnRpb25hbCw1ODM0MCwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsU2FmZXR5LE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0cyBvZiBDYXJpcHJhemluZSBvbiBDYXJkaWFjIFJlcG9sYXJpemF0aW9uIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw3ODM2NCwyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBQdXJwb3NlIG9mIHRoZSBTdHVkeSBpcyB0byBEZXRlcm1pbmUgV2hldGhlciBDYXJpcHJhemluZSBpcyBhIFNhZmUgYW5kIFRvbGVyYXRlZCBMb25nLVRlcm0gVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTdGFibGUgU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw0NDc3NCwyMDA5LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgTWFuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjkzNzQsMjAwNy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIEFzIEFkanVuY3RpdmUgVGhlcmFweSBJbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDQ3NTk0LDIwMDktMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuZWxvdGFuc2VyaW4sNTIyMzksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2Ygc2luZ2xlIGVzY2FsYXRpbmcgZG9zZXMgb2YgQVBELTEyNSwgYSBwb3RlbnRpYWwgdHJlYXRtZW50IGZvciBpbnNvbW5pYSIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MzE5LDIwMDQtMTItMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFUSFgtMTA1LDUzNjUxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIEkgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIEFUSFgtMTA1IGZvciBwb3RlbnRpYWwgdHJlYXRtZW50IG9mIG9iZXNpdHkiLEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwzNjI1MywyMDA4LTA5LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixGdW5jdGlvbmFsIGJvd2VsIGRpc29yZGVyLDEyNjksbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBQaGFybWFjb2R5bmFtaWNzIG9mIFZlbHVzZXRyYWcgaW4gSGVhbHRoeSBFbGRlcmx5IFN1YmplY3RzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyMTQsMjAxMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsVGhlIEVmZmVjdHMgb2YgTGFzbWlkaXRhbiBvbiBTaW11bGF0ZWQgRHJpdmluZyBQZXJmb3JtYW5jZSAtIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDI4NDM2OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUHJlLXJlZ2lzdHJhdGlvbixQUixNaWdyYWluZSwyMTAsbnVsbCxGb29kLUVmZmVjdCBTdHVkeSBpbiBIZWFsdGh5IFN1YmplY3RzLENvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyMDk4OTEsMjAxNS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsInpvbmlzYW1pZGUgKyBidXByb3Bpb24gKG9iZXNpdHkpLCBPcmV4aWdlbiIsNTU0NTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixPYmVzaXR5LDIzOCxudWxsLFpvbmlzYW1pZGUgU1IgcGx1cyBidXByb3Bpb24gU1IgY29tYmluYXRpb24gdGhlcmFweSBpbiBzdWJqZWN0cyB3aXRoIG9iZXNpdHksT3JleGlnZW4gVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwxOTQ0MSwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLG51bGwsUGhhc2UgSSBTdHVkeSB0byBDb21wYXJlIE5QLTEwMSAoU3VtYXRyaXB0YW4gSW9udG9waG9yZXRpYyBUcmFuc2Rlcm1hbCBQYXRjaCkgV2l0aCBUaHJlZSBGb3JtdWxhdGlvbnMgb2YgSW1pdHJleCxOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCw1MzgzMywyMDA3LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWMsIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgWmVjdWl0eSBpbiBBZG9sZXNjZW50IFN1YmplY3RzIFdpdGggYSBIaXN0b3J5IG9mIEFjdXRlIE1pZ3JhaW5lIixOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwyNTM1NzMsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsUGhhcm1hY29raW5ldGljcyxOLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLE5QMTAxLTAxMSwiUGhhc2UgSSwgT3Blbi1MYWJlbCwgU2luZ2xlLURvc2UsIFJhbmRvbWl6ZWQsIEZvdXItV2F5LCBDcm9zc292ZXIgU3R1ZHkgdG8gQ29tcGFyZSB0aGUgUEsgb2YgTlAtMTAxIFdpdGggT3JhbCBJbWl0cmV4ICg1MCBtZykgaW4gTWlncmFpbmUgU3ViamVjdHMgRHVyaW5nIGFuIEFjdXRlIE1pZ3JhaW5lIEF0dGFjayBhbmQgYSBOb24tTWlncmFpbmUgUGVyaW9kIixOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwyMzIwNiwyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixyZXZleGVwcmlkZSw1NzQ3MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxTUEQ1NTctMjA2LFNlbGVjdGl2ZSA1LUhUNCBSZWNlcHRvciBBZ29uaXN0IGFuZCBQcm90b24gUHVtcCBJbmhpYml0b3IgKFBQSSkgaW4gU3ViamVjdHMgV2l0aCBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSxTaGlyZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODI0NzQsMjAxMi0wMi0yOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYSBDbGluaWNhbCxDMkEsIk5YTi0xODggKG9yYWwpLCBOZXVyQXhvbiIsNTc3NDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixNaWdyYWluZSwyMTAsbnVsbCxTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZlY3RpdmVuZXNzIG9mIE5YTi0xODggZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgQXR0YWNrcyBXaXRoIEF1cmEsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCw1MTI1NSwyMDA5LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJOWE4tMTg4IChvcmFsKSwgTmV1ckF4b24iLDU3NzQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSUksIHJhbmRvbWl6ZWQsIG11bHRpLWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwIHN0dWR5IG9mIE5YTi0xODggaW4gcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsTmV1ckF4b24gSW5jLEludGVydmVudGlvbmFsLDI1NzQ4LDIwMDctMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpcm9tZWxhdGluZSw1ODYzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMiBDbGluaWNhbCxDMixJbnNvbW5pYSw3NTAsbnVsbCxTbGVlcCBMYWJvcmF0b3J5IFN0dWR5IHRvIEludmVzdGlnYXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIE5ldS1QMTEgaW4gUHJpbWFyeSBJbnNvbW5pYSBQYXRpZW50cyxOZXVyaW0gUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDgzMTg1LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxDbGluaWNhbCBUcmlhbCBvZiBNb3RpbGl0b25lIG9uIEdhc3RyaWMgTW90b3IgRnVuY3Rpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTY3NzIsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDIgQ2xpbmljYWwsQzIsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxQaGFzZSBJIE11bHRpY2VudGVyIENsaW5pY2FsIFN0dWR5IG9mIFJQLTUwNjMsUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTU0MDkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiYnVzcGlyb25lICsgbWVsYXRvbmluIChkZXByZXNzaW9uKSwgQnJhaW5DZWxscyIsNjA2NjMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsT3Blbi1MYWJlbCBFeHRlbnNpb24gQXNzZXNzaW5nIHRoZSBUb2xlcmFiaWxpdHkgb2YgQkNJLTAyNCBpbiBDb21iaW5hdGlvbiBXaXRoIEJDSS0wNDkgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMzAyOCwyMDA4LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixEaXNjb250aW51ZWQsRFgsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLCJUcmlhbCB0byBBc3Nlc3MgdGhlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgVG9sZXJhYmlsaXR5IG9mIE9yYWwgQnJleHBpcHJhem9sZSBpbiBDaGlsZHJlbiAoNiB0byA8IDEzIFllYXJzIE9sZCkgV2l0aCBDZW50cmFsIE5lcnZvdXMgU3lzdGVtIERpc29yZGVycyIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEzODM2LDIwMTctMTAtMTAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFNURVAgMjEwLCJNdWx0aWNlbnRlciwgT3Blbi1sYWJlbCwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDg5NTE5LDIwMDktMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQSBQaWxvdCBEb3NlLVJlc3BvbnNlIEJpb21hcmtlciBTdHVkeSBvZiBCcmV4cGlwcmF6b2xlIFRyZWF0bWVudCBpbiBQVFNELER1a2UgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNzU4MzksMjAxNy0wNC0yNSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsQnJleHBpcHJhem9sZSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCB0byBQYXJveGV0aW5lIG9yIFNlcnRyYWxpbmUgaW4gQWR1bHQgUGF0aWVudHMgU3VmZmVyaW5nIEZyb20gUG9zdC10cmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIChQVFNEKSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxNjEzOTAsMjAxMy0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQnJleHBpcHJhem9sZSBmb3IgQmlwb2xhciBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDMyODcyMiwyMDE3LTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEEgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMTMyODQsMjAxNy0xMC0yNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxPUklPTixTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBPcmFsIE9QQy0zNDcxMiBhcyBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw3NzYzOCwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgT1BDLTM0NzEyIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDM3MTI0LDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LEFyZ28sQnJleHBpcHJhem9sZSBhcyBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2l0aCBhbiBJbmFkZXF1YXRlIFJlc3BvbnNlIHRvIEFudGlkZXByZXNzYW50IFRyZWF0bWVudCxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwxMjQyMDEsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyYiBDbGluaWNhbCxDMkIsIm1ldG9jbG9wcmFtaWRlIChvcHRpbWl6ZWQgaW50cmFuYXNhbCBmb3JtdWxhdGlvbiwgZGlhYmV0aWMgZ2FzdHJvcGFyZXNpcyksIE1hcmluYS9RdWVzdGNvci9Fdm9rZSIsNjMzMTgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUHJlLXJlZ2lzdHJhdGlvbixQUixEaWFiZXRpYyBnYXN0cm9wYXJlc2lzLDMyMDMsTUlOVCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE1ldG9jbG9wcmFtaWRlIE5hc2FsIFNwcmF5IFNvbHV0aW9uIGluIERpYWJldGljIFBhdGllbnRzIFdpdGggR2FzdHJvcGFyZXNpcyxFdm9rZSBQaGFybWEgSW5jLEludGVydmVudGlvbmFsLDU0MzQ3LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywibWV0b2Nsb3ByYW1pZGUgKG9wdGltaXplZCBpbnRyYW5hc2FsIGZvcm11bGF0aW9uLCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzKSwgTWFyaW5hL1F1ZXN0Y29yL0V2b2tlIiw2MzMxOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQcmUtcmVnaXN0cmF0aW9uLFBSLERpYWJldGljIGdhc3Ryb3BhcmVzaXMsMzIwMyxudWxsLE11bHRpY2VudGVyIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE1ldG9jbG9wcmFtaWRlIE5hc2FsIFNwcmF5IGluIE1lbiBXaXRoIERpYWJldGljIEdhc3Ryb3BhcmVzaXMsRXZva2UgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCwxNjU2NTMsMjAxNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiT3Blbi1MYWJlbCwgRXh0ZW5zaW9uIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJbnRyYW11c2N1bGFyIERlcG90IChPUEMtMTQ1OTcsIEx1IEFGNDExNTUpIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5MTIwNywyMDEzLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBLIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBmb3IgQ2hpbmVzZSBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMxMzAwNSwyMDE4LTA4LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxYiBDbGluaWNhbCxDMUIsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJYiwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCAyMC13ZWVrIHN0dWR5IHRvIGFzc2VzcyBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBBTEtTLTkwNzAgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIixBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg5MzIsMjAxMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgT2YgQXJpcGlwcmF6b2xlIExhdXJveGlsIChBbHNvIEtub3duIEFzIEFSSVNUQURBKSBJbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEsQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDI0OTE3MCwyMDE1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChpbnRyYW5hc2FsLCBtaWdyYWluZSksIFByb21pdXMgUGhhcm1hIiw3Mzc0MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUmVnaXN0ZXJlZCxSLE1pZ3JhaW5lLDIxMCxudWxsLEFuIEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgREZOLTAyLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNjc1NjAsMjAxNi0wNy0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENpbml0YXByaWRlIFRhYmxldHMgaW4gdGhlIFRyZWF0bWVudCBvZiBNaWxkIHRvIE1vZGVyYXRlIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLEVpc2FpIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MjIyOSwyMDEwLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsIm1vc2FwcmlkZSArIHByb2Jpb3RpY3MgKG9yYWwsIElCUyksIEhhbm1pIiw3NjA3OSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxFeHBsb3JhdG9yeSBDbGluaWNhbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgT3B0aW1hbCBEb3NhZ2Ugb2YgTW9zYXByaWRlIGFuZCBQcm9iaW90aWNzIGluIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBXaXRob3V0IFByZWRvbWluYW50IERpYXJyaGVhLEhhbm1pIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4NDk2OSwyMDExLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsIlpvbG1pdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFpQIFBhdGNoIHRlY2hub2xvZ3ksIG1pZ3JhaW5lL2NsdXN0ZXIgaGVhZGFjaGUpLCBab3Nhbm8gUGhhcm1hIiw3NzIwOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNaWdyYWluZSwyMTAsQURBTSxBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIE0tMjA3IGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDMxMjU1NCwyMDE3LTExLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsRi0xNzQ2NCw4MTA5NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixTY2hpem9waHJlbmlhLDI5OSxGQVNULEYtMTc0NjQgaW4gQWN1dGUgU2NoaXpvcGhyZW5pYSBUcmlhbCxQaWVycmUgRmFicmUgU0EsSW50ZXJ2ZW50aW9uYWwsMTkyNzc3LDIwMTQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixTRVAtMzYzODU2LDgxNjk2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gRXh0ZW5zaW9uIFN0dWR5IG9mIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNFUC0zNjM4NTYgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLCJTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsIFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMiLEludGVydmVudGlvbmFsLDI4MDA2MSwyMDE3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlICh0cmFuc2Rlcm1hbCBwYXRjaCwgcHN5Y2hpYXRyaWMgZGlzb3JkZXIpLCBBZXF1dXMgUGhhcm1hY2V1dGljYWxzL0Nvcml1bSIsODc3NDIsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDEgQ2xpbmljYWwsQzEsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsIkEgbXVsdGkgZG9zZSwgcHJvb2Ygb2YgY29uY2VwdCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIHRyYW5zZGVybWFsIHBhdGNoIGZvciB0aGUgdHJlYXRtZW50IG9mIHBzeWNoaWF0cmljIGRpc29yZGVyIixBZXF1dXMgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwyODQ2NTEsbnVsbCxDb21wbGV0ZWQNCm51bGwsMyssUGhhc2UgNCBDbGluaWNhbCxDNCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsUmVhbC1Xb3JsZCBFZmZlY3RpdmVuZXNzIG9mIENvbWJpbmluZyBhbiBFbXBsb3llci1iYXNlZCBXZWlnaHQgTWFuYWdlbWVudCBQcm9ncmFtIFdpdGggTWVkaWNhdGlvbiBmb3IgQ2hyb25pYyBXZWlnaHQgTWFuYWdlbWVudCBpbiBFbXBsb3llZXMgV2l0aCBPYmVzaXR5LE5vdm8gTm9yZGlzayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzY2MTM1LDIwMTktMDEtMDcgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NixFZmZpY2FjeSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxCaXBvbGFyIGRpc29yZGVyLDY1MyxOUlgtR0xYLE5SWDEwMSBHbHggQmlvbWFya2VyIFZhbGlkYXRpb24gU3R1ZHksIk5ldXJvUnggSW5jLCBOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUiLEludGVydmVudGlvbmFsLDMyNjAyMywyMDE4LTExLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LFNUQUJJTC1CLFNlcXVlbnRpYWwgVGhlcmFweSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDI4MDQ2NywyMDE4LTAxLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIHN1Y2NpbmF0ZSArIGFjZXR5bHNhbGljeWxpYyBhY2lkLCBWaXZpZCIsMTAyMzMzLCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsSGVhZGFjaGUsMTQ4LG51bGwsUGlsb3QgU3R1ZHkgb2YgVlZELTEwMSBmb3IgdGhlIFRyZWF0bWVudCBvZiBEZWxheWVkIEFsY29ob2wtSW5kdWNlZCBIZWFkYWNoZXMsQ2xpbnZlc3QsSW50ZXJ2ZW50aW9uYWwsMjAwNTI5LDIwMTQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJkaWh5ZHJvZXJnb3RhbWluZSAoYnVjY2FsIHRyYW5zbXVjb3NhbCBmaWxtLCBtaWdyYWluZSksIEtsYXJpYSBQaGFybWEiLDEwNDg4NSxTYWZldHksTixOLERpc2NvdmVyeSxEUixNaWdyYWluZSwyMTAsbnVsbCxBIHN0dWR5IG9mIGRpaHlkcm9lcmdvdGFtaW5lIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBtaWdyYWluZSxLbGFyaWEgUGhhcm1hIEhvbGRpbmcgQWIsSW50ZXJ2ZW50aW9uYWwsMzI0OTg4LG51bGwsUGxhbm5lZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9iZXNpdHksMjM4LG51bGwsU2F4ZW5kYSBpbiBPYmVzZSBvciBPdmVyd2VpZ2h0IFBhdGllbnRzIFdpdGggU3RhYmxlIEJpcG9sYXIgRGlzb3JkZXIgKEludmVzdGlnYXRvciBJbml0aWF0ZWQpLFRoZSBMaW5kbmVyIENlbnRlciBvZiBIT1BFLEludGVydmVudGlvbmFsLDI5OTE0MywyMDE3LTA0LTI2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsQSBDbGluaWNhbCBUcmlhbCBBbmFseXppbmcgRWZmZWN0cyBvZiBQcm9raW5ldGljIERydWcgb24gdGhlIEJsb29kIEdsdWNvc2UgaW4gUGF0aWVudHMgV2l0aCBUeXBlIDIgRGlhYmV0ZXMsVGhpcmQgTWlsaXRhcnkgTWVkaWNhbCBVbml2ZXJzaXR5IG9mIHRoZSBDaGluZXNlIFBMQSxJbnRlcnZlbnRpb25hbCwyNDYwODgsMjAxNS0xMi0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gcHJldmVudGluZyByZWxhcHNlIG9mIGEgbW9vZCBlcGlzb2RlIGluIHJlY2VudGx5IG1hbmljLSBvciBtaXhlZC1lcGlzb2RlIHBhdGllbnRzIHdpdGggYmlwb2xhciBJIGRpc29yZGVyIHN0YWJpbGl6ZWQgb24gYXJpcGlwcmF6b2xlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDUyMDMwLDIwMDAtMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw0LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFRyaWFsIENvbXBhcmluZyB0aGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgV2l0aCBUaG9zZSBvZiBTdGFuZGFyZCBvZiBDYXJlIG9uIE5vbi1IREwgQ2hvbGVzdGVyb2wgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlciBXaG8gSGF2ZSBNZXRhYm9saWMgU3luZHJvbWUsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNDgyODgsMjAwOS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBUcmlhbCBvZiBTaW5nbGUtIGFuZCBNdWx0aXBsZS1kb3NlcyBvZiBBcmlwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNzE1MTAsMjAxOS0wMS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDM0MTEwLDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIgV2l0aCBhIE1ham9yIERlcHJlc3NpdmUgRXBpc29kZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIxMCwyMDA0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYW5pYyBkaXNvcmRlciwxMjc5LG51bGwsIkEgMTAtV2VlaywgT3Blbi1MYWJlbCwgRmxleGlibGUgRG9zZSBBZGFwdGl2ZSBTdHVkeSBFdmFsdWF0aW5nIHRoZSBFZmZpY2FjeSBvZiBWb3J0aW94ZXRpbmUgaW4gU3ViamVjdHMgV2l0aCBQYW5pYyBEaXNvcmRlciIsU2l5YW4gQ2xpbmljYWwgQ29ycCxJbnRlcnZlbnRpb25hbCwyMjUxMDIsMjAxNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGVsZXRyaXB0YW4sODcxNSwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQmlvZXF1aXZhbGVuY2Ugc3R1ZHksIHNpbmdsZSBvcmFsIGRvc2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLCB0d28tdHJlYXRtZW50cywgdHdvLXNlcXVlbmNlcywgdHdvLXJvdXRlcywgdHdvLXBlcmlvZHMsIGNyb3NzZWQsIEVsZXRyaXB0YW4gQnJvbWh5ZHJhdGUgNDAgbWcgdGFibGV0cyBjb3ZlcmVkIGJ5IENhZGlsYSBIZWFsdGhjYXJlIExpbWl0ZWQgaW4gcmVsYXRpb24gdG8gUkVMUEFYIChFbGV0cmlwdGFuIEJyb21oeWRyYXRlICkgNDAgbWcgY29hdGVkIHRhYmxldHMgZnJvbSBQZml6ZXIsIFNBIGRlIENWLCBpbiBoZWFsdGh5IGFkdWx0IHN1YmplY3RzIG9mIGJvdGggZ2VuZGVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMiLFp5ZHVzLUNhZGlsYSBHcm91cCxJbnRlcnZlbnRpb25hbCwzNDc2ODgsMjAxNy0wOC0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJCaW9lcXVpdmFsZW5jZSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlByb3NwZWN0aXZlLCByYW5kb21pemVkLCBvcGVuLCBjcm9zc292ZXIgY29tcGFyaXNvbiBpbiBoZWFsdGh5IHN1YmplY3RzIHRvIGVzdGFibGlzaCBiaW9lcXVpdmFsZW5jZSBvZiBFbGV0cmlwdGFuIDgwIG1nIHRhYmxldHMgb2YgTGFuZHN0ZWluZXIgU2NpZW50aWZpYywgU0EgZGUgQ1YgdmVyc3VzIEVsZXRyaXB0YW4gODAgbWcgdGFibGV0czogUmVscGF4IG9mIFBmaXplciwgU0EgZGUgQ1YiLExhbmRzdGVpbmVyIFNjaWVudGlmaWMgU2EgRGUgQ3YsSW50ZXJ2ZW50aW9uYWwsMTY0NDk5LG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMissUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBIFByb3NwZWN0aXZlLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBFdmFsdWF0aW5nIFRoZSBFZmZlY3RzIE9mIFRoZSBBZGRpdGlvbiBPZiBNb3NhcHJpZGUgVG8gR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZSBQYXRpZW50cyBPbiBQcm90b24gUHVtcCBJbmhpYml0b3IiLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjI3OTIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUmVuYWwgZmFpbHVyZSw2OSxudWxsLFRoZSBFZmZlY3Qgb2YgVmFyeWluZyBEZWdyZWVzIG9mIFJlbmFsIEltcGFpcm1lbnQgb24gdGhlIFNpbmdsZSBEb3NlIFBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIE9yYWxseSBBZG1pbmlzdGVyZWQgTHVyYXNpZG9uZTogQSBQaGFzZSBJIFN0dWR5LFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE1ODQ2OSwyMDA4LTEwLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLEVmZmVjdHMgb2YgQnVzcGlyb25lIGluIE9waWF0ZSBXaXRoZHJhd2FsLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBEcnVnIEFidXNlLEludGVydmVudGlvbmFsLDM0ODM5LDIwMDItMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiU2luZ2xlLWRvc2UsIHJhbmRvbWl6ZWQsIGJhbGFuY2VkLCBvcGVuLWxhYmVsLCB0d28tdHJlYXRtZW50cywgdHdvLWNyb3NzLW92ZXIgcGVyaW9kcywgb3JhbCBiaW9lcXVpdmFsZW5jZSBzdHVkeSBvZiBab2xtaXRyaXB0YW4gMi41bWcgb3JvZGlzcGVyc2libGUgdGFibGV0cyAoU3ludGhvbiBN6XhpY28sIFNBIGRlIENWKSBjb21wYXJlZCB3aXRoIGFkbWluaXN0cmF0aW9uIG9mIFpvbWlnIFJhcGltZWx0IChab2xtaXRyaXB0YW4gZGUgMi41IG1nKSBpbiBvcm9kaXNwZXJzaWJsZSB0YWJsZXRzIChBc3RyYVplbmVjYSwgU0EgZGUgQ1YpIGluIGhlYWx0aHkgYWR1bHQgc3ViamVjdHMgb2YgYm90aCBnZW5kZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucyIsU3ludGhvbiBNZXhpY28gUy5BLiBkZSBDLlYuLEludGVydmVudGlvbmFsLDMxMzUwMSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsVm9ydGlveGV0aW5lIGZvciBQb3N0LXRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBNaWFtaSxJbnRlcnZlbnRpb25hbCwyNDkzMDksMjAxNi0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIGNyb3NzLW92ZXIsIGNvbXBhcmF0aXZlLCBJdGFsaWFuIHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IG9mIGZyb3ZhdHJpcHRhbiBhbmQgem9sbWl0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgcGF0aWVudHMgd2l0aCBtaWdyYWluZSB3aXRoIGF1cmEiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTg5OTAsMjAxMi0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInN1bWF0cmlwdGFuIChzdWJsaW5ndWFsLCBtaWdyYWluZSwgTm92YU1pc3QpLCBTdWRhIiw0NzIwNCwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBmb3VyLWFybSwgY3Jvc3NvdmVyLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgZGVzaWduZWQgdG8gY29tcGFyZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0d28gZG9zZXMgb2Ygc3VtYXRyaXB0YW4gb3JhbCBzcHJheSB3aXRoIEltaXRyZXggdGFibGV0cyBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbnMiLE5vdmFEZWwgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2MDE0NSwyMDA2LTA5LTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LFBoYXJtYWNva2luZXRpY3MsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2Ygb2Jlc2l0eSBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0aGUgc2Vyb3RvbmVyZ2ljIGFudGlkZXByZXNzYW50IHZvcnRpb3hldGluZSxUdWZ0cyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0MDA0MyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLFN0dWR5IG9mIFRlbGNhZ2VwYW50IChNSy0wOTc0KSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBNb2RlcmF0ZSB0byBTZXZlcmUgQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsIk1lcmNrICYgQ28gSW5jLCBNZXJjayBTaGFycCAmIERvaG1lIENvcnAiLEludGVydmVudGlvbmFsLDEzOTI0LDIwMDctMDItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIYWxsdWNpbmF0aW9uLDEwNTAsbnVsbCxSZWxhcHNlIFByZXZlbnRpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIERlbWVudGlhLXJlbGF0ZWQgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDMxNzYwNiwyMDE3LTA5LTI3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAxIENsaW5pY2FsLEMxLGZsZXNpbm94YW4sNDgzOCxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJIGNyb3Nzb3ZlciwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IGNvbXBhcmluZyB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0d28gZG9zZXMgb2YgRFUtMjk4OTQgd2l0aCBmbGVzaW5veGFuLCBzdWxwcmlkZSwgaGFsb3Blcmlkb2wgYW5kIHBsYWNlYm8gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBYmJvdHQgSGVhbHRoY2FyZSBQcm9kdWN0cyBCVixJbnRlcnZlbnRpb25hbCw1MDExNywxOTk1LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIGRpc2Vhc2UsMTI5LEotRk9DVVMsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIG9tZXByYXpvbGUtY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZmFtb3RpZGluZSwgbW9zYXByaWRlIGFuZCB0ZXByZW5vbmUgaW4gcGF0aWVudHMgd2l0aCB1cHBlciBnYXN0cm9pbnRlc3RpbmFsIHN5bXB0b21zIixKYXBhbiBEeXNwZXBzaWEgU29jaWV0eSxJbnRlcnZlbnRpb25hbCw5NDYxNywyMDA3LTAyLTI4IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMCBDbGluaWNhbCxDMCwibG9yY2FzZXJpbiBoeWRyb2NobG9yaWRlIChleHRlbmRlZC1yZWxlYXNlLCBvYmVzaXR5KSwgQXJlbmEvRWlzYWkiLDkwNTYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhbm5hYmlzIGRlcGVuZGVuY2UsMzI4MyxudWxsLExvcmNhc2VyaW4gZm9yIENhbm5hYmlzIFVzZSBEaXNvcmRlcixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzUwNjMwLDIwMTktMDQtMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxUcmVhdG1lbnQgb2YgSGFsbHVjaW5vc2lzL1BzeWNob3NpcyBpbiBQYXJraW5zb24ncyBEaXNlYXNlIGJ5IGFuIEludmVzdGlnYXRpb25hbCBEcnVnLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDYwOTQsMjAwNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBQaW1hdmFuc2VyaW4gaW4gQWR1bHRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBhbmQgIERlcHJlc3Npb24sQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzM0NzA1LDIwMTgtMDMtMDkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSBvZiBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiAoQUNQLTEwMykgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMzk2MCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxWaWxhem9kb25lIGZvciBTZXBhcmF0aW9uIEFueGlldHkgRGlzb3JkZXIsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDE2MzA5NSwyMDEzLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgUGhhc2UgSSwgT3Blbi1sYWJlbCwgUmFuZG9taXplZCwgVGhyZWUtd2F5LCBJbmNvbXBsZXRlIENyb3Nzb3ZlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgQmlvYXZhaWxhYmlsaXR5IG9mIERpZmZlcmVudCBEb3NlIENvbWJpbmF0aW9ucyBvZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSA1MDAgbWcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE4MzYxOCwyMDA0LTAxLTA4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcHJvc3BlY3RpdmUsIG9wZW4sIHJhbmRvbWl6ZWQsIGNyb3Nzb3ZlciBzdHVkeSBvZiBjb21wYXJhdGl2ZSBwaGFybWFjb2tpbmV0aWNzIGFuZCBiaW9lcXVpdmFsZW5jZSBvZiB0aGUgZHJ1ZyBzdW1hdHJpcHRhbiB0YWJsZXRzLCBmaWxtLWNvYXRlZCAxMDAgbWcgKE9PTyAiIk96b25lIiIsIFJ1c3NpYSksIGluIGNvbXBhcmlzb24gd2l0aCB0aGUgZHJ1ZyBJbWlncmFuLCBjb2F0ZWQgdGFibGV0cywgMTAwIG1nICgiIkdsYXhvU21pdGhLbGluZSBQaGFybWFjZXV0aWNhbHMgU0EgIiIsIFBvbGFuZCkiLEF0b2xsIExMQyxJbnRlcnZlbnRpb25hbCwxNzYzMjgsMjAxNC0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgY29tYm8gZm9ybXVsYXRpb24sIGVhY2ggb2YgaXRzIGNvbXBvbmVudHMgYW5kIGN1cnJlbnRseSBtYXJrZXRlZCB2ZXJzaW9ucyBvZiB0aGUgY29tcG9uZW50cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU2MTQzLDIwMDMtMDktMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1sYWJlbCwgUmFuZG9taXplZCwgVHdvLXdheSBDcm9zc292ZXIsIEJpb2VxdWl2YWxlbmNlIFN0dWR5IEJldHdlZW4gU3VtYXRyaXB0YW4gU3VjY2luYXRlIEtpdCBQcm9kdWN0IChTVEFUZG9zZSkgYW5kIEFtcG91bGUgUHJvZHVjdCBpbiBIZWFsdGh5IEphcGFuZXNlIE1hbGUgU3ViamVjdHMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU0MTk4LDIwMDMtMTAtMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IHRvIERldGVybWluZSBXaGV0aGVyIEZsdW5hcml6aW5lIEhhcyBBbnkgRWZmZWN0IG9uIHRoZSBQaGFybWFjb2tpbmV0aWNzIGFuZCBQaGFybWFjb2R5bmFtaWNzIG9mIE9yYWwgRy00MzE3NUMgaW4gSGVhbHRoeSBTdWJqZWN0cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1MDM0MywxOTg5LTAzLTEzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLWxhYmVsLCBzYWZldHksIHBoYXJtYWNva2luZXRpYywgc2luZ2xlLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGV4Y3JldGlvbiBvZiBhIDYgbWcgc2MgZG9zZSBvZiBzdW1hdHJpcHRhbiBpbnRvIGJyZWFzdCBtaWxrIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDExODQyOSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsRGVwcmVzc2lvbi1BbnggVHJpYWwsQW4gQW50aWRlcHJlc3NhbnQgTWVkaWNhdGlvbnMgZnJvbSBUcmVhdG1lbnQgSW5pdGlhdGlvbiBmb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciB3aXRoIEFueGlldHkgU3ltcHRvbXM6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODI0NDgsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFRoZSByb2xlIG9mIGJ1c3Bpcm9uZSBpbiBMSURzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZS4sVGhlIHJvbGUgb2YgQnVzcGlyb25lIGluIGF0dGVudWF0aW5nIGludm9sdW50YXJ5IG1vdmVtZW50cyAoRHlza2luZXNpYXMpIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSxJbXBlcmlhbCBDb2xsZWdlIExvbmRvbixJbnRlcnZlbnRpb25hbCwzNzU0OTQsMjAxNS0wNS0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsVGhlIFJvbGUgT2YgU3RyaWF0YWwgU2Vyb3RvbmVyZ2ljIFRlcm1pbmFscyBJbiBMLURvcGEgSW5kdWNlZC1EeXNraW5lc2lhIEluIFBhcmtpbnNvbnMgRGlzZWFzZSBQYXRpZW50czogQW4gSW4gVml2byBQb3NpdHJvbiBFbWlzc2lvbiBUb21vZ3JhcGh5IChQRVQpIFN0dWR5LEltcGVyaWFsIENvbGxlZ2UgTG9uZG9uLEludGVydmVudGlvbmFsLDExOTE0OCwyMDA4LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJwcm9sYWN0aW5lbWlhLDE3NyxudWxsLCJBIDgtd2VlaywgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgaHlwZXJwcm9sYWN0aW5lbWlhIGluICBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLEluamUgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2ODEzMywyMDA2LTA3LTAyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsUEFTUy1HSSxFZmZlY3Qgb2YgU2hvcnQtdGVybSBNb3RpbGl0b25lIFRoZXJhcHkgb24gSGVhbHRoLXJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlIGluIFBEIFBhdGllbnRzIFdpdGggR2FzdHJvaW50ZXN0aW5hbCBTeW1wdG9tcyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI2MTI4OSwyMDE2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsWmlwcmFzaWRvbmUgaW4gTWFqb3IgRGVwcmVzc2lvbixBIFBpbG90IFN0dWR5IC0gWmlwcmFzaWRvbmUgVXNlZCBhcyBhbiBBZGp1bmN0aXZlIFRoZXJhcHkgaW4gUGF0aWVudHMgd2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyOiBJbXBhY3Qgb24gU3ltcHRvbXMgYW5kIEZ1bmN0aW9uYWwgRGlzYWJpbGl0eSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0MDc0MSwyMDA4LTAxLTE1IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxFZmZlY3RzIG9mIDcgRGF5IFBydWNhbG9wcmlkZSBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVW5pdmVyc2l0eSBvZiBPeGZvcmQsSW50ZXJ2ZW50aW9uYWwsMzQ0NjI3LDIwMTgtMDYtMTEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsQ2xpbmljYWwgVHJpYWwgV2l0aCBaaXByYXNpZG9uZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQc3ljaGlhdHJpYyBQYXRob2xvZ3kgQXNzb2NpYXRlZCB0byBBbGNvaG9saXNtLEZ1bmRhY2lvIFByaXZhZGEgSSBJbnN0aXR1dCBEZSBSZWNlcmNhIERlIEwnSG9zcGl0YWwgRGUgTGEgU2FudGEgQ3JldSBJIFNhbnQgUGF1LEludGVydmVudGlvbmFsLDMzMTE4LDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMix0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSBtdWx0aWNlbnRlciwgcmFuZG9taXplZCwgcGFyYWxsZWwtY29udHJvbGxlZCwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhZGp1bmN0aXZlIHRhbmRvc3Bpcm9uZSBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgYW5kIGhpZ2ggbGV2ZWwgb2YgYW54aWV0eSBzeW1wdG9tcyIsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQxNTk5LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuZWQsIHR3by1wZXJpb2QsIHR3byB0cmVhdG1lbnRzLCB0d28gc2VxdWVuY2VzLCBjcm9zc292ZXIsIHJhbmRvbWl6ZWQsIHNpbmdsZS1kb3NlIG9mIHR3byBvcmFsIHByZXBhcmF0aW9ucyBvZiB6aXByYXNpZG9uZSA0MCBtZyAoNDAgbWcgemlwcmFzaWRvbmUgY2Fwc3VsZXMsIEFjdGF2aXMgUFRDIHZlcnN1cyBHZW9kb24sIExhYm9yYXRvcmlvcyBQZml6ZXIgTHRkYSkgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHdpdGggZm9vZCBlZmZlY3QiLEFsbGVyZ2FuIHBsYyxJbnRlcnZlbnRpb25hbCwyMTYyNjgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbGNvaG9saXNtLDExLG51bGwsQXJpcGlwcmF6b2xlIGFuZCBUb3BpcmFtYXRlIG9uIEZyZWUtQ2hvaWNlIEFsY29ob2wgVXNlLE5hdGlvbmFsIEluc3RpdHV0ZSBvbiBBbGNvaG9sIEFidXNlIGFuZCBBbGNvaG9saXNtLEludGVydmVudGlvbmFsLDUyNzIxLDIwMDctMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2xlZXAgYXBuZWEsMTQ5MCxudWxsLCJBbiBJbnRlcnZlbnRpb25hbCwgRG91YmxlLWJsaW5kLCBDcm9zcy1vdmVyLCBSYW5kb21pemVkIFN0dWR5IHRvIERldGVybWluZSB0aGUgRWZmaWNhY3kgb2YgQnVzcGlyb25lIG9uIENlbnRyYWwgQXBuZWFzIGluIFBhdGllbnRzIFdpdGggU3lzdG9saWMgSGVhcnQgRmFpbHVyZSIsU2N1b2xhIFN1cGVyaW9yZSBTYW50J0FubmEgZGkgUGlzYSxJbnRlcnZlbnRpb25hbCwzNDIyNTgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDAgQ2xpbmljYWwsQzAsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjbGVyb2Rlcm1hLDExMDUsbnVsbCxMb25nLXRlcm0gRWZmZWN0IG9mIEJ1c3Bpcm9uZSBvbiBFc29waGFnZWFsIEZ1bmN0aW9uIGFuZCBFc29waGFnZWFsIFN5bXB0b21zIGluIFBhdGllbnRzIFdpdGggU3lzdGVtYXRpYyBTY2xlcm9zaXMgKFNTYyksTGFpa28gR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMjIwOTYsMjAxNC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIHBoYXNlIElJSWIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjayBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIG9uc2V0IG9mIGVmZmljYWN5IG9mIGEgbmV3IGZvcm11bGF0aW9uIG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBhY3V0ZSBtaWdyYWluZSB3aXRoIGFuZCB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODcxNzksMjAwMy0xMC0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhc2UgSUlJIGNsaW5pY2FsIHRyaWFsIG9mIGEgY29tYmluYXRpb24gb2YgTUdWLTUgYW5kIEFTLTQzNzAgYXMgcHJldHJlYXRtZW50IGZvciBiYXJpdW0gZW5lbWEgWC1yYXkgcmFkaW9ncmFwaHksRUEgUGhhcm1hIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw5Nzc2MSwyMDA3LTA4LTAzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIFRyaWFscyB0byBDb21wYXJlIE1vc2FwcmlkZSBCaW9hdmFpbGFiaWxpdHkgQmV0d2VlbiBEV0otMTI1MiBhbmQgTW9zYXByaWRlIE1lZGljaW5lLERhZXdvb25nIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw2NTE4OCwyMDEwLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBQaWxvdCBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIFJlbGF0aXZlIEJpb2F2YWlsYWJpbGl0eSBvZiBNb3NhcHJpZGUgNSBtZyBGcm9tIFR3byBDYW5kaWRhdGUgRm9ybXVsYXRpb25zIG9mIEdSLTEwNzcxOUIgUmVsYXRpdmUgdG8gT25lIDUgbWcgVGFibGV0IG9mIFJlZmVyZW5jZSBNb3NhcHJpZGUgQ2l0cmF0ZSAoR2FzbW90aW4pIGluIEhlYWx0aHkgQWR1bHQgSHVtYW4gU3ViamVjdHMgVW5kZXIgRmFzdGluZyBDb25kaXRpb25zLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjEwODk0LDIwMTQtMDItMDMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFBydWNhbG9wcmlkZSBTdWJqZWN0cyBXaXRoIFJlbmFsIEltcGFpcm1lbnQsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw5MDQ5MCwxOTk3LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXNwZXJnZXIgc3luZHJvbWUsMTk0OCxudWxsLEx1cmFzaWRvbmUgUGVkaWF0cmljIFBoYXJtYWNva2luZXRpY3MgU3R1ZHksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4ODQwNSwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsWUwtMDkxOSw5MDUxMywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiVG8gRXhwbG9yZSB0aGUgRWZmZWN0aXZlIERvc2VzLCBhbmQgdG8gQXNzZXNzIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEh5cGlkb25lIEh5ZHJvY2hsb3JpZGUgVGFibGV0cyIsU2hhbmdoYWkgU3luZXJneSBQaGFybWFjZXV0aWNhbCBTY2llbmNlcyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzYwMDk2LDIwMTgtMTEtMTUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHBoYXNlIElJSSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgNC13ZWVrLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGFuZCByaXNwZXJpZG9uZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBhIERTTS1JViBkaWFnbm9zaXMgb2Ygc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIHdpdGggYWN1dGUgcmVsYXBzZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MjAzOCwyMDAxLTA1LTA4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEFiaWxpZnkgVGhlcmFweSBmb3IgUmVkdWNpbmcgQ29tb3JiaWQgU3Vic3RhbmNlIEFidXNlLENyZWlnaHRvbiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzMTA1LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIFdpdGggQ28tTW9yYmlkIFNvY2lhbCBBbnhpZXR5LFVuaXZlcnNpdHkgb2YgTWVkaWNpbmUgYW5kIERlbnRpc3RyeSBvZiBOZXcgSmVyc2V5LEludGVydmVudGlvbmFsLDMxNDcwLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQQUZJUDIsIkNvbXBhcmF0aXZlIFN0dWR5IG9mIEFyaXBpcHJhem9sZSwgUXVldGlhcGluZSBhbmQgWmlwcmFzaWRvbmUgaW4gdGhlIFRyZWF0bWVudCBvZiBGaXJzdCBFcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzIixGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIxNzQ2MSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCBvZiBibG9uYW5zZXJpbiB2ZXJzdXMgYXJpcGlwcmF6b2xlIGluIHBzeWNob3RpYyBkaXNvcmRlciIsIkZ1aml0YSBIZWFsdGggVW5pdmVyc2l0eSwgSG9zcGl0YWwgb2YgU3QgQ3Jvc3MsIFRoZSBKaW5kYWkgSG9zcGl0YWwsIFRoZSBPa2VoYXphbWEgSG9zcGl0YWwsIFRveW90YSBNZW1vcmlhbCBIb3NwaXRhbCIsSW50ZXJ2ZW50aW9uYWwsMTU2MDYzLDIwMTMtMDctMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsIkEgVHJpcGxlIFRyYWNlciBQRVQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIERpZmZlcmVudGlhbCBFZmZlY3RzIG9mIEFyaXBpcHJhem9sZSBvbiBEKDIpLCA1LUhUKDIpLCBhbmQgNS1IVCgxQSkgUmVjZXB0b3IgT2NjdXBhbmN5IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBvZiBUb3JvbnRvLEludGVydmVudGlvbmFsLDE0NjYxNixudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsIFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcnMiLFJhbmJheHkgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwxNDQzOTEsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJsb3JjYXNlcmluIGh5ZHJvY2hsb3JpZGUgKGV4dGVuZGVkLXJlbGVhc2UsIG9iZXNpdHkpLCBBcmVuYS9FaXNhaSIsOTA1NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBCZWx2aXEgWFIgaW4gQ29uanVuY3Rpb24gV2l0aCBMaWZlc3R5bGUgTW9kaWZpY2F0aW9uIGZvciBXZWlnaHQgTG9zcyBpbiBPYmVzZSBBZG9sZXNjZW50cywgQWdlIDEyIHRvIDE3IFllYXJzIixFaXNhaSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE5MjEyLDIwMTctMDktMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQcnVyaXR1cywyNzksbnVsbCxTdW1hdHJpcHRhbiBhbmQgT25kYW5zZXRyb24gaW4gVHJlYXRtZW50IG9mIFNwaW5hbCBBbmVzdGhlc2lhLUluZHVjZWQgUHJ1cml0dXMsVGVocmFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDg3NTksMjAxNy0wNS0yMiAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDZW50cmFsIG5lcnZvdXMgc3lzdGVtIGRpc2Vhc2UsNjAsbnVsbCwiU2FmZXR5LCBQaGFybWFjb2tpbmV0aWNzIGFuZCBQaGFybWFjb2R5bmFtaWNzIG9mIFZlbHVzZXRyYWcgaW4gSGVhbHRoeSBFbGRlcmx5IFN1YmplY3RzIixJbm5vdml2YSBJbmMsSW50ZXJ2ZW50aW9uYWwsODIyMTQsMjAxMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHRhbmRvc3Bpcm9uZSwzNjE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLEEgQmFzZWQgb24gUEVFRyBhbmQgUEVUIFN0dWR5IG9mIEFueGlvbHl0aWMgVHJlYXRtZW50IHRvIEltcHJvdmUgQ29nbml0aXZlIEZ1bmN0aW9uIGluIFBhdGllbnRzIFdpdGggQWx6aGVpbWVyIERpc2Vhc2UsWmhlamlhbmcgUHJvdmluY2lhbCBQZW9wbGUncyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyOTgyODksMjAxNy0wNS0yMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxFdmFsdWF0aW9uIG9mIHJpc3Blcmlkb25lIGFuZCBidXNwaXJvbmUgaW4gdHJlYXRtZW50IG9mIHByb2JsZW0gYmVoYXZpb3JzIGluIGNoaWxkcmVuIHdpdGggUEtVLEhhbWFkYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMxNTI1MiwyMDEyLTA0LTE3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgYmlvYXZhaWxhYmlsaXR5IG9mIGNvbWJvIGZvcm11bGF0aW9uLCBlYWNoIG9mIGl0cyBjb21wb25lbnRzIGFuZCBjdXJyZW50bHkgbWFya2V0ZWQgdmVyc2lvbnMgb2YgdGhlIGNvbXBvbmVudHMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1NjE0MywyMDAzLTA5LTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxHZW9kb24gaW4gV2VpZ2h0IExvc3MgU3R1ZHkgZm9yIEJpcG9sYXIgRGlzb3JkZXJzLFN0YW5mb3JkIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUxMTEsMjAwNy0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGlwc2FwaXJvbmUsMzM5OSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBhc3Nlc3MgdGhlIGJlaGF2aW9yYWwgYW5kIG5ldXJvZW5kb2NyaW5lIGVmZmVjdHMgb2YgdGhlIDUtSFQxQSByZWNlcHRvciBwYXJ0aWFsIGFnb25pc3QgaXBzYXBpcm9uZSBpbiBwYXRpZW50cyB3aXRoIHNlYXNvbmFsIGFmZmVjdGl2ZSBkaXNvcmRlciBhbmQgaGVhbHRoeSBjb250cm9sIHN1YmplY3RzIixVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksSW50ZXJ2ZW50aW9uYWwsMTA4MDY1LDE5OTktMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxQQVNTLUdJLEVmZmVjdCBvZiBTaG9ydC10ZXJtIE1vdGlsaXRvbmUgVGhlcmFweSBvbiBIZWFsdGgtcmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgaW4gUEQgUGF0aWVudHMgV2l0aCBHYXN0cm9pbnRlc3RpbmFsIFN5bXB0b21zLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMjYxMjg5LDIwMTYtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLE9wZW4tbGFiZWwgRHJ1ZyBJbnRlcmFjdGlvbiBTdHVkeSBFdmFsdWF0aW5nIERlc3ZlbmxhZmF4aW5lIFN1Y2NpbmF0ZSBTdXN0YWluZWQgUmVsZWFzZSAoRFZTIFNSKSAxMDAgbWcgb24gdGhlIFBoYXJtYWNva2luZXRpY3Mgb2YgQXJpcGlwcmF6b2xlIFdoZW4gQ29hZG1pbmlzdGVyZWQgdG8gSGVhbHRoeSBTdWJqZWN0cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDY5OTQ1LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyBwaGFybWFjb2tpbmV0aWMgcGFyYW1ldGVycywgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkgb2YgYXJpcGlwcmF6b2xlIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsNTIxMjAsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxCaW9lcXVpdmFsZW5jZSBTdHVkeSBvZiBCb3NpcWluZyBhbmQgQWJpbGlmeSBVbmRlciBGYXN0aW5nL0ZlZCBDb25kaXRpb24sQ2hlbmdkdSBLYW5naG9uZyBQaGFybWFjZXV0aWNhbCBHcm91cCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzA2OTMyLDIwMTctMDYtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQ2hhbmdlIGluIEJyYWluIE1ldGFib2xpc20gYW5kIENvZ25pdGl2ZSBGdW5jdGlvbiBieSBBcmlwaXByYXpvbGUsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxODgxNDIsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxPU01JVFRFUixTdWJzdHVkeSBvZiB0aGUgQWNjdXJhY3kgb2YgSW5nZXN0aWJsZSBFdmVudCBNYXJrZXIgKElFTSkgRGV0ZWN0aW9uIGJ5IHRoZSBNZWRpY2FsIEluZm9ybWF0aW9uIERldmljZSAxIChNSU5EMSksT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTc4Mzc4LDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gT3Blbi1MYWJlbCwgRG9zZS1GaW5kaW5nIFN0dWR5IFRvIEFzc2VzcyBFZmZpY2FjeSBPZiBBcmlwaXByYXpvbGUgSW4gSGVhbHRoeSBWb2x1bnRlZXJzIixKb2hucyBIb3BraW5zIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTExNDYyLDIwMDItMDgtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiUmFuZG9taXplZCwgQ29udHJvbGxlZCBhbmQgT3Blbi1sYWJlbCBTdHVkeSBvZiBCdXNwaXJvbmUgYWRkLW9uIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3Npb24gRGlzb3JkZXIiLFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIxMzkzNiwyMDE0LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLERydWcgSW50ZXJhY3Rpb24gYW5kIFNlbGYgQWRtaW5pc3RyYXRpb24gU3R1ZGllcyBvZiBDb21wb3VuZHMgZm9yIENvY2FpbmUgVXNlIERpc29yZGVyLFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDIzOTM2OCwyMDE1LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJFeGFtaW5hdGlvbiBPZiBMYXJnZSBJbnRlc3RpbmUgQ29udHJhY3Rpb24gUGF0dGVybnMgQnkgTW9zYXByaWRlIENpdHJhdGUgRm9yIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSAoSUJTLCBDb25zdGlwYXRpb24gVHlwZSkgVXNpbmcgYSBDYXBzdWxlIEVuZG9zY29wZSIsTmFnb3lhIFVuaXZlcnNpdHkgR3JhZHVhdGUgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDE1MTEyOCwyMDA4LTA5LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaGFybWFjb2tpbmV0aWMgUHJvcGVydGllcyBvZiBMdS1BQTIxMDA0IChWb3J0aW94ZXRpbmUpIGluIEhlYWx0aHkgWW91bmcgQ2hpbmVzZSBNZW4gYW5kIFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDkwNjM1LDIwMTItMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgSW52ZXN0aWdhdGluZyBGb3JtdWxhdGlvbnMgb2YgVm9ydGlveGV0aW5lIEFwcGxpZWQgVW5kZXIgdGhlIFRvbmd1ZSBpbiBIZWFsdGh5IFN1YmplY3RzLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDM3NDE5NCwyMDE5LTAzLTE4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsbnVsbCwiU2hvcnQtVGVybSBUb2xlcmFiaWxpdHkgb2YgYSBOb25hemFwaXJvbmUgU2VsZWN0aXZlIFNlcm90b25pbiAxQSBBZ29uaXN0IGluIEFkdWx0cyBXaXRoIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXI6IEEgMjgtRGF5LCBPcGVuLUxhYmVsIFN0dWR5IixNb3VudCBTaW5haSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ2ODc5LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkFuIE9wZW4tTGFiZWwsIE9uZS1ZZWFyIENsaW5pY2FsIE91dGNvbWUgU3R1ZHkgVG8gQXNzZXNzIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBhcyBBIEZpcnN0IENob2ljZSBPZiBUcmVhdG1lbnQgaW4gUGF0aWVudHMgd2l0aCBGaXJzdCBFcGlzb2RlIG9mIEEgUHN5Y2hvdGljIERpc29yZGVyIixNY0dpbGwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNjQyNzUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBleHBsb3JlIHRoZSBsb25naXR1ZGluYWwgZWZmZWN0IG9mIHRyZWF0bWVudCB3aXRoIHNlY29uZC1nZW5lcmF0aW9uIGFudGlwc3ljaG90aWNzIG9uIGZ1bmN0aW9uYWwgY29ubmVjdGl2aXR5IG9mIHRoZSBzdHJpYXR1bSBkdXJpbmcgdGhlIHJlc3Rpbmcgc3RhdGUgaW4gcGF0aWVudHMgZXhwZXJpZW5jaW5nIGEgZmlyc3QgZXBpc29kZSBvZiBwc3ljaG9zaXMiLFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwyMjMwMjUsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxTdHVkeSBvZiB0aGUgRWZmaWNhY3kgb2YgQWRqdW5jdGl2ZSBMaXRoaXVtIFRyZWF0bWVudCBmb3IgdGhlIFRyZWF0bWVudCBvZiBQc3ljaG90aWNhbCBNYW5pYSxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwxOTA2MTIsMjAxMS0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0IE9mIEFyaXBpcHJhem9sZSBmb3IgRHJ1Zy1JbmR1Y2VkIFBzeWNob3NpcyBpbiBQYXJraW5zb24gRGlzZWFzZSxVbml2ZXJzaXR5IG9mIEZsb3JpZGEgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ5NzksbnVsbCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBvdGhlcm1pYSw0NzIsbnVsbCxEZXhtZWQvQnVzcGlyb25lIFN5bmVyZ2lzbSBvbiBTaGl2ZXJpbmcsQ2xldmVsYW5kIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDU0ODgyLDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxyZXZleGVwcmlkZSw1NzQ3MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBZHNvcnB0aW9uLCBNZXRhYm9saXNtIGFuZCBFeGNyZXRpb24gKEFNRSkgb2YgU2luZ2xlLURvc2UgUmFkaW9sYWJlbGVkIFNQRC01NTcgaW4gVm9sdW50ZWVycyIsU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDEwODk1NSwyMDEzLTAzLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCwiUEFDQVAzOCBJbmR1Y2VkIEhlYWRhY2hlLCBNaWdyYWluZSBhbmQgRmx1c2hpbmcgaW4gUGF0aWVudHMgV2l0aCBNaWdyYWluZSIsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5MjksMjAxOC0wNy0xNyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYWRhY2hlLDE0OCxUV0lTVCxTdW1hdHJpcHRhbiBhcyBUcmVhdG1lbnQgZm9yIFBvc3QtdHJhdW1hdGljIEhlYWRhY2hlLFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbixJbnRlcnZlbnRpb25hbCwxMzEwNzAsMjAxMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEZyYWdpbGUgWCBzeW5kcm9tZSwxMjMsbnVsbCxBcmlwaXByYXpvbGUgaW4gRnJhZ2lsZSBYIFN5bmRyb21lLEluZGlhbmEgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw3MDQwLDIwMDctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsQUNDT1JELCJFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBURC01MTA4LCBhIDUtSFQ0IEFnb25pc3QgaW4gQ2hyb25pYyBDb25zdGlwYXRpb24iLElubm92aXZhIEluYyxJbnRlcnZlbnRpb25hbCwxNzg4NCwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFnZ3Jlc3Npb24sOSxudWxsLEEgU3R1ZHkgb2YgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEFnaXRhdGlvbiBhbmQgQWdncmVzc2lvbiBpbiBTdWJqZWN0cyBXaXRoIEFsemhlaW1lcidzIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjk1NTA2LDIwMTctMDItMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLCJBIDEyLXdlZWssIG9wZW4tbGFiZWwsIHVuY29udHJvbGxlZCwgcHJlbGltaW5hcnkgc3R1ZHkgdG8gZXhwbG9yZSB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgYWRkLW9uIHBoYXJtYWNvdGhlcmFweSBvbiBjbGluaWNhbCBzeW1wdG9tcyBhbmQgY29nbml0aXZlIGZ1bmN0aW9uaW5nIGluIHBhdGllbnRzIHdpdGggdHJlYXRtZW50LXJlc2lzdGFudCBvYnNlc3NpdmUtY29tcHVsc2l2ZSBkaXNvcmRlciByZWNlaXZpbmcgc2Vyb3RvbmluIHJldXB0YWtlIGluaGliaXRvcnMiLFBvbGljbGluIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjU2MjU1LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLE9uZS1ZZWFyIFRyaWFsIE9mIE9yYWwgWmlwcmFzaWRvbmUgSW4gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMzc4MiwyMDA4LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsNSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixaQUMsIkltcHJvdmluZyBNZXRhYm9saWMgUGFyYW1ldGVycyBvZiBBbnRpcHN5Y2hvdGljIENoaWxkIFRyZWF0bWVudCBXaXRoIFppcHJhc2lkb25lLCBBcmlwaXByYXpvbGUsIGFuZCBDbG96YXBpbmUiLFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEsSW50ZXJ2ZW50aW9uYWwsMTcwMDYwLDIwMDctMDMtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkFuIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgMTItbW9udGggZWZmZWN0aXZlbmVzcyBvZiBvbGFuemFwaW5lLCBxdWV0aWFwaW5lLCByaXNwZXJpZG9uZSBhbmQgemlwcmFzaWRvbmUgdmVyc3VzIGhhbG9wZXJpZG9sIGluICBhbnRpcHN5Y2hvdGljLW5haXZlIHBhdGllbnRzIHdpdGggYSBmaXJzdC1lcGlzb2RlIHBzeWNob3NpcyIsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMTE4NzAzLDIwMTItMTItMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYmVwaHJlbmljIHNjaGl6b3BocmVuaWEsMTkzMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgKFJHSC0xODgpIGluIHRoZSBBY3V0ZSBFeGFjZXJiYXRpb24gb2YgU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNDg5NSwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwZXBzaWEsNDMyLG51bGwsIkEgY29tcGFyYXRpdmUsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHdoZXRoZXIgc3VtYXRyaXB0YW4gbW9kaWZpZXMgZ2FzdHJpYyBzaXplIGFmdGVyIDUwMCBtbCBvZiB3YXRlciBpbiBkeXNwZXB0aWMgc3ViamVjdHMgYW5kIG5vcm1hbCBzdWJqZWN0cyIsVW5pdmVyc2l0YSBEZWdsaSBTdHVkaSBHIERgQW5udW56aW8gQ2hpZXRpLEludGVydmVudGlvbmFsLDExMTEzNiwyMDAyLTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxmcm92YXRyaXB0YW4sOTAyMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsIkVmZmVjdHMgb2YgRnJvdmF0cmlwdGFuIGFzIFByb3BoeWxhY3RpYyBUcmVhdG1lbnQgb2YgQ2x1c3RlciBIZWFkYWNoZSwgYSBNdWx0aWNlbnRlciwgUGxhY2Viby1Db250cm9sbGVkLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFByb3NwZWN0aXZlLCBQaGFzZSBJSUkgUGFyYWxsZWwtR3JvdXAgVHJpYWwgQ29tcGFyaW5nIEZyb3ZhdHJpcHRhbiB3aXRoIFBsYWNlYm8iLCJCZXJsaW4tQ2hlbWllIEFHLCBUaGUgTWVuYXJpbmkgR3JvdXAiLEludGVydmVudGlvbmFsLDExNzA0OSwyMDA2LTExLTA2IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQb3N0IHRyYXVtYXRpYyBzdHJlc3MgZGlzb3JkZXIsMTkzNSxudWxsLFByZWRpY3RvcnMgb2YgVHJlYXRtZW50IFJlc3BvbnNlIHRvIEZsdW94ZXRpbmUgaW4gUFRTRCBGb2xsb3dpbmcgYSBSZWNlbnQgSGlzdG9yeSBvZiBXYXIgWm9uZSBTdHJlc3MgRXhwb3N1cmUsIlRFTVBWQSBSZXNlYXJjaCBHcm91cCwgSW5jIixJbnRlcnZlbnRpb25hbCwyMjk5NywyMDEwLTAzLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LFBFUlNJU1QsQmlwb2xhciBNYWludGVuYW5jZSBTdHVkeSBvZiBMdXJhc2lkb25lIEFkanVuY3RpdmUgdG8gTGl0aGl1bSBvciBEaXZhbHByb2V4LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2ODQsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsRUxJQ0VfQkQsU3R1ZHkgb2YgdGhlIEVmZmljYWN5IG9mIEx1cmFzaWRvbmUgaW4gQ29nbml0aXZlIEZ1bmN0aW9uaW5nIGluIEJpcG9sYXIgUGF0aWVudHMsIkphcGFuIE5hdGlvbmFsIEluc3RpdHV0ZSBPZiBNZW50YWwgSGVhbHRoLCBOYXRpb25hbCBDZW50ZXIgT2YgTmV1cm9sb2d5ICYgUHN5Y2hpYXRyeSwgVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhIixJbnRlcnZlbnRpb25hbCwyNTc2NTQsMjAxNy0wNS0wOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsVGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBvbiBDaWxvc3Rhem9sIEluZHVjZWQgSGVhZGFjaGUsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMzQwNjksMjAxNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTZXJpb3VzIEJlaGF2aW9yYWwgUHJvYmxlbXMgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwxOTQxMSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsTWlncmFpbmUgU3R1ZHkgaW4gQWRvbGVzY2VudCBQYXRpZW50cyxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1NjU0LDIwMDgtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsRWZmZWN0IG9mIGxpdmVyLWRpc2NoYXJnaW5nIGFuZCBoZWF0LWNsZWFyaW5nIHRoZXJhcHkgZm9yIGZpcmUgZGVyaXZlZCBmcm9tIHN0YWduYXRpb24gb2YgbGl2ZXItUUkgdHlwZSBvZiBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIGFuZCBpdHMgaW5mbHVlbmNlIG9uIGluZmxhbW1hdG9yeSBjeXRva2luZXMsIkJlaWppbmcgQW5kaW5nIEhvc3BpdGFsLCBDYXBpdGFsIE1lZGljYWwgVW5pdmVyc2l0eSIsSW50ZXJ2ZW50aW9uYWwsMzE2NDk1LDIwMTctMTEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx0YW5kb3NwaXJvbmUsMzYxOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyLDE5MzcsVEFDR0FELFRhbmRvc3Bpcm9uZSBDaXRyYXRlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyLFN1bWl0b21vIFBoYXJtYWNldXRpY2FscyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODgxOTIsMjAxMS0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpFdXJvcGVhbiBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmlsYXpvZG9uZSw5OTQzLFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlNpbmdsZS1jZW50ZXIsIHNpbmdsZS1kb3NlIHBoYXJtYWNva2luZXRpY3Mgc3R1ZHkgb2YgdmlsYXpvZG9uZSBpbiBoZWFsdGh5IE1leGljYW4gYWR1bHQgdm9sdW50ZWVycyIsIkZvcmVzdCBSZXNlYXJjaCBJbnN0aXR1dGUsIEluYy4iLEludGVydmVudGlvbmFsLDIxNzQxMywyMDE0LTA1LTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEVuZG9jcmluZSBkaXNlYXNlLDExMixudWxsLCJTdHVkeSBvZiBCaW9lcXVpdmFsZW5jZSBmb3IgQ29zdGEgUmljYSBCZXR3ZWVuIHRoZSBMb3JjYXNlcmluZSBQcm90ZWluIENobG9yaHlkcmF0ZSBvZiBHdXRpcyBMaW1pdGVkIGFuZCBCZWx2aXEgb2YgQXJlbmEgUGhhcm1hY2V1dGljYWxzLCBBcyBhIFJlZmVyZW5jZSBNZWRpY2luZSIsR3V0aXMgRmFybWFj6XV0aWNhLEludGVydmVudGlvbmFsLDM4MjQ3NiwyMDE4LTA5LTIyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBXaXRoIFByZXZpb3VzIFBvb3IgUmVzcG9uc2Ugb3IgVG9sZXJhbmNlIHRvIE9yYWwgU3VtYXRyaXB0YW4sUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE1NjksMTk5OS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJSUksIHByb3NwZWN0aXZlLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHppcHJhc2lkb25lIGluIHByZS10cmVhdGVkIG9yIHVudHJlYXRlZCBzdWJqZWN0cyB3aXRoIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVycywgb3ZlciAxMiB3ZWVrcyB3aXRoIGFuIGV4dGVuc2lvbiBwaGFzZSBvZiB1cCB0byA2IG1vbnRocyBmb3IgdG9sZXJhYmlsaXR5IGFuZCBzYWZldHkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYwNTksMjAwMS0wNy0wNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsWkVJU0lHLCJBIDEyLXdlZWssIHByb3NwZWN0aXZlLCBmbGV4aWJsZS1kb3NlLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBvYnNlcnZhdGlvbmFsIGNsaW5pY2FsIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHppcHJhc2lkb25lIGZvciB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFVuaXZlcnNpdOR0c2tsaW5pa3VtIEhhbWJ1cmctRXBwZW5kb3JmLEludGVydmVudGlvbmFsLDY3MjExLDIwMDUtMTEtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIDI0LWggVGltZSBDb3Vyc2Ugb2YgU3RyaWF0YWwgRG9wYW1pbmUgRDIgUmVjZXB0b3IgT2NjdXBhbmN5IG9mIFppcHJhc2lkb25lOiBBIFBFVCBTdHVkeSxDZW50cmUgZm9yIEFkZGljdGlvbiBhbmQgTWVudGFsIEhlYWx0aCxJbnRlcnZlbnRpb25hbCw0NTcyOSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBTd2l0Y2hpbmcgdG8gWmlwcmFzaWRvbmUgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljcyxCcm9ueCBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzUxNTMsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxBIFN0dWR5IG9mIHRoZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyIGluIFBhdGllbnRzIFdobyBXZXJlIFN3aXRjaGVkIEZyb20gT3RoZXIgQW50aXBzeWNob3RpYyBEcnVncyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk3LDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLENsaW5pY2FsIGVmZmVjdCBvZiBjcm9zcyB0aXRyYXRpb24gb2YgYW50aS1wc3ljaG90aWNzIHdpdGggemlwcmFzaWRvbmUgaW4gc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMDk2OCwyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vb2QgZGlzb3JkZXIsNTMzLG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBc3BlcmdlciBzeW5kcm9tZSwxOTQ4LFBBSVJTLFN0dWR5IG9mIEFyaXBpcHJhem9sZSB0byBUcmVhdCBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc20sVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMDk2NSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJpbGFyb3hhemluZSBoeWRyb2NobG9yaWRlLDU5ODk2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxSRUZSRVNILFJQLTUwNjMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciwiUmV2aXZhIFBoYXJtYWNldXRpY2FscyBJbmMsIFNyaXN0ZWsgQ2xpbmljYWwgUmVzZWFyY2giLEludGVydmVudGlvbmFsLDgzMTg4LDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQmlvZXF1aXZhbGVuY2UgU3R1ZHkgb2YgQnJleHBpcHJhem9sZSBPcmFsbHkgRGlzaW50ZWdyYXRpbmcgVGFibGV0cyAoT0RUKSAyIG1nLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzc1OTcxLDIwMTktMDMtMjcgMDA6MDA6MDAsUmVjcnVpdGluZw0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxUaGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIEJyZXhwaXByYXpvbGUgVGFibGV0cyBpbiBDaGluZXNlIEhlYWx0aHkgU3ViamVjdHMsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM1OTI5MywyMDE5LTA0LTI0IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpKYXBhbmVzZSBBbmNlc3RyeSwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBpbiBIZWFsdGh5IEphcGFuZXNlIGFuZCBDYXVjYXNpYW4gUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDM0NTYzMCwyMDE4LTA2LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBKYXBhbmVzZSBhbmQgQ2F1Y2FzaWFuIFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNDU2MzAsMjAxOC0wNi0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGxhc21pZGl0YW4sNTQ4MTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gYW5kIFByb3ByYW5vbG9sIGluIEhlYWx0aHkgUGFydGljaXBhbnRzLEVsaSBMaWxseSAmIENvLEludGVydmVudGlvbmFsLDMxMTM0OSwyMDE3LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLENvbXBhcmlzb24gQmV0d2VlbiBGcm92YXRyaXB0YW4gUGx1cyBEaWZmZXJlbnQgVHJlYXRtZW50IFJlZ2ltZW5zIG9mIERleGtldG9wcm9mZW4gKDI1IGFuZCAzNy41IG1nKSBhbmQgRnJvdmF0cmlwdGFuIEFsb25lIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgV2l0aG91dCBBdXJhIGFuZCBNaWdyYWluZSBXaXRoIEF1cmEgQXR0YWNrcyxJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTM1NjM4LDIwMDktMDUtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOdXRyaXRpb25hbCBkaXNvcmRlciw2ODQsbnVsbCxUQUstOTU0IGluIENyaXRpY2FsbHkgSWxsIFBhcnRpY2lwYW50cyBXaXRoIEVudGVyYWwgRmVlZGluZyBJbnRvbGVyYW5jZSAoRUZJKSxUYWtlZGEgT25jb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMzMzOTM0LDIwMTgtMDgtMjUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXJkaW92YXNjdWxhciBkaXNlYXNlLDU3LG51bGwsR2VuZS1ieS1TdHJlc3MgSW50ZXJhY3Rpb25zIGluIEludGVydmVudGlvbiBTdHVkaWVzIFNpZ25pZmljYW5jZSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg0MzM4LDIwMTgtMDUtMjQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxKyxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmFycmV0dHMgZXNvcGhhZ3VzLDEyNzMsbnVsbCwiVGhlIHJvbGUgb2YgUWluZy1nYW4tamlhbi1waSBkZWNvY3Rpb24gdHJlYXRtZW50IG9mIEJhcnJldHQncyBlc29waGFndXMgYW5kIHRoZSBpbmZsdWVuY2Ugb2YgdGhlIGV4cHJlc3Npb24gb2YgQ0RYMiwgUDM4TUFQSyIsWGkgJ2FuIEhvc3BpdGFsIG9mIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMjEwNzM4LG51bGwsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25kdWN0IGRpc29yZGVyLDE5NTAsbnVsbCxUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBDRCBpbiBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIElvd2EsSW50ZXJ2ZW50aW9uYWwsMzE1MDgsMjAwNC0xMS0xNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYWluLDIwLERPTE9SRVMsU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5IG9mIFJvdGlnb3RpbmUgb24gUGFya2luc29uJ3MgRGlzZWFzZS1hc3NvY2lhdGVkIFBhaW4sVUNCIEJJT1NDSUVOQ0VTIEdtYkgsSW50ZXJ2ZW50aW9uYWwsMTYxMzYyLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMiBDbGluaWNhbCxDMixDTC1IMVQsNjI2MDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLEEgU3R1ZHkgdG8gQXNzZXNzIHRoZSBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIE9yYWwgQ0wtSDFUIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgUGFpbixDaGFybGVzdG9uIExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNzE2LDIwMTktMDItMDEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsZGloeWRyb2VyZ290YW1pbmUgbWVzeWxhdGUsNDQ0MTEsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZiBoYWxvcGVyaWRvbCBvciBhcmlwaXByYXpvbGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQW54aWV0eS1EZXByZXNzZWQgQXR0YWNrIixXYXJha3VrYWkgTWVkaWNhbCBDb3JwLEludGVydmVudGlvbmFsLDM0NTMyMCwyMDE4LTAyLTA2IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMissUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVG93YXJkcyBOZXVyb2Jpb2xvZ3ktYmFzZWQgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgQWZmZWN0aXZlIERpc29yZGVycyxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMTQwNTcsMjAxNi0wMS0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJUcmVhdG1lbnQtUmVzaXN0YW50IERlcHJlc3Npb24sIEhpcHBvY2FtcHVzIEF0cm9waHkgYW5kIFNlcm90b25pbiBHZW5ldGljIFBvbHltb3JwaGlzbSIsVW5pdmVyc2l0eSBvZiBPdHRhd2EsSW50ZXJ2ZW50aW9uYWwsMjA1Njk1LDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTkyMTYsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLElzY2hlbWljIHN0cm9rZSwzNjc2LEV1cm9IWVAtMSxDb29saW5nIFBsdXMgQmVzdCBNZWRpY2FsIFRyZWF0bWVudCBWZXJzdXMgQmVzdCBNZWRpY2FsIFRyZWF0bWVudCBBbG9uZSBmb3IgQWN1dGUgSXNjaGVtaWMgU3Ryb2tlLCJTdC4gSmFtZXMncyBIb3NwaXRhbCwgVW5pdmVyc2l0YXRza2xpbmlrdW0gRXJsYW5nZW4sIFVuaXZlcnNpdHkgb2YgRXJsYW5nZW4tTnVybmJlcmcgTWVkaWNhbCBTY2hvb2wiLEludGVydmVudGlvbmFsLDEyMTg4MywyMDEzLTA3LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hbHV6b3Rhbiw0Njg1NywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsUGhhc2UgSSBUcmlhbCBvZiBQUlgtMDAwMjMgaW4gSGVhbHRoeSBNYWxlIFZvbHVudGVlcnMsUHJlZGl4IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQzODgxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5vbi1pbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyw4MzcsbnVsbCxWb3J0aW94ZXRpbmUgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gVHlwZSAyIERpYWJldGVzLExveW9sYSBVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMzQ1ODQ4LDIwMTktMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLCJzdW1hdHJpcHRhbiAoYnVjY2FsIHRyYW5zbXVjb3NhbCBmaWxtLCBtaWdyYWluZSksIEtsYXJpYSBQaGFybWEiLDEwNDg4MywiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgQ2xpbmljYWwgVHJpYWwgdG8gU3R1ZHkgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgS0wtMDAxMTkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLENUQyBDbGluaWNhbCBUcmlhbCBDb25zdWx0YW50cyxJbnRlcnZlbnRpb25hbCwyODQ5ODcsMjAxNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU29jaWFsIHBob2JpYSwzMTUwLFNBRCxHZW9kb24gaW4gU29jaWFsIEFueGlldHkgRGlzb3JkZXIsRHVrZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMyNTcyLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWZvcm0gZGlzb3JkZXIsMTk3MSxudWxsLE9wZW4tTGFiZWwgWmlwcmFzaWRvbmUgU3R1ZHkgZm9yIFBzeWNob3NpcyBUcmVhdG1lbnQgaW4gQWRvbGVzY2VudHMsTmV3IFlvcmsgU3RhdGUgUHN5Y2hpYXRyaWMgSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDMzOTM0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlLDEyOSxudWxsLFBydWNhbG9wcmlkZSBQcmlvciB0byBTbWFsbCBCb3dlbCBDYXBzdWxlIEVuZG9zY29weSxVbml2ZXJzaXR5IG9mIEJyaXRpc2ggQ29sdW1iaWEsSW50ZXJ2ZW50aW9uYWwsMjYzNzQ2LDIwMTYtMDctMzEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQW4gb3Blbi1sYWJlbCwgc2luZ2xlLWRvc2UsIG11bHRpY2VudGVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgdmFyeWluZyBkZWdyZWVzIG9mIGhlcGF0aWMgaW1wYWlybWVudCBvbiB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGx1cmFzaWRvbmUgaW4gaGVhbHRoeSBhbmQgaGVwYXRpY2FsbHkgaW1wYWlyZWQgc3ViamVjdHMiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODE0ODQsMjAxMS0wMy0wMyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FuY2VyLDY1MSxudWxsLCJBIHBoYXNlIEkgc3R1ZHkgIGRlc2lnbmVkIHRvIGV2YWx1YXRlIHNhZmV0eSwgZWZmaWNhY3kgYW5kIHBoYXJtYWNvbG9naWNhbCBhY3Rpb25zIG9mIEFWSS00NTU3IGF0IGRpZmZlcmVudCBkb3NlcyBpbiBoZWFsdGh5IGh1bWFuIHZvbHVudGVlcnMiLFNhcmVwdGEgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzOTI5NywyMDAxLTA5LTE5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvbW90b3IgZGlzb3JkZXIsMTA4NCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3NlLWVzY2FsYXRpb24sIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljIHN0dWR5IG9mIEFDUC0xMDMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjQ5LDIwMDMtMDYtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgcmFuZG9taXplZCwgc2FmZXR5LCBlZmZpY2FjeSBzdHVkeSBvZiBidXNwaXJvbmUgaW4gcGF0aWVudHMgd2l0aCBkZXByZXNzaW9uIixH9nRlYm9yZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDEwOTI3OCwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCwiVGhlIENvbXBhcmlzb24gb2YgQXJpcGlwcmF6b2xlIGFuZCBSaXNwZXJpZG9uZSBBdWdtZW50YXRpb24gaW4gU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3ItUmVmcmFjdG9yeSBPYnNlc3NpdmUtQ29tcHVsc2l2ZSBEaXNvcmRlcjogQSBTaW5nbGUtQmxpbmQsIFJhbmRvbWl6ZWQgU3R1ZHkiLFn8evxuY/wgWWlsINxuaXZlcnNpdGVzaSxJbnRlcnZlbnRpb25hbCwxNDUyOTksbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25kdWN0IGRpc29yZGVyLDE5NTAsbnVsbCwiVHJpYWwgdG8gQXNzZXNzIHRoZSBQaGFybWFjb2tpbmV0aWNzLCBTYWZldHksIFRvbGVyYWJpbGl0eSBvZiBPcmFsIEJyZXhwaXByYXpvbGUgaW4gQ2hpbGRyZW4gKDYgdG8gPCAxMyBZZWFycyBPbGQpIFdpdGggQ2VudHJhbCBOZXJ2b3VzIFN5c3RlbSBEaXNvcmRlcnMiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMxMzgzNiwyMDE3LTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb3JlY3RhbCB0dW1vciw5ODksbnVsbCwiVGhlIEVmZmVjdCBvZiBNb3NhcHJpZGUgQ2l0cmF0ZSBvbiB0aGUgUXVhbGl0eSBhbmQgVG9sZXJhbmNlIG9mIENvbG9uaWMgTGF2YWdlOiBhIERvdWJsZS1ibGluZCwgUmFuZG9taXplZCBTdHVkeSIsQWljaGkgQ2FuY2VyIENlbnRlciBIb3NwaXRhbCBhbmQgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDEzNzkzNCwyMDA5LTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFNXSVRDSENvcmUsQSBTdHVkeSBFdmFsdWF0aW5nIEx1cmFzaWRvbmUgZm9yIFRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gU3ViamVjdHMgU3dpdGNoZWQgRnJvbSBPdGhlciBBbnRpcHN5Y2hvdGljIEFnZW50cyxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY3MjYwLDIwMTAtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLERpZ294aW4gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFdpdGggTHVyYXNpZG9uZSBIQ2wsU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNjQ2NzgsMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSWIsIDgtd2VlaywgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgc3dpdGNoIHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGNocm9uaWMgc2NoaXpvcGhyZW5pYSwgYWZ0ZXIgc3dpdGNoaW5nIHRoZXJhcHkgZnJvbSBvdGhlciBhbnRpcHN5Y2hvdGljcyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjQ1NSwyMDAyLTAxLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDNiIENsaW5pY2FsLEMzQix6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUlJYiwgbXVsdGljZW50ZXIsIG9wZW4tbGFiZWwsIG5vbi1jb21wYXJhdGl2ZSwgc3dpdGNoIHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB6aXByYXNpZG9uZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhLCBhZnRlciBzd2l0Y2hpbmcgdGhlcmFweSBmcm9tIG90aGVyIGFudGlwc3ljaG90aWNzIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg2NDAzLDIwMDItMDQtMDkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBXaXRoIFppcHJhc2lkb25lIGluIEZpcnN0LWVwaXNvZGUgUHN5Y2hvc2lzLENob25idWsgTmF0aW9uYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCw2NzkxNywyMDEwLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgaGVhZC10by1oZWFkIHRyaWFsIGNvbXBhcmluZyBpbG9wZXJpZG9uZSB3aXRoIHppcHJhc2lkb25lIHRvIGV2YWx1YXRlIHRoZSBwb3RlbnRpYWwgZWZmZWN0IG9mIGlsb3Blcmlkb25lIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSxOb3ZhcnRpcyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNDIxNTksMjAwMi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RzIG9mIFppcHJhc2lkb25lOiBSZWxhdGlvbnNoaXAgdG8gV29ya2luZyBNZW1vcnkgYW5kIERvcGFtaW5lIEJsb2NrYWRlLE5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLEludGVydmVudGlvbmFsLDM2Mjg1LDIwMDItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRW5lcmd5IEhvbWVvc3Rhc2lzIFVuZGVyIFRyZWF0bWVudCBXaXRoIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzLENoYXJpdGUgVW5pdmVyc2l0YWV0c21lZGl6aW4gQmVybGluLEludGVydmVudGlvbmFsLDM1Nzc4LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxaT0RJQUMsTGFyZ2UgU2ltcGxlIFRyaWFsIChMU1QpIE9mIENhcmRpb3Zhc2N1bGFyIFNhZmV0eSBPZiBaaXByYXNpZG9uZSBBbmQgT2xhbnphcGluZS0gKFpvZGlhYyksUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTEyNCwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9sYW56YXBpbmUgVmVyc3VzIEFuIEFjdGl2ZSBDb21wYXJhdG9yIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzNTAyNSwyMDAxLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFppcHJhc2lkb25lIGluIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NjA0LDIwMDYtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVEFJTE9SLEFuIGV4cGVyaW1lbnRhbCBzdHVkeSBjb21wYXJpbmcgZGlzY29udGludWF0aW9uIHdpdGggbWFpbnRlbmFuY2UgdGhlcmFweSBvZiBhbnRpcHN5Y2hvdGljIG1lZGljYXRpb24gaW4gcGF0aWVudHMgd2l0aCBuZXdseSBkaWFnbm9zZWQgc2NoaXpvcGhyZW5pYSBvciBzY2hpem9waHJlbmlhLWxpa2UgcHN5Y2hvc2lzIHdpdGhvdXQgcHN5Y2hvdGljIHN5bXB0b21zLEtvZWJlbmhhdm5zIFVuaXZlcnNpdGV0LEludGVydmVudGlvbmFsLDI5ODg2MywyMDE3LTAzLTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBmdW5jdGlvbmFsIGFuZCBzdHJ1Y3R1cmFsIGJyYWluIGNoYW5nZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb2duaXRpdmUgcHJvY2Vzc2luZyBvZiBlbW90aW9uYWwgdmlzdWFsIHN0aW11bGkgaW4gc2NoaXpvcGhyZW5pYyBwYXRpZW50cyBhZnRlciB0cmVhdG1lbnQgd2l0aCB6aXByYXNpZG9uZSxVbml2ZXJzaXRlIERlIE1vbnRyZWFsLEludGVydmVudGlvbmFsLDI5ODA3NyxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDExLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxMTFMtSUNQLEV2YWx1YXRpbmcgdGhlIEVmZmljYWN5IG9mIGEgTGF0ZS1MaWZlIFNjaGl6b3BocmVuaWEgSW50ZWdyYXRlZCBDYXJlIFBhdGh3YXkgdG8gVHJlYXQgQWN1dGUgUHN5Y2hvdGljIFN5bXB0b21zLENlbnRyZSBmb3IgQWRkaWN0aW9uIGFuZCBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDI0MDE1OSwyMDE1LTA4LTMxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpFdXJvcGVhbiBBbmNlc3RyeSwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFudGlwc3ljaG90aWNzIGFuZCBHZW5lIEV4cHJlc3Npb24gaW4gU29mdCBUaXNzdWVzLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBWaWVubmEsSW50ZXJ2ZW50aW9uYWwsMTkyNTkwLDIwMTAtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgNi13ZWVrLCBQbGFjZWJvLUNvbnRyb2xsZWQgVHJpYWwgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBPZiBaaXByYXNpZG9uZSA4MCBtZy9kYXkgYW5kIDE2MCBtZy9kYXkgaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIGFuZCBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIgaW4gdGhlIFppcHJhc2lkb25lIFN0dWR5IEdyb3VwIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE0NTIzNixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBUcmlhbCBUbyBFdmFsdWF0ZSBUaGUgRWZmZWN0cyBvZiBPcmFsIFppcHJhc2lkb25lIGFuZCBPcmFsIEhhbG9wZXJpZG9sIG9uIFFUYyBJbnRlcnZhbCBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFBmaXplciBHbG9iYWwgUmVzZWFyY2ggJiBEZXZlbG9wbWVudCxJbnRlcnZlbnRpb25hbCwxNDQyNzIsbnVsbCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxPbiB0aGUgcXVlc3Rpb24gb2YgTmV1cm9sZXB0aWMtSW5kdWNlZCBNZXRhYm9saWMgU3luZHJvbWUuIFN0dWR5IDI6IEZhdCBEaXN0cmlidXRpb24gYW5kIFNwZWNpZmljIEhvcm1vbmFsIFBhcmFtZXRlcnMuIENvbXBhcmlzb24gYmV0d2VlbiB0aGUgbWV0YWJvbGljIHN5bmRyb21lIG9mIHZ1bG5lcmFibGUgYW5kIG5vbi12dWxuZXJhYmxlIHBhdGllbnRzIGZyb20gdGhlIHNjaGl6b3BocmVuaWMgZ3JvdXAsTWVkaWNhbCBVbml2ZXJzaXR5IG9mIEdyYXosSW50ZXJ2ZW50aW9uYWwsMTMyNTMwLDIwMDYtMDEtMTkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgaW5mbHVlbmNlIG9mIGEgaGlnaC1mYXQgbWVhbCBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB6aXByYXNpZG9uZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ5MiwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgUGhhcm1hY29raW5ldGljcyBVc2luZyBhIFJlZHVjZWQgRm9vZCBFZmZlY3QgRm9ybXVsYXRpb24gQ29tcGFyZWQgdG8gUGhhcm1hY29raW5ldGljcyBGcm9tIENvbW1lcmNpYWwgQ2Fwc3VsZXMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw0MDk4MSwyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFppcHJhc2lkb25lIGluIFBlZGlhdHJpYyBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDM0MTkxLDIwMDctMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgR2VuZXJhbGl6ZWQgQW54aWV0eSBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIsTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDMyNTM2LDIwMDYtMDItMjggMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxaT09NLFppcHJhc2lkb25lIEFuZCBPbGFuemFwaW5lJ3MgT3V0Y29tZXMgSW4gTWFuaWEsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzMTQ5OCwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgRm9yIFRocmVlIERheXMgSW4gUGF0aWVudHMgV2l0aCBQc3ljaG90aWMgQWdpdGF0aW9uLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzU4ODMsMjAxNi0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsVHJlYXRtZW50IGFuZCBPdXRjb21lIG9mIEVhcmx5IE9uc2V0IEJpcG9sYXIgRGlzb3JkZXIsIk5vcnRoIFNob3JlIExvbmcgSXNsYW5kIEpld2lzaCBIZWFsdGggU3lzdGVtLCBUaGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDM0NDc3LDIwMDItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgb3JhbCBzdW1hdHJpcHRhbi1jb250cm9sbGVkLCByYW5kb21pemVkLCB0aHJlZSBhdHRhY2ssIHBhcmFsbGVsLWdyb3VwLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSBoZWFkYWNoZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU3OSwxOTk1LTA3LTEzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIG9wZW4tbGFiZWwsIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGZvdXItd2F5IGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGRvc2UgcHJvcG9ydGlvbmFsaXR5IG9mIG9yYWwgR1ItODU1NDhBIHBoYXJtYWNva2luZXRpY3MgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODA5MywxOTk0LTAxLTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBvcGVuLWxhYmVsLCBzaW5nbGUgYXJtLCB0aHJlZS1hdHRhY2sgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBwZXJjZW50YWdlIG9mIHN1YmplY3RzIHdobyBwcmVmZXJyZWQgbmFyYXRyaXB0YW4gdG8gdGhlaXIgdXN1YWwgbm9uLXRyaXB0YW4gbWlncmFpbmUgdGhlcmFweSBhZnRlciB0cmVhdGluZyB0aHJlZSBtaWdyYWluZXMgd2l0aCBuYXJhdHJpcHRhbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzUyMCwyMDAwLTA0LTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZG91YmxlLWR1bW15LCBhY3RpdmUtcGxhY2VibyBjb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgbXVsdGktYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIG9yYWwgbmFyYXRyaXB0YW4gY29tcGFyZWQgd2l0aCBvcmFsIG5hcHJveGVuIHNvZGl1bSBvbiBtaWdyYWluZS1yZWxhdGVkIHF1YWxpdHkgb2YgbGlmZSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE3MiwxOTk3LTEwLTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBsYWNlYm8tY29udHJvbGxlZCwgdHdvLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgd2hldGhlciBhbGNvaG9sIGhhcyBhbiBlZmZlY3Qgb24gdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5LCBwaGFybWFjb2tpbmV0aWNzIG9yIHBoYXJtYWNvZHluYW1pY3Mgb2YgR1ItODU1NDgiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzcxNTQsMTk5NC0wNC0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsR2FzdHJpdGlzLDEyOCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBtb3NhcHJpZGUgb24gb2Vzb3BoYWdlYWwgMjQtaCBhY2lkIHJlZmx1eCB2YXJpYWJsZXMgaW4gcGF0aWVudHMgd2l0aCBnYXN0cm8tZXNvcGhhZ2VhbCByZWZsdXggZGlzZWFzZSAoR0VSRCkgc3ltcHRvbXMiLERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTkzNzMsMTk5OC0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cmljIG1vdGlsaXR5IGRpc29yZGVyLDM3NixudWxsLEEgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBtb3NhcHJpZGUgb24gZ2FzdHJpYyBtb3RpbGl0eSBpbiBwYXRpZW50cyB3aXRoIGRpYWJldGljIGF1dG9ub21pYyBuZXVyb3BhdGh5LERhaW5pcHBvbiBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTk0ODcsMTk5Mi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygb21lcHJhem9sZSBwbHVzIGEgcHJva2luZXRpYywgbW9zYXByaWRlLCB0byBvbWVwcmF6b2xlIGFsb25lIGZvciB0aGUgcG90ZW50aWFsIHRyZWF0bWVudCBvZiBub24tZXJvc2l2ZSByZWZsdXggZGlzZWFzZSIsSHlvZ28gQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCw3NDY5MywyMDExLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQ29tcGFyYXRpdmUgRWZmaWNhY3kgb2YgT21lcHJhem9sZSBwbHVzIE1vc2FwcmlkZSBDb21iaW5hdGlvbiBUaGVyYXB5IHZlcnN1cyBPbWVwcmF6b2xlIE1vbm90aGVyYXB5IGluIFBhdGllbnRzIHdpdGggUHJvdG9uIFB1bXAgSW5oaWJpdG9yLVJlZnJhY3RvcnkgR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXggRGlzZWFzZTogYSByYW5kb21pemVkLCBjb250cm9sbGVkIHRyaWFsIixSYWphdml0aGkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzc5MDgzLDIwMTYtMDEtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyZW56YXByaWRlLDQyMTEsU2FmZXR5LFksWSxEaXNjb250aW51ZWQsRFgsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLExvbmctVGVybSBTYWZldHkgb2YgUmVuemFwcmlkZSBpbiBXb21lbiBXaXRoIENvbnN0aXBhdGlvbi1QcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUy1DKSxBbGl6eW1lIHBsYyxJbnRlcnZlbnRpb25hbCwxODEzNCwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHhhbGlwcm9kZW4sNDQ3NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLE1vdG9yIG5ldXJvbmUgZGlzZWFzZSwyMTIsbnVsbCwiQSBwaGFzZSBJSUksIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB4YWxpcHJvZGVuIGluIHBhdGllbnRzIHdpdGggYW15b3Ryb3BoaWMgbGF0ZXJhbCBzY2xlcm9zaXMiLFNhbm9maSBTQSxJbnRlcnZlbnRpb25hbCw0NTgxNiwxOTk3LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMseGFsaXByb2Rlbiw0NDc0LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTW90b3IgbmV1cm9uZSBkaXNlYXNlLDIxMixudWxsLCJBIHBoYXNlIElJSSwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHhhbGlwcm9kZW4gaW4gY29tYmluYXRpb24gd2l0aCByaWx1em9sZSBpbiBwYXRpZW50cyB3aXRoIGFteW90cm9waGljIGxhdGVyYWwgc2NsZXJvc2lzIixTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsNDU4MTMsMTk5Ny0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLCJFdmFsdWF0aW9uIG9mIEEgSHlkcm8tQWxjb2hvbGljIFNvbHV0aW9uIG9mIFN1bWF0cmlwdGFuIEFkbWluaXN0ZXJlZCBTdWJsaW5ndWFsbHkgaW4gVGhlIFRyZWF0bWVudCBvZiBhbiBBdHRhY2sgb2YgQ2x1c3RlciBIZWFkYWNoZSwgYXQgQSBEb3NlIG9mIDIsIDQgb3IgNiBtZyBEZXRlcm1pbmVkIGJ5IFRoZSBGaXJzdCBQYXJ0IG9mIFN0dWR5ICdEb3NlLVJhbmdpbmcnIixVbml0aGVyIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxMTcxMDgsMjAwNy0wOS0yMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHR3by1hdHRhY2sgY3Jvc3NvdmVyLCBpbnBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc2MgR1ItNDMxNzVDICg2IG1nKSBpbiBwYXRpZW50cyB3aXRoIGNsdXN0ZXIgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTEzNzU1LDE5ODktMDgtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwgZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzdW1hdHJpcHRhbiA1MCBtZyB0YWJsZXRzIHZlcnN1cyBwbGFjZWJvIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2VsZi1kZXNjcmliZWQgYW5kL29yIHBoeXNpY2lhbi1kaWFnbm9zZWQgc2ludXMgaGVhZGFjaGVzIHRoYXQgbWVldCBJbnRlcm5hdGlvbmFsIEhlYWRhY2hlIFNvY2lldHkgKElIUykgY3JpdGVyaWEgZm9yIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg4MDMwLDIwMDEtMTEtMDIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUliLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5LCBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBzdW1hdHJpcHRhbiBmYXN0IGRpc2ludGVncmF0aW5nIHRhYmxldHMgKEZEVCkgNTAgYW5kIDEwMCBtZyB2ZXJzdXMgcGxhY2VibyBkdXJpbmcgdGhlIG1pbGQgcGFpbiBwaGFzZSBvZiBhIG1pZ3JhaW5lIGF0dGFjayIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzk1MiwyMDAyLTEwLTEwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3NzLW92ZXIsIG11bHRpYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSByZWxhdGlvbiBvZiBtaWdyYWluZSByZWN1cnJlbmNlIGFuZCBhbnhpZXR5LWRlcHJlc3NpdmUgc3ltcHRvbXMgaW4gcGF0aWVudHMgdHJlYXRlZCB3aXRoIHN1bWF0cmlwdGFuIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODM5LDIwMDItMDMtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSVYsIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQsIHR3by1wZXJpb2QsIHBhcnRseSBjcm9zcy1vdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIGNsaW5pY2FsIGVmZmljYWN5LCBlY29ub21pYyBpbXBhY3QgYW5kIHF1YWxpdHkgb2YgbGlmZSBvZiBzdW1hdHJpcHRhbiBuYXNhbCBzcHJheSAoMjAgbWcpIGNvbXBhcmVkIHRvIHBhdGllbnSScyBjdXN0b21hcnkgdHJlYXRtZW50IGluIGFjdXRlIG1pZ3JhaW5lIGF0dGFja3MgaW4gYSB3b3JrcGxhY2Ugc2V0dGluZyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4Nzc4OSwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsLWdyb3VwLCBzaW5nbGUtYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHR3byBkb3NlIGxldmVscyAoNSBhbmQgMjAgbWcpIG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgYSBzaW5nbGUgbWlncmFpbmUgYXR0YWNrIGluIGFkb2xlc2NlbnQgbWlncmFpbmV1cnMgKDEyIHRvIDE3IHllYXJzIG9mIGFnZSkiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3NzQsMjAwMi0wNC0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcHJvc3BlY3RpdmUsIERhbmlzaCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlIGF0dGFjaywgb3V0cGF0aWVudCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCB0aGUgZWZmZWN0IG9mIHN1bWF0cmlwdGFuIDUwIG1nIHZlcnN1cyBwbGFjZWJvIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdpdGggNiB0byAxMSBhdHRhY2tzIHBlciB5ZWFyLCB0YWtlbiBkdXJpbmcgdGhlIG1pbGQgcGhhc2Ugb2YgYSBtaWdyYWluZSBhdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3MDQsMjAwMi0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsU2FmZXR5IFRvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBBTEQtNDAzLEFsZGVyIEJpb3BoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODY1ODksMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCBzaW5nbGUtYXR0YWNrLCBpbnBhdGllbnQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBvcmFsIG5hcmF0cmlwdGFuIHdpdGggdGhhdCBvZiBvcmFsIHN1bWF0cmlwdGFuIGFuZCBwbGFjZWJvIGluIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUgaGVhZGFjaGUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzgwODEsMTk5My0xMC0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtZG9zZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBhbG1vdHJpcHRhbiBpbiBwYXRpZW50cyB3aXRoIG1pZ3JhaW5lIixLaW5nJ3MgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsNzQxNDIsMjAwMi0wNy0xOSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHR3by13YXkgY3Jvc3NvdmVyIG91dC1wYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIG5hc2FsIHN1bWF0cmlwdGFuIGluIHRyZWF0bWVudCBvZiBtaWdyYWluZSBhdHRhY2tzIG9mIGNoaWxkcmVuIGFuZCBhZG9sZXNjZW50cyIsVW5pdmVyc2l0eSBvZiBIZWxzaW5raSxJbnRlcnZlbnRpb25hbCw3MTIwNCwxOTk5LTA5LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIHN1bWF0cmlwdGFuIGRlbGl2ZXJlZCB2aWEgdGhlIGludHJhamVjdCBzeXN0ZW0sWm9nZW5peCBJbmMsSW50ZXJ2ZW50aW9uYWwsMTg0OTMsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEFuIE9wZW4gRGVzaWduIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgb2YgUmVjdGFsIERvc2luZyBXaXRoIFN1bWF0cmlwdGFuICgyNSBtZyBhbmQgT3B0aW9uYWwgMjUgbWcgRG9zZSBmb3IgSGVhZGFjaGUgUmVjdXJyZW5jZSkgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBBbGwgTWlncmFpbmUgQXR0YWNrcyBPdmVyIGEgMTIgTW9udGggUGVyaW9kLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTczNDE3LDE5OTQtMDEtMjUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElJLCBJbi1wYXRpZW50LCBPcGVuLWxhYmVsLCBQaWxvdCBTdHVkeSB0byBBc3Nlc3MgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBPcmFsIEdSLTQzMTc1QyBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBBZG9sZXNjZW50cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTczMzksMTk5MS0wNC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLERydWcgVXNlIEludmVzdGlnYXRpb24gZm9yIEltaWdyYW4gSW50cmFuYXNhbCAoU3VtYXRyaXB0YW4pLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MzQ1LDIwMDMtMDYtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1ibGluZCwgUGxhY2Viby1jb250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBJbXBhY3Qgb2YgSW1pdHJleCBJbmplY3Rpb24gb24gV29yayBQbGFjZSBQcm9kdWN0aXZpdHkgTG9zcyBEdWUgdG8gbWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTQ5MTg4LDE5OTUtMDQtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENsaW5pY2FsIFRyaWFsIG9mIEVsZXRyaXB0YW4gdG8gVHJlYXQgQWN1dGUgTWlncmFpbmUgQXR0YWNrcyBpbiBBZHVsdCBQYXRpZW50cyxJbnRhcyBQaGFybWFjZXV0aWNhbHMgTHRkLEludGVydmVudGlvbmFsLDEzMzQzNywyMDEwLTA1LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxBIENsaW5pY2FsIFRyaWFsIHRvIFN0dWR5IHRoZSBFZmZlY3RzIG9mIEFsbW90cmlwdGFuIE9yYWwgVGFibGV0cyBpbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIEhlYWRhY2hlLE1TTiBMYWJvcmF0b3JpZXMgTHRkLEludGVydmVudGlvbmFsLDEzMzI3OSwyMDEwLTEyLTA3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgY29tcGFyYXRpdmUgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiB6b2xtaXRyaXB0YW4gb3Igc3VtYXRyaXB0YW4gZm9yIHRyZWF0bWVudCBvZiBtaWdyYWluZSxLb25zdGFudG9wb3VsaW8gR0VORVJBTCBIT1NQSVRBTCBPRiBORUEgSU9OSUEgLSBQQVRJU0lPTixJbnRlcnZlbnRpb25hbCwxMTQ4MTYsMjAwMy0wMS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbGVkIFN0dWR5IHRvIEV2YWx1YXRlIE9uZS15ZWFyIFRvbGVyYWJpbGl0eSBhbmQgRWZmaWNhY3kgb2YgU3VtYXRyaXB0YW4gTmFzYWwgU3ByYXkgaW4gQWRvbGVzY2VudHMgd2l0aCBNaWdyYWluZSIsQ2xldmVsYW5kIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDExMDc2NCwyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIENvbXBhcmF0aXZlLCBEb3NlLWZpbmRpbmcsIERvdWJsZS1ibGluZCwgTXVsdGljZW50ZXIsIFBsYWNlYm8tY29udHJvbGxlZCwgUmFuZG9taXplZCBTdHVkeSBUbyBFdmFsdWF0ZSBTYWZldHksIEVmZmljYWN5IEFuZCBFYXJseSBDbGluaWNhbCBFeHBlcmllbmNlIFdpdGggU3ViY3V0YW5lb3VzIE5hcmF0cmlwdGFuIEluIFRoZSBBY3V0ZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUiLEdsYXhvIFdlbGxjb21lIFJlc2VhcmNoIGFuZCBEZXZlbG9wbWVudCBMdGQsSW50ZXJ2ZW50aW9uYWwsMTA3NDI2LDE5OTgtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGFzc2VzcyB0aGUgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIixHbGF4byBXZWxsY29tZSBCaW9waGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDEwNjA4NSwxOTk5LTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx6b2xtaXRyaXB0YW4sNDczNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcmFuZG9taXplZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHRvbGVyYWJpbGl0eSBvZiB6b2xtaXRyaXB0YW4gdmVyc3VzIGEgY29tYmluYXRpb24gb2YgYWNldHlsc2FsaWN5bGljIGFjaWQgYW5kIG1ldG9jbG9wcmFtaWRlIGluIHRoZSBhY3V0ZSBvcmFsIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsUmFuZ3VlaWwgaG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTEzNDAyLDIwMDItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGNvbXBhcmF0aXZlLCBjcm9zc292ZXIsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IGV2YWx1YXRpbmcgcGF0aWVudCBzYXRpc2ZhY3Rpb24gd2l0aCByaXphdHJpcHRhbiB2ZXJzdXMgb3RoZXIgdHJpcHRhbnM6IERpcmVjdCBoZWFkLXRvLWhlYWQgY29tcGFyaXNvbnMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExMDQ1NywyMDAxLTEwLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixlbHRvcHJhemluZSw1MDI0LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxEdXBoYXIsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvIGFuZCBiYXNlbGluZS1jb250cm9sbGVkLCBtdWx0aS1jZW50ZXIsoCBwYXJhbGxlbC1ncm91cCBzdHVkeSBvZqBlbHRvcHJhemluZSBpbiBkZW1lbnRlZCBlbGRlcmx5IHBhdGllbnRzIHdpdGggZGlzcnVwdGl2ZSBiZWhhdmlvdXIiLEFtYXJhbnR1cyBCaW9TY2llbmNlIEhvbGRpbmdzIEluYyxJbnRlcnZlbnRpb25hbCwyNDg0NDAsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDJhIENsaW5pY2FsLEMyQSxlbHRvcHJhemluZSw1MDI0LCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCwiVGhlIEVmZmVjdHMgb2YgRWx0b3ByYXppbmUgb24gU3ltcHRvbXMgb2YgQXR0ZW50aW9uIERlZmljaXQgSHlwZXJhY3Rpdml0eSBEaXNvcmRlciAoQURIRCkgaW4gQWR1bHRzOiBhIERvdWJsZS1CbGluZCwgTXVsdGlwbGUgRG9zZSwgQ3Jvc3NvdmVyLCBTYWZldHkgYW5kIFByZWxpbWluYXJ5IEVmZmljYWN5IFRyaWFsIiwiQW1hcmFudHVzIEJpb1NjaWVuY2UgSG9sZGluZ3MgSW5jLCBQc3ljaG9HZW5pY3MgSW5jIixJbnRlcnZlbnRpb25hbCwxNzI0MTIsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJidXNwaXJvbmUgKHRyYW5zZGVybWFsKSwgQk1TL0VsYW4iLDUxMjUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsIkFuIDgtd2Vlaywgb3Blbi1sYWJlbCwgcGhhc2UgSUkgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSBhbmQgZWZmaWNhY3kgb2YgYnVzcGlyb25lIGluIGNoaWxkcmVuIHdpdGggQXR0ZW50aW9uIERlZmljaXQgSHlwZXJhY3Rpdml0eSBEaXNvcmRlciAoQURIRCkiLEVsYW4gQ29ycCBwbGMsSW50ZXJ2ZW50aW9uYWwsNTQ0MTEsMTk5Ny0wNi0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRSWHZVc3VhbFRycHRuLERvZXMgVHJleGltZXQgSW1wcm92ZSBQcm9kdWN0aXZpdHkgYW5kIFBhdGllbnQgU2F0aXNmYWN0aW9uIER1ZSB0byBTdXN0YWluZWQgUmVzcG9uc2UgYW5kIENvbnNpc3RlbmN5IG9mIFJlc3BvbnNlPyxUaGUgQ2xldmVsYW5kIENsaW5pYyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsNjQ4NTgsMjAwOS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFJpbm90YW1hLFJpemF0cmlwdGFuIDEwIG1nIFJQRCBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLFVuaXZlcmlzdGF0IER1aXNidXJnLUVzc2VuLEludGVydmVudGlvbmFsLDYzNjcwLDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFJpemF0cmlwdGFuIGluIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBQYXRpZW50cyBXaXRoIFVuaWxhdGVyYWwgVHJpZ2VtaW5hbC1BdXRvbm9taWMgU3ltcHRvbXMsSVJDQ1MgU2FuIFJhZmZhZWxlLEludGVydmVudGlvbmFsLDU0MTc5LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgUml6YXRyaXB0YW4gZm9yIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgaW4gUGF0aWVudHMgb24gVG9waXJhbWF0ZSBmb3IgTWlncmFpbmUgUHJvcGh5bGF4aXMsTWVyY2sgU2hhcnAgJiBEb2htZSBDb3JwLEludGVydmVudGlvbmFsLDM5MDA4LDIwMDktMDMtMjQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLE1heGFsdCAxMCBtZyBQbHVzIENhZmZlaW5lIDc1IG1nIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUgSGVhZGFjaGUsRGlhbW9uZCBIZWFkYWNoZSBDbGluaWMsSW50ZXJ2ZW50aW9uYWwsMTkxOTEzLDIwMDctMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFRvbGVyYWJpbGl0eSBvZiBSaXphdHJpcHRhbiBDby1BZG1pbmlzdGVyZWQgV2l0aCBBY2V0YW1pbm9waGVuIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lLERpYW1vbmQgSGVhZGFjaGUgQ2xpbmljLEludGVydmVudGlvbmFsLDE0MDIxLDIwMDYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFN0dWR5IHRvIFRlc3QgYW4gQXBwcm92ZWQgUHJvZHVjdCBpbiB0aGUgRWFybHkgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMzkzNCwyMDA0LTEwLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxTYWZldHksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tTGFiZWwsIFNpbmdsZS1Eb3NlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBQZWRpYXRyaWMgUGFsYXRhYmlsaXR5IG9mIE1heGFsdCBPcmFsIERpc2ludGVncmF0aW5nIFRhYmxldHMiLE1lcmNrICYgQ28gSW5jLEludGVydmVudGlvbmFsLDExNzQ5OCxudWxsLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciwgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IG9mIEZyb3ZhdHJpcHRhbiBWZXJzdXMgUml6YXRyaXB0YW4gZm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgT2YgTWlncmFpbmUiLFRoZSBNZW5hcmluaSBHcm91cCxJbnRlcnZlbnRpb25hbCwxMTcwNTIsMjAwNy0wNC0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIHJpemF0cmlwdGFuIHZlcnN1cyBlcmdvdGFtaW5lL2NhZmZlaW5lIGluIG1pZ3JhaW5lIixNZXJjayAmIENvIEluYyxJbnRlcnZlbnRpb25hbCwxMTU0NjMsMjAwMy0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBjb21wYXJhdGl2ZSwgbmF0dXJhbGlzdGljIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygcml6YXRyaXB0YW4gb24gbWlncmFpbmUgdHJlYXRtZW50IG91dGNvbWVzIGluIHRyaXB0YW4tbmFpdmUgcGF0aWVudHMiLCJNZXJjayAmIENvIEluYywgTW9udGVmaW9yZSBNZWRpY2FsIENlbnRlciIsSW50ZXJ2ZW50aW9uYWwsMTExMTg2LDIwMDEtMDMtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZXZhbHVhdGluZyBwYXRpZW50IHNhdGlzZmFjdGlvbiB3aXRoIHJpemF0cmlwdGFuIHZlcnN1cyBvdGhlciB0cmlwdGFuczogRGlyZWN0IGhlYWQtdG8taGVhZCBjb21wYXJpc29ucyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDU3LDIwMDEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsIkEgcGhhc2UgSUlJLCBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCBleHRlbnNpb24gc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBwYXRpZW50cyB3aG8gY29tcGxldGVkIHRoZSAxMC13ZWVrIGFjdXRlIHBoYXNlIG9mIHRoZSBzdHVkeSBDTjEzODAwNSBTVCBhbmQgZm9yIHdob20gY29udGludWVkIHRyZWF0bWVudCB3YXMgaW5kaWNhdGVkIGZvciBwc3ljaG90aWMgc3ltcHRvbXMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhIG9mIHRoZSBBbHpoZWltZXKScyB0eXBlIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw3OTcwOSwyMDAwLTA4LTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxUaGUgQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgdmVyc3VzIFJpc3Blcmlkb25lIGluIEF0dGVudGlvbiBEZWZpY2l0IEh5cGVyYWN0aXZpdHkgRGlzb3JkZXIsU2hhaGVlZCBCZWhlc2h0aSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTU1MTkzLDIwMTItMDItMjkgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgYW5kIFppcHJhc2lkb25lIEFtb25nIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVW5pdmVyc2l0eSBvZiBNYWxheWEsSW50ZXJ2ZW50aW9uYWwsOTU4OTEsMjAwOS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgYXJpcGlwcmF6b2xlIGFuZCBjYXJiYW1hemVwaW5lIGNvYWRtaW5pc3RyYXRpb24gaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsODA2MjAsMjAwMC0wNi0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDgsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLDEyLU1vbnRoIFN0dWR5IENvbXBhcmluZyBQYWxpcGVyaWRvbmUgUGFsbWl0YXRlIGFuZCBTZWxlY3QgT3JhbCBBbnRpcHN5Y2hvdGljcyBpbiBBZHVsdHMgd2l0aCBTY2hpem9waHJlbmlhIHdobyBoYXZlIGJlZW4gUmVjZW50bHkgRGlzY2hhcmdlZCBmcm9tIGFuIElucGF0aWVudCBQc3ljaGlhdHJpYyBIb3NwaXRhbCwiT3J0aG8tTWNOZWlsIEphbnNzZW4gU2NpZW50aWZpYyBBZmZhaXJzLCBMTEMiLEludGVydmVudGlvbmFsLDY5NzY3LDIwMTAtMDgtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdGFuZGFyZCBDb21wcmVoZW5zaXZlIEludGVydmVudGlvbiB0byBUcmVhdCBGaXJzdC1lcGlzb2RlIFNjaGl6b3BocmVuaWEsUGVraW5nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsNjM2NzYsMjAwOC0wOS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBcmlwaXByYXpvbGUgT3Blbi1MYWJlbCBSb2xsb3ZlciBTdHVkeSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsNjE0MTksMjAwNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksU1RFUCAyMDMsIlN0dWR5IHRvIEV2YWx1YXRlIHRoZSBFZmZpY2FjeSwgU2FmZXR5LCBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgT1BDLTM0NzEyIGFuZCBBcmlwaXByYXpvbGUgZm9yIFRyZWF0bWVudCBvZiBBY3V0ZSBTY2hpem9waHJlbmlhIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw1NTY3NywyMDA5LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSA0LXdlZWssIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIsIEFjdGl2ZS0gYW5kIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUlJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGNvbXBhcmVkIHdpdGggZWl0aGVyIGhhbG9wZXJpZG9sIG9yIHBsYWNlYm8gaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggYSBEU00tSVYgZGlhZ25vc2lzIG9mIGFjdXRlIHJlbGFwc2UsIHNjaGl6b3BocmVuaWEgb3Igc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCw1MTIxNSwyMDAwLTA1LTE2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDI2LXdlZWssIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgbXVsdGljZW50ZXIgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHdoZW4gY29tcGFyZWQgdG8gb2xhbnphcGluZSBpbiBwYXRpZW50cyB3aXRoIGFjdXRlIHJlbGFwc2Ugb2Ygc2NoaXpvcGhyZW5pYSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE1NCwyMDAzLTA1LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2R5bmFtaWNzLE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsTWV0YWJvbGljIFNpZ25hdHVyZXMgYW5kIEJpb21hcmtlcnMgaW4gU2NoaXpvcGhyZW5pYSxEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzYzMDYsMjAwNy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsOCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENBVElFLFNjaGl6b3BocmVuaWEgVHJpYWwsVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDM2MTgzLDIwMDAtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBOZXcgU3RyYXRlZ3kgZm9yIFBoYXJtYWNvbG9naWNhbCBUcmVhdG1lbnQgaW4gUGVvcGxlcyBXaXRoIFNjaGl6b3BocmVuaWEsSW5qZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1ODA3LDIwMDYtMDgtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBDb21wYXJpbmcgUGF0aWVudHMgVGFraW5nIE9sYW56YXBpbmUgYW5kIFBhdGllbnRzIFRha2luZyBBcmlwaXByYXpvbGUgb24gTGVhcm5pbmcgb2YgVm9jYXRpb25hbCBTa2lsbHMsVW5pdmVyc2l0eSBvZiBUZXhhcyBIZWFsdGggU2NpZW5jZSBDZW50ZXIgU2FuIEFudG9uaW8sSW50ZXJ2ZW50aW9uYWwsMzU0NjEsMjAwNC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFkanVuY3RpdmUgVHJlYXRtZW50IG9mIEFyaXBpcHJhem9sZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMiLEludGVydmVudGlvbmFsLDM1MjY3LDIwMDUtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNDk4NiwyMDA1LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxUaGUgRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gUGF0aWVudHMgV2l0aCBNZXRhYm9saWMgU3luZHJvbWUsVVMgRGVwYXJ0bWVudCBvZiBWZXRlcmFucyBBZmZhaXJzLEludGVydmVudGlvbmFsLDM0NTk3LDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBmb3IgU2NoaXpvcGhyZW5pYSBPdXRwYXRpZW50cyBDb21wbGV0aW5nIEJNUyBDbGluaWNhbCBUcmlhbHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1NDcsMjAwMy0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQXJpcGlwcmF6b2xlIFRyZWF0bWVudCBvZiBQcm9kcm9tYWwgUGF0aWVudHMsWWFsZSBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDMzOTgxLDIwMDQtMDItMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxSRU1FRFksQXNzZXNzaW5nIGFwcHJvYWNoZXMgYWltZWQgYXQgaW1wcm92aW5nIHNleHVhbCBmdW5jdGlvbmluZyxJbXBlcmlhbCBDb2xsZWdlIEhlYWx0aGNhcmUgTkhTIHRydXN0LEludGVydmVudGlvbmFsLDMzNjk0MiwyMDE4LTA1LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmVjdHMgb2YgQXJpcGlwcmF6b2xlIGluIE92ZXJ3ZWlnaHQgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9sYW56YXBpbmUgZm9yIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDMzNDUzLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBhbmQgU3ltcHRvbXMgb2YgT2JzZXNzaXZlIENvbXB1bHNpdmUgRGlzb3JkZXIgKE9DRCksSmFtYWljYSBIb3NwaXRhbCBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzMxNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBYmlsaWZ5IFRoZXJhcHkgZm9yIFJlZHVjaW5nIENvbW9yYmlkIFN1YnN0YW5jZSBBYnVzZSxDcmVpZ2h0b24gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzEwNSwyMDA1LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBQaGFybWFjb2tpbmV0aWNzIChQSykgYW5kIFRvbGVyYWJpbGl0eSBTdHVkeSBpbiBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMsT3RzdWthIEFtZXJpY2EgUGhhcm1hY2V1dGljYWwgSW5jLEludGVydmVudGlvbmFsLDMyNDUyLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIFdpdGggQ28tTW9yYmlkIFNvY2lhbCBBbnhpZXR5LFVuaXZlcnNpdHkgb2YgTWVkaWNpbmUgYW5kIERlbnRpc3RyeSBvZiBOZXcgSmVyc2V5LEludGVydmVudGlvbmFsLDMxNDcwLDIwMDQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gQ28tTW9yYmlkIFNjaGl6b3BocmVuaWEgYW5kIENvY2FpbmUgRGVwZW5kZW5jZSIsRGVudmVyIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMzQ3OSwyMDA4LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVNQSVJFLEludHJhbXVzY3VsYXIgRGVwb3QgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGFzIE1haW50ZW5hbmNlIFRyZWF0bWVudCBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsIk90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwyMTI2OSwyMDA4LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksRVNDQVBFIFN0dWR5LEVmZmVjdCBvbiBjb2duaXRpdmUgZnVuY3Rpb24gb2YgYSB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTk0MTAsMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0IsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxCRVRBLEJyb2FkIGVmZmVjdGl2ZW5lc3M6IFN0dWR5IHdpdGggYXJpcGlwcmF6b2xlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5Mzk1LDIwMDItMDUtMDYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBpbG90IFN0dWR5IG9mIFByZWduZW5vbG9uZSBBdWdtZW50YXRpb24gVGFyZ2V0aW5nIENvZ25pdGl2ZSBTeW1wdG9tcyBpbiBQZXJzaXN0ZW50bHkgU3ltcHRvbWF0aWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxODkyOTEsMjAwNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgZm9yIEltcHJvdmluZyBTaWRlIEVmZmVjdHMgb2YgQ2xvemFwaW5lIGluIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggU2NoaXpvcGhyZW5pYSxNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTgyMTksMjAwNS0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIsS29yZWEgT3RzdWthIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwxNzI0NTIsMjAwNC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUmVzZWFyY2ggb2YgdGhlIFZhcmlhbmNlIG9uIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSBUcmVhdGVkIFdpdGggQXJpcGlwcmF6b2xlIG9uIEh5cGVycHJvbGFjdGluZW1pYSBJbmR1Y2VkIGJ5IFJpc3Blcmlkb25lIG9yIFBhbGlwZXJpZG9uZSxTaGFuZ2hhaSBNZW50YWwgSGVhbHRoIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNzE1NzIsMjAxMi0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBUcmlhbCBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIEFjdXRlIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTcxNDYxLDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksVEFBUyxUYW5kb3NwaXJvbmUgQ29tYmluZWQgV2l0aCBBdHlwaWNhbCBBbnRpcHN5Y2hvdGljIERydWdzIGluIFNjaGl6b3BocmVuaWEsR3Vhbmd6aG91IFBzeWNoaWF0cmljIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE2ODk2OCwyMDE0LTAyLTI4IDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgU3R1ZHkgb2YgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgQXJpcGlwcmF6b2xlIDEwLCAxNSBvciAyMCBtZy9kYXkgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBBY3V0ZSBFeGFjZXJiYXRpb25zIG9mIFNjaGl6b3BocmVuaWEiLCJEdWtlIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsIEpvaG4gVW1zdGVhZCBIb3NwaXRhbCIsSW50ZXJ2ZW50aW9uYWwsMTQ1NDgyLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBPcGVuLUxhYmVsLCA4LXdlZWsgdHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBBcmlwaXByYXpvbGUgb24gQ29nbml0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIixNdW5pY2ggVW5pdmVyc2l0eSBvZiBBcHBsaWVkIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDE0NDQwNyxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQW4gb3Blbi1sYWJlbCwgOC13ZWVrLCBtdWx0aWNlbnRlciwgcGFyYWxsZWwtZ3JvdXAsIHJhbmRvbWl6ZWQsIGZsZXhpYmxlLWRvc2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHZlcnN1cyBoYWxvcGVyaWRvbCBmb3IgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLHVua25vd24sSW50ZXJ2ZW50aW9uYWwsMTQzNTEwLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxUQURTLUosVHJlYXRtZW50IEFsdGVybmF0aXZlcyBmb3IgRHJ1Zy1uYWl2ZSBTY2hpem9waHJlbmlhIGluIEphcGFuLEphcGFuZXNlIFNvY2lldHkgb2YgQ2xpbmljYWwgTmV1cm9wc3ljaG9waGFybWFjb2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTQwMzc5LDIwMDktMDQtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBSZXNlYXJjaCBvdmVyIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgKEJvdGggb24gRmlyc3QgRXBpc29kZSBBbmQgUmVjdXJyZW5jZSkgQWJvdXQgaXRzIEVmZmljYWN5IEFuZCBJbmZsdWVuY2Ugb24gQ29nbml0aXZlIEZ1bmN0aW9uLEt5b3RvIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQwMDAxLDIwMDktMDYtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU2hvcnQgVHJlYXRtZW50IFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiBQZWRpYXRyaWMgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTM0ODg2LDIwMTAtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLE9uIHRoZSBxdWVzdGlvbiBvZiBOZXVyb2xlcHRpYy1JbmR1Y2VkIE1ldGFib2xpYyBTeW5kcm9tZS4gU3R1ZHkgMjogRmF0IERpc3RyaWJ1dGlvbiBhbmQgU3BlY2lmaWMgSG9ybW9uYWwgUGFyYW1ldGVycy4gQ29tcGFyaXNvbiBiZXR3ZWVuIHRoZSBtZXRhYm9saWMgc3luZHJvbWUgb2YgdnVsbmVyYWJsZSBhbmQgbm9uLXZ1bG5lcmFibGUgcGF0aWVudHMgZnJvbSB0aGUgc2NoaXpvcGhyZW5pYyBncm91cCxNZWRpY2FsIFVuaXZlcnNpdHkgb2YgR3JheixJbnRlcnZlbnRpb25hbCwxMzI1MzAsMjAwNi0wMS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEpVTVBzLCJMb25nLVRlcm0gU3R1ZHkgb24gRGlzY29udGludWF0aW9uIFJhdGUsIFJlc29sdXRpb24vUmVtaXNzaW9uIGFuZCBJbXByb3ZlbWVudCBpbiBTb2NpYWwgRnVuY3Rpb25pbmcgUmF0ZSBBc3NvY2lhdGVkIHdpdGggQXR5cGljYWwgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLE1lYml4IEluYyxJbnRlcnZlbnRpb25hbCwxMjQ2NDcsMjAxMi0wNy0wMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0FMUEVUMDEsIkEgQ29tcGFyYXRpdmUsIFJhbmRvbWl6ZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IFdpdGggUEVUIGluIE5ld2x5IERpYWdub3NlZCBTY2hpem9waHJlbmljIFBhdGllbnRzIFRyZWF0ZWQgV2l0aCBBcmlwaXByYXpvbGUgYW5kIFJpc3Blcmlkb25lIixGdW5kYWNp824gUGFyYSBMYSBJbnZlc3RpZ2FjafNuIEJpb23pZGljYSBEZWwgSG9zcGl0YWwgR3JlZ29yaW8gTWFyYfFvbixJbnRlcnZlbnRpb25hbCwxMTgwMzAsMjAwNy0wNS0xMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxDYW1icmlkZ2UgSGVhbHRoIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMxMDA3LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxBdXRpc20sNDIzLFBBSVJTLFN0dWR5IG9mIEFyaXBpcHJhem9sZSB0byBUcmVhdCBDaGlsZHJlbiBhbmQgQWRvbGVzY2VudHMgV2l0aCBBdXRpc20sVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCwzMDk2NSwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQXV0aXNtLDQyMyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzdGljIERpc29yZGVyIChBRCksQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMjMyOTEsMjAwNi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxFZmZpY2FjeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBBdXRpc20sVW5pdmVyc2l0eSBvZiBTb2NpYWwgV2VsZmFyZSBhbmQgUmVoYWJpbGl0YXRpb24gU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTMwMjE5LDIwMTItMDktMjEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxEaXNjb250aW51ZWQsRFgsRHJ1ZyBkZXBlbmRlbmNlLDU4OCxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCwiQSByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvdWJsZS1ibGluZCB0cmlhbCB0byBzdHVkeSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhcmlwaXByYXpvbGUgaW4gdGhlIHRyZWF0bWVudCBvZiBtZXRoYW1waGV0YW1pbmUgZGVwZW5kZW5jZSBhbmQgYXNzb2NpYXRlZCBwc3ljaG9zaXMiLFVuaXZlcnNpdHkgb2YgTWFsYXlhLEludGVydmVudGlvbmFsLDE0OTUxNixudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHBoYXNlIElJSSBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHBhdGllbnRzIHdpdGggYWN1dGUgbWFuaWEiLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDUyMDcyLDIwMDItMDUtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBWZXJzdXMgUGxhY2VibyBpbiBDaGlsZHJlbiBXaXRoIFN1YnN5bmRyb21hbCBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzNDE3NCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLFNNQVJULU0sQWJpbGlmeSBpbiBCaXBvbGFyIERpc29yZGVyIGZvciAyNCBXZWVrcyBUcmVhdG1lbnQgRWZmZWN0aXZlbmVzcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzOTYwLDIwMDctMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxTTUFSVC1BLEFiaWxpZnkgaW4gQmlwb2xhciBEaXNvcmRlciBmb3IgNiBXZWVrcyBUcmVhdG1lbnQgRWZmZWN0aXZlbmVzcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMzOTU4LDIwMDctMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQSBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBpbG90IFN0dWR5IFRvIEV2YWx1YXRlIEFyaXBpcHJhem9sZSBhcyBBZGp1bmN0IHRvIGEgTW9vZCBTdGFiaWxpemVyIGFuZCBDaXRhbG9wcmFtIGluIEJpcG9sYXIgRGVwcmVzc2lvbiIsQ2hhcml0ZSBVbml2ZXJzaXRhZXRzbWVkaXppbiBCZXJsaW4sSW50ZXJ2ZW50aW9uYWwsMTQ2Mzk1LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIChBYmlsaWZ5KSBpbiBDaGlsZHJlbiBXaXRoIFN5bXB0b21zIG9mIE1hbmlhLFVuaXZlcnNpdHkgSG9zcGl0YWxzIE9mIENsZXZlbGFuZCxJbnRlcnZlbnRpb25hbCwzNDU5MCwyMDA0LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsQXJpcGlwcmF6b2xlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI0NTIsMjAwNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LFksWSxMYXVuY2hlZCxMLFRvdXJldHRlIHN5bmRyb21lLDI5NDEsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgT25jZS13ZWVrbHkgT3JhbCBBcmlwaXByYXpvbGUgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDgwMDk5LDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0bmF0YWwgZGVwcmVzc2lvbiwzNTE0LG51bGwsQXJpcGlwcmF6b2xlIGFuZCBSZXNpc3RhbnQgUG9zdHBhcnR1bSBEZXByZXNzaW9uLExhd3NvbiBIZWFsdGggUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDc4ODIxLDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsUG9zdG5hdGFsIGRlcHJlc3Npb24sMzUxNCxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSByYW5kb21pemVkLCBzaW5nbGUtYmxpbmRlZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgYW50aWRvcGFtaW5lcmdpYyB0cmVhdG1lbnQgd2l0aCBhcmlwaXByYXpvbGUsIGhhbG9wZXJpZG9sLCBhbmQgcmVzZXJwaW5lIG9uIHBzeWNob3BhdGhvbG9neSBhbmQgbW90b3Igc3ltcHRvbXMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIiwiRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdCAoREZHKSwgUmhlaW5pc2NoLVdlc3RmYWVsaXNjaGUgVGVjaG5pc2NoZSBIb2Noc2NodWxlIEFhY2hlbiIsSW50ZXJ2ZW50aW9uYWwsODM4MTcsMjAxMS0wMy0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxBQ0VTIDI1NiwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBhbiBPcmFsIEFyaXBpcHJhem9sZS9Fc2NpdGFsb3ByYW0gQ29tYmluYXRpb24gVGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgKE1ERCkiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDY1OTQwLDIwMTAtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LElSTCBHUkVZLEluY29tcGxldGUgUmVzcG9uc2UgaW4gTGF0ZSBMaWZlIERlcHJlc3Npb246IEdldHRpbmcgdG8gUmVtaXNzaW9uLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw1MzgyMSwyMDA5LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgTG93IGFuZCBoaWdoLWRvc2UgYXJpcGlwcmF6b2xlIGF1Z21lbnRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLEZ1a3VzaGltYSBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzgzNTAzLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxESU1FUywiRGlnaXRhbCBNZWRpY2luZSBTdHVkeSBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciBJIERpc29yZGVyLCBvciBNYWpvciBEZXByZXNzaW9uIEN1cnJlbnRseSBVc2luZyBBcmlwaXByYXpvbGUiLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5NDEsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVHJlYXRpbmcgQ2FyZWdpdmVyIERlcHJlc3Npb24gdG8gSW1wcm92ZSBDaGlsZGhvb2QgQXN0aG1hOiBJbXBhY3QgYW5kIE1lZGlhdG9ycyxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwyNjM5NzAsMjAxNS0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE1NDM1LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgTG9uZy1UZXJtIEV4dGVuc2lvbiBUcmlhbCBGcm9tIExhdGUgUGhhc2UgSUkgb2YgU1BNLTk2MiBpbiBBZHZhbmNlZCBQYXJraW5zb24ncyBEaXNlYXNlIFBhdGllbnRzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODg4MzQsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBQcm92ZSBUaGF0IFR3byBSb3RpZ290aW5lIFBhdGNoZXMgSGF2ZSBFcXVpdmFsZW50IEluZ3JlZGllbnQgRGVsaXZlcnkgdG8gdGhlIEJvZHksVUNCIFNBLEludGVydmVudGlvbmFsLDUyODc4LDIwMDgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgUGhhcm1hY29raW5ldGljIFByb2ZpbGVzIG9mIExZLTAzMDAzIGFuZCBOZXVwcm8sTHV5ZSBQaGFybWEgR3JvdXAgTHRkLEludGVydmVudGlvbmFsLDM1OTEyNCwyMDE4LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIHRvIFByb3ZlIFRoYXQgVHdvIFJvdGlnb3RpbmUgUGF0Y2hlcyBIYXZlIEVxdWl2YWxlbnQgSW5ncmVkaWVudCBEZWxpdmVyeSB0byB0aGUgQm9keSxVQ0IgU0EsSW50ZXJ2ZW50aW9uYWwsNTI4NzgsMjAwOC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCwiQSAyOC1XZWVrLCBTYWZldHksIEV4dGVuc2lvbiBTdHVkeSBvZiBGbGliYW5zZXJpbiB0byBUcmVhdCBQcmUtbWVub3BhdXNhbCBhbmQgUG9zdC1tZW5vcGF1c2FsIFdvbWVuIFdpdGggSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIixCb2VocmluZ2VyIEluZ2VsaGVpbSBDb3JwLEludGVydmVudGlvbmFsLDY1NjAyLDIwMTAtMDQtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsZmxpYmFuc2VyaW4sODU0OSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxIeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIsMjAzOSxudWxsLEZsaWJhbnNlcmluIEV2YWx1YXRpb24gT3ZlciAyOCBBZGRpdGlvbmFsIFdlZWtzIGluIEh5cG9hY3RpdmUgU2V4dWFsIERlc2lyZSBEaXNvcmRlcixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDMzMTA5LDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgbXVsdGljZW50ZXIsIGRvdWJsZS1ibGluZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBlbGV0cmlwdGFuIGZvciB0aGUgdHJlYXRtZW50IG9mIGFkb2xlc2NlbnQgcGF0aWVudHMgd2l0aCBtaWdyYWluZSIsTm92YSBTb3V0aGVhc3Rlcm4gVW5pdmVyc2l0eSAoTlNVKSxJbnRlcnZlbnRpb25hbCw2ODQ0MywyMDA2LTEyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIrLFBoYXNlIDIgQ2xpbmljYWwsQzIsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxBQ1RNaWdyYWluZSxBQ1QgVGhlcmFweSBmb3IgSEYgTWlncmFpbmUsRm9uZGF6aW9uZSBJUkNDUyBJc3RpdHV0byBOZXVyb2xvZ2ljbyBDYXJsbyBCZXN0YSxJbnRlcnZlbnRpb25hbCwzMzIyMjEsMjAxOC0wMy0xNSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMb25nLXRlcm0gRXh0ZW5zaW9uIFN0dWR5IG9mIFNNLTEzNDk2IChMdXJhc2lkb25lIEhDbCkgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLCJCYWRhbiBQZW5kaWRpa2FuIFBzaWtpYXRyaSBIb3NwaXRhbCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDg4MjE1LDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSAxMi1XZWVrLCBPcGVuLUxhYmVsIEV4dGVuc2lvbiBTdHVkeSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEiLCJTcGFuaXNoIEZvdW5kYXRpb24gZm9yIE5ldXJvbWV0cmljcyBEZXZlbG9wbWVudCwgU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4NjA3MCwyMDEyLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxSaWZhbXBpbiBEcnVnLURydWcgSW50ZXJhY3Rpb24gU3R1ZHkgV2l0aCBMdXJhc2lkb25lIEhDbCxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDY0Njc3LDIwMDgtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksSkVXRUwsQSA2LVdlZWsgU3R1ZHkgTG9va2luZyBhdCB0aGUgRWZmZWN0aXZlbmVzcyBhbmQgU2FmZXR5IG9mIEx1cmFzaWRvbmUgaW4gQWN1dGVseSBQc3ljaG90aWMgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjYyMjc3LDIwMTctMDMtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIENsaW5pY2FsIFRyaWFsIG9mIEx1cmFzaWRvbmUgaW4gVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsU3VtaXRvbW8gUGhhcm1hY2V1dGljYWxzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxNjMwMDksMjAxMy0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQaGFzZSAzIENsaW5pY2FsLEMzLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsUmlmYW1waW4gRHJ1Zy1EcnVnIEludGVyYWN0aW9uIFN0dWR5IFdpdGggTHVyYXNpZG9uZSBIQ2wsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NDY3NywyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgTHVyYXNpZG9uZSBpbiBUcmVhdGluZyBBbnRpcHN5Y2hvdGljIE5haXZlIG9yIFF1YXNpLU5haXZlIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDk4OTMwLDIwMTItMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LFBFUlNJU1QsQmlwb2xhciBNYWludGVuYW5jZSBTdHVkeSBvZiBMdXJhc2lkb25lIEFkanVuY3RpdmUgdG8gTGl0aGl1bSBvciBEaXZhbHByb2V4LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2ODQsMjAxMS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGZyb3ZhdHJpcHRhbiw5MDIyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgUmFuZG9taXplZCBUcmlhbCBvZiBGcm92YXRyaXB0YW4gZm9yIHRoZSBJbnRlcm1pdHRlbnQgUHJldmVudGlvbiBvZiBNZW5zdHJ1YWwgTWlncmFpbmUsRW5kbyBIZWFsdGggU29sdXRpb25zIEluYyxJbnRlcnZlbnRpb25hbCwxNDA3NSwyMDAxLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgRG91YmxlLUJsaW5kLCBDcm9zc292ZXIgUGF0aWVudCBQcmVmZXJlbmNlIFN0dWR5IG9mIEZyb3ZhdHJpcHRhbiBWZXJzdXMgUml6YXRyaXB0YW4gZm9yIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzUsMjAwNy0wNS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLCJTYWZldHksIEVmZmljYWN5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVmlsYXpvZG9uZSBpbiBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw4ODc5MCwyMDEyLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxMCssUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyMjcwLDIwMTEtMTItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmZWN0aXZlbmVzcyBTdHVkeSBvZiBWaWxhem9kb25lIHRvIFRyZWF0IERlcHJlc3Npb24gYW5kIHRvIERpc2NvdmVyIEdlbmV0aWMgTWFya2VycyBBc3NvY2lhdGVkIFdpdGggUmVzcG9uc2UsR2VuYWlzc2FuY2UgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0MSwyMDA2LTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLERvdWJsZS1CbGluZCBUcmVhdG1lbnQgb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciBXaXRoIFZpbGF6b2RvbmUsVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDEwMDgyOCwyMDEzLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCwiRWZmaWNhY3kgb2YgVGVnYXNlcm9kIGluIFJlbGlldmluZyB0aGUgU3ltcHRvbXMgb2YgRmVtYWxlIFBhdGllbnRzIFdpdGggSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLCBFeGNsdWRpbmcgVGhvc2UgV2l0aCBQcmVkb21pbmFudCBEaWFycmhlYSBJQlMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDIyODc4LDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksTGF1bmNoZWQsTCxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgb3Blbi1sYWJlbCwgdHdvLXBoYXNlLCBmaXZlLXBlcmlvZCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgc3ViamVjdHMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODYwLDE5OTktMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGFyYWxsZWwtZ3JvdXAsIHBsYWNlYm8tY29udHJvbGxlZCwgYXNjZW5kaW5nLWRvc2Ugc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29keW5hbWljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBtYWxlIHN1YmplY3RzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTg0OSwxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsU2FmZXR5LFksTixMYXVuY2hlZCxMLElycml0YWJsZSBib3dlbCBzeW5kcm9tZSwxOTIsbnVsbCxBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGNvbnN0aXBhdGlvbiBhc3NvY2lhdGVkIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSxOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcxMSwyMDAyLTEwLTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsSXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLDE5MixudWxsLEFuIG9wZW4gbGFiZWwgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIGFuZCBjb25zdGlwYXRpb24sTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3MDIsMjAwMy0wNS0xNyAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLFBoYXJtYWNvZHluYW1pY3MsWSxZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHBhcmFsbGVsLWdyb3VwLCBwaGFzZSBJLCBwaGFybWFjb2R5bmFtaWMgc3R1ZHkgIG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODQ1LDE5OTctMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQW4gb3BlbiBsYWJlbCBzdHVkeSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgYW5kIGNvbnN0aXBhdGlvbixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTcwMiwyMDAzLTA1LTE3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBtdWx0aWNlbnRlciB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gd29tZW4gd2l0aCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUgKElCUykgd2l0aCBjb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NTgzLDIwMDQtMTEtMTAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsU3R1ZHkgb2YgRWZmZWN0IG9mIFRlZ2FzZXJvZCBvbiBTbWFsbCBhbmQgTGFyZ2UgQm93ZWwgVHJhbnNpdCBieSBTY2ludGlncmFwaGljIE1ldGhvZCwiSG9zcGl0YWwgQXV0aG9yaXR5LEhvbmcgS29uZyIsSW50ZXJ2ZW50aW9uYWwsMTg0MzAsMjAwNC0xMS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsVGhlIFJvbGUgb2YgVGVnYXNlcm9kIFRoZXJhcHkgaW4gdGhlIE1hbmFnZW1lbnQgb2YgRHlzcGVwdGljIFN5bXB0b21zIGluIEZlbWFsZSBQYXRpZW50cyBvbiBQcm90b24gUHVtcCBJbmhpYml0b3JzIGZvciB0aGUgVHJlYXRtZW50IG9mIEhlYXJ0YnVybixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCw1Njc3NCwyMDA1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLEFzc2Vzc21lbnQgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBUZWdhc2Vyb2QgVHJlYXRtZW50IGFuZCBQbGFjZWJvIGluIFdvbWVuIFdpdGggRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNDk4LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsVGhlIEVmZmVjdHMgb2YgVGVnYXNlcm9kIG9uIE1lY2hhbmljYWwgU2Vuc2l0aXZpdHkgb2YgdGhlIEVzb3BoYWd1cyBhbmQgU3RvbWFjaCBpbiBQYXRpZW50cyBXaXRoIEhlYXJ0YnVybiBhbmQgRHlzcGVwc2lhLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDIwOTM2LDIwMDUtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMix0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgcGhhc2UgSUksIG11bHRpLWNlbnRlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgb2YgdGVnYXNlcm9kIGluIHBhdGllbnRzIHdpdGggZnVuY3Rpb25hbCBkeXNwZXBzaWEiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5ODMyLDIwMDItMDUtMjAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSByYW5kb21pemVkLCBjcm9zcy1vdmVyIHRyaWFsIG9mIHRlZ2FzZXJvZCBpbiBwYXRpZW50cyB3aXRoIGZ1bmN0aW9uYWwgaGVhcnRidXJuIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc5NSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBkZXNpZ24gc3R1ZHkgb2YgdGVnYXNlcm9kIGluIGR5c3BlcHNpYSBwYXRpZW50cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk3ODYsMjAwNS0wNS0xOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdGVnYXNlcm9kLDEwMDkxLCJFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxUaGUgRWZmZWN0cyBvZiBUZWdhc2Vyb2QgVmVyc3VzIFBsYWNlYm8gb24gV2hvbGUgR3V0IFRyYW5zaXQgVGltZSBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIGFuZCBEeXNwZXBzaWEsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3MDUsMjAwNi0wMS0xMyAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixEaXNjb250aW51ZWQsRFgsR2FzdHJvZXNvcGhhZ2VhbCByZWZsdXgsMTI0MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zcy1vdmVyIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBnYXN0cm9lc29waGFnZWFsIHJlZmx1eCBkaXNlYXNlIHBhdGllbnRzIixOb3ZhcnRpcyBBRyxJbnRlcnZlbnRpb25hbCwxOTc5MSwyMDA1LTA1LTE4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgTm90IEFwcGxpY2FibGUsUE5BLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsQ29tcGFyaXNvbiBiZXR3ZWVuIFJlc29sb3IgYW5kIGxhY3R1bG9zZSxVbml2ZXJzaXR5IE1hbGF5YSBNZWRpY2FsIENlbnRyZSxJbnRlcnZlbnRpb25hbCwzNzc5MTQsMjAxOS0wMy0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFBoYXNlIEkvSUlhIFRyaWFsIG9mIFlILTEyODUyIGluIEhlYWx0aHkgU3ViamVjdHMgYW5kIFBhdGllbnRzIFdpdGggRnVuY3Rpb25hbCBDb25zdGlwYXRpb24sWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwyMzk1NDQsMjAxNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0cyBvZiBwcnVjYWxwcmlkZSAgb24gY29sb25pYyB0cmFuc2l0IGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBjb25zdGlwYXRpb24sU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA5MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBzYWZldHkgc3R1ZHkgb2YgcHJ1Y2Fsb3ByaWRlIGZvciB0aGUgdHJlYXRtZW50IG9mIGNocm9uaWMgY29uc3RpcGF0aW9uLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsMTg2NjksMTk5OC0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBTdHVkeSBvZiBQcnVjYWxvcHJpZGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NjY4LDE5OTgtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgU3R1ZHkgb2YgUHJ1Y2Fsb3ByaWRlIGZvciB0aGUgVHJlYXRtZW50IG9mIEVsZGVybHkgUGF0aWVudHMgV2l0aCBDaHJvbmljIENvbnN0aXBhdGlvbixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE4NDQwLDE5OTgtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxzYXJpem90YW4gaHlkcm9jaGxvcmlkZSwxNjU2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixPdXRsaWNlbnNlZCxPTCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBRERZIDEsU2FyaXpvdGFuIEhDMSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgU3VmZmVyaW5nIEZyb20gVHJlYXRtZW50IEFzc29jaWF0ZWQgRHlza2luZXNpYSwiTWVyY2sgS0dhQSwgTWVyY2sgUGhhcm1hIFNwQSIsSW50ZXJ2ZW50aW9uYWwsNjEzNCwyMDA0LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4tbGFiZWwsIHBpbG90IHBoYXNlIEkgc3R1ZHkgdG8gZXZhbHVhdGUgZG9wYW1pbmUgRDIgcmVjZXB0b3Igb2NjdXBhbmN5IGFmdGVyIG11bHRpcGxlIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgRFUtMTI3MDkwIHRvIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLCB1c2luZyAxMUMtcmFjbG9wcmlkZSBieSBtZWFucyBvZiBwb3NpdGlvbiBlbWlzc2lvbiB0b21vZ3JhcGh5IChQRVQpIixTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsNDE0NjMsMjAwMC0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxUcmVhdG1lbnQgb2YgRWxkZXJseSBTdWJqZWN0cyBXaXRoIFBzeWNob3NpcyBhbmQgQmVoYXZpb3JhbCBEaXN0dXJiYW5jZXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDEzNzAsMjAwNS0xMi0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZpY2FjeSBvZiBCaWZlcHJ1bm94IGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNTE2NywyMDA4LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IENvbXBhcmluZyBCaWZlcHJ1bm94IHRvIFJpc3Blcmlkb25lIGluIFRyZWF0bWVudCBvZiBPdXRwYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgV2l0aCBXZWlnaHQgYXMgUHJpbWFyeSBFbmRwb2ludCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDk5NiwyMDA2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFR3aWNlLURhaWx5IFRpdHJhdGlvbiBTdHVkeSBvZiBCaWZlcHJ1bm94IGluIFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxTb2x2YXkgU0EsSW50ZXJ2ZW50aW9uYWwsMzQ2MzUsMjAwNS0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGRvc2UtZXNjYWxhdGlvbiwgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgb2YgQUNQLTEwMyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NDksMjAwMy0wNi0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgYXNzZXNzaW5nIHRoZSBlZmZlY3RpdmVuZXNzIG9mIEFDUC0xMDMgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc2lkZSBlZmZlY3RzIGFzc29jaWF0ZWQgd2l0aCBzY2hpem9waHJlbmlhIHRyZWF0bWVudCIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNDM5NjIsMjAwNC0wOS0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFudGlwc3ljaG90aWMgYW5kIE1vdG9yIEVmZmVjdHMgb2YgQUNQLTEwMyBXaGVuIEFkbWluaXN0ZXJlZCBpbiBDb21iaW5hdGlvbiBXaXRoIEhhbG9wZXJpZG9sIGFuZCBSaXNwZXJpZG9uZSxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNjAyMSwyMDA1LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixJbnNvbW5pYSw3NTAsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgZG9zZS1lc2NhbGF0aW9uLCBzYWZldHkgYW5kIHBoYXJtYWNva2luZXRpYyBzdHVkeSBvZiBBQ1AtMTAzIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzY0OSwyMDAzLTA2LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEljdGFsIGFuZCBJbnRlcmljdGFsIEluZmxhbW1hdG9yeSBNYXJrZXJzIGluIE1pZ3JhaW5lLCJHbGF4b1NtaXRoS2xpbmUgcGxjLCBKb2hucyBIb3BraW5zIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDY3MTAzLDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLGliaXBpbmFiYW50LDM4MDk0LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb250aW51ZWQsRFgsT2Jlc2l0eSwyMzgsbnVsbCxCTVMtNjQ2MjU2IGluIG9iZXNlIGFuZCBvdmVyd2VpZ2h0IHR5cGUgMiBEaWFiZXRpY3MsU29sdmF5IFNBLEludGVydmVudGlvbmFsLDUxMzgsMjAwOC0wMy0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsU2FmZXR5LFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsTWlncmFpbmUsMjEwLG51bGwsIkEgMTItbW9udGgsIG9wZW4tbGFiZWwgc3R1ZHkgdG8gYXNzZXNzIG92ZXJhbGwgc2FmZXR5IChpbmNsdWRpbmcgcHVsbW9uYXJ5IGFuZCBjYXJkaW92YXNjdWxhcikgb2YgZGloeWRyb2VyZ290YW1pbmUgYXQgNiBhbmQgMTIgbW9udGhzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw2NjM0NiwyMDEwLTA1LTExIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixidXNwaXJvbmUsNDQzNjQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEV4cGxvcmluZyBPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgUmVjZXB0b3IgYnkgQnVzcGlyb25lIGluIEh1bWFucyBVc2luZyBQRVQsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsOTM1OTcsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLEF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIsMzQsbnVsbCxDb21wYXJpc29uIG9mIEJ1c3Bpcm9uZSBhbmQgUml0YWxpbmUgaW4gdGhlIHRyZWF0bWVudCBvZiBBREhELFRlaHJhbiBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTUyMTA0LDIwMTAtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLGRpaHlkcm9lcmdvdGFtaW5lIG1lc3lsYXRlLDQ0NDExLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEkgU3R1ZHkgdG8gU3R1ZHkgdGhlIFBLIGFuZCBTYWZldHkgb2YgU2luZ2xlLURvc2VzIG9mIFNUUy0xMDEsIERIRSBJbmplY3Rpb24gYW5kIE5hc2FsIFNwcmF5IGluIEhlYWx0aHkgU3ViamVjdHMiLFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM0MDcsMjAxOC0wOS0xMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLCJzdW1hdHJpcHRhbiAoc3VibGluZ3VhbCwgbWlncmFpbmUsIE5vdmFNaXN0KSwgU3VkYSIsNDcyMDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpLWNlbnRlciwgb3Blbi1sYWJlbCwgYWN0aXZlLWNvbnRyb2xsZWQsIGRvc2UtcmFuZ2luZyBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHRocmVlIGRpZmZlcmVudCBkb3NlcyBvZiBzdW1hdHJpcHRhbiBvcmFsIHNwcmF5IHdpdGggc3VtYXRyaXB0YW4gb3JhbCB0YWJsZXRzIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdpdGggZG9jdW1lbnRlZCBzbG93IHJlc3BvbnNlIHRvIHN1bWF0cmlwdGFuIHRhYmxldHMiLE5vdmFEZWwgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw2MDI0MiwyMDA4LTA5LTA0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LEJMT09NLEJlaGF2aW9yYWwgTW9kaWZpY2F0aW9uIGFuZCBMb3JjYXNlcmluIGZvciBPdmVyd2VpZ2h0IGFuZCBPYmVzaXR5IE1hbmFnZW1lbnQsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzODkyOSwyMDA2LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzKyxQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxSZWFsLVdvcmxkIEVmZmVjdGl2ZW5lc3Mgb2YgQ29tYmluaW5nIGFuIEVtcGxveWVyLWJhc2VkIFdlaWdodCBNYW5hZ2VtZW50IFByb2dyYW0gV2l0aCBNZWRpY2F0aW9uIGZvciBDaHJvbmljIFdlaWdodCBNYW5hZ2VtZW50IGluIEVtcGxveWVlcyBXaXRoIE9iZXNpdHksTm92byBOb3JkaXNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjYxMzUsMjAxOS0wMS0wNyAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLExvdyBMZXZlbCBMYXNlciBUcmVhdG1lbnQgKExMTFQpIGFuZCBMb3JjYXNlcmluIGZvciBXZWlnaHQgTWFuYWdlbWVudCxNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4NTE0OSwyMDE0LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIsMTkzNyxudWxsLEVmZmljYWN5IG9mIEx1LUFBMjEwMDQgaW4gdHJlYXRpbmcgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzAzNiwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsRk9DVVMsRWZmaWNhY3kgU3R1ZHkgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBBZHVsdCBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODAyNDksMjAxMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxPcGVuLWxhYmVsIFNhZmV0eSBFeHRlbnNpb24gU3R1ZHkgb2YgMTUgYW5kIDIwIG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIGluIEFkdWx0cyxIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCw3NTc5OSwyMDExLTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFZvcnRpb3hldGluZSBJbnRyYXZlbm91cyBJbmZ1c2lvbiBhdCBJbml0aWF0aW9uIG9mIE9yYWwgVHJlYXRtZW50IFdpdGggVm9ydGlveGV0aW5lIGluIFBhdGllbnRzIFdpdGggRGVwcmVzc2lvbixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwzNjI2ODQsMjAxOC0xMi0wMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgTHUtQUEyMTAwNCBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwzNDk5MiwyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxWb3J0aW94ZXRpbmUgTW9ub3RoZXJhcHkgZm9yIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gVHlwZSAyIERpYWJldGVzLExveW9sYSBVbml2ZXJzaXR5IG9mIENoaWNhZ28sSW50ZXJ2ZW50aW9uYWwsMzQ1ODQ4LDIwMTktMDYtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWR1bHRzIFdpdGggTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlciwiVGFrZWRhIERldmVsb3BtZW50IENlbnRlciBBbWVyaWNhcywgSW5jIixJbnRlcnZlbnRpb25hbCwyMzMzMCwyMDA4LTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsRWZmaWNhY3kgb2YgVm9ydGlveGV0aW5lIG9uIENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBQYXRpZW50cyBXaXRoIFBhcnRpYWwgb3IgRnVsbCBSZW1pc3Npb24gb2YgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixIIEx1bmRiZWNrIEEvUyxJbnRlcnZlbnRpb25hbCwyMTQ3NTYsMjAxNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLFBSWC0zMTQwLDQ4NzM5LCJTYWZldHksRWZmaWNhY3kiLFksWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBub3ZlbCA1SFQ0IHBhcnRpYWwgYWdvbmlzdCBQUlgtMDMxNDAgZm9yIHRoZSB0cmVhdG1lbnQgb2YgQWx6aGVpbWVycyBkaXNlYXNlLEVQSVggUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MDM0MiwyMDA2LTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxuYXJvbmFwcmlkZSw0OTg0MCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxPdXRsaWNlbnNlZCxPTCxEeXNwZXBzaWEsNDMyLG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIGFkb2xlc2NlbnQgc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIGNvbXBhcmVkIHRvIGFkdWx0cyIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDI5MjUzMCwyMDE3LTAxLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGZvciBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM4MDksMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMTArLFBoYXNlIDJiIENsaW5pY2FsLEMyQixjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGFzIGFuIEFkanVuY3RpdmUgdG8gQW50aWRlcHJlc3NhbnQgVGhlcmFweSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDgyMjcwLDIwMTEtMTItMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxjYXJpcHJhemluZSw1MTQwNSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAzIENsaW5pY2FsLEMzLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBvZiBhIEZpeGVkLURvc2UgUmVnaW1lbiBvZiBDYXJpcHJhemluZSBDb21wYXJlZCB0byBQbGFjZWJvIGZvciBUcmVhdG1lbnQgb2YgdGhlIERlcHJlc3NpdmUgRXBpc29kZSBpbiBQYXJ0aWNpcGFudHMgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjUyMzMzLDIwMTYtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixZLFksRGlzY29udGludWVkLERYLEluc29tbmlhLDc1MCxudWxsLFN1YmplY3RpdmUgc3R1ZHkgdG8gYXNzZXNzIHRoZSBlZmZpY2FjeSBvZiBBUEQtMTI1IGluIHBhdGllbnRzIHdpdGggc2xlZXAgbWFpbnRlbmFuY2UgaW5zb21uaWEsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNjY5NywyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQiwiY2xhdnVsYW5pYyBhY2lkIChleHRlbmRlZC1yZWxlYXNlLCBkZXByZXNzaW9uL1BhcmtpbnNvbidzIGRpc2Vhc2UpLCBSZXhhaG4iLDUyODkzLCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUlgtMTAxMDAgdG8gVHJlYXQgTWFqb3IgRGVwcmVzc2l2ZSBEaXNvcmRlcixSZXhhaG4gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MzY3MSwyMDEwLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciksIE90c3VrYS9CTVMiLDUzMjU3LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBvZiBBbHRlcm5hdGUgRm9ybXVsYXRpb24gb2YgQXJpcGlwcmF6b2xlIGluIEFnaXRhdGVkIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYyBEaXNvcmRlcnMsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTkyMDIsMjAwMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIpLCBPdHN1a2EvQk1TIiw1MzI1NywiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSBpbiBjb21wYXJpc2lvbiB3aXRoIGxvcmF6ZXBhbSBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGFnaXRhdGlvbiBpbiBwYXRpZW50cyB3aXRoIGEgZGlhZ25vc2lzIG9mIGJpcG9sYXIgSSBkaXNvcmRlciwgbWFuaWMgb3IgbWl4ZWQiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsNDgzMDgsMjAwMy0xMS0xMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmVsdXNldHJhZyw1NDY4OCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLFBoYXNlIElJIFN0dWR5IG9mIFZlbHVzZXRyYWcgaW4gRGlhYmV0aWMgb3IgSWRpb3BhdGhpYyBHYXN0cm9wYXJlc2lzLFRoZXJhdmFuY2UgQmlvcGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw5NjY2MywyMDEyLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAxIENsaW5pY2FsLEMxLHRlbWFub2dyZWwsNTQ2OTksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQWN1dGUgY29yb25hcnkgc3luZHJvbWUsMzI1OCxudWxsLCJEb3NlLWVzY2FsYXRpb24sIFJlcGVhdGVkIGFuZCBTaW5nbGUgT3JhbCBEb3NpbmcgU3R1ZHkiLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDIyNzE0MywyMDE1LTAzLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxudWxsLCJQaGFzZSBJLCBPcGVuLUxhYmVsLCBTaW5nbGUtRG9zZSBTdHVkeSB0byBDb21wYXJlIHRoZSBQaGFybWFjb2tpbmV0aWNzIG9mIE5QLTEwMSBIZWFsdGh5IFZvbHVudGVlcnMiLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDU3MTgyLDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixQRi04ODU3MDYsNTY3MTQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIFBGLTAwODg1NzA2IEZvciBUaGUgUmVsaWVmIE9mIFN5bXB0b21zIEluIFN1YmplY3RzIFdpdGggR2FzdHJvLUVzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKEdFUkQpLCJQZml6ZXIgSW5jLCBQZml6ZXIgTHRkIixJbnRlcnZlbnRpb25hbCwyMzA4NiwyMDA4LTAxLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHJldmV4ZXByaWRlLDU3NDczLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsQW4gRXhwbG9yYXRpdmUgVHJpYWwgdG8gRXZhbHVhdGUgdGhlIFBoYXJtYWNvZHluYW1pYyBFZmZlY3Qgb2YgU1BELTU1NyBvbiBSZWZsdXggUGFyYW1ldGVycyBpbiBSZWZyYWN0b3J5IEdFUkQgUGF0aWVudHMsU2hpcmUgcGxjLEludGVydmVudGlvbmFsLDc4MDY0LDIwMTAtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxEeXNwZXBzaWEsNDMyLG51bGwsQSBTdHVkeSB0byBEZW1vbnN0cmF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBNb3RpbGl0b25lLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTE3NDM0LDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsVEFSR0VULFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgYSBTaW5nbGUtRG9zZSBvZiBTdW1hdHJpcHRhbiBQb3dkZXIgRGVsaXZlcmVkIEludHJhbmFzYWxseSBXaXRoIHRoZSBCaS1kaXJlY3Rpb25hbCBEZXZpY2UgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUsT3B0aW5vc2UgVVMgSW5jLEludGVydmVudGlvbmFsLDgxOTYzLDIwMTEtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsRGVwcmVzc2lvbiw5MyxudWxsLFBoYXNlIEkgU3R1ZHkgdG8gQXNzZXNzIHRoZSBTYWZldHkvVG9sZXJhYmlsaXR5IG9mIEJyZXhwaXByYXpvbGUgYXMgQWRqdW5jdGl2ZSBUaGVyYXB5IGluIEVsZGVybHkgU3ViamVjdHMgV2l0aCBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsOTAzNzIsMjAxMi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIEFzc2VzcyB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBBU1AtNDM0NSBhcyBBZGQtb24gVHJlYXRtZW50IGZvciBDb2duaXRpdmUgSW1wYWlybWVudCBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb24gU3RhYmxlIERvc2VzIG9mIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbixBc3RlbGxhcyBQaGFybWEgR2xvYmFsIERldmVsb3BtZW50IEluYyxJbnRlcnZlbnRpb25hbCwzNDMwOTQsMjAxOC0wNy0xMyAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBtdWx0aWNlbnRlciwgb3Blbi1sYWJlbCwgY2xpbmljYWwgcGhhcm1hY29sb2d5IHN0dWR5IGZvciBjb21wYXJhdGl2ZSBpbnZlc3RpZ2F0aW9uIG9mIHRoZSBwaGFybWFjb2tpbmV0aWNzLCB0b2xlcmFiaWxpdHksIGFuZCBzYWZldHkgb2YgdGhyZWUgdHlwZXMgb2YgYnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSBvbmNlLXdlZWtseSAoUVcpIGZvcm11bGF0aW9uIGFkbWluaXN0ZXJlZCBhcyBzaW5nbGUgb3JhbCBkb3NlcyBpbiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQwOTI0LDIwMTgtMDQtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJleHBpcHJhem9sZSw2MjAwMSwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFBFVCBUcmlhbCB0byBBc3Nlc3MgdGhlIFJlY2VwdG9yIE9jY3VwYW5jeSBvZiBCcmV4cGlwcmF6b2xlIGluIEFkdWx0IFN1YmplY3RzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzE2NjgsMjAxMy0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAyIENsaW5pY2FsLEMyLENMLUgxVCw2MjYwNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixFbWVzaXMsMTEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIE11bHRpY2VudGVyIE9wZW4tbGFiZWwgU3R1ZHkgSW52ZXN0aWdhdGluZyB0aGUgUGhhcm1hY29raW5ldGljcyBhbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBGb3JtdWxhdGlvbiAoT1BDLTE0NTk3IElNRCkgRHVyaW5nIFJlcGVhdGVkIEFkbWluaXN0cmF0aW9uIGJ5IEluamVjdGlvbiBJbnRvIHRoZSBEZWx0b2lkIE11c2NsZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyMDg1NTIsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJPcGVuLWxhYmVsLCBNdWx0aWNlbnRlciBUcmlhbCB0byBJbnZlc3RpZ2F0ZSB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBBcmlwaXByYXpvbGUgSU0gRGVwb3QgRm9ybnVsYXRpb24gKE9QQy0xNDU5Ny1JTUQpIGJ5IFJlcGVhdGVkIERvc2luZyBpbiBQYXRpZW50cyB3aXRoIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTAxMjI3LDIwMTEtMDYtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LEFUTEFTLE9wZW4tTGFiZWwgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgYW4gSW50cmFtdXNjdWxhciBGb3JtdWxhdGlvbiBvZiBBcmlwaXByYXpvbGUgKE9QQy0xNDU5NykgYXMgTWFpbnRlbmFuY2UgVHJlYXRtZW50IGluIFBhdGllbnRzIFdpdGggQmlwb2xhciBJIERpc29yZGVyLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDk1MzcxLDIwMTItMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChleHRlbmRlZC1yZWxlYXNlIGludHJhbXVzY3VsYXIsIExpbmtlUngsIHNjaGl6b3BocmVuaWEpLCBBbGtlcm1lcyIsNjU1MjMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctdGVybSBTYWZldHkgU3R1ZHkgb2YgQUxLUy05MDcyIChBbHNvIEtub3duIGFzIEFMS1MtOTA3MCksIkFsa2VybWVzIHBsYywgU3luZW9zIEhlYWx0aCBJbmMiLEludGVydmVudGlvbmFsLDg4NjI3LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBTEtTLTkwNzIgKEFsc28gS25vd24gYXMgQXJpcGlwcmF6b2xlIExhdXJveGlsLCBBTEtTLTkwNzAsIG9yIEFSSVNUQURBKSBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEiLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCw4MjI2MSwyMDExLTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImFyaXBpcHJhem9sZSAoZXh0ZW5kZWQtcmVsZWFzZSBpbnRyYW11c2N1bGFyLCBMaW5rZVJ4LCBzY2hpem9waHJlbmlhKSwgQWxrZXJtZXMiLDY1NTIzLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIEFyaXBpcHJhem9sZSBMYXVyb3hpbCBpbiBTdWJqZWN0cyB3aXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLEFsa2VybWVzIHBsYyxJbnRlcnZlbnRpb25hbCwyNDkzMjYsMjAxNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQW4gT3Blbi1MYWJlbCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgTGF1cm94aWwgaW4gU3ViamVjdHMgV2l0aCBTdGFibGUgU2NoaXpvcGhyZW5pYSxBbGtlcm1lcyBwbGMsSW50ZXJ2ZW50aW9uYWwsMjE4ODA5LDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxQRi0wNDk5NTI3NCw2NjA0NiwiUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLFRvIEV2YWx1YXRlIFRoZSBSZWxhdGlvbnNoaXAgQmV0d2VlbiBQbGFzbWEgRHJ1ZyBMZXZlbHMgQW5kIFJlY2VwdG9yIEJpbmRpbmcgSW4gQnJhaW4gVXNpbmcgUEVUIChQb3NpdHJvbiBFbWlzc2lvbiBUb21vZ3JhcGh5KSBJbiBIZWFsdGh5IFZvbHVudGVlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxOTMwMDQsMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFBGLTA0OTk1Mjc0LDY2MDQ2LEVmZmljYWN5LE4sTixQaGFzZSAxIENsaW5pY2FsLEMxLERlcHJlc3Npb24sOTMsUkVTVEFSVCxQRi0wNDk5NTI3NCBhbmQgRW1vdGlvbmFsIFByb2Nlc3NpbmcgaW4gVHJlYXRtZW50IFJlc2lzdGFudCBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDMzODU2OCwyMDE4LTA1LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLFNVVk4tRDQwMTAsNjc1MDksIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUGhhc2UgMSBDbGluaWNhbCxDMSxDb2duaXRpdmUgZGlzb3JkZXIsMzUzLG51bGwsIkEgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIEVmZmVjdCBvZiBGb29kLCBHZW5kZXIsIGFuZCBBZ2Ugb24gdGhlIFBoYXJtYWNva2luZXRpYyBQcm9maWxlIG9mIFNVVk4tRDQwMTAgaW4gSGVhbHRoeSBTdWJqZWN0cyIsU3V2ZW4gTGlmZSBTY2llbmNlcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMjg2MjQwLDIwMTctMDEtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiem9sbWl0cmlwdGFuIChSYXBpZEZpbG0vb3JhbCwgbWlncmFpbmUpLCB0ZXNhIExhYnRlYy9BUFIvQXF1ZXN0aXZlIFRoZXJhcGV1dGljcyIsNjc4OTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBwaXZvdGFsIGNsaW5pY2FsIHN0dWR5IG9mIHpvbG1pdHJpcHRhbiBPREYgaW4gbWlncmFpbmUgcGF0aWVudHMsIkFQUiBBcHBsaWVkIFBoYXJtYSBSZXNlYXJjaCBTQSwgdGVzYSBMYWJ0ZWMgR21iSCIsSW50ZXJ2ZW50aW9uYWwsMjcyOTg4LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUgKyBlc2NpdGFsb3ByYW0sNzE4NDUsRWZmaWNhY3ksWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsQSByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBvZiBhdWdtZW50YXRpb24gdGhlcmFweSBvZiBhcmlwaXByYXpvbGUgd2l0aCBlc2NpdGFsb3ByYW0gaW4gcGF0aWVudHMgd2l0aCBjby1vY2N1cnJlbmNlIG9mIGRlcHJlc3Npb24gYW5kIGFsY29ob2wgZGVwZW5kZW5jZSxLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDE1NDAyNyxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsInRlc3Rvc3Rlcm9uZSArIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChvcmFsLCBoeXBvYWN0aXZlIHNleHVhbCBkZXNpcmUgZGlzb3JkZXIpLCBFbW90aW9uYWwgQnJhaW4iLDg0MzYwLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLEZlbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24sMTI3NixMeWJyaWRvcyBQb0MsIkEgZG91YmxlIGJsaW5kLCByYW5kb21pemVkLCBjcm9zcy1vdmVyLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBpbG90IHN0dWR5IHRvIGludmVzdGlnYXRlIHRoZSBzdWJqZWN0aXZlIGFuZCBwaHlzaW9sb2dpY2FsIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgTHlicmlkb3MgaW4gaGVhbHRoeSBmZW1hbGUgc3ViamVjdHMgd2l0aCBmZW1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uIixFbW90aW9uYWwgQnJhaW4gQlYsSW50ZXJ2ZW50aW9uYWwsMTIxMjQxLDIwMDktMDEtMjEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZGloeWRyb2VyZ290YW1pbmUgKG5hc2FsLCBtaWdyYWluZSksIFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIiw4NzcxNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIFNUUy0xMDEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3NTc3MSwyMDE5LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsImRpaHlkcm9lcmdvdGFtaW5lIChuYXNhbCwgbWlncmFpbmUpLCBTYXRzdW1hIFBoYXJtYWNldXRpY2FscyIsODc3MTQsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyIsTixZLFBoYXNlIDEgQ2xpbmljYWwsQzEsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBQaGFzZSBJIFN0dWR5IHRvIFN0dWR5IHRoZSBQSyBhbmQgU2FmZXR5IG9mIFNpbmdsZS1Eb3NlcyBvZiBTVFMtMTAxLCBESEUgSW5qZWN0aW9uIGFuZCBOYXNhbCBTcHJheSBpbiBIZWFsdGh5IFN1YmplY3RzIixTYXRzdW1hIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzczNDA3LDIwMTgtMDktMTEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiZGloeWRyb2VyZ290YW1pbmUgKG5hc2FsLCBtaWdyYWluZSksIFNhdHN1bWEgUGhhcm1hY2V1dGljYWxzIiw4NzcxNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMSBDbGluaWNhbCxDMSxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkIFN0dWR5IHRvIEV2YWx1YXRlIFNUUy0xMDEgaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsU2F0c3VtYSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3NTc3MSwyMDE5LTA3LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiU2FmZXR5LEVmZmljYWN5IixOLFksTGF1bmNoZWQsTCxPYmVzaXR5LDIzOCxudWxsLCJTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBCZWx2aXEgWFIgaW4gQ29uanVuY3Rpb24gV2l0aCBMaWZlc3R5bGUgTW9kaWZpY2F0aW9uIGZvciBXZWlnaHQgTG9zcyBpbiBPYmVzZSBBZG9sZXNjZW50cywgQWdlIDEyIHRvIDE3IFllYXJzIixFaXNhaSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE5MjEyLDIwMTctMDktMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEvUGhhc2UgMiBDbGluaWNhbCxDMTIsImxvcmNhc2VyaW4gKERyYXZldCBzeW5kcm9tZSksIEVweWdlbml4IFRoZXJhcGV1dGljcyIsMTA2MjIyLCJTYWZldHksRWZmaWNhY3kiLFksTixQaGFzZSAyIENsaW5pY2FsLEMyLERyYXZldCBzeW5kcm9tZSw1NjE0LG51bGwsQSBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIGxvcmNhc2VyaW4gaW4gdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIERyYXZldCBzeW5kcm9tZSxFcHlnZW5peCBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDI5ODg1NSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBFZmZlY3RzIG9mIE9QQy0zNDcxMiBvbiBRVC9RVGMgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDgwMzYwLDIwMTEtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29jYWluZSBhZGRpY3Rpb24sNzYsQlJBQyxTdHVkeSBvZiBCdXNwaXJvbmUgZm9yIFJlbGFwc2UtUHJldmVudGlvbiBpbiBBZHVsdHMgV2l0aCBDb2NhaW5lIERlcGVuZGVuY2UsVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpLEludGVydmVudGlvbmFsLDg5MTg4LDIwMTItMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxESU1FUywiRGlnaXRhbCBNZWRpY2luZSBTdHVkeSBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciBJIERpc29yZGVyLCBvciBNYWpvciBEZXByZXNzaW9uIEN1cnJlbnRseSBVc2luZyBBcmlwaXByYXpvbGUiLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5NDEsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSB0byBSZWR1Y2UgTWVkaWNhbCBSaXNrcyBpbiBCaXBvbGFyIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCwzNDE5OSwyMDA4LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxBUEVYIDI0MSwiQXJpcGlwcmF6b2xlIE9wZW4tTGFiZWwsIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFN0dWR5IixPdHN1a2EgSG9sZGluZ3MgQ28gTHRkLEludGVydmVudGlvbmFsLDM0MTA2LDIwMDQtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxBUE9MTE8sQSBTdHVkeSBvZiBBYmlsaWZ5IFRhYmxldCAoQXJpcGlwcmF6b2xlKSBhcyBhbiBBZGp1bmN0aXZlIFRyZWF0bWVudCBpbiB0aGUgQmlwb2xhciBEZXByZXNzaW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMzI4MzEwLDIwMTgtMDItMjIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSBNdWx0aWNlbnRlciwgSW52ZXN0aWdhdGl2ZSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBMb25nLVRlcm0gQWRtaW5pc3RyYXRpb24gb2YgQXJpcGlwcmF6b2xlIGluIENvbWJpbmF0aW9uIFdpdGggTW9vZCBTdGFiaWxpemVyIGZvciB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlciBFeHBlcmllbmNpbmcgYSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlIixPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMxNDYzLDIwMDgtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLEFyaXBpcHJhem9sZSBmb3IgQmlwb2xhciBEaXNvcmRlciBhbmQgQWxjb2hvbCBVc2UgRGlzb3JkZXIsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjczMjIwLDIwMTYtMTEtMzAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBBY3V0ZSBCaXBvbGFyIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAxLDIwMDQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxjaW5pdGFwcmlkZSB0YXJ0cmF0ZSw3NDM1NywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgUGlsb3QgU3R1ZHkgb2YgY29tcGFyYXRpdmUgYmlvYXZhaWxhYmlsaXR5IGJldHdlZW4gdHdvIG9yYWwgZm9ybXVsYXRpb25zIG9mIGNpbml0YXByaWRlIGFkbWluaXN0ZXJlZCBhcyAxIG1nIHRhYmxldHMgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucywiVWx0cmEgTGFib3JhdG9yaWVzLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMTk3MjE2LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLERBLTk3MDEsNTkwNTAsUGhhcm1hY29raW5ldGljcyxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSByYW5kb21pemVkLCBvcGVuLWxhYmVsLCBzaW5nbGUgZG9zZSwgcGhhc2UgMSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGZvb2QgZWZmZWN0LCBhbmQgcGhhcm1hY29raW5ldGljIGNoYXJhY3RlcmlzdGljcyBvZiBEQS05NzAxIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsRG9uZy1BIFNUIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTUzODIsMjAxNy0wNS0yNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkNsaW5pY2FsIFN0dWR5IFRvIEFzc2VzcyBCaW9lcXVpdmFsZW5jZSBvZiBlbGV0cmlwdGFuIDgwIG1nIFRhYmxldHMgSW4gSGVhbHRoeSBWb2x1bnRlZXJzLCBlbGV0cmlwdGFuIHZlcnN1cyBSZWxwYXgiLExhbmRzdGVpbmVyIFNjaWVudGlmaWMgU2EgRGUgQ3YsSW50ZXJ2ZW50aW9uYWwsMjE5OTA0LG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFc29waGFnaXRpcyw4MTAsbnVsbCxQcnVjYWxvcHJpZGUgVHJlYXRtZW50IGZvciBSZWZyYWN0b3J5IEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UsVW5pdmVyc2l0YWlyZSBaaWVrZW5odWl6ZW4gTGV1dmVuLEludGVydmVudGlvbmFsLDM1MzgwMCwyMDE4LTEyLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE9NUy0yMTAsODc5MDcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEaWFycmhlYSBwcmVkb21pbmFudCBpcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMzg2MyxudWxsLCJBIERvdWJsZS1CbGluZCwgUmFuZG9taXplZCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgdG8gQ29tcGFyZSB0aGUgU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBUd28gRG9zZSBMZXZlbHMgb2YgT01TLTIxMCBXaXRoIFBsYWNlYm8gaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIERpYXJyaGVhIFByZWRvbWluYW50IElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSIsTE9UVVMgUGhhcm1hY2V1dGljYWwgQ28gTHRkIChKQVBBTiksSW50ZXJ2ZW50aW9uYWwsMTQyNDQ0LDIwMTAtMTAtMTUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnNvbW5pYSw0MDAsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRyZWF0aW5nIHBhdGllbnRzIHdpdGggZGVsYXllZCBzbGVlcCBwaGFzZSBzeW5kcm9tZSBhbmQgaHlwZXJzb21ub2xlbmNlIGRpc29yZGVyLEFraXRhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzE0NTkxLDIwMTYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxZSC0xMjg1Miw4MjA1OCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvaW50ZXN0aW5hbCBtb3RpbGl0eSBkaXNvcmRlciwzNzk3LG51bGwsU2FmZXR5L1RvbGVyYWJpbGl0eSBhbmQgUGhhcm1hY29raW5ldGljcy9QaGFybWFjb2R5bmFtaWNzIG9mIFlILTEyODUyIEFmdGVyIE9yYWwgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBNYWxlIFN1YmplY3RzLFl1aGFuIENvcnAsSW50ZXJ2ZW50aW9uYWwsMTM3ODA0LDIwMTMtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbW5lc2lhLDE1LG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIHN0dWR5IHRvIHByb2JlIHRoZSBpbXBsaWNhdGlvbnMgb2YgdGhlIHBhcnRpYWwgRDIgcmVjZXB0b3IgYWdvbmlzdCBhY3Rpb25zIG9mIGFyaXBpcHJhem9sZSB3aXRoaW4gdGhlIGRvcnNvbGF0ZXJhbCBwcmVmcm9udGFsIGNvcnRleCBkdXJpbmcgd29ya2luZyBtZW1vcnkgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixCcmlzdG9sLU15ZXJzIFNxdWliYiBDbyxJbnRlcnZlbnRpb25hbCwyNTk1OTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIE9wZW4tbGFiZWwsIFNhZmV0eSBTdHVkeSBvZiBQaW1hdmFuc2VyaW4gaW4gUGFya2luc29uJ3MgRGlzZWFzZSBQYXRpZW50cyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODQzMDAsMjAwNC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENhdGF0b25pYyBzY2hpem9waHJlbmlhLDE5MzIsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdHdvLXdheSwgY3Jvc3Mtb3ZlciwgaW4tcGF0aWVudCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgcG90ZW50aWFsIHBoYXJtYWNva2luZXRpYyBpbnRlcmFjdGlvbiBvZiBzdW1hdHJpcHRhbiBhbmQgY2xhcml0aHJvbXljaW4gd2hlbiBjby1hZG1pbmlzdGVyZWQgdG8gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3ODU2LDIwMDAtMDYtMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRmFzdGluZyBTdHVkeSBvZiBTdW1hdHJpcHRhbiBTdWNjaW5hdGUgVGFibGV0cyAxMDAgbWcgdG8gSW1pdHJleCBUYWJsZXRzIDEwMCBtZyxNeWxhbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDE4OTgzMywyMDA0LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLFBHLU9DVCwiT3Blbi1MYWJlbCwgUGhhcm1hY29raW5ldGljLVBoYXJtYWNvZ2VuZXRpYyBTdHVkeSBvbiBQb2x5bW9ycGhpc21zIGluIHRoZSBPcmdhbmljIENhdGlvbiBUcmFuc3BvcnRlciBPQ1QxIixVbml2ZXJzaXR5IE1lZGljYWwgQ2VudGVyIEdvZXR0aW5nZW4sSW50ZXJ2ZW50aW9uYWwsMTcxNDEzLDIwMTMtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsU1RvUC1DLFN1YnN0YW5jZSBNaXN1c2UgVG8gUHN5Y2hpYXRyaWMgRGlzb3JkZXJzIGZvciBDYW5uYWJpcyxUaGUgVW5pdmVyc2l0eSBvZiBIb25nIEtvbmcsSW50ZXJ2ZW50aW9uYWwsMzM0OTQzLDIwMTgtMDctMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciB0aGUgTG9uZy10ZXJtIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzNTgzMzQsMjAxOC0xMS0wOSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgVHdvIEZpeGVkLURvc2VzIG9mIEJyZXhwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTdWJqZWN0cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcnMgVHlwZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxMzQzODksMjAxMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cGVycHJvbGFjdGluZW1pYSwxNzcsbnVsbCxBZGp1bmN0aXZlIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFJpc3Blcmlkb25lLUluZHVjZWQgSHlwZXJwcm9sYWN0aW5lbWlhLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxNjQwMTIsMjAxMy0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0ZWdhc2Vyb2QsMTAwOTEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGNyb3Nzb3ZlciBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IG9mIHRlZ2FzZXJvZCBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJVbml2ZXJzaXR5IEhvc3BpdGFsLCBHYXN0aHVpc2JlcmciLEludGVydmVudGlvbmFsLDExNTY3MSwyMDAzLTExLTEzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCwiQSBCaWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgREEtOTcwMSBpbiBQYXRpZW50cyB3aXRoIE1pbmltYWwgQ2hhbmdlIEVzb3BoYWdpdGlzIiwiU2V2ZXJhbmNlIEhvc3BpdGFsLCBZb25zZWkgVW5pdmVyc2l0eSBDb2xsZWdlIG9mIE1lZGljaW5lIixJbnRlcnZlbnRpb25hbCwyMDkwNzgsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw0KyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIGRvdWJsZS1kdW1teSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdCBvZiBzdWJjdXRhbmVvdXMgc3VtYXRyaXB0YW4gb24gdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzE2NywxOTk2LTAyLTA3IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIeXBlcnRlbnNpb24sMTc4LG51bGwsIkNvbXBhcmlzb24gb2YgVGFuZG9zcGlyb25lLCBBbWxvZGlwaW5lIGFuZCBUaGVpciBDb21iaW5hdGlvbiBpbiBBZHVsdHMgV2l0aCBIeXBlcnRlbnNpb24gYW5kIEFueGlldHkiLENob25ncWluZyBNZWRpY2FsIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzUzMjIyLDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsRWZmZWN0cyBvZiBBY3V0ZSBQcnVjYWxvcHJpZGUgQWRtaW5pc3RyYXRpb24gaW4gSGVhbHRoeSBWb2x1bnRlZXJzLFVuaXZlcnNpdHkgb2YgT3hmb3JkLEludGVydmVudGlvbmFsLDM3MjM0OCwyMDE3LTAyLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsVm9ydGlveGV0aW5lIHZlcnN1cyBTZXJ0cmFsaW5lIGluIE1leGljYW5zLFVuaXZlcnNpZGFkIEp1YXJleiBBdXRvbm9tYSBkZSBUYWJhc2NvLEludGVydmVudGlvbmFsLDM4Mzc3OCwyMDE2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdm9ydGlveGV0aW5lIGh5ZHJvYnJvbWlkZSw0ODExOSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLFZpQmlELFZvcnRpb3hldGluZSBhZGQtb24gVHJlYXRtZW50IEltcHJvdmVzIHRoZSBTeW1wdG9tcyBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGVwcmVzc2lvbixTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM0NzY3NiwyMDE4LTA4LTA4IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxEZXByZXNzaW9uLUNvZyBUcmlhbCxBbiBBbnRpZGVwcmVzc2FudCBNZWRpY2F0aW9ucyBmcm9tIFRyZWF0bWVudCBJbml0aWF0aW9uIGZvciBEZXByZXNzaXZlIERpc29yZGVyIHdpdGggQ29nbml0aXZlIEltcGFpcm1lbnQ6IEEgUHJvc3BlY3RpdmUgQ29tcGFyYXRpdmUgU3R1ZHksIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCwyODIyMzUsMjAxNi0xMS0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxWb3J0aW94ZXRpbmUgYXMgYWRqdW5jdGl2ZSB0cmVhdG1lbnQgb2Ygc2NoaXpvcGhyZW5pYSxUZWhyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDMxOTk1OCwyMDE3LTExLTA5IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkIHN0dWR5IHRvIGV2YWx1YXRlIGFueGlvbHl0aWMgZWZmZWN0IG9mIHRoZSBub3ZlbCBhbnRpcHN5Y2hvdGljIHppcHJhc2lkb25lIGNvbXBhcmVkIHdpdGggZGlhemVwYW0gaW4gc3ViamVjdHMgYW54aW91cyBiZWZvcmUgZGVudGFsIHN1cmdlcnkiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEyODA3LDIwMDItMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBIFRyaWFsIFRvIEV2YWx1YXRlIFN3aXRjaGluZyBPdXRwYXRpZW50cyB3aXRoIEJpcG9sYXIgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVycyBhbmQgU3Vic3RhbmNlIEFidXNlIGZyb20gVGhlaXIgQ3VycmVudCBBbnRpcHN5Y2hvdGljIHRvIEFyaXBpcHJhem9sZSxVbml2ZXJzaXR5IG9mIFRleGFzIFNvdXRod2VzdGVybiBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwxNDc3ODgsMjAwMy0wNC0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUmFuZG9taXplZCwgUGFyYWxsZWwtR3JvdXAsIFNpbmdsZS1BdHRhY2sgYW5kIElucGF0aWVudCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBGaXZlIERvc2UgTGV2ZWxzIG9mIFN1bWF0cmlwdGFuIFN1cHBvc2l0b3JpZXMgKDYsIDEyLjUsIDI1LCA1MCBhbmQgMTAwIG1nKSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggYW5kIFdpdGhvdXQgQXVyYSIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDY4NTEsMTk5Mi0xMC0wOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZm9yIHRoZSBjb21wYXJpc29uIG9mIGVsZXRyaXB0YW4gKDQwIHRvIDgwIG1nKSBhbmQgb3JhbCBzdW1hdHJpcHRhbiAoNTAgdG8gMTAwIG1nKSBmb3IgdGhlIHRyZWF0bWVudCBvZiBhY3V0ZSBtaWdyYWluZSBpbiBzdW1hdHJpcHRhbi1uYWl2ZSBwYXRpZW50cyIsTWVtb3JpYWwgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDk3NDQsMTk5OS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCxaaXByYXNpZG9uZSBmb3IgU2V2ZXJlIENvbmR1Y3QgYW5kIE90aGVyIERpc3J1cHRpdmUgQmVoYXZpb3IgRGlzb3JkZXJzLEFsYmVydC1MdWR3aWdzLVVuaXZlcnNpdOR0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDMxMzM0LDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyLDM0LG51bGwsTHVyYXNpZG9uZSBQZWRpYXRyaWMgUGhhcm1hY29raW5ldGljcyBTdHVkeSxTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDg4NDA1LDIwMTItMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx0YW5kb3NwaXJvbmUsMzYxOSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsbnVsbCwiUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQYXJhbGxlbCBTdHVkeSBEZXRlcm1pbmluZyBFZmZpY2FjeSBPZiBUYW5kb3NwaXJvbmUgQ2l0cmF0ZSBPbiBMLURPUEEtSW5kdWNlZCBEeXNraW5lc2lhIGluIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSIsSGlyb3Nha2kgVW5pdmVyc2l0eSBHcmFkdWF0ZSBTY2hvb2wgb2YgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTQ2NjkxLG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhIG5vdmVsIHByb2tpbmV0aWMgZHJ1ZywgcHJ1Y2Fsb3ByaWRlLCBvbiBib3dlbCBmdW5jdGlvbiBhbmQgZ2FzdHJvaW50ZXN0aW5hbCB0cmFuc2l0IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCwxOTA1MywxOTk3LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLER5c3Bob3JpYSwzNTk5LG51bGwsIkEgcGhhc2UgSVYsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBjcm9zc292ZXIgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgaW50ZXJtaXR0ZW50IHByb3BoeWxhY3RpYyB0cmVhdG1lbnQgd2l0aCBvcmFsIG5hcmF0cmlwdGFuIGluIHdvbWVuIHdpdGggcHJlLW1lbnN0cnVhbCBkeXNwaG9yaWEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTIsMjAwMC0wMy0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsU3dpdGNoIFN0dWR5IG9mIEV4aXN0aW5nIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIHRvIEJpZmVwcnVub3gsU29sdmF5IFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzU1OTMsMjAwNi0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQSBTdHVkeSBDb21wYXJpbmcgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgYW5kIEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciBpbiBIb3NwaXRhbGl6ZWQgUGF0aWVudHMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwzNTQ2OSwyMDA0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQXJpcGlwcmF6b2xlIFVzZWQgYXMgRHVhbCBUaGVyYXB5IGluIHRoZSBUcmVhdGVtZW50IG9mIFBhdGllbnRzIFdpdGggQ2hyb25pYyBTdGFibGUgU2NoaXpvcGhyZW5pYSBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMzU0NTAsMjAwNi0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLFBoYXJtYWNva2luZXRpY3MsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQW50aWNvbnZ1bHNhbnQgTW9vZCBTdGFiaWxpemVycywgQW50aXBzeWNob3RpYyBEcnVncyBhbmQgdGhlIEluc3VsaW4gUmVzaXN0YW5jZSBTeW5kcm9tZSIsVmFuZGVyYmlsdCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM0OTEwLDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxBbHBoYS1QUk9HUkVTUyB0cmlhbCxBbHBoYS1QUk9HUkVTUyB0cmlhbCxDaGliYSBVbml2ZXJzaXR5IEdyYWR1YXRlIFNjaG9vbCBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNjQ4MzYsMjAxMy0xMS0wNSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIGFuIEFudGlwc3ljaG90aWMgV2l0aCBhIE5vdmVsIE1lY2hhbmlzbSBvZiBBY3Rpb24sIGFuZCBSaXNwZXJpZG9uZSB2ZXJzdXMgUGxhY2VibyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCwxNDYzNzAsbnVsbCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMiBDbGluaWNhbCxDMixsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLE1PTk9OT0ZVLEEgU3R1ZHkgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBpbiBhIFNpbmdsZSBNaWdyYWluZSBBdHRhY2sgaW4gSmFwYW5lc2UgUGFydGljaXBhbnRzIFdpdGggTWlncmFpbmUsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzgyMTY3LDIwMTktMDYtMDMgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQXJpcGlwcmF6b2xlIGZvciBOZXVyb2xlcHRpYy1JbmR1Y2VkIFRhcmRpdmUgRHlza2luZXNpYSxUYW95dWFuIE1lbnRhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCw0NDA5NywyMDA4LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHpvbG1pdHJpcHRhbiw0NzM2LEJpb2VxdWl2YWxlbmNlLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE5ldXJvbG9naWNhbCBkaXNlYXNlLDY3NyxudWxsLCJNb25vY2VudHJpYywgT3BlbiwgUmFuZG9taXplZCBzdHVkeSBvZiBUd28tdHJlYXRtZW50cywgVHdvLXBlcmlvZHMsIFR3by1zZXF1ZW5jZXMsIENyb3NzZWQsIHRvIEV2YWx1YXRlIHRoZSBCaW9lcXVpdmFsZW5jZSBvZiBUd28gcG8gRm9ybXVsYXRpb25zIGluIERpc3BlcnNpYmxlIHRhYmxldHMsIGFmdGVyIHRoZSBBZG1pbmlzdHJhdGlvbiBvZiBhIFNpbmdsZSBEb3NlIEVxdWl2YWxlbnQgdG8gNSBtZyBvZiBab2xtaXRyaXB0YW4gKFByb2R1Y3QgcHJvdmlkZWQgYnkgRXhlbHRpcyBQaGFybWEgTWV4aWNvLCBUZXN0IG1lZGljaW5lIHZlcnN1cyBab21pZyBSYXBpbWVsdCwgcHJvZHVjdCBvZiBBc3RyYXplbmVjYSwgU0EgZGUgQ1YsIHJlZmVyZW5jZSBtZWRpY2luZSkgaW4gSGVhbHRoeSBGYXN0aW5nIFZvbHVudGVlcnMiLEludmVzdGlnYWNp824gRmFybWFjb2zzZ2ljYSB5IEJpb2Zhcm1hY+l1dGljYSBTQVBJIGRlIENWLEludGVydmVudGlvbmFsLDM4MTc0NSxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRXNvcGhhZ2VhbCBkaXNlYXNlLDI0MixJRU1QcnUsVHJlYXRtZW50IG9mIER5c3BoYWdpYSBhbmQgSW5lZmZlY3RpdmUgRXNvcGhhZ2VhbCBNb3RpbGl0eSBXaXRoIFBydWNhbG9wcmlkZTogQSBQaWxvdCBTdHVkeSxVbml2ZXJzaXR5IG9mIENhbGdhcnksSW50ZXJ2ZW50aW9uYWwsMzA4MjcxLDIwMTctMTAtMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsT3Blbi1MYWJlbCBaaXByYXNpZG9uZSBTdHVkeSBmb3IgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiBBZG9sZXNjZW50cyxOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzM5MzQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLENsaW5pY2FsIFRyaWFsIFdpdGggWmlwcmFzaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUHN5Y2hpYXRyaWMgUGF0aG9sb2d5IEFzc29jaWF0ZWQgdG8gQWxjb2hvbGlzbSxGdW5kYWNpbyBQcml2YWRhIEkgSW5zdGl0dXQgRGUgUmVjZXJjYSBEZSBMJ0hvc3BpdGFsIERlIExhIFNhbnRhIENyZXUgSSBTYW50IFBhdSxJbnRlcnZlbnRpb25hbCwzMzExOCwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2Jlc2l0eSwyMzgsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsbmFyYXRyaXB0YW4sMzIzNSxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWFkYWNoZSwxNDgsbnVsbCxOYXJhdHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBQb3N0IFRyYXVtYXRpYyBIZWFkYWNoZSBBc3NvY2lhdGVkIFdpdGggQ29nbml0aXZlIER5c2Z1bmN0aW9uLENsaW52ZXN0LEludGVydmVudGlvbmFsLDE0NDczLDIwMDYtMTAtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCxCcmV4cGlwcmF6b2xlIGZvciBCaXBvbGFyIERlcHJlc3Npb24sVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzI4NzIyLDIwMTctMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxFeGFtaW5pbmcgdGhlIEVmZmVjdHMgb2YgQW50aXBzeWNob3RpYyBNZWRpY2F0aW9ucyBvbiBJbnN1bGluIFNlbnNpdGl2aXR5LFZldGVyYW5zIE1lZGljYWwgUmVzZWFyY2ggRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCw1NDQ5MywyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEV2YWx1YXRpb24gb2YgcGFsYXRhYmlsaXR5IG9mIGd1bW1pIGRydWdzLCJIYW1hbWF0c3UgVW5pdmVyc2l0eSBTY2hvb2wgb2YgTWVkaWNpbmUsIFNoaXp1b2thIFVuaXZlcnNpdHkiLEludGVydmVudGlvbmFsLDI3NTQ1NCwyMDE1LTEwLTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsYXJpcGlwcmF6b2xlLDc3ODEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBQRVQgU3R1ZHkgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTcwMzY4LDIwMTAtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxCaW9lcXVpdmFsZW5jZSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGJpb2VxdWl2YWxlbmNlIG9mIGFyaXBpcHJhem9sZSBpbiBoZWFsdGh5IG1hbGUgdm9sdW50ZWVycy4gQWJpbGlmeSwgQnJpc3RvbC1NeWVycyBTcXVpYmIgZGUgTWV4aWNvLCBTLiBkZSBSTCBkZSBDViB2ZXJzdXMgQXJpcGlwcmF6b2xlIFVsdHJhIExhYm9yYXRvcmllcywgU0EgZGUgQ1YsIDE1IG1nIHRhYmxldHMiLCJVbHRyYSBMYWJvcmF0b3JpZXMsIFNBIGRlIENWIixJbnRlcnZlbnRpb25hbCwxNjQ1OTMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gaW4gdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBXaXRoIG9yIFdpdGhvdXQgQXVyYSwgYSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkiLElzdGl0dXRvIEx1c29mYXJtYWNvIERgSXRhbGlhIFNwQSxJbnRlcnZlbnRpb25hbCwxMTcxNzIsMjAwNy0wMy0yMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW9vZCBkaXNvcmRlciw1MzMsbnVsbCxaaXByYXNpZG9uZSBWZXJzdXMgU2VydHJhbGluZS9IYWxvcGVyaWRvbCBpbiBQc3ljaG90aWMgRGVwcmVzc2lvbixEdWtlIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzY0ODksMjAwMy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9wYXJlc2lzLDIxMDAsbnVsbCxFZmZlY3Qgb2YgdGVnYXNlcm9kIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gcGF0aWVudHMgd2l0aCBkaWFiZXRpYyBnYXN0cm9wYXJlc2lzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDk0MTAsMjAwNy0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsUmFuZG9taXplZCBUcmlhbCBvZiBNb3NhcHJpZGUgdmVyc3VzIFBsYWNlYm8gaW4gdGhlIFRyZWF0bWVudCBvZiBDb25zdGlwYXRpb24tUHJlZG9taW5hbnQgSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lLEFtZXJpY2FuIFVuaXZlcnNpdHkgb2YgQmVpcnV0IE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI1MzIzLDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSxQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxOZXVyb3BlcHRpZGVzIGluIHRoZSBIdW1hbmUgSW50cmEtIG9nIEV4dHJhY2VyZWJyYWwgQ2lyY3VsYXRpb24sRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCw1NzkyMiwyMDA3LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIEJpb2VxdWl2YWxlbmNlIFN0dWR5IG9mIHRoZSBMdS1BQTIxMDA0IDIwIG1nIGFuZCAyIHggMTAgbWcgVGFibGV0cyxUYWtlZGEgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyOTczNCwyMDE4LTAyLTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFbWVzaXMsMTEwLG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgT3JhbCBDTC1IMVQgaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSBQYWluLENoYXJsZXN0b24gTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwzNzM3MTYsMjAxOS0wMi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2FzdHJvcGFyZXNpcywyMTAwLG51bGwsUHJ1Y2Fsb3ByaWRlIFZlcnN1cyBQbGFjZWJvIGluIEdhc3Ryb3BhcmVzaXMsVW5pdmVyc2l0YWlyZSBaaWVrZW5odWl6ZW4gTGV1dmVuLEludGVydmVudGlvbmFsLDIzNjE1OSwyMDExLTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJ2b3J0aW94ZXRpbmUgKG1vZGlmaWVkIHJlbGVhc2UgY2Fwc3VsZXMsIGRlcHJlc3Npb24pLCBIIEx1bmRiZWNrIiw5MTE2NiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLFN0dWR5IENvbXBhcmluZyB0aGUgR2FzdHJvLWludGVzdGluYWwgVG9sZXJhYmlsaXR5IGFuZCBBYnNvcnB0aW9uIFByb2ZpbGUgb2YgVm9ydGlveGV0aW5lIEFmdGVyIEFkbWluaXN0cmF0aW9uIG9mIE1vZGlmaWVkLXJlbGVhc2UgRm9ybXVsYXRpb25zIGFuZCBJbW1lZGlhdGUtcmVsZWFzZSBGb3JtdWxhdGlvbiBpbiBIZWFsdGh5IFdvbWVuLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDE4MTg3NSwyMDE0LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbGFzbWlkaXRhbiw1NDgxMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiAoTFktNTczMTQ0KSBPdmVyIEZvdXIgTWlncmFpbmUgQXR0YWNrcywiRWxpIExpbGx5ICYgQ28sIEVsaSBMaWxseSAmIENvIG9mIEluZGlhIEluYyIsSW50ZXJ2ZW50aW9uYWwsMzUzNDk2LDIwMTktMDYtMjAgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMCBDbGluaWNhbCxDMCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTcGxlZW4gZGlzZWFzZSwxMDY2LG51bGwsIkNsaW5pY2FsIG9ic2VydmF0aW9uIG9mIFBpbmd3ZWkgY2Fwc3VsZSBpbiB0cmVhdGluZyBmdW5jdGlvbmFsIGR5c3BlcHNpYSB3aXRoIGxpdmVyIHN0YWduYXRpb24gYW5kIHNwbGVlbiBkZWZpY2llbmN5IGFuZCBpdHMgZWZmZWN0IG9uIENDSywgZ2hyZWxpbiIsQWZmaWxpYXRlZCBIb3NwaXRhbCBvZiBHYW5zdSBVbml2ZXJzaXR5IG9mIENoaW5lc2UgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMzcyNDAzLDIwMTQtMDEtMDEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxDb21wYXJpc29uIG9mIEFyaXBpcHJhem9sZSBhbmQgUmlzcGVyaWRvbmUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGVvcGxlIFdpdGggRmlyc3QtRXBpc29kZSBQc3ljaG9zaXMsTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzUyNjgsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsVGhlIENvbWJpbmF0aW9uIG9mIEFyaXBpcHJhem9sZSBhbmQgQW50aWRlcHJlc3NhbnRzIGluIFBzeWNob3RpYyBNYWpvciBEZXByZXNzaW9uLE1hc3NhY2h1c2V0dHMgR2VuZXJhbCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwzMzk3NCwyMDAzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixFRElQUCxFYXJseSBEZXRlY3Rpb24gYW5kIEludGVydmVudGlvbiBmb3IgdGhlIFByZXZlbnRpb24gb2YgUHN5Y2hvc2lzLE1haW5lIE1lZGljYWwgQ2VudGVyIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzMzU5NCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENvbXBhcmlzb24gb2YgUmlzcGVyaWRvbmUgdmVyc3VzIEFyaXBpcHJhem9sZSBpbiBhbXBoZXRhbWluZSBpbmR1Y2VkIHBzeWNob3RpYyBkaXNvcmRlcixLZXJtYW5zaGFoIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCwzMDg0MjIsMjAxMi0wOS0yMiAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixGQUNULEZsdW94ZXRpbmUgVmVyc3VzIEFyaXBpcHJhem9sZSBDb21wYXJhdGl2ZSBUcmlhbCxOb3J0aCBTaG9yZSBMb25nIElzbGFuZCBKZXdpc2ggSGVhbHRoIFN5c3RlbSxJbnRlcnZlbnRpb25hbCwyMjI2NTgsMjAxNC0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIERlbWVudGlhIG9mIHRoZSBBbHpoZWltZXIncyBUeXBlLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDEyNjQsMjAwMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLCJnZXBpcm9uZSAoZXh0ZW5kZWQgcmVsZWFzZSksIEZhYnJlIEtyYW1lciIsMzIwMywiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHNpbmdsZS1ibGluZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmxhdWF0ZSB0aGUgc2FmZXR5IGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIGdlcGlyb25lIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDQ1MDQ1LDE5OTAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSGVhZGFjaGUsMTQ4LG51bGwsVGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgUGxhY2VibyBvbiBDaWxvc3Rhem9sIEluZHVjZWQgSGVhZGFjaGUsRGFuaXNoIEhlYWRhY2hlIENlbnRlcixJbnRlcnZlbnRpb25hbCwyMzQwNjksMjAxNS0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxCQlMsUmVtZWRpYXRpb24gb2YgQWdlLXJlbGF0ZWQgQ29nbml0aXZlIERlY2xpbmU6IFZvcnRpb3hldGluZSBhbmQgQ29nbml0aXZlIFRyYWluaW5nLFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdCBMb3VpcyxJbnRlcnZlbnRpb25hbCwzMTE2OTUsMjAxNi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLENvZ25pdGl2ZSBEeXNmdW5jdGlvbiBpbiBNREQgUGF0aWVudHMsWmFwb3Jpemh6aHlhIE1lZGljYWwgQWNhZGVteSBvZiBQb3N0Z3JhZHVhdGUgRWR1Y2F0aW9uLEludGVydmVudGlvbmFsLDMwMTU2MywyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNleHVhbCBkeXNmdW5jdGlvbiwzNzc0LG51bGwsQSBNdWx0aWNlbnRlciBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBTd2l0Y2hpbmcgdG8gQXJpcGlwcmF6b2xlIDEyIFdlZWtzIG9uIHRoZSBTZXh1YWwgRHlzZnVuY3Rpb24gRnJvbSBSaXNwZXJpZG9uZSBvciBQYWxpcGVyaWRvbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIFNwZWN0cnVtIERpc29yZGVycyBvciBCaXBvbGFyIFNwZWN0cnVtIERpc29yZGVycyxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDA5NTgsMjAxMy0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxUQUstOTU0LDYwMjkyLFBoYXJtYWNva2luZXRpY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIHRoZSBQb3RlbnQgQ3l0b2Nocm9tZSBQLTQ1MCAzQTQgKENZUDNBNCkgSW5oaWJpdG9yIEl0cmFjb25hem9sZSBvbiB0aGUgUGhhcm1hY29raW5ldGljcyAoUEspIG9mIFRBSy05NTQgaW4gSGVhbHRoeSBBZHVsdCBQYXJ0aWNpcGFudHMsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMDAzMTEsMjAxNy0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBZ2dyZXNzaW9uLDksU0VSRU5FLFN0dWR5IHRvIEV4YW1pbmUgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIEFnaXRhdGlvbiBhbmQgQWdncmVzc2lvbiBpbiBBbHpoZWltZXIncyBEaXNlYXNlLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDI4MjE3MiwyMDE2LTExLTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsVHJlYXRtZW50IFdpdGggWmlwcmFzaWRvbmUgZm9yIFNjaGl6b3BocmVuaWEgUGF0aWVudHMgV2l0aCBPYnNlc3NpdmUgQ29tcHVsc2l2ZSBEaXNvcmRlciAoT0NEKSxTaGViYSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzMzE0MiwyMDA2LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBbiBvcGVuLCByYW5kb21pemVkIGNsaW5pY2FsIHRyaWFsIGludm9sdmluZyBIYWxvcGVyaWRvbCwgT2xhbnphcGluZSwgUXVldGlhcGluZSwgUmlzcGVyaWRvbmUsIGFuZCBaaXByYXNpZG9uZSBpbiBmaXJzdCBlcGlzb2RlIG5ldmVyLXRyZWF0ZWQgcHN5Y2hvc2lzIixFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwyNjc4NjYsMjAwMi0wMS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLFVzZSBvZiBJbnRyYW11c2N1bGFyIFppcHJhc2lkb25lIGZvciB0aGUgQ29udHJvbCBvZiBBY3V0ZSBQc3ljaG9zaXMgb3IgQWdpdGF0aW9uIGluIGFuIElucGF0aWVudCBHZXJpYXRyaWMgUG9wdWxhdGlvbixVbml2ZXJzaXR5IG9mIFRvbGVkbyxJbnRlcnZlbnRpb25hbCwxNDU2NTcsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxFcGlsZXBzeSwxMTksbnVsbCxCdXNwaXJvbmUgVGhlcmFweSBmb3IgTG9jYWxpemVkIEVwaWxlcHN5LE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsSW50ZXJ2ZW50aW9uYWwsODM0MjgsMjAxMS0xMS0yMiAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLEFyaXBpcHJhem9sZSB0byBSZWR1Y2UgQ29jYWluZSBSZWxhcHNlLFVuaXZlcnNpdHkgb2YgS2VudHVja3ksSW50ZXJ2ZW50aW9uYWwsMzQwNjYsMjAwNi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhlYmVwaHJlbmljIHNjaGl6b3BocmVuaWEsMTkzMSxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQrLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwxOTM1LG51bGwsUGF0aWVudC1DZW50ZXJlZCBDb2xsYWJvcmF0aXZlIENhcmUgZm9yIFByZXZlbnRpbmcgUG9zdC1UcmF1bWF0aWMgU3RyZXNzIERpc29yZGVyIEFmdGVyIFRyYXVtYXRpYyBJbmp1cnksVGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBNZW50YWwgSGVhbHRoLEludGVydmVudGlvbmFsLDIzMDA3LDIwMDYtMDYtMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxDT01QQVNTLEVmZmljYWN5IGFuZCBTYWZldHkgb2YgMjAgbWcgU3VtYXRyaXB0YW4gUG93ZGVyIERlbGl2ZXJlZCBJbnRyYW5hc2FsbHkgV2l0aCB0aGUgQmktZGlyZWN0aW9uYWwgRGV2aWNlIENvbXBhcmVkIFdpdGggMTAwIG1nIFN1bWF0cmlwdGFuIFRhYmxldHMgaW4gQWR1bHRzIFdpdGggQWN1dGUgTWlncmFpbmUgV2l0aCBvciBXaXRob3V0IEF1cmEsQXZhbmlyIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsOTAzMDMsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzYiBDbGluaWNhbCxDM0Isc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRob3V0IGF1cmEsMzY4MCxudWxsLCJBIHBoYXNlIElJSWIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbC1ncm91cCwgc2luZ2xlLWF0dGFjayBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIG9uc2V0IG9mIGVmZmljYWN5IG9mIGEgbmV3IGZvcm11bGF0aW9uIG9mIHN1bWF0cmlwdGFuIHRhYmxldHMgNTAgYW5kIDEwMCBtZyBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBhY3V0ZSBtaWdyYWluZSB3aXRoIGFuZCB3aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODcxNzksMjAwMy0xMC0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCwiRWxldHJpcHRhbiB2ZXJzdXMgU3VtYXRyaXB0YW46IEEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIE11bHRpcGxlIE1pZ3JhaW5lIEF0dGFjayBTdHVkeSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNjE2ODgsMTk5Ni0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLFBoYXNlIEkgRnVuY3Rpb25hbCBNYWduZXRpYyBSZXNvbmFuY2UgSW1hZ2luZyAoZk1SSSkgUGhhcm1hY29keW5hbWljIFN0dWRpZXMgb2YgQ29tcG91bmRzIGZvciBPcGlvaWQgVXNlIERpc29yZGVyIGFuZCBDb2NhaW5lIFVzZSBEaXNvcmRlcixWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTc5NTksMjAxNS0wNy0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxwcnVjYWxvcHJpZGUsMTU3MTYsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWxldXMsMTUxOSxudWxsLFBydWNhbG9wcmlkZSBpbiBQb3N0b3BlcmF0aXZlIElsZXVzLFVuaXZlcnNpdHkgb2YgQXVja2xhbmQsSW50ZXJ2ZW50aW9uYWwsMjc3NzgyLDIwMTctMTAtMjUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LE1FQUMsTWV0YWJvbGljIEVmZmVjdHMgb2YgQW50aXBzeWNob3RpY3MgaW4gQ2hpbGRyZW4sV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDE4MTM5NSwyMDA2LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsQSBTdHVkeSBvZiBDb21iaW5hdGlvbiBQcm9kdWN0IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSkgaW4gTWlncmFpbmUgU3ViamVjdHMgV2hvIFJlcG9ydCBQb29yIFJlc3BvbnNlIG9yIEludG9sZXJhbmNlIHRvIFNob3J0IEFjdGluZyBUcmlwdGFucyAoU3R1ZHkgMSBvZiAyKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxIZWJlcGhyZW5pYyBzY2hpem9waHJlbmlhLDE5MzEsbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KRXVyb3BlYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0ZXMgbWVsbGl0dXMsOTcsbnVsbCxJbXByb3ZpbmcgRGlhYmV0ZXMgUmlzayBGYWN0b3JzIGluIE1leGljYW4tQW1lcmljYW4gUGVyc29ucyBXaXRoIFNjaGl6b3BocmVuaWEgYnkgU3dpdGNoaW5nIHRvIFppcHJhc2lkb25lLFVuaXZlcnNpdHkgb2YgVGV4YXMgSGVhbHRoIFNjaWVuY2UgQ2VudGVyIFNhbiBBbnRvbmlvLEludGVydmVudGlvbmFsLDUwODksMjAwNy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmFub2lkIHNjaGl6b3BocmVuaWEsMTkzMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MCwyMDEwLTA0LTI3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFyYW5vaWQgc2NoaXpvcGhyZW5pYSwxOTMwLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSAoUkdILTE4OCkgaW4gdGhlIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDM0ODk1LDIwMDgtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIHNlcnRyYWxpbmUgYW5kIGJ1c3Bpcm9uZSBmb3IgdHJlYXRtZW50IG9mIGVsZGVybHkgcGF0aWVudHMgd2l0aCBnZW5lcmFsaXplZCBhbnhpZXR5IGRpc29yZGVyIChHQUQpIixNYXNoaGFkIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyxJbnRlcnZlbnRpb25hbCw2NTY0MSwyMDEwLTAyLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwibW90aWxpZGUsIEtpdGFzYXRvL1NoaW1penUvVGFrZWRhIiwzMDIwLCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBtb3RpbGlkZSBvbiB0aGUgaHVtYW4gaW50ZXJkaWdlc3RpdmUgZ2FzdHJvaW50ZXN0aW5hbCB0cmFjdCxLaXRhc2F0byBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMjAxMjAsMTk5My0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1KyxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvZ25pdGl2ZSBkaXNvcmRlciwzNTMsbnVsbCxHdWFuZmFjaW5lIEFkanVuY3RpdmUgVHJlYXRtZW50IHRvIEF0eXBpY2FsIEFudGlwc3ljaG90aWNzIGZvciBDb2duaXRpdmUgRHlzZnVuY3Rpb24gaW4gU2NoaXpvcGhyZW5pYSxSZXNlYXJjaCBGb3VuZGF0aW9uIGZvciBNZW50YWwgSHlnaWVuZSBJbmMsSW50ZXJ2ZW50aW9uYWwsOTc3MDgsMjAwMC0wMi0yOSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29nbml0aXZlIGRpc29yZGVyLDM1MyxudWxsLCJPcGVuLCBSYW5kb21pemVkIFRyaWFsIE9mIFRoZSBFZmZlY3QgT2YgQXJpcGlwcmF6b2xlIFZlcnN1cyBSaXNwZXJpZG9uZSBPbiBTb2NpYWwgQ29nbml0aW9uIEluIFNjaGl6b3BocmVuaWEiLFVuaXZlcnNpdGFpciBNZWRpc2NoIENlbnRydW0gVXRyZWNodCAsSW50ZXJ2ZW50aW9uYWwsMTQyMjg5LDIwMDUtMTItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSA2LXdlZWssIHBoYXNlIElJSWIsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCBwYXJhbGxlbC1ncm91cCwgZmxleGlibGUtZG9zZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgb2YgaW0vb3JhbCB6aXByYXNpZG9uZSBjb21wYXJlZCB0byBoYWxvcGVyaWRvbCBpbiB0aGUgdHJlYXRtZW50IG9mIGFjdXRlIGV4YWNlcmJhdGlvbiBvZiBzY2hpem9waHJlbmlhIGFuZCBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY3MTksMjAwMi0wMy0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSA2LXdlZWssIGRvdWJsZS1ibGluZCwgYWN0aXZlLWNvbnRyb2xsZWQsIHNhZmV0eSBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgemlwcmFzaWRvbmUsIGNvbXBhcmVkIHRvIG9sYW56YXBpbmUgaW4gaG9zcGl0YWxpemVkIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSBhbmQgc2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDUzNTYwLDIwMDEtMDUtMDggMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gZXZhbHVhdGUgQ05TIGVmZmVjdHMgb2Ygc3VtYXRyaXB0YW4gcml6YXRyaXB0YW4gaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsQ2VudHJlIGZvciBIdW1hbiBEcnVnIFJlc2VhcmNoLEludGVydmVudGlvbmFsLDExMTM5NywyMDAyLTA1LTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9kZWdlbmVyYXRpdmUgZGlzZWFzZSwyMzMsbnVsbCxFeHRlbnNpb24gU3R1ZHkgb2YgUGltYXZhbnNlcmluIGluIEFkdWx0IFN1YmplY3RzIFdpdGggTmV1cm9wc3ljaGlhdHJpYyBTeW1wdG9tcyBSZWxhdGVkIHRvIE5ldXJvZGVnZW5lcmF0aXZlIERpc2Vhc2UsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ5Mzg2LDIwMTgtMDctMTcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29sb24gZGlzZWFzZSw1NjgsbnVsbCwiRXZhbHVhdGlvbiBvZiB0aGUgZWZmaWNhY3ksIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHBydWNhbG9wcmlkZSAoUmVzb2xvcikgZ2l2ZW4gc3ViY3V0YW5lb3VzbHkgaW4gcGF0aWVudHMgdW5kZXJnb2luZyBlbGVjdGl2ZSBwYXJ0aWFsIGNvbGVjdG9taWVzIixTaGlyZS1Nb3ZldGlzIE5WLEludGVydmVudGlvbmFsLDE5MTA0LDIwMDgtMDUtMjEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFzcGVyZ2VyIHN5bmRyb21lLDE5NDgsbnVsbCxBbiBPcGVuLUxhYmVsIFRyaWFsIG9mIEFyaXBpcHJhem9sZSBpbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXJzLENhbWJyaWRnZSBIZWFsdGggQWxsaWFuY2UsSW50ZXJ2ZW50aW9uYWwsMzEwMDcsMjAwNi0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlN0dWR5IHRvIEV2YWx1YXRlIFBoYXJtYWNva2luZXRpY3MsIFNhZmV0eSwgYW5kIFRvbGVyYWJpbGl0eSBJbGRvbmcgQ09MLTE0NCBUYWJsZXQgaW4gS29yZWFuIEhlYWx0aHkgVm9sdW50ZWVycyIsSWwgRG9uZyBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzc5NDYyLDIwMTktMDgtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxBIFN0dWR5IG9mIExhc21pZGl0YW4gaW4gSGVhbHRoeSBFbGRlcmx5IFBhcnRpY2lwYW50cyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMjY0OTksMjAxOC0wMS0yNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAwIENsaW5pY2FsLEMwLHJpemF0cmlwdGFuLDUzMjgsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTW90aW9uIHNpY2tuZXNzLDExNzUsbnVsbCxEb2VzIGEgTWlncmFpbmUgTWVkaWNhdGlvbiBEZWNyZWFzZSBSb3RhdGlvbmFsIE1vdGlvbiBTaWNrbmVzcyBpbiBQZW9wbGUgU3VmZmVyaW5nIEZyb20gTWlncmFpbmVzLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw3MDY5LDIwMDYtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJCdXNwaXJvbmUgSHlkcm9jaGxvcmlkZSAzMCBtZyBUYWJsZXRzLCBOb24tRmFzdGluZyIsVGV2YSBQaGFybWFjZXV0aWNhbHMgVVNBIEluYyxJbnRlcnZlbnRpb25hbCwxOTQ5NTYsMjAwMS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLERpaW5kb2x5bG1ldGhhbmUgaW4gSGVhbHRoeSBWb2x1bnRlZXJzLE5hdGlvbmFsIENhbmNlciBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTg1MjM1LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEVmZmVjdCBvZiBBbnRpZGVwcmVzc2FudHMgb24gdGhlIFRyZWF0bWVudCBmb3IgS29yZWFuIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgUGF0aWVudHMsIk1pbmlzdHJ5IG9mIEhlYWx0aCAmIFdlbGZhcmUsIEtvcmVhIixJbnRlcnZlbnRpb25hbCw1ODI0NywyMDA5LTA1LTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIFRoZXJhcHkgaW4gVHJlYXRtZW50LVJlc2lzdGFudCBEZXByZXNzaW9uLEFsYmVydC1MdWR3aWdzLVVuaXZlcnNpdOR0IEZyZWlidXJnLEludGVydmVudGlvbmFsLDM0NjAxLDIwMDUtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGVwcmVzc2lvbiw5MyxudWxsLEEgU3R1ZHkgb2YgRGlhZ25vc2lzIGFuZCBUcmVhdG1lbnQgb2YgRGVwcmVzc2lvbiBCYXNlZCBvbiBCaW9sb2dpY2FsIEV2aWRlbmNlIG9mIERvcGFtaW5lIFJld2FyZCBQYXRod2F5LFBla2luZyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI5ODY1MCwyMDE3LTA2LTAxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImN5Y2xvc2VyaW5lICsgbHVyYXNpZG9uZSAoYmlwb2xhciBkZXByZXNzaW9uLCBzdWljaWRhbGl0eSksIE5ldXJvUngiLDk3ODQ2LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSUkgZGlzb3JkZXIsMzExNSxTZXZlcmVCRCxOUlgtMTAwIHZlcnN1cyBQbGFjZWJvIGZvciBSYXBpZCBTdGFiaWxpemF0aW9uIG9mIEFjdXRlIFN1aWNpZGFsIElkZWF0aW9uIGFuZCBCZWhhdmlvciBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1Mzc3LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFJFU09MVkUgMSxNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIChNREQpIFdpdGggTWl4ZWQgRmVhdHVyZXMgLSBGbGV4aWJsZSBEb3NlLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODAzMDAsMjAxMS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLG51bGwsRWZmZWN0IGFuZCBzYWZldHkgb2YgemlwcmFzaWRvbmUgY29tcGFyZWQgdG8gb3RoZXIgYXR5cGljYWwgYW50aS1wc3ljaG90aWMgZHJ1ZyBpbiBzY2hpem9waHJlbmljIHBhdGllbnRzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExMjAsMjAwMS0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9waHJlbmlmb3JtIGRpc29yZGVyLDE5NzEsS2FobiwiSW52ZXN0aWdhdGlvbiBvZiB0aGUgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgdmVyc3VzIG9sYW56YXBpbmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgcmVjZW50LW9uc2V0IHBzeWNob3NpczsgQSBmbGV4aWJsZS1kb3NlLCBwYXJhbGxlbC1ncm91cCwgZG91YmxlLWJsaW5kIHN0dWR5IixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDIwOTY5LDIwMDMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDYXRhdG9uaWMgc2NoaXpvcGhyZW5pYSwxOTMyLG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODIsMjAxMC0wNC0yMyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbG9ub3Njb3B5LDMwMTAsbnVsbCxFZmZpY2FjeSBvZiBtb3NhcHJpZGUgY2l0cmF0ZSB3aXRoIGEgc3BsaXQgZG9zZSBvZiBQRUcgKyBhc2NvcmJpYyBhY2lkIGZvciBib3dlbCBwcmVwYXJhdGlvbiBpbiBlbGRlcmx5IHBhdGllbnRzLEtvcmVhIFVuaXRlZCBQaGFybSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzIyMTI1LDIwMTctMTEtMjEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvcGhyZW5pZm9ybSBkaXNvcmRlciwxOTcxLFBBRklQMiwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgQXJpcGlwcmF6b2xlLCBRdWV0aWFwaW5lIGFuZCBaaXByYXNpZG9uZSBpbiB0aGUgVHJlYXRtZW50IG9mIEZpcnN0IEVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXMiLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjE3NDYxLDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsV2VpZ2h0IGdhaW4sMjk1NCxudWxsLDEvMi1NQzRSIEdlbm90eXBlIGFuZCBQZWRpYXRyaWMgQW50aXBzeWNob3RpYyBEcnVnLUluZHVjZWQgV2VpZ2h0IEdhaW4sTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMTI2OTE4LDIwMTMtMDctMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLCJBIHN0dWR5IHRvIGV2YWx1YXRlIHBoYXJtYWNva2luZXRpY3MsIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIENhcmlwcmF6aW5lIGluIGFkb2xlc2NlbnQgc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIGNvbXBhcmVkIHRvIGFkdWx0cyIsR2VkZW9uIFJpY2h0ZXIgTHRkLEludGVydmVudGlvbmFsLDI5MjUzMCwyMDE3LTAxLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1vdmVtZW50IGRpc29yZGVyLDM2OCxCVVNQQVJLLEJ1c3Bpcm9uZSBUcmVhdG1lbnQgb2YgSWF0cm9nZW5pYyBEeXNraW5lc2lhcyBpbiBBZHZhbmNlZCBQYXJraW5zb24gRGlzZWFzZSxBc3Npc3RhbmNlIFB1YmxpcXVlIEhvcGl0YXV4IGRlIFBhcmlzLEludGVydmVudGlvbmFsLDI0NzI0NiwyMDE2LTA2LTE3IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNb3ZlbWVudCBkaXNvcmRlciwzNjgsQlVTLVBELCJCdXNwaXJvbmUsIGluIENvbWJpbmF0aW9uIFdpdGggQW1hbnRhZGluZSwgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTGV2b2RvcGEtaW5kdWNlZCBEeXNraW5lc2lhIixPcmVnb24gSGVhbHRoIFNjaWVuY2VzIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjQ0MTc5LDIwMTYtMDEtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsImxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSAoZXh0ZW5kZWQtcmVsZWFzZSwgb2Jlc2l0eSksIEFyZW5hL0Vpc2FpIiw5MDU2MCwiU2FmZXR5LEJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRGVtb25zdHJhdGUgQmlvZXF1aXZhbGVuY2UgQmV0d2VlbiBMb3JjYXNlcmluIEV4dGVuZGVkIFJlbGVhc2UgKFhSKSBUYWJsZXRzIE1hbnVmYWN0dXJlZCBpbiBLYXdhc2hpbWEgYW5kIExvcmNhc2VyaW4gWFIgVGFibGV0cyBNYW51ZmFjdHVyZWQgaW4gWm9maW5nZW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWlzYWkgSW5jLEludGVydmVudGlvbmFsLDM0OTk2NCwyMDE4LTA4LTA3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0KyxQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9ic2Vzc2l2ZSBjb21wdWxzaXZlIGRpc29yZGVyLDQ2OCxudWxsLEF1Z21lbnRhdGlvbiB0aGVyYXB5IGNvbXBhcmlzb24gaW4gcmVmcmFjdG9yeSBvYnNlc3NpdmUtY29tcHVsc2l2ZSBkaXNvcmRlciB3aXRoIGFyaXBpcHJhem9sZSB2ZXJzdXMgcmlzcGVyaWRvbmUsS2FzaGFuIFVuaXZlcnNpdHkgb2YgTWVkaWNhbCBTY2llbmNlcyBhbmQgSGVhbHRoIFNlcnZpY2VzLEludGVydmVudGlvbmFsLDI5NDAwMSwyMDEzLTA0LTIxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDErLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsT2JzZXNzaXZlIGNvbXB1bHNpdmUgZGlzb3JkZXIsNDY4LG51bGwsRWZmZWN0aXZlbmVzcyBvZiBBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIGluIFNTUkktUmVmcmFjdG9yeSBPQ0QgV2l0aCBQb29yIEluc2lnaHQsSHlvZ28gQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxMTkyNDMsMjAxMi0wMS0wMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKG1pZ3JhaW5lLCBaRU5FTyksIENyb3NzamVjdCIsMTA5NDcyLEJpb2VxdWl2YWxlbmNlLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhaW4sMjAsbnVsbCxBIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHN1bWF0cmlwdGFuIGluIHRoZSB0cmVhdG1lbnQgb2YgZmFjaWFsIGFsZ2lhIGFuZCBhY3V0ZSBtaWdyYWluZSxDcm9zc2plY3QsSW50ZXJ2ZW50aW9uYWwsMzMwMjIwLDIwMTUtMTItMzEgMDA6MDA6MDAsUGxhbm5lZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFN3aXRjaCBFeHQsQSBTdHVkeSBvZiBTdWJqZWN0cyBTd2l0Y2hlZCB0byBMdXJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjcyNjksMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTmV1cm9iZWhhdmlvcmFsIGRpc29yZGVyLDI0NjAsbnVsbCxTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBTZXJpb3VzIEJlaGF2aW9yYWwgUHJvYmxlbXMgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQXV0aXN0aWMgRGlzb3JkZXIgKEFEKSwiQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sIE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jIixJbnRlcnZlbnRpb25hbCwxOTQxMSwyMDA2LTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnJvbWVyZ3VyaWRlLDI2ODYsIlNhZmV0eSxCaW9hdmFpbGFiaWxpdHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCwiQSBwaGFzZSBJIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgYnJvbWVyZ3VyaWRlIGluIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzIixCYXllciBTY2hlcmluZyBQaGFybWEgQUcsSW50ZXJ2ZW50aW9uYWwsNTU3MzksMTk4Ni0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElWLCBvcGVuLWxhYmVsLCBtdWx0aWNlbnRlciwgbm9uLWNvbXBhcmF0aXZlIHN0dWR5IHRvIGRldGVybWluZSB0aGUgdG9sZXJhYmlsaXR5LCBzYWZldHksIGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSAoR2VvZG9uKSBpbiB0cmVhdG1lbnQgb2Ygc3ViamVjdHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciB3aG8gd2VyZSBpbmVmZmVjdGl2ZWx5IHRyZWF0ZWQgd2l0aCBhbnRpcHN5Y2hvdGljIGFnZW50cyIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw4NjY4NiwyMDAyLTExLTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHBhcmFsbGVsLWdyb3VwLCAzLW1vbnRocyBwaWxvdCBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIGJlc3Qgb3B0aW9uIGZvciB0cmFuc2l0aW9uaW5nIGZyb20gYW1pc3VscHJpZGUgdG8gemlwcmFzaWRvbmUgdGhlcmFweSBpbiBzdWJqZWN0cyByZWNlaXZpbmcgYW1pc3VscHJpZGUgZm9yIGNocm9uaWMgb3Igc3ViY2hyb25pYyBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlcnMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODYzMTksMjAwMS0wNC0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw1LFBoYXNlIDEgQ2xpbmljYWwsQzEsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IFRyaWFsIG9mIEFyaXBpcHJhem9sZSBJTSBEZXBvdCBUcmVhdG1lbnQgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIFN0YWJpbGl6ZWQgb24gT3JhbCBBbnRpcHN5Y2hvdGljcyBPdGhlciBUaGFuIEFyaXBpcHJhem9sZSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsODU2MjQsMjAxMi0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxJZGVudGlmeWluZyBQcmVkaWN0b3JzIG9mIFJlc3BvbnNlIHRvIEFudGlwc3ljaG90aWNzIFVzaW5nIGEgVHJlYXRtZW50IEFsZ29yaXRobSxVbml2ZXJzaXR5IG9mIFNhbyBQYXVsbyxJbnRlcnZlbnRpb25hbCw2MjA4MSwyMDA5LTA0LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBkb3NlLXJhbmdpbmcsIGhhbG9wZXJpZG9sLWNvbnRyb2xsZWQsIGV4cGxvcmF0b3J5IHN0dWR5IGV2YWx1YXRpbmcgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB6aXByYXNpZG9uZSBpbiBob3NwaXRhbGl6ZWQgcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhIG9yIHNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzQ4OSwxOTk4LTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsRWZmZWN0IG9mIFppcHJhc2lkb25lIG9uIEdsdWNvc2UgYW5kIFBsYXNtYSBMaXBpZHMgaW4gRGlhYmV0ZXMgSUkgYW5kIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE1hbmhhdHRhbiBQc3ljaGlhdHJpYyBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsNDc2MSwyMDAzLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw3LFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiU3R1ZHkgRXZhbHVhdGluZyBUaGUgU2FmZXR5LCBUb2xlcmFiaWxpdHksIEFuZCBFZmZpY2FjeSBPZiBTd2l0Y2hpbmcgRnJvbSBRdWV0aWFwaW5lIFRvIFppcHJhc2lkb25lIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM1ODEwLDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSBvZiB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBaaXByYXNpZG9uZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIEV4YWNlcmJhdGlvbiBvZiBTY2hpem9waHJlbmlhIG9yIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODk4LDIwMDQtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KQXNpYW4gQW5jZXN0cnksMixQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IHRvIENvbXBhcmUgdGhlIEVmZmljYWN5IGFuZCBTYWZldHkgb2YgWmlwcmFzaWRvbmUgYW5kIFJpc3Blcmlkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEgaW4gQ2hpbmVzZSBQYXRpZW50cyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0ODkxLDIwMDQtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMmEgQ2xpbmljYWwsQzJBLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIE9yYWwgWmlwcmFzaWRvbmUgaW4gQ2hpbGRyZW4gYW5kIFRlZW5zIFdpdGggUHN5Y2hvdGljIERpc29yZGVycyxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDM0NzUzLDIwMDMtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBTdHVkeSB0byBBc3Nlc3MgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQVNQLTQzNDUgYXMgQWRkLW9uIFRyZWF0bWVudCBmb3IgQ29nbml0aXZlIEltcGFpcm1lbnQgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9uIFN0YWJsZSBEb3NlcyBvZiBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb24sQXN0ZWxsYXMgUGhhcm1hIEdsb2JhbCBEZXZlbG9wbWVudCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQzMDk0LDIwMTgtMDctMTMgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IE9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgRm9yIFRocmVlIERheXMgSW4gUGF0aWVudHMgV2l0aCBQc3ljaG90aWMgQWdpdGF0aW9uLEJlaWppbmcgSHVpLUxvbmctR3VhbiBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNzU4ODMsMjAxNi0xMC0zMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVAgUHJvamVjdCxEb3NlIHJlZHVjdGlvbiBvciBzd2l0Y2ggdG8gemlwcmFzaWRvbmUgZm9sbG93ZWQgYnkgY2xvemFwaW5lIHRoZXJhcHk6IHdoYXQgd29ya3MgYmV0dGVyIGluIGEgbG9uZyBzdGF5IHNjaGl6b3BocmVuaWEgZ3JvdXA/LFVuaXZlcnNpdGVpdCBVdHJlY2h0LEludGVydmVudGlvbmFsLDI3MDIwMywyMDA3LTA3LTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksUEFGSVAyX25jMVksTmV1cm9jb2duaXRpdmUgRWZmZWN0aXZlbmVzcyBpbiBUcmVhdG1lbnQgb2YgRmlyc3QtZXBpc29kZSBOb24tYWZmZWN0aXZlIFBzeWNob3NpczogT25lLXllYXIgRm9sbG93LXVwLEZ1bmRhY2lvbiBNYXJxdWVzIGRlIFZhbGRlY2lsbGEsSW50ZXJ2ZW50aW9uYWwsMjM4OTE1LDIwMDUtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsT3Blbi1MYWJlbCBaaXByYXNpZG9uZSBTdHVkeSBmb3IgUHN5Y2hvc2lzIFRyZWF0bWVudCBpbiBBZG9sZXNjZW50cyxOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzM5MzQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCwiQSAyMS1kYXksIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIGluLXBhdGllbnQsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBzYWZldHkgYW5kIGVmZmljYWN5IHN0dWR5IG9mIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdpdGggYWN1dGUgYmlwb2xhciBtYW5pYSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MzU1MywyMDAyLTA0LTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsRWZmaWNhY3kgYW5kIFNhZmV0eSBUcmlhbCBvZiBGbGV4aWJsZSBEb3NlcyBvZiBPcmFsIFppcHJhc2lkb25lIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgSSBEaXNvcmRlcixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE3NjIyOSwyMDE0LTA1LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSssUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLEVmZmljYWN5LFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkFzc29jaWF0aW9uIEJldHdlZW4gQW54aWV0eSBhbmQgQmlwb2xhciBJIERpc29yZGVyIGluIFJhbmRvbWl6ZWQsIFBsYWNlYm8tQ29udHJvbGxlZCwgTWFpbnRlbmFuY2UgU3R1ZHkgb2YgWmlwcmFzaWRvbmUgQ29tYmluZWQgV2l0aCBNb29kIFN0YWJpbGl6ZXIiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ3OTg4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZ2VwaXJvbmUgKGV4dGVuZGVkIHJlbGVhc2UpLCBGYWJyZSBLcmFtZXIiLDMyMDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxEZXByZXNzaW9uLDkzLG51bGwsUmVsYXBzZSBQcmV2ZW50aW9uIHdpdGggR2VwaXJvbmUgRVIgaW4gT3V0cGF0aWVudHMgd2l0aCBNYWpvciBEZXByZXNzaW9uLEJyb3duIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTUzMjA4LG51bGwsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIElWLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwgR3JvdXAgVG8gRXZhbHVhdGUgVGhlIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgT3JhbCBOYXJhdHJpcHRhbiAxIG1nIFR3aWNlIERhaWx5IGFzIFByb3BoeWxhY3RpYyBUcmVhdG1lbnQgZm9yIE1lbnN0cnVhbGx5LUFzc29jaWF0ZWQgTWlncmFpbmUiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsNzg1OTcsMjAwMC0wNC0xMiAwMDowMDowMCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxuYXJhdHJpcHRhbiwzMjM1LFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIsIHBvc3QtbWFya2V0aW5nIHN1cnZlaWxsYW5jZSBzdHVkeSB0byBtb25pdG9yIHRoZSBzYWZldHkgb2YgTmFyYW1pZyBpbiBLb3JlYW4gc3ViamVjdHMgYWNjb3JkaW5nIHRvIHRoZSBwcmVzY3JpYmluZyBpbmZvcm1hdGlvbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3ODU0NywyMDAxLTAzLTI2IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBwYXJhbGxlbCBncm91cCwgc2luZ2xlLWF0dGFjaywgaW5wYXRpZW50IHN0dWR5IHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2Ygb3JhbCBuYXJhdHJpcHRhbiB3aXRoIHRoYXQgb2Ygb3JhbCBzdW1hdHJpcHRhbiBhbmQgcGxhY2VibyBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc4MDgxLDE5OTMtMTAtMTQgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJLCBvcGVuLWxhYmVsLCByYW5kb21pemVkLCB0d28tcGVyaW9kLCBjcm9zc292ZXIgc3R1ZHkgdG8gZGV0ZXJtaW5lIHRoZSBlZmZlY3Qgb2YgZm9vZCBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBvcmFsIG5hcmF0cmlwdGFuIHRhYmxldHMgaW4gaGVhbHRoeSBmZW1hbGUgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzI1MCwxOTk1LTA3LTI1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxuYXJhdHJpcHRhbiwzMjM1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCBwcm9zcGVjdGl2ZSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHBhcmFsbGVsIGdyb3VwLCB0d28tYXR0YWNrLCBvdXRwYXRpZW50IHN0dWR5IHRvIGRldGVybWluZSBpZiBuYXJhdHJpcHRhbiB3YXMgYWJsZSB0byB0cmVhdCBtaWdyYWluZSBoZWFkYWNoZXMgaW4gc3ViamVjdHMgd2l0aCBhIGhpc3Rvcnkgb2YgcG9vciByZXNwb25zZSB0byBzdW1hdHJpcHRhbiIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw3NzIxMiwxOTk3LTA5LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDMgQ2xpbmljYWwsQzMsbmFyYXRyaXB0YW4sMzIzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsQXRlbmVpYSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIGEgRml4ZWQtZG9zZSBDb21iaW5hdGlvbiBvZiBOYXJhdHJpcHRhbiBhbmQgTmFwcm94ZW4gaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEFjaGUgTGFib3JhdG9yaW9zIEZhcm1hY2V1dGljb3MgU0EsSW50ZXJ2ZW50aW9uYWwsMTA4NTA5LDIwMTEtMTItMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyKyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRhbmRvc3Bpcm9uZSwzNjE5LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixEZXByZXNzaW9uLDkzLG51bGwsIkEgcmFuZG9taXplZCwgY29udHJvbGxlZCB0cmlhbCB0byBldmFsdWF0ZSB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiB0YW5kb3NwaXJvbmUgYXVnbWVudGF0aW9uIGluIHBhdGllbnRzIHdpdGggbWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciIsS2VpbyBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDczODM5LDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAwIENsaW5pY2FsLEMwLG1vc2FwcmlkZSwzNjU4LEVmZmljYWN5LE4sTixEaXNjb250aW51ZWQsRFgsRHlzcGVwc2lhLDQzMixudWxsLCJDbGluaWNhbCBvYnNlcnZhdGlvbiBvZiBQaW5nd2VpIGNhcHN1bGUgaW4gdHJlYXRpbmcgZnVuY3Rpb25hbCBkeXNwZXBzaWEgd2l0aCBsaXZlciBzdGFnbmF0aW9uIGFuZCBzcGxlZW4gZGVmaWNpZW5jeSBhbmQgaXRzIGVmZmVjdCBvbiBDQ0ssIGdocmVsaW4iLEFmZmlsaWF0ZWQgSG9zcGl0YWwgb2YgR2Fuc3UgVW5pdmVyc2l0eSBvZiBDaGluZXNlIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM3MjQwMywyMDE0LTAxLTAxIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsTUFSUyxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIFVJMDVNU1AwMTVDVCBpbiBGdW5jdGlvbmFsIER5c3BlcHNpYSxLb3JlYSBVbml0ZWQgUGhhcm0gSW5jLEludGVydmVudGlvbmFsLDMwNjA5MCwyMDE0LTExLTA1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxEeXNwZXBzaWEsNDMyLG51bGwsIkNsaW5pY2FsIHN0dWR5IG9mIFNodWdhbmppZXl1ZWppYW9uYW5nIGpvaW50IE1vc2FwcmlkZSBDaXRyYXRlIERpc3BlcnNpYmxlIFRhYmxldHMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgZnVuY3Rpb25hbCBkeXNwZXBzaWE6IGEgbXVsdGktY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8gY29udHJvbGxlZCBjbGluaWNhbCB0cmlhbCIsU2hhbmdoYWkgSmlhbyBUb25nIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMjg4OTYzLDIwMTYtMDktMTUgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxZLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsIENvbXBhcmlzb24gb2YgUFBJcyBhbmQgSDItUmVjZXB0b3IgQW50YWdvbmlzdHMgUGx1cyBQcm9raW5ldGljcyBGb3IgRHlzbW90aWxpdHktTGlrZSBEeXNwZXBzaWEiLE1vcmlndWNoaSBLZWlqaW5rYWkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTczMzU4LG51bGwsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCxMYW5zb3ByYXpvbGUgVmVyc3VzIE1vc2FwcmlkZSBmb3IgRnVuY3Rpb25hbCBEeXNwZXBzaWEsTG90dW5nIFBvaC1BaSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMjgxNSwyMDA4LTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsVG9reW8gVW5pdmVyc2l0eSBPbWVwcmF6b2xlIHZlcnN1cyBHYXNtb3RpbiAobW9zYXByaWRlKSBwbHVzIE9tZXByYXpvbGUgU3R1ZHksVGhlIFVuaXZlcnNpdHkgb2YgVG9reW8gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTQ5MjYwLDIwMDctMTAtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx4YWxpcHJvZGVuLDQ0NzQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxBbHpoZWltZXJzIGRpc2Vhc2UsMTQsbnVsbCxTdHVkeSBvZiBYYWxpcHJvZGVuIChTUi01Nzc0NkEpIGluIFBhdGllbnRzIFdpdGggTWlsZC10by1Nb2RlcmF0ZSBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSxTYW5vZmkgU0EsSW50ZXJ2ZW50aW9uYWwsMjQwNywyMDAzLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDbHVzdGVyIGhlYWRhY2hlLDczLG51bGwsQSBDcm9zc292ZXI7IERvdWJsZS1ibGluZDsgUGxhY2Viby1jb250cm9sbGVkOyBSYW5kb21pemVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gaW4gY2x1c3RlciBoZWFkYWNoZSxVbml2ZXJzaXR5IG9mIFR1cmluLEludGVydmVudGlvbmFsLDExNTg3MiwyMDAzLTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFByb2NobG9ycGVyYXppbmUgVmVyc3VzIEltaXRyZXggZm9yIEFjdXRlIE1pZ3JhaW5lIGluIHRoZSBFbWVyZ2VuY3kgRGVwYXJ0bWVudCwiTmF2YWwgTWVkaWNhbCBDZW50ZXIsIFBvcnRzbW91dGgiLEludGVydmVudGlvbmFsLDkyNDE3LDIwMDctMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIHNpbmdsZS1hdHRhY2ssIG91dHBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBzdW1hdHJpcHRhbiAyNSwgNTAsIGFuZCAxMDAgbWcgdGFibGV0cyBmb3IgYSBzaW5nbGUgbW9kZXJhdGUgb3Igc2V2ZXJlIGhlYWRhY2hlIGluIGFkdWx0cyBkaWFnbm9zZWQgd2l0aCBtaWdyYWlub3VzIGRpc29yZGVyIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3OTcyLDIwMDItMDgtMDUgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIElWLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAsIG91dHBhdGllbnQsIHNpbmdsZSBhdHRhY2sgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygc3VtYXRyaXB0YW4gdGFibGV0cyA1MCBhbmQgMTAwIG1nIHZlcnN1cyBwbGFjZWJvIGR1cmluZyBhIG1pZ3JhaW5lIGhlYWRhY2hlIGF0IHRoZSBmaXJzdCBzaWduIG9mIHBhaW4iLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NjcsMjAwMC0wNy0wNiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJViwgcmFuZG9taXplZCwgbXVsdGljZW50ZXIsIHNpbmdsZS1ibGluZCwgY3Jvc3Mtb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiBzdW1hdHJpcHRhbiAyNSBtZyBzdXBwb3NpdG9yaWVzIGNvbXBhcmVkIHRvIG5hcHJveGVuIDUwMCBtZyBzdXBwb3NpdG9yaWVzIGluIHRoZSBhY3V0ZSwgZWFybHkgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIHBhdGllbnRzIHN1ZmZlcmluZyBmcm9tIG5hdXNlYSBhbmQvb3Igdm9taXRpbmcgZHVyaW5nIHRoZWlyIGF0dGFja3MiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc4NDMsMjAwMS0xMS0zMCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIHNpbmdsZS1jZW50ZXIsIHBsYWNlYm8tY29udHJvbGxlZCwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCB0d28tcGVyaW9kLCBjcm9zcy1vdmVyLCBvdXRwYXRpZW50IHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIHN1bWF0cmlwdGFuIG5hc2FsIHNwcmF5IDEwIG1nIGZvciB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGluIGNoaWxkcmVuIHN1ZmZlcmluZyBmcm9tIHJlZnJhY3RvcnkgbWlncmFpbmUgd2l0aC93aXRob3V0IGF1cmEiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc3MTAsMjAwMC0wMi0xNCAwMDowMDowMCxDb21wbGV0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBbiBPcGVuLUxhYmVsLCBNdXRpY2VudGVyLCBQb3N0LU1hcmtldGluZyBTdXJ2ZWlsbGFuY2UgU3R1ZHkgVG8gRXZhbHVhdGUgU2FmZXR5IEFuZCBFZmZpY2FjeSBPZiBTdW1hdHJpcHRhbiBJbiBQYXRpZW50cyBXaXRoIE1pZ3JhaW5lIGFuZCBDbHVzdGVyIEhlYWRhY2hlIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDczNzk2LDIwMDktMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFRocmVlLVBlcmlvZCBDcm9zc292ZXIgU3R1ZHkgdG8gRXZhbHVhdGUgU3VtYXRyaXB0YW4gUGhhcm1hY29raW5ldGljcyBmb3IgYSBUcmV4aW1hIChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgLyBOYXByb3hlbiBTb2RpdW0pIFRhYmxldCBGb2xsb3dlZCBieSBJbWl0cmV4IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUpIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDUwNzYwLDIwMDgtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENvbXBhcmF0aXZlIEJpb2F2YWlsYWJpbGl0eSBTdHVkeSBvZiBPbWV4YSBTdW1hdHJpcHRhbiBWZXJzdXMgSW1pdHJleCBpbiBIZWFsdGh5IFZvbHVudGVlcnMsVGFyZ2lhIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwyNzg2ODYsMjAxNi0wMy0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCwgUGFyYWxsZWwtR3JvdXAgU3R1ZHkgdG8gRXZhbHVhdGUgVHdvIERvc2UgTGV2ZWxzICgxMCBhbmQgMjAgbWcpIG9mIEludHJhbmFzYWwgU3VtYXRyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBBdHRhY2siLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMjA0MjQxLDE5OTMtMTAtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIrLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBY2V0YW1pbm9waGVuLCBBc3BpcmluIGFuZCBDYWZmZWluZSBXaXRoIFN1bWF0cmlwdGFuIGluIHRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE3NjMzOCwyMDEwLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxNQVRSSVgoTWlncmFpbmVyIEFzc2VzcyBUUmlwdGFuZSBlWGFtaW5hdGlvbiksVW5pdmVyc2l0eSBvZiBUc3VrdWJhLEludGVydmVudGlvbmFsLDEzMjc4NSwyMDEwLTAxLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsS1NQTiBNaWdyYWluZSxDb21wYXJpc29uIG9mIEtldG9yb2xhYyBOYXNhbCBTcHJheSB0byBTdW1hdHJpcHRhbiBOYXNhbCBTcHJheSBhbmQgUGxhY2VibyBmb3IgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMTU0OTUsMjAxMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgY29tcGFyYXRpdmUsIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgZXZhbHVhdGluZyBwYXRpZW50IHNhdGlzZmFjdGlvbiB3aXRoIHJpemF0cmlwdGFuIHZlcnN1cyBvdGhlciB0cmlwdGFuczogRGlyZWN0IGhlYWQtdG8taGVhZCBjb21wYXJpc29ucyIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTEwNDU3LDIwMDEtMTAtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCByYW5kb21pemVkLCBjcm9zcy1vdmVyIHRyaWFsIG9mIGEgZHVhbC1yZWxlYXNlIGZvcm11bGF0aW9uIG9mIG9yYWwga2V0b3Byb2ZlbiBpbiB0aGUgYWN1dGUgdHJlYXRtZW50IG9mIG1pZ3JhaW5lIGF0dGFja3MiLEFzc2lzdGFuY2UgUHVibGlxdWUgSG9waXRhdXggZGUgUGFyaXMsSW50ZXJ2ZW50aW9uYWwsNzM5OTksMjAwMi0wNi0xMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxUUlh2VXN1YWxUcnB0bixEb2VzIFRyZXhpbWV0IEltcHJvdmUgUHJvZHVjdGl2aXR5IGFuZCBQYXRpZW50IFNhdGlzZmFjdGlvbiBEdWUgdG8gU3VzdGFpbmVkIFJlc3BvbnNlIGFuZCBDb25zaXN0ZW5jeSBvZiBSZXNwb25zZT8sVGhlIENsZXZlbGFuZCBDbGluaWMgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDY0ODU4LDIwMDktMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDUsUGhhc2UgMiBDbGluaWNhbCxDMix6b2xtaXRyaXB0YW4sNDczNixFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQ29tcGFyaXNvbiBvZiBQcmVmZXJlbmNlIGZvciBUcmlwdGFucyBpbiBNaWdyYWluZSBQYXRpZW50czogQSBSYW5kb21pemVkLCBPcGVuLUxhYmVsLCBDcm9zc292ZXIgUHJvc3BlY3RpdmUgU3R1ZHkiLEtpdGFzYXRvIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTI1OTgxLDIwMTAtMDItMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsWSxZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgdHdvLXdheSBjcm9zc292ZXIgc3R1ZHkgaW4gaGVhbHRoeSBtYWxlIGFuZCBmZW1hbGUgc3ViamVjdHMgdG8gY29tcGFyZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIHJpemF0cmlwdGFuIHdpdGggTWF4YWx0LU1MVCIsSW50ZWxHZW54IFRlY2hub2xvZ2llcyBDb3JwLEludGVydmVudGlvbmFsLDg3OTQ1LDIwMTItMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRyZWF0bWVudCBvZiBNdWx0aXBsZSBBdHRhY2tzIG9mIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCw1NDcwOSwxOTk1LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiUml6YXRyaXB0YW4gNSBhbmQgMTAgbWcsIFN1bWF0cmlwdGFuIDEwMCBtZywgYW5kIFBsYWNlYm8gQ29tcGFyaXNvbiBTdHVkeSIsTWVyY2sgJiBDbyBJbmMsSW50ZXJ2ZW50aW9uYWwsNTQ2NzUsMTk5NS0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLHJpemF0cmlwdGFuLDUzMjgsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBQcmVmZXJlbmNlIFRyaWFsIHdpdGggUml6YXRyaXB0YW4gMTAgbWcgYW5kIElidXByb2ZlbiA0MDAgbWcgaW4gTWlncmFpbmUgUGF0aWVudHMgSW4gdGhlIEdlbmVyYWwgUHJhY3RpY2UsTGVpZGVuIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjg2NDU4LDIwMDUtMDMtMjMgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsUml6YXRyaXB0YW4gZm9yIEVwaXNvZGljIERpenppbmVzcyBpbiBWZXN0aWJ1bGFyIE1pZ3JhaW5lLFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBMb3MgQW5nZWxlcyxJbnRlcnZlbnRpb25hbCwyMzAyMzgsMjAxNC0xMi0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFR3byBSaXphdHJpcHRhbiBQcmVzY3JpYmluZyBQb3J0aW9ucyBmb3IgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLENsaW52ZXN0LEludGVydmVudGlvbmFsLDE0MDQwLDIwMDYtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxyaXphdHJpcHRhbiw1MzI4LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFRlbGNhZ2VwYW50IChNSy0wOTc0KSBMb25nLXRlcm0gU2FmZXR5IFN0dWR5IGluIEFkdWx0IFBhcnRpY2lwYW50cyBXaXRoIEFjdXRlIE1pZ3JhaW5lLE1lcmNrIFNoYXJwICYgRG9obWUgQ29ycCxJbnRlcnZlbnRpb25hbCwxMzkyMiwyMDA3LTAyLTIxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBEb3VibGUtQmxpbmQsIENyb3Nzb3ZlciBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBSaXphdHJpcHRhbiBmb3IgdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSIsSXN0aXR1dG8gTHVzb2Zhcm1hY28gRGBJdGFsaWEgU3BBLEludGVydmVudGlvbmFsLDExNzE3NSwyMDA3LTA1LTI0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMscml6YXRyaXB0YW4sNTMyOCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSByYW5kb21pemVkLCBjb21wYXJhdGl2ZSwgZG91YmxlLWJsaW5kLCBtdWx0aWNlbnRlciwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGFzc2VzcyB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiByaXphdHJpcHRhbiBhbmQgbmFyYXRyaXB0YW4gaW4gcGF0aWVudHMgd2l0aCAgbW9kZXJhdGUvc2V2ZXJlIG1pZ3JhaW5lIGhlYWRhY2hlIixJZ25hdGl1cyBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMDc4MDksMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyKyxQaGFzZSA0IENsaW5pY2FsLEM0LHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLFRTTSxEcnVnIGFuZCBOb24tRHJ1ZyBUcmVhdG1lbnQgT2YgU2V2ZXJlIE1pZ3JhaW5lLE9oaW8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMDI3NzMsMjAwMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcHJvc3BlY3RpdmUsIG11bHRpY2VudGVyLCBvcGVuLWxhYmVsIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHkgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgYXJpcGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgb2YgYSBicm9hZCByYW5nZSBvZiBwYXRpZW50cyB3aXRoIHNjaGl6b3BocmVuaWEiLCJCcmlzdG9sLU15ZXJzIFNxdWliYiBDbywgT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsOTYyNzUsMjAxMS0wOS0xNCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCw3LFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHBoYXNlIElJSSwgbXVsdGljZW50ZXIsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCBzdHVkeSB0byBjb21wYXJlIHRoZSBzYWZldHkgYW5kIGVmZmljYWN5IG9mIGZsZXhpYmxlIGRvc2VzIG9mIGFyaXBpcHJhem9sZSB3aXRoIHBlcnBoZW5hemluZSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwYXRpZW50cyB3aXRoIHRyZWF0bWVudC1yZXNpc3RhbnQgc2NoaXpvcGhyZW5pYSIsIkJyaXN0b2wtTXllcnMgU3F1aWJiIENvLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkIixJbnRlcnZlbnRpb25hbCw4MzA0OCwyMDAwLTA4LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBbiBvcGVuLWxhYmVsLCByYW5kb21pemVkIHRyaWFsIHRvIGNvbXBhcmUgdGhlIGVmZmljYWN5IG9mIGFyaXBpcHJhem9sZSB3aXRoIHJpc3Blcmlkb25lIG9uIG1lYXN1cmVzIG9mIGFuaGVkb25pYSBhbmQgc3ViamVjdGl2ZSB3ZWxsLWJlaW5nIGluIHBhdGllbnRzIHdpdGggc2NoaXpvcGhyZW5pYSIsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsNzg1NTQsMjAxMS0wMy0yMiAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIENvbXBhcmlzb24gU3R1ZHkgb2YgTFktMjE0MDAyMyBhbmQgQXJpcGlwcmF6b2xlIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsNzYwNzMsMjAxMS0wNC0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIExZLTIxNDAwMjMgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIFByb21pbmVudCBOZWdhdGl2ZSBTeW1wdG9tcyxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCw2MzUwNiwyMDEwLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIDUyLXdlZWsgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIHdoZW4gY29tcGFyZWQgdG8gaGFsb3Blcmlkb2wgaW4gcGF0aWVudHMgd2l0aCBhY3V0ZSByZWxhcHNlIG9mIHNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw1MTE5OSwyMDAyLTA1LTIyIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxESU1FUywiRGlnaXRhbCBNZWRpY2luZSBTdHVkeSBmb3IgQWR1bHRzIFdpdGggU2NoaXpvcGhyZW5pYSwgQmlwb2xhciBJIERpc29yZGVyLCBvciBNYWpvciBEZXByZXNzaW9uIEN1cnJlbnRseSBVc2luZyBBcmlwaXByYXpvbGUiLER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCwzNzM5NDEsMjAxOS0wNC0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBUcmlhbCBvZiBTaW5nbGUtIGFuZCBNdWx0aXBsZS1kb3NlcyBvZiBBcmlwaXByYXpvbGUgaW4gQWR1bHQgU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgSSBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNzE1MTAsMjAxOS0wMS0zMSAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQ0hBVCxSYW5kb21pemVkIEV2YWx1YXRpb24gb2YgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgQ2xvemFwaW5lIGFuZCBBcmlwaXByYXpvbGUgVmVyc3VzIENsb3phcGluZSBhbmQgSGFsb3Blcmlkb2wgaW4gdGhlIFRyZWF0bWVudCBvZiBTY2hpem9waHJlbmlhLFVuaXZlcnNpdGEgZGkgVmVyb25hLEludGVydmVudGlvbmFsLDM2MjI1LDIwMDYtMDktMzAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBBdWdtZW50YXRpb24gZm9yIENsb3phcGluZS1UcmVhdGVkIFBhdGllbnRzIFdpdGggUmVmcmFjdG9yeSBTY2hpem9waHJlbmlhLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzU0NTEsMjAwNS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFyaXBpcHJhem9sZSBVc2VkIGFzIER1YWwgVGhlcmFweSBpbiB0aGUgVHJlYXRlbWVudCBvZiBQYXRpZW50cyBXaXRoIENocm9uaWMgU3RhYmxlIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLEJyaXN0b2wtTXllcnMgU3F1aWJiIENvLEludGVydmVudGlvbmFsLDM1NDUwLDIwMDYtMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEJFVEEsQSBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIE1hbmFnZW1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIGluIHRoZSBHZW5lcmFsIFBzeWNoaWF0cmljIFByYWN0aWNlcyxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzNDU0NiwyMDAyLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFN0dWR5IG9mIERpYWdub3NpcyBhbmQgVHJlYXRtZW50IG9mIERlcHJlc3Npb24gQmFzZWQgb24gQmlvbG9naWNhbCBFdmlkZW5jZSBvZiBEb3BhbWluZSBSZXdhcmQgUGF0aHdheSxQZWtpbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyOTg2NTAsMjAxNy0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCkFzaWFuIEFuY2VzdHJ5LDUsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRoZSBSb2xlIG9mIG1pUi0zMCBGYW1pbHkgRHlzcmVndWxhdGlvbiBpbiBSZXNwb25zZSB0byBBbnRpcHN5Y2hvdGljIFRyZWF0bWVudCxTaGFueGkgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDI1MDU0NiwyMDEzLTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNixQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLEVmZmljYWN5LE4sWSxMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgdGhlIEltcGFjdCBvZiBBcmlwaXByYXpvbGUgKEFiaWxpZnkpIE9uY2UgTW9udGhseSBWZXJzdXMgU3RhbmRhcmQgb2YgQ2FyZSBPcmFsIEFudGlwc3ljaG90aWMgTWVkaWNhdGlvbnMgb24gQ2hhbmdlcyBpbiBCcmFpbiBTdHJ1Y3R1cmUgYW5kIE1ldGFib2xpc20sVW5pdmVyc2l0eSBvZiBVdGFoLEludGVydmVudGlvbmFsLDIxMDIyOCwyMDE0LTA5LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsNCxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LENPTlNUQVRSRSxBIFN0dWR5IG9mIFJlbGFwc2UgUHJldmVudGlvbiBhbmQgdGhlIEVmZmVjdGl2ZW5lc3Mgb2YgTG9uZy1BY3RpbmcgSW5qZWN0YWJsZSBSaXNwZXJpZG9uZSBhbmQgUXVldGlhcGluZSBUYWJsZXRzIGluIHRoZSBUcmVhdG1lbnQgb2YgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhIG9yIFNjaGlvemFmZmVjdGl2ZSBEaXNvcmRlcixKYW5zc2VuLUNpbGFnIEludGVybmF0aW9uYWwgTlYgKEJFKSxJbnRlcnZlbnRpb25hbCwyMDk5OCwyMDA0LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxFZmZlY3RpdmVuZXNzIG9mIFN3aXRjaGluZyBBbnRpcHN5Y2hvdGljcyB0byBBcmlwaXByYXpvbGUgb3IgQmxvbmFuc2VyaW4gYW5kIFBsYXNtYSBNb25vYW1pbmUgTWV0YWJvbGl0ZXMgTGV2ZWxzIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGdWt1c2hpbWEgTWVkaWNhbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDE3ODE5MixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQS1CTEFTLCJBIENvbXBhcmlzb24gb2YgTWVkaWNhdGlvbiBBZGhlcmVuY2Ugb2YgQmxvbmFuc2VyaW4gYW5kIEFyaXBpcHJhem9sZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzOiBhIE11bHRpY2VudGVyLCBSYW5kb21pemVkLCBPcGVuLWxhYmVsIFN0dWR5IiwiU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQsIFVuaXZlcnNpdHkgb2YgT2NjdXBhdGlvbmFsICYgRW52aXJvbm1lbnRhbCBIZWFsdGgiLEludGVydmVudGlvbmFsLDE2NjIzNCwyMDEyLTAyLTAxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCkphcGFuZXNlIEFuY2VzdHJ5LDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIHJhbmRvbWl6ZWQsIGNvbnRyb2xsZWQgdHJpYWwgb2YgYmxvbmFuc2VyaW4gdmVyc3VzIGFyaXBpcHJhem9sZSBpbiBwc3ljaG90aWMgZGlzb3JkZXIiLCJGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksIEhvc3BpdGFsIG9mIFN0IENyb3NzLCBUaGUgSmluZGFpIEhvc3BpdGFsLCBUaGUgT2tlaGF6YW1hIEhvc3BpdGFsLCBUb3lvdGEgTWVtb3JpYWwgSG9zcGl0YWwiLEludGVydmVudGlvbmFsLDE1NjA2MywyMDEzLTA3LTE2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIFBpbG90IFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBJbXByb3ZlbWVudCBpbiBTb2NpYWwgQ29tcGV0ZW5jZSBpbiBTY2hpem9waHJlbmljIFBhdGllbnRzIFVzaW5nIGEgUGVyZm9ybWFuY2UtQmFzZWQgTWVhc3VyZSBVc2luZyBWaXJ0dWFsIFJlYWxpdHksU2V2ZXJhbmNlIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDE1MzA3NyxudWxsLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkFuIE9wZW4tTGFiZWwsIFJhbmRvbWl6ZWQsIFN3aXRjaC1PdmVyIFN0dWR5IG9mIFR3byBGaXhlZCBEb3NlcyAoMTAvMTUgbWcpIG9mIEFyaXBpcHJhem9sZSBUbyBFdmFsdWF0ZSBJdHMgU2FmZXR5IGFuZCBFZmZpY2FjeSBpbiB0aGUgVHJlYXRtZW50IG9mIEluZGlhbiBTY2hpem9waHJlbmljIFBhdGllbnRzIiwiVmlkeWFzYWdhciBJbnN0aXR1dGUgb2YgTWVudGFsIEhlYWx0aCwgTmV1cm8gJiBBbGxpZWQgU2NpZW5jZXMiLEludGVydmVudGlvbmFsLDE0ODE1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUsIGFuIEFudGlwc3ljaG90aWMgV2l0aCBhIE5vdmVsIE1lY2hhbmlzbSBvZiBBY3Rpb24sIGFuZCBSaXNwZXJpZG9uZSB2ZXJzdXMgUGxhY2VibyBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEgYW5kIFNjaGl6b2FmZmVjdGl2ZSBEaXNvcmRlciIsVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhIElydmluZSxJbnRlcnZlbnRpb25hbCwxNDYzNzAsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBQaWxvdCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gU2NoaXpvcGhyZW5pYSBQYXRpZW50cyBXaXRoIENvY2FpbmUgRGVwZW5kZW5jZSxVbml2ZXJzaXR5IG9mIERlbnZlcixJbnRlcnZlbnRpb25hbCwxNDUwOTMsbnVsbCxDb21wbGV0ZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLCJBIDI2LVdlZWssIFByb3NwZWN0aXZlIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBMb25nLVRlcm0gRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgd2l0aCBTY2hpem9waHJlbmlhLCBTY2hpem9waHJlbmlmb3JtIERpc29yZGVyLCBvciBTY2hpem9hZmZlY3RpdmUgRGlzb3JkZXIiLFNlb3VsIE5hdGlvbmFsIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBNZWRpY2luZSxJbnRlcnZlbnRpb25hbCwxNDQ0OTUsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQSBDbGluaWNhbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gVHJlYXRpbmcgRmlyc3QtZXBpc29kZSBTY2hpem9waHJlbmlhLEtvcmVhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTQ0MzkwLG51bGwsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsQ29udHJvbGxlZCBDbGluaWNhbCBDb21wYXJpc29uIG9mIFBlcm9zcGlyb25lIGFuZCBBcmlwaXByYXpvbGUgQ29uc2lkZXJpbmcgdGhlIERydWcgU3VzY2VwdGliaWxpdHkgR2VuZSwiT3RzdWthIEhvbGRpbmdzIENvIEx0ZCwgU3VtaXRvbW8gRGFpbmlwcG9uIFBoYXJtYSBDbyBMdGQiLEludGVydmVudGlvbmFsLDE0MjI4NSwyMDEwLTAzLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEF1dGlzbSw0MjMsbnVsbCxTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiBBcmlwaXByYXpvbGUsU2Ftc3VuZyBNZWRpY2FsIENlbnRlciAoU01DKSxJbnRlcnZlbnRpb25hbCwxNzQ2ODYsMjAxNC0wMi0yOCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLERydWcgZGVwZW5kZW5jZSw1ODgsbnVsbCxBbiBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBNZXRoYW1waGV0YW1pbmUgRGVwZW5kZW5jZSxDZW50cmFsIFNvdXRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMTE2NTE1LDIwMTItMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgVHJlYXRtZW50IG9mIEJpcG9sYXIgRGVwcmVzc2lvbixJbmRpYW5hIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lLEludGVydmVudGlvbmFsLDM0MTc4LDIwMDUtMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxBQkxFLEFiaWxpZnkgaW4gQmlwb2xhciBEaXNvcmRlciBmb3IgTG9uZy1UZXJtIEVmZmVjdGl2ZW5lc3MsT3RzdWthIEhvbGRpbmdzIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMzk1NCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxBcmlwaXByYXpvbGUgZm9yIHRoZSBUcmVhdG1lbnQgb2YgTWFuaWEgaW4gQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggQmlwb2xhciBEaXNvcmRlcixNYXNzYWNodXNldHRzIEdlbmVyYWwgSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMzI0NTUsMjAwMy0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgZGlzb3JkZXIsNjUzLG51bGwsQXJpcGlwcmF6b2xlIGluIENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFESEQsRmVkZXJhbCBVbml2ZXJzaXR5IG9mIFJpbyBHcmFuZGUgZG8gU3VsLEludGVydmVudGlvbmFsLDMxNTc5LDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEEgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGVmZmVjdHMgb2Ygc3dpdGNoaW5nIHRvIGFyaXBpcHJhem9sZSBmcm9tIGN1cnJlbnQgYXR5cGljYWwgYW50aXBzeWNob3RpY3Mgb24gc3Vic3luZHJvbWFsIHN5bXB0b21zIGFuZCB0b2xlcmFiaWxpdHkgaW4gcGF0aWVudHMgd2l0aCBiaXBvbGFyIGRpc29yZGVyLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjc1NzIwLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFyaXBpcHJhem9sZSw3NzgxLCJCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLEJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGFyaXBpcHJhem9sZSB3aGVuIGFkbWluaXN0ZXJlZCBhcyBhIDE1IG1nIG9yYWxseSBkaXNpbnRlZ3JhdGluZyB0YWJsZXQgcmVsYXRpdmUgdG8gYSAxNSBtZyBjb21tZXJjaWFsIHRhYmxldCBpbiBoZWFsdGh5IG1hbGUgYW5kL29yIGZlbWFsZSBzdWJqZWN0cyB1bmRlciBmYXN0aW5nIGNvbmRpdGlvbixLb3JlYSBPdHN1a2EgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDI0NDEzMywyMDEyLTA4LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTGF1bmNoZWQsTCxCaXBvbGFyIGRpc29yZGVyLDY1MyxudWxsLFN0dWR5IG9mIEFyaXBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggQWN1dGUgU3ltcHRvbXMgaW4gQmlwb2xhciBEaXNvcmRlcixPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxOTIwMSwyMDAyLTAyLTI4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQW4gT3Blbi1MYWJlbCBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVycyxDYW1icmlkZ2UgSGVhbHRoIEFsbGlhbmNlLEludGVydmVudGlvbmFsLDMxMDA3LDIwMDYtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFBlcnZhc2l2ZSBjaGlsZCBkZXZlbG9wbWVudGFsIGRpc29yZGVyLDE5NDcsUEFJUlMsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIHRvIFRyZWF0IENoaWxkcmVuIGFuZCBBZG9sZXNjZW50cyBXaXRoIEF1dGlzbSxVbml2ZXJzaXR5IG9mIE5vcnRoIENhcm9saW5hLEludGVydmVudGlvbmFsLDMwOTY1LDIwMDYtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxQZXJ2YXNpdmUgY2hpbGQgZGV2ZWxvcG1lbnRhbCBkaXNvcmRlciwxOTQ3LG51bGwsQmlvZXF1aXZhbGVuY2Ugc3R1ZHkgb2YgYXJpcGlwcmF6b2xlIHdoZW4gYWRtaW5pc3RlcmVkIGFzIGEgMTUgbWcgb3JhbGx5IGRpc2ludGVncmF0aW5nIHRhYmxldCByZWxhdGl2ZSB0byBhIDE1IG1nIGNvbW1lcmNpYWwgdGFibGV0IGluIGhlYWx0aHkgbWFsZSBhbmQvb3IgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9uLEtvcmVhIE90c3VrYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMjQ0MTMzLDIwMTItMDgtMjkgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLFksTGF1bmNoZWQsTCxNYW5pYSwxOTU3LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsWSxOLExhdW5jaGVkLEwsTWFuaWEsMTk1NyxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIEFjdXRlIE1hbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDE5NDAwLDIwMDQtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNYW5pYSwxOTU3LEFNQVpFLCJBIFBsYWNlYm8tY29udHJvbGxlZCwgRG91YmxlLWJsaW5kIFN0dWR5IG9mIFRoZSBFZmZpY2FjeSBBbmQgU2FmZXR5IG9mIEFyaXBpcHJhem9sZSBGb3IgdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNYW5pYyBvciBNaXhlZCBFcGlzb2RlcyBpbiBBc2lhbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgaSBEaXNvcmRlciIsTmF0aW9uYWwgSG9zcGl0YWwgT3JnYW5pemF0aW9uLEludGVydmVudGlvbmFsLDE0NDEzNSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsVG91cmV0dGUgc3luZHJvbWUsMjk0MSxudWxsLEFyaXBpcHJhem9sZSBPcmFsIFNvbHV0aW9uIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hpbGRyZW4gYW5kIEFkb2xlc2NlbnRzIFdpdGggVG91cmV0dGUncyBTeW5kcm9tZSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzMxMDcxLDIwMTgtMDUtMDIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsUEFNUyxTaWRlIEVmZmVjdCBTdHVkeSBvZiBBbnRpcHN5Y2hvdGljIE1lZGljaW5lcyB0byBUcmVhdCBDaGlsZGhvb2QgQmlwb2xhciBEaXNvcmRlcixVbml2ZXJzaXR5IG9mIE1hcnlsYW5kLEludGVydmVudGlvbmFsLDM0ODc4LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLERpc2NvbnRpbnVlZCxEWCxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsbnVsbCwiRWZmaWNhY3kgb2YgOCBXZWVrcywgT3Blbi1MYWJlbCBBcmlwaXByYXpvbGUgYXMgQXVnbWVudGF0aW9uIFRoZXJhcHkgaW4gQmlwb2xhciBJSSBEaXNvcmRlciIsQnJpc3RvbC1NeWVycyBTcXVpYmIgQ28sSW50ZXJ2ZW50aW9uYWwsMTM0NzE4LDIwMDQtMDEtMDggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQb3N0bmF0YWwgZGVwcmVzc2lvbiwzNTE0LG51bGwsIkEgcmFuZG9taXplZCwgc2luZ2xlLWJsaW5kZWQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgZWZmZWN0IG9mIGFudGlkb3BhbWluZXJnaWMgdHJlYXRtZW50IHdpdGggYXJpcGlwcmF6b2xlLCBoYWxvcGVyaWRvbCwgYW5kIHJlc2VycGluZSBvbiBwc3ljaG9wYXRob2xvZ3kgYW5kIG1vdG9yIHN5bXB0b21zIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsIkRldXRzY2hlIEZvcnNjaHVuZ3NnZW1laW5zY2hhZnQgKERGRyksIFJoZWluaXNjaC1XZXN0ZmFlbGlzY2hlIFRlY2huaXNjaGUgSG9jaHNjaHVsZSBBYWNoZW4iLEludGVydmVudGlvbmFsLDgzODE3LDIwMTEtMDMtMTEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksQmlvZXF1aXZhbGVuY2UsUGhhcm1hY29raW5ldGljcyIsTixOLERpc2NvbnRpbnVlZCxEWCxBZ2l0YXRpb24sMzYwOSxudWxsLCJDb21wYXJhdGl2ZSBzdHVkeSBvZiB0aGUgcGhhcm1hY29raW5ldGljcyBhbmQgYmlvZXF1aXZhbGVuY2Ugb2YgZHJ1Z3MgIiJNaXJpdW0gVGFibGV0cyAxMCBtZyIiICgiIlNpbnRvbiBTcGFpbiBTTCIiLCBvd25lciBvZiB0aGUgcmVnaXN0cmF0aW9uIGNlcnRpZmljYXRlIG9mIEpTQyAiIkdyaW5kZWtzIiIsIExhdHZpYSkgYW5kIEFiaWxpZnkgVGFibGV0cyAxMCBtZyAoIiJCcmlzdG9sLU15ZXJzIFNxdWliYiBDb21wYW55IE1hbnVmYWN0dXJpbmciIiBQdWVydG8gUmljbykiLCJHcmluZGVrcywgUHVibGlza2EgQWtjaWp1IFNhYmllZHJpYmEiLEludGVydmVudGlvbmFsLDI0NzA0NCwyMDE1LTExLTI0IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEEgTG9uZy1UZXJtIEV4dGVuc2lvbiBUcmlhbCBGcm9tIFBoYXNlIElJL0lJSSBvZiBTUE0tOTYyIGluIEVhcmx5IFBhcmtpbnNvbidzIERpc2Vhc2UgUGF0aWVudHMsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4ODc2MCwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInJvdGlnb3RpbmUgKHRyYW5zZGVybWFsIHBhdGNoLCBQYXJraW5zb24ncy9yZXN0bGVzcyBsZWdzIHN5bmRyb21lKSwgVUNCIiw3OTcxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGhhc2UgSUkgc3R1ZHkgZGVzaWduZWQgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2Ygcm90aWdvdGluZSBpbiBwYXRpZW50cyB3aXRoIGVhcmx5LXN0YWdlIFBhcmtpbnNvbidzIGRpc2Vhc2UiLEFkZXJpcyBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDUxNDYxLDIwMDItMTEtMjUgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFJlc3RsZXNzIGxlZ3Mgc3luZHJvbWUsMTc3NCxudWxsLCJMb25nLVRlcm0sIEZvbGxvdy1VcCBTdHVkeSBmb3IgU2FmZXR5LCBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIFJvdGlnb3RpbmUgaW4gQWRvbGVzY2VudHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lIixVQ0IgQmlvc2NpZW5jZXMgSW5jLEludGVydmVudGlvbmFsLDgzNDkyLDIwMTEtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsUmVzdGxlc3MgbGVncyBzeW5kcm9tZSwxNzc0LG51bGwsQSBTdHVkeSBvZiBSb3RpZ290aW5lIFBhdGNoIGluIEFkb2xlc2NlbnQgU3ViamVjdHMgV2l0aCBSZXN0bGVzcyBMZWdzIFN5bmRyb21lIG9mIFVua25vd24gQ2F1c2UsVUNCIEJpb3BoYXJtYSBTUFJMLEludGVydmVudGlvbmFsLDM1ODg4NywyMDE4LTEyLTIwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGZsaWJhbnNlcmluLDg1NDksRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsSHlwb2FjdGl2ZSBzZXh1YWwgZGVzaXJlIGRpc29yZGVyLDIwMzksbnVsbCxFZmZlY3RzIG9mIEZsaWJhbnNlcmluIG9uIHRoZSBQcmUtYW5kIFBvc3QtbWVub3BhdXNhbCBGZW1hbGUgQnJhaW4sVW5pdmVyc2l0eSBvZiBDaGljYWdvLEludGVydmVudGlvbmFsLDI2MDY1NSwyMDE2LTEwLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGVsZXRyaXB0YW4sODcxNSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxab2xtaXRyaXB0YW4gTmFzYWwgU3ByYXkgVmVyc3VzIEVsZXRyaXB0YW4gaW4gdGhlIEFjdXRlIFRyZWF0bWVudCBvZiBNaWdyYWluZSxDYWxpZm9ybmlhIE1lZGljYWwgQ2xpbmljIGZvciBIZWFkYWNoZSxJbnRlcnZlbnRpb25hbCw3NDE3MywyMDA4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBoYXJtYWNva2luZXRpY3Mgb2YgVHdvIEVsZXRyaXB0YW4gT3JhbCBGb3JtdWxhdGlvbnMgR2l2ZW4gV2l0aCBhbmQgV2l0aG91dCBXYXRlciBhbmQgdGhlIENvbW1lcmNpYWwgVGFibGV0IEZvcm11bGF0aW9uIEdpdmVuIFdpdGggV2F0ZXIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCw1MDE5OSwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRWxldHJpcHRhbiBmb3IgdGhlIFRyZWF0bWVudCBvZiBNaWdyYWluZSBpbiBTdWJqZWN0cyBVbnN1Y2Nlc3NmdWx5IFRyZWF0ZWQgV2l0aCBOb25zdGVyb2lkYWwgQW50aS1JbmZsYW1tYXRvcnkgRHJ1Z3MsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxNDA4MywyMDAyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLENsaW5pY2FsIFRyaWFsIG9mIEVsZXRyaXB0YW4gdG8gVHJlYXQgQWN1dGUgTWlncmFpbmUgQXR0YWNrcyBpbiBBZHVsdCBQYXRpZW50cyxJbnRhcyBQaGFybWFjZXV0aWNhbHMgTHRkLEludGVydmVudGlvbmFsLDEzMzQzNywyMDEwLTA1LTI5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw1LFBoYXNlIDIgQ2xpbmljYWwsQzIsZWxldHJpcHRhbiw4NzE1LEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJDb21wYXJpc29uIG9mIFByZWZlcmVuY2UgZm9yIFRyaXB0YW5zIGluIE1pZ3JhaW5lIFBhdGllbnRzOiBBIFJhbmRvbWl6ZWQsIE9wZW4tTGFiZWwsIENyb3Nzb3ZlciBQcm9zcGVjdGl2ZSBTdHVkeSIsS2l0YXNhdG8gVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxMjU5ODEsMjAxMC0wMi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGVsZXRyaXB0YW4sODcxNSwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBwaGFzZSBJSUksIG11bHRpY2VudGVyLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSBzYWZldHksIGVmZmljYWN5IGFuZCB0b2xlcmFiaWxpdHkgb2YgZWxldHJpcHRhbiBpbiB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLEFsZnJlZCBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwxMTI3NzcsMjAwMi0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIG11bHRpY2VudHJlLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY29tcGFyYXRpdmUgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgZWZmaWNhY3ksIGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbCBlbGV0cmlwdGFuIGFuZCBlcmdvdGFtaW5lIHBsdXMgY2FmZmVpbmUgaW4gdGhlIGFjdXRlIHRyZWF0bWVudCBvZiBtaWdyYWluZSIsVW5pdmVyc2l0YXQgRHVpc2J1cmcgRXNzZW4sSW50ZXJ2ZW50aW9uYWwsMTEyNzQ5LDIwMDItMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLERvc2UtcmVzcG9uc2Ugc3R1ZHkgb2YgU00tMTM0OTYgaW4gcGF0aWVudHMgd2l0aCBzY2hpem9waHJlbmlhLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDk2MTczLDIwMDUtMDktMTIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxMdXJhc2lkb25lIEV4dGVuZGVkIFVzZSBTdHVkeSwiU3VtaXRvbW8gQ2hlbWljYWwgQ28gTHRkLCBTdW5vdmlvbiBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw4Mjk4MywyMDExLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LFBFQVJMLFNjaGl6b3BocmVuaWEgTWFpbnRlbmFuY2UsU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw4MDg4NiwyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbHVyYXNpZG9uZSw4NzMyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IHN0dWR5IG9mIGRydWcgdG8gdHJlYXQgc2NoaXpvcGhyZW5pYSxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMzQ0OTgsMjAwMi0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgb2YgTHVyYXNpZG9uZSBIQ2wgaW4gU3ViamVjdHMgV2l0aCBTY2hpem9waHJlbmlhLFN0YW5kYXJkIENoZW1pY2FsICYgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDMyNDk3MywyMDE4LTAxLTAzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxBdXRpc20sNDIzLG51bGwsIlBlZGlhdHJpYyBPcGVuLUxhYmVsLCBFeHRlbnNpb24gU3R1ZHkiLFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQ4ODA0LDIwMTMtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsUFJFVkFJTCAyLEx1cmFzaWRvbmUgLSBBIDYtV2VlayBTdHVkeSBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uIChNb25vdGhlcmFweSksU3Vub3Zpb24gUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0OTkyMiwyMDA5LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLExhdW5jaGVkLEwsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFBoYXNlIElJSSBTdHVkeSBvZiBTTS0xMzQ5NiBpbiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgSSBEZXByZXNzaW9uLFN1bWl0b21vIERhaW5pcHBvbiBQaGFybWEgQ28gTHRkLEludGVydmVudGlvbmFsLDE2MTY3OSwyMDE0LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZnJvdmF0cmlwdGFuLDkwMjIsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLE1BTSxQcmV2ZW50aW9uIG9mIE1lbnN0cnVhbCBNaWdyYWluZXM6IFVzaW5nIEZyb3ZhdHJpcHRhbiBvciBQbGFjZWJvIER1cmluZyBIb3Jtb25lIEZyZWUgSW50ZXJ2YWxzLFNjb3R0IGFuZCBXaGl0ZSBIb3NwaXRhbCAmIENsaW5pYyxJbnRlcnZlbnRpb25hbCwyMDU0NCwyMDA4LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDQgQ2xpbmljYWwsQzQsZnJvdmF0cmlwdGFuLDkwMjIsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsQSBQYXRpZW50IFByZWZlcmVuY2UgU3R1ZHkgb2YgRnJvdmF0cmlwdGFuIFZlcnN1cyBab2xtaXRyaXB0YW4gZm9yIFRoZSBBY3V0ZSBUcmVhdG1lbnQgb2YgTWlncmFpbmUsTGFib3JhdG9yaW8gR3VpZG90dGkgU3BBLEludGVydmVudGlvbmFsLDExNjk2MiwyMDA3LTA2LTA0IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsRGVwcmVzc2lvbiw5MyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgU3R1ZHkgb2YgVmlsYXpvZG9uZSBhbmQgRGlzY292ZXJpbmcgR2VuZXRpYyBNYXJrZXJzIEFzc29jaWF0ZWQgV2l0aCBSZXNwb25zZSBpbiBQYXRpZW50cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsUGhhcm1hY29sb2d5IFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwzNDU1MSwyMDA2LTAyLTA5IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsdmlsYXpvZG9uZSw5OTQzLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgVmlsYXpvZG9uZSBpbiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDg2MzI4LDIwMTItMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsIkEgc3R1ZHkgY29tcGFyaW5nIHZpbGF6b2RvbmUgd2l0aCBlc2NpdGFsb3ByYW0gaW4gdGVybXMgb2YgZWZmaWNhY3ksIHNhZmV0eSBhbmQgb25zZXQgb2YgYWN0aW9uIGluIHBhdGllbnRzIHdpdGggZGVwcmVzc2lvbiIsIkdvdmVybm1lbnQgTWVkaWNhbCBDb2xsZWdlLCBMYXR1ciIsSW50ZXJ2ZW50aW9uYWwsMzY5NTMxLDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIHBoYXNlIElJIHN0dWR5IG9mIHRlZ2FzZXJvZCBpbiBjb25zdGlwYXRpb24tcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIHBhdGllbnRzLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NzE1LDE5OTgtMDktMDYgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxTYWZldHksWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEEgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbixOb3ZhcnRpcyBQaGFybWFjZXV0aWNhbHMgQ29ycCxJbnRlcnZlbnRpb25hbCwxOTYzNiwyMDA0LTA1LTE5IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJBIHJhbmRvbWl6ZWQsIHBoYXNlIElJSSB0cmlhbCBvZiB0ZWdhc2Vyb2QgaW4gcGF0aWVudHMgd2l0aCBjb25zdGlwYXRpb24gcHJlZG9taW5hbnQgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lIChDLUlCUykiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE5NjAyLDE5OTktMTAtMjIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDIsUGhhc2UgNCBDbGluaWNhbCxDNCx0ZWdhc2Vyb2QsMTAwOTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLCJFZmZpY2FjeSwgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgVGVnYXNlcm9kIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBDb25zdGlwYXRpb24iLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDE4NzEzLDIwMDQtMDQtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMmIgQ2xpbmljYWwsQzJCLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBTdHVkeSB0byBBc3Nlc3MgdGhlIEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBvZiBUZWdhc2Vyb2QgQWxvbmUgYW5kIGluIENvbWJpbmF0aW9uIFdpdGggT21lcHJhem9sZSBHaXZlbiBPcmFsbHkgaW4gUGF0aWVudHMgV2l0aCBTeW1wdG9tcyBvZiBTeW1wdG9tYXRpYyBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChzR0VSRCkiLE5vdmFydGlzIEFHLEludGVydmVudGlvbmFsLDQyNjM0LDIwMDQtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSx0ZWdhc2Vyb2QsMTAwOTEsUGhhcm1hY29raW5ldGljcyxZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBvcGVuLWxhYmVsLCB0d28tcGhhc2UsIGZpdmUtcGVyaW9kIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgcGhhcm1hY29raW5ldGljcyBvZiB0ZWdhc2Vyb2QgaW4gaGVhbHRoeSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NjAsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdGVnYXNlcm9kLDEwMDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksRGlzY29udGludWVkLERYLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBwaGFzZSBJLCBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIHBhcmFsbGVsLWdyb3VwLCBwbGFjZWJvLWNvbnRyb2xsZWQsIGFzY2VuZGluZy1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSB0b2xlcmFiaWxpdHksIHBoYXJtYWNva2luZXRpY3MgYW5kIHBoYXJtYWNvZHluYW1pY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NDksMTk5Ny0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwzKyxQaGFzZSAzIENsaW5pY2FsLEMzLHRlZ2FzZXJvZCwxMDA5MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLEdhc3Ryb2Vzb3BoYWdlYWwgcmVmbHV4LDEyNDMsbnVsbCxBc3Nlc3NtZW50IG9mIHRoZSBFZmZlY3RzIG9mIFRlZ2FzZXJvZCBpbiB0aGUgTWFuYWdlbWVudCBvZiBHYXN0cm9lc29waGFnZWFsIFJlZmx1eCBEaXNlYXNlIChHRVJEKSBpbiBQYXRpZW50cyBXaXRoIEluY29tcGxldGUgUmVzcG9uc2UgdG8gUHJvdG9uIFB1bXAgSW5oaWJpdG9ycyAoUFBJcyksTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTg3OTksMjAwMy0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIGRvdWJsZS1ibGluZCwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBlZmZpY2FjeSBhbmQgdG9sZXJhYmlsaXR5IG9mIGFsbW90cmlwdGFuIGluIG1pZ3JhaW5lIHBhdGllbnRzIHdobyByZXNwb25kIHBvb3JseSB0byBzdW1hdHJpcHRhbiIsVW5pdmVyc2l0YXQgRHVpc2J1cmcgRXNzZW4sSW50ZXJ2ZW50aW9uYWwsNjk3OTcsMjAwNS0wOC0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYWxtb3RyaXB0YW4sMTA1MjQsU2FmZXR5LFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgT25lLVllYXIgU3R1ZHkgaW4gQWRvbGVzY2VudHMgdG8gQXNzZXNzIHRoZSBMb25nLVRlcm0gU2FmZXR5IG9mIEFsbW90cmlwdGFuIE1hbGF0ZSBXaGVuIFRyZWF0aW5nIFRoZWlyIE1pZ3JhaW5lIEhlYWRhY2hlcyxKYW5zc2VuLU9ydGhvIEluYyxJbnRlcnZlbnRpb25hbCwxMzk5NiwyMDA1LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYWxtb3RyaXB0YW4sMTA1MjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLEFFR0lTLEEgU3R1ZHkgb2YgdGhlIEVmZmVjdGl2ZW5lc3MgYW5kIFNhZmV0eSBvZiBBbG1vdHJpcHRhbiBWZXJzdXMgUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIEhlYWRhY2hlLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTUyLDIwMDQtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxQb3RlbnRpYWwgSW1wYWN0IChCZW5lZml0KSBvZiBQcmV2ZW50YXRpdmUgVHJlYXRtZW50IFdpdGggVG9wYW1heCBvbiB0aGUgRWZmZWN0aXZlbmVzcyBvZiBBeGVydCBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLEphbnNzZW4tT3J0aG8gSW5jLEludGVydmVudGlvbmFsLDEzOTUxLDIwMDUtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQW4gT3Blbi1MYWJlbCwgTXVsdGljZW50ZXIgU3R1ZHkgVG8gQXNzZXNzIFNhZmV0eSBBbmQgRWZmaWNhY3kgT2YgQWxtb3RyaXB0YW4gSW4gTWlncmFpbmUiLFVuaXZlcnNpZGFkIGRlIFNhbnRhbmRlcixJbnRlcnZlbnRpb25hbCwxMTA5MDksMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsT1BDLTE0NTIzLDE1MjY1LCJTYWZldHksRWZmaWNhY3kiLFksTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsRGVwcmVzc2lvbiw5MyxudWxsLCJBIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFzZSBJSSBzdHVkeSB0byBhc3Nlc3MgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgVlBJLTAxMyBpbiBwYXRpZW50cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIiLFZlbGEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw1NTQ0OCwyMDA2LTA0LTA1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwcnVjYWxvcHJpZGUsMTU3MTYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLERpc2NvbnRpbnVlZCxEWCxHYXN0cm9pbnRlc3RpbmFsIGZ1bmN0aW9uIGRpc29yZGVyLDM5NSxudWxsLEVmZmljYWN5IFN0dWR5IG9mIFBydWNhbG9wcmlkZSB0byBUcmVhdCBDaHJvbmljIEludGVzdGluYWwgUHNldWRvLU9ic3RydWN0aW9uIChDSVApLCJKb2huc29uICYgSm9obnNvbiwgU2hpcmUtTW92ZXRpcyBOViIsSW50ZXJ2ZW50aW9uYWwsMzY0MTUsMjAwOC0xMS0xOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxOLFksRGlzY29udGludWVkLERYLEdhc3Ryb2ludGVzdGluYWwgZnVuY3Rpb24gZGlzb3JkZXIsMzk1LG51bGwsIkVmZmVjdCBvZiBQcnVjYWxvcHJpZGUgb24gR2FzdHJvZXNvcGhhZ2VhbCBSZWZsdXgsIEVzb3BoYWdlYWwgTW90aWxpdHkgYW5kIEdhc3RyaWMgRW1wdHlpbmcgaW4gSGVhbHRoeSBWb2x1bnRlZXJzIiwiQWNhZGVtaWMgTWVkaWNhbCBDZW50ZXIsIFVuaXZlcnNpdHkgb2YgQW1zdGVyZGFtIixJbnRlcnZlbnRpb25hbCwxMjIxNjAsMjAxMS0wNi0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLENvbnN0aXBhdGlvbiw0MDQsbnVsbCwiU2luZ2xlLURvc2UsIFBoYXJtYWNva2luZXRpY3Mgb2YgUHJ1Y2Fsb3ByaWRlIGluIFBlZGlhdHJpYyBTdWJqZWN0cywgV2l0aCBGdW5jdGlvbmFsIEZlY2FsIFJldGVudGlvbiIsU2hpcmUtTW92ZXRpcyBOVixJbnRlcnZlbnRpb25hbCw5MDQ5OCwxOTk4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LFBoYXJtYWNva2luZXRpY3MsTixZLExhdW5jaGVkLEwsQ29uc3RpcGF0aW9uLDQwNCxudWxsLE0tMDAwMSBFZmZlY3RzIG9uIE9yYWwgQ29udHJhY2VwdGl2ZSBQbGFzbWEgTGV2ZWxzLFNoaXJlLU1vdmV0aXMgTlYsSW50ZXJ2ZW50aW9uYWwsNjI4NjksMjAwOS0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgaGVhZC10by1oZWFkIHN0dWR5IHRvIGNvbXBhcmUgdGhlIHNhZmV0eSwgdG9sZXJhYmlsaXR5IGFuZCBlZmZpY2FjeSBvZiBNb3ZpY29sIHZlcnN1cyBwcnVjYWxvcHJpZGUgaW4gd29tZW4gd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiIsTm9yZ2luZSBCVixJbnRlcnZlbnRpb25hbCwxMzU3OTgsMjAxMy0wNS0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHBydWNhbG9wcmlkZSwxNTcxNixFZmZpY2FjeSxZLE4sTGF1bmNoZWQsTCxDb25zdGlwYXRpb24sNDA0LG51bGwsIkEgUmFuZG9taXplZCwgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQgU3R1ZHkgT2YgUHJ1Y2Fsb3ByaWRlIEluIFBhdGllbnRzIFdpdGggQ29uc3RpcGF0aW9uIFdpdGhvdXQgQSBSZWN0YWwgRXZhY3VhdGlvbiBEaXNvcmRlciIsTWF5byBDbGluaWMgRm91bmRhdGlvbixJbnRlcnZlbnRpb25hbCwxMTA0NDMsMjAwMS0wMi0yOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsUGF0aWVudC1SZXBvcnRlZCBPdXRjb21lcyBpbiB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsIkFiYm90dCBMYWJvcmF0b3JpZXMsIFNvbHZheSBTQSIsSW50ZXJ2ZW50aW9uYWwsMzYyODYsMjAwNS0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEVmZmljYWN5IG9mIEJpZmVwcnVub3ggaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDIxMjY2LDIwMDgtMDYtMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYmlmZXBydW5veCwxNzUxNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFF1ZXRpYXBpbmUtUmVmZXJlbmNlZCwgTXVsdGljZW50ZXIgU3R1ZHkgb2YgdGhlIExvbmctVGVybSBCaWZlcHJ1bm94IEVmZmljYWN5LCBTYWZldHkgYW5kIFRvbGVyYWJpbGl0eSBpbiBQYXRpZW5zIFdpdGggU3RhYmxlIFNjaGl6b3BocmVuaWEiLEggTHVuZGJlY2sgQS9TLEludGVydmVudGlvbmFsLDEzMjgwMywyMDA3LTAzLTEzIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJpZmVwcnVub3gsMTc1MTUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCwiQW4gb3Blbi1sYWJlbCwgcGlsb3QgcGhhc2UgSSBzdHVkeSB0byBldmFsdWF0ZSBkb3BhbWluZSBEMiByZWNlcHRvciBvY2N1cGFuY3kgYWZ0ZXIgbXVsdGlwbGUgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBEVS0xMjcwOTAgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMsIHVzaW5nIDExQy1yYWNsb3ByaWRlIGJ5IG1lYW5zIG9mIHBvc2l0aW9uIGVtaXNzaW9uIHRvbW9ncmFwaHkgKFBFVCkiLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw0MTQ2MywyMDAwLTEyLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixwaWNsb3pvdGFuLDIyODA2LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsUHJlbGltaW5hcnkgU3R1ZHkgb2YgUGljbG96b3RhbiBpbiBQYXRpZW50cyBXaXRoIE1vdG9yIENvbXBsaWNhdGlvbnMgQXNzb2NpYXRlZCBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UsRGFpaWNoaSBTYW5reW8gSW5jLEludGVydmVudGlvbmFsLDgyNDUsMjAwNy0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBhcmRvcHJ1bm94LDI0MjAyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLERpc2NvbnRpbnVlZCxEWCxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFRoZSBNb25kcmlhYW4gc3R1ZHksU0xWLTMwOCBmb3IgVHJlYXRtZW50IG9mIFBhdGllbnRzIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSBFeHBlcmllbmNpbmcgTW90b3IgRmx1Y3R1YXRpb25zLFNvbHZheSBTQSxJbnRlcnZlbnRpb25hbCw2ODEyLDIwMDctMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwYXJkb3BydW5veCwyNDIwMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCwiQSBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQgU3R1ZHkgVG8gRXZhbHVhdGUgVGhlIEVmZmVjdCBvZiBQYXJkb3BydW5veCwgYSBOZXcgUGFydGlhbCBEb3BhbWluZSBBZ29uaXN0LCBpbiBFYXJseSBQYXJraW5zb25zIERpc2Vhc2UiLEFiYm90dCBIZWFsdGhjYXJlIFByb2R1Y3RzIEJWLEludGVydmVudGlvbmFsLDE0NjY4NixudWxsLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMscGFyZG9wcnVub3gsMjQyMDIsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLE4sRGlzY29udGludWVkLERYLFBhcmtpbnNvbnMgZGlzZWFzZSwyNTUsbnVsbCxBbiBFeHRlbnNpb24gb2YgdGhlIFZhbiBHb2doIFN0dWR5LEFiYlZpZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQzNDMyLDIwMDgtMDMtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxwaW1hdmFuc2VyaW4sMjUxNDgsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIFRyYWlsIFRvIEV2YWx1YXRlIFBpbWF2YW5zZXJpbiwgYSBTZXJvdG9uaW4oMkEpIFJlY2VwdG9yIEludmVyc2UgQWdvbmlzdCwgZm9yIHRoZSBUcmVhdG1lbnQgb2YgUGFya2luc29uJ3MgRGlzZWFzZSBQc3ljaG9zaXMiLFZhbmRlcmJpbHQgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwxNDYwNzQsbnVsbCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sTGF1bmNoZWQsTCxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsQSBTdHVkeSBvZiBTYWZldHkgYW5kIEVmZmljYWN5IG9mIFBpbWF2YW5zZXJpbiAoQUNQLTEwMykgaW4gUGF0aWVudHMgV2l0aCBQYXJraW5zb24ncyBEaXNlYXNlIFBzeWNob3NpcyxBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxMzk2MCwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLFBoYXNlIDMgQ2xpbmljYWwsQzMsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiQSBwaGFzZSBJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGFzc2VzcyB0aGUgcmVkdWN0aW9uIG9mIGhhbG9wZXJpZG9sLWluZHVjZWQgc2lkZSBlZmZlY3RzIGJ5IEFDUC0xMDMiLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDc2NTAsMjAwNS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLFNjaGl6b3BocmVuaWEsMjk5LEVOSEFOQ0UtMSxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEFkanVuY3RpdmUgUGltYXZhbnNlcmluIGZvciB0aGUgVHJlYXRtZW50IG9mIFNjaGl6b3BocmVuaWEsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMjc5ODg2LDIwMTYtMTAtMzEgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBOb3QgQXBwbGljYWJsZSxQTkEscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxOLE4sUGhhc2UgMyBDbGluaWNhbCxDMyxNYWpvciBkZXByZXNzaXZlIGRpc29yZGVyLDQ4OTgsbnVsbCwiQSA1Mi13ZWVrLCBvcGVuLWxhYmVsIGV4dGVuc2lvbiBzdHVkeSB0byBhc3Nlc3MgdGhlIGxvbmctdGVybSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBwaW1hdmFuc2VyaW4iLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDM3ODQ5MSxudWxsLFBsYW5uZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGFkb3ByYXppbmUsMjk0OTMsU2FmZXR5LE4sTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE11bHRpcGxlIEFzY2VuZGluZyBEb3NlIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzY2MDMsMjAwOC0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCwic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsRWZmaWNhY3ksTixZLExhdW5jaGVkLEwsTWlncmFpbmUsMjEwLG51bGwsJ0NvbXBsZXRlbmVzcyBvZiBSZXNwb25zZScgRm9sbG93aW5nIFRyZWF0bWVudCBXaXRoIFRyZXhpbWV0IGZvciBNaWdyYWluZSxDbGludmVzdCxJbnRlcnZlbnRpb25hbCw1NDIzMSwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDQgQ2xpbmljYWwsQzQsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLFNhZmV0eSxZLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCwiQSBTdHVkeSB0byBEZXRlcm1pbmUgdGhlIEVmZmVjdCBvZiBTdW1hdHJpcHRhbiBhbmQgTmFwcm94ZW4gU29kaXVtIENvbWJpbmF0aW9uIFRhYmxldCwgU3VtYXRyaXB0YW4gVGFibGV0LCBhbmQgTmFwcm94ZW4gU29kaXVtIFRhYmxldCBvbiBCbG9vZCBQcmVzc3VyZSBXaGVuIFRyZWF0aW5nIE1pZ3JhaW5lIEhlYWRhY2hlcyBUaGF0IE9jY3VyIER1cmluZyBhIDYtTW9udGggUGVyaW9kIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDM2MjQ3LDIwMDgtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKyBuYXByb3hlbiBzb2RpdW0sIFBlcm5peC9PbGQgQVBJIFdpbmQtZG93biIsMzE0ODIsIkJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLE4sTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxUcmV4aW1hIGFuZCBSZWxwYXggR2FzdHJpYyBTY2ludGlncmFwaHkgSW5zaWRlIGFuZCBPdXRzaWRlIGEgTWlncmFpbmUsUE9aRU4gSW5jLEludGVydmVudGlvbmFsLDE0MDQ2LDIwMDYtMDktMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUywiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsUGhhcm1hY29raW5ldGljcyxZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCwiQSBkcnVnLWludGVyYWN0aW9uIHN0dWR5IGFzc2Vzc2luZyB0aGUgZWZmZWN0cyBvZiBDWVAzQTQgaW5oaWJpdGlvbiBvbiB0aGUgcGhhcm1hY29raW5ldGljcyBvZiBMZXZhZGV4IChNQVAtMDAwNCwgb3JhbGx5IGluaGFsZWQgREhFKSBpbiBoZWFsdGh5IHN1YmplY3RzIixNQVAgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3ODUzMiwyMDExLTA2LTIzIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwiZGloeWRyb2VyZ290YW1pbmUgKG1pZ3JhaW5lLCBUZW1wby1pbmhhbGVkL29yYWwpLCBBbGxlcmdhbiIsMzk0OTEsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENsdXN0ZXIgaGVhZGFjaGUsNzMsbnVsbCxQaGFybWFjb2tpbmV0aWNzIGFuZCBUb2xlcmFiaWxpdHkgU3R1ZHkgb2YgTUFQLTAwMDQgaW4gU21va2luZyBhbmQgTm9uLVNtb2tpbmcgQWR1bHQgVm9sdW50ZWVycywiQWxsZXJnYW4gSW5jLCBNQVAgUGhhcm1hY2V1dGljYWxzIEluYyIsSW50ZXJ2ZW50aW9uYWwsNzA0OTQsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixIZWFkYWNoZSwxNDgsbnVsbCxQaGFybWFjb2R5bmFtaWMgU3R1ZHkgdG8gQ29tcGFyZSBBY3V0ZSBFZmZlY3RzIG9mIERpaHlkcm9lcmdvdGFtaW5lIE1lc3lsYXRlIChESEUpIG9uIFB1bG1vbmFyeSBBcnRlcmlhbCBQcmVzc3VyZSxBbGxlcmdhbiBJbmMsSW50ZXJ2ZW50aW9uYWwsNjQ5ODQsMjAxMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxL1BoYXNlIDIgQ2xpbmljYWwsQzEyLGJ1c3Bpcm9uZSw0NDM2NCwiRWZmaWNhY3ksUGhhcm1hY29keW5hbWljcyIsTixZLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLEV4cGxvcmluZyBPY2N1cGFuY3kgb2YgRG9wYW1pbmUgRDMgUmVjZXB0b3IgYnkgQnVzcGlyb25lIGluIEh1bWFucyBVc2luZyBQRVQsQ2VudHJlIGZvciBBZGRpY3Rpb24gYW5kIE1lbnRhbCBIZWFsdGgsSW50ZXJ2ZW50aW9uYWwsOTM1OTcsMjAxMi0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJ1c3Bpcm9uZSw0NDM2NCxTYWZldHksWSxZLExhdW5jaGVkLEwsQW54aWV0eSBkaXNvcmRlciwyNSxudWxsLCJBIHBoYXNlIEksIGRvdWJsZS1ibGluZCwgYmFsYW5jZWQsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBsZXNvcGl0cm9uIG9uIHB1cGlsIGRpYW1ldGVyIGFuZCBvcmFsIHRlbXBlcmF0dXJlIGNvbXBhcmVkIHRvIGJ1c3Bpcm9uZSBpbiBoZWFsdGh5IG1hbGUgc3ViamVjdHMiLExhYm9yYXRvcmlvcyBEciBFc3RldmUgU0EsSW50ZXJ2ZW50aW9uYWwsNTYyNzQsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixObyBEZXZlbG9wbWVudCBSZXBvcnRlZCxORFIsQXR0ZW50aW9uIGRlZmljaXQgaHlwZXJhY3Rpdml0eSBkaXNvcmRlciwzNCxudWxsLEJ1c3Bpcm9uZSBpbiBBREhELEtlcm1hbiBOZXVyb3NjaWVuY2UgUmVzZWFyY2ggQ2VudGVyLEludGVydmVudGlvbmFsLDEyMjIyMSwyMDEwLTA5LTEwIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixuYWx1em90YW4sNDY4NTcsIlNhZmV0eSxFZmZpY2FjeSIsTixOLERpc2NvbnRpbnVlZCxEWCxFcGlsZXBzeSwxMTksbnVsbCxQUlgtMDAwMjMgVGhlcmFweSBpbiBMb2NhbGl6YXRpb24tUmVsYXRlZCBFcGlsZXBzeSxOYXRpb25hbCBJbnN0aXR1dGUgb2YgTmV1cm9sb2dpY2FsIERpc29yZGVycyBhbmQgU3Ryb2tlLEludGVydmVudGlvbmFsLDc0MDI4LDIwMTEtMDEtMDcgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInpvbG1pdHJpcHRhbiAoaW50cmFuYXNhbCksIEFzdHJhWmVuZWNhIiw0NzIwMiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLEEgU3R1ZHkgb2YgTS0yMDcgYXQgVHdvIEFwcCBTaXRlcyBXaXRoIEludHJhbmFzYWwgWm9sbWl0cmlwdGFuIDIuNSBtZyBpbiBIZWFsdGh5IFZvbHVudGVlcnMsWm9zYW5vIFBoYXJtYSBDb3JwLEludGVydmVudGlvbmFsLDM1NzAyNywyMDE4LTExLTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbG9yY2FzZXJpbiw0NzUwNCwiU2FmZXR5LFBoYXJtYWNvZHluYW1pY3MiLFksTixMYXVuY2hlZCxMLE9iZXNpdHksMjM4LFRVTElQLFRvIGFzc2VzcyB0aGUgZWZmZWN0IG9mIGxvcmNhc2VyaW4gaHlkcm9jaGxvcmlkZSBvbiBlbmVyZ3kgbWV0YWJvbGlzbSBhbmQgZm9vZCBpbnRha2UsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw0MjI0NSwyMDA4LTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAzIENsaW5pY2FsLEMzLGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsT2Jlc2l0eSwyMzgsbnVsbCxMb3JjYXNlcmluIGFuZCBCZWhhdmlvcmFsIE1vZGlmaWNhdGlvbiBmb3IgT3ZlcndlaWdodCBhbmQgT2Jlc2l0eSBNYW5hZ2VtZW50IGluIENoaW5lc2UgT2Jlc2UgUGF0aWVudHMsIkthbmlvbiBhbmQgSHVhd2UgTWVkaWNpbmUgQ28sIEx0ZCIsSW50ZXJ2ZW50aW9uYWwsMzU3ODY4LDIwMTgtMTItMDYgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxMYXVuY2hlZCxMLE9iZXNpdHksMjM4LG51bGwsQWRkcmVzc2luZyBQb3N0IENlc3NhdGlvbiBXZWlnaHQgR2FpbixNYXlvIENsaW5pYyBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDIyNjUzMywyMDE2LTA2LTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIChMdS1BQTIxMDA0KSAxMCBhbmQgMjAgbWcgZm9yIFRyZWF0bWVudCBvZiBNYWpvciBEZXByZXNzaXZlIERpc29yZGVyIFdpdGggU2V4dWFsIER5c2Z1bmN0aW9uLCJUYWtlZGEgRGV2ZWxvcG1lbnQgQ2VudGVyIEFtZXJpY2FzLCBJbmMsIFRha2VkYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQiLEludGVydmVudGlvbmFsLDc3ODYyLDIwMTEtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLCJBIFJhbmRvbWl6ZWQsIFBsYWNlYm8tY29udHJvbGxlZCBEdWxveGV0aW5lLXJlZmVyZW5jZWQgU3R1ZHkgb2YgRWZmaWNhY3kgYW5kIFNhZmV0eSBvZiA1IG1nIG9mIFZvcnRpb3hldGluZSAoTHUtQUEyMTAwNCkgaW4gQWN1dGUgVHJlYXRtZW50IG9mIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgaW4gRWxkZXJseSBQYXRpZW50cyIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMzg5NzUsMjAwOS0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNyxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LFZFU1BBLFZvcnRpb3hldGluZSBpbiB0aGUgRWxkZXJseSBWZXJzdXMgU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIChTU1JJcyk6IGEgUHJhZ21hdGljIEFzc2Vzc21lbnQsQXppZW5kYSBPc3BlZGFsaWVyYSBVbml2ZXJzaXRhcmlhIEludGVncmF0YSBEaSBWZXJvbmEsSW50ZXJ2ZW50aW9uYWwsMzYzOTk3LDIwMTktMDItMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEdvYWwgQWNoaWV2ZW1lbnQgQWZ0ZXIgYSBDaGFuZ2UgdG8gVm9ydGlveGV0aW5lIGluIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwyODAxNjEsMjAxNi0xMi0yMiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsVm9ydGlveGV0aW5lIGZvciBNZW5vcGF1c2FsIERlcHJlc3Npb24sTWFzc2FjaHVzZXR0cyBHZW5lcmFsIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIxMDA1MiwyMDE1LTA2LTEyIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbmFyb25hcHJpZGUsNDk4NDAsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUGhhc2UgMiBDbGluaWNhbCxDMixHYXN0cm9lc29waGFnZWFsIHJlZmx1eCwxMjQzLG51bGwsIkEgcGhhc2UgSSwgbXVsdGlwbGUtYXNjZW5kaW5nIGRvc2UsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHRyaWFsIHRvIGFzc2VzcyB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgbmFyb25hcHJpZGUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBUll4IFRoZXJhcGV1dGljcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNzc2MDAsMjAxMS0wNS0wOCAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLERlcHJlc3Npb24sOTMsbnVsbCxDb21wYXJhdGl2ZSBGb3JtdWxhdGlvbiBTdHVkeSBvZiBWYWJpY2FzZXJpbixXeWV0aCxJbnRlcnZlbnRpb25hbCw1ODM0MCwyMDA5LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsdmFiaWNhc2VyaW4sNDk5ODQsIlBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgU0NBLTEzNiBUb2xlcmFiaWxpdHkgV2l0aCBEb3NlIFRpdHJhdGlvbiBhbmQgRm9vZCxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNzI3NCwyMDA2LTEyLTMxIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCkphcGFuZXNlIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSx2YWJpY2FzZXJpbiw0OTk4NCxTYWZldHksTixZLERpc2NvbnRpbnVlZCxEWCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN0dWR5IEV2YWx1YXRpbmcgdGhlIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IG9mIFNDQS0xMzYgaW4gSGVhbHRoeSBKYXBhbmVzZSBhbmQgTm9uLUphcGFuZXNlIEZlbWFsZSBTdWJqZWN0cyxXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDg0NCwyMDA3LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KSmFwYW5lc2UgQW5jZXN0cnksMSxQaGFzZSAxIENsaW5pY2FsLEMxLHZhYmljYXNlcmluLDQ5OTg0LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLFksRGlzY29udGludWVkLERYLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIlNhZmV0eSwgUGhhcm1hY29raW5ldGljIGFuZCBQaGFybWFjb2R5bmFtaWMgU3R1ZHkgaW4gSGVhbHRoeSBNYWxlIEphcGFuZXNlIFN1YmplY3RzIixXeWV0aCxJbnRlcnZlbnRpb25hbCwzNDYwNiwyMDA2LTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIExvbmctVGVybSBTdHVkeSBvZiBNUC0yMTQgaW4gUGF0aWVudHMgV2l0aCBSZWNlaXZpbmcgTXVsdGlwbGUgRHJ1Z3MgU2NoaXpvcGhyZW5pYSxNaXRzdWJpc2hpIFRhbmFiZSBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCw4ODY1OCwyMDEyLTA1LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFBhdGllbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCw2NTY4MiwyMDEwLTA0LTIzIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIGluIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjU2ODAsMjAxMC0wNC0yNyAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNSxQaGFzZSAxIENsaW5pY2FsLEMxLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3ksQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgb2YgQ2FyaXByYXppbmUgQ2Fwc3VsZXMgNiBtZyBpbiBTY2hpem9waHJlbmlhIG9yIEJpcG9sYXIgRGlzb3JkZXIgSSBQYXRpZW50cywiQVhJUyBDbGluaWNhbHMgTGltaXRlZCwgQXVyb2JpbmRvIFBoYXJtYSBMdGQiLEludGVydmVudGlvbmFsLDM1NDI0NiwyMDE4LTA5LTIxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsY2FyaXByYXppbmUsNTE0MDUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxTYWZldHkgYW5kIEVmZmljYWN5IG9mIENhcmlwcmF6aW5lIChSR0gtMTg4KSBpbiB0aGUgQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ4OTUsMjAwOC0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGNhcmlwcmF6aW5lLDUxNDA1LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBDYXJpcHJhemluZSBmb3IgTWFuaWEsRm9yZXN0IExhYm9yYXRvcmllcyBJbmMsSW50ZXJ2ZW50aW9uYWwsNjM3MDQsMjAxMC0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxEaXNjb250aW51ZWQsRFgsSW5zb21uaWEsNzUwLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBlc2NhbGF0aW5nIGRheXRpbWUgZG9zZXMgb2YgQVBELTEyNSwgYSBwb3RlbnRpYWwgdHJlYXRtZW50IGZvciBpbnNvbW5pYSIsQXJlbmEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3MzM2LDIwMDUtMDYtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLG5lbG90YW5zZXJpbiw1MjIzOSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixIYWxsdWNpbmF0aW9uLDEwNTAsbnVsbCxPcGVuLWxhYmVsIFN0dWR5IG9mIE5lbG90YW5zZXJpbiBpbiBMZXd5IEJvZHkgRGVtZW50aWEgV2l0aCBWaXN1YWwgSGFsbHVjaW5hdGlvbnMgb3IgUkVNIFNsZWVwIEJlaGF2aW9yIERpc29yZGVyLEF4b3ZhbnQgR2VuZSBUaGVyYXBpZXMgTHRkLEludGVydmVudGlvbmFsLDI2ODk0NiwyMDE2LTEwLTIwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLEFUSFgtMTA1LDUzNjUxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxZLERpc2NvbnRpbnVlZCxEWCxPYmVzaXR5LDIzOCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgdHJpYWwgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgZWZmaWNhY3ksIHRvbGVyYWJpbGl0eSBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBBVEhYLTEwNSBpbiBoZWFsdGh5IG92ZXJ3ZWlnaHQgc3ViamVjdHMiLEF0aGVyc3lzIEluYyxJbnRlcnZlbnRpb25hbCwzNjIzNSwyMDA3LTA3LTI1IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixBVEhYLTEwNSw1MzY1MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sRGlzY29udGludWVkLERYLE9iZXNpdHksMjM4LG51bGwsQSBTaG9ydC1UZXJtIFN0dWR5IHRvIEV4YW1pbmUgdGhlIEVmZmVjdHMgb2YgQVRIWC0xMDUgUGhvc3BoYXRlIG9uIFdlaWdodCBMb3NzIGFuZCBTYWZldHksQXRoZXJzeXMgSW5jLEludGVydmVudGlvbmFsLDIzMzI4LDIwMDgtMDktMzAgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDJiIENsaW5pY2FsLEMyQix2ZWx1c2V0cmFnLDU0Njg4LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDIgQ2xpbmljYWwsQzIsR2FzdHJvcGFyZXNpcywyMTAwLERJR0VTVCwiVGhlIERpYWJldGljIGFuZCBJZGlvcGF0aGljIEdhc3Ryb3BhcmVzaXMgRWZmaWNhY3ksIFNhZmV0eSBhbmQgVG9sZXJhYmlsaXR5IHN0dWR5IixUaGVyYXZhbmNlIEJpb3BoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsMjEzNTIzLDIwMTQtMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFByZS1yZWdpc3RyYXRpb24sUFIsTWlncmFpbmUsMjEwLG51bGwsQSBQbGFjZWJvLUNvbnRyb2xsZWQgQWRhcHRpdmUgVHJlYXRtZW50IEFzc2lnbm1lbnQgU3R1ZHkgb2YgSW50cmF2ZW5vdXMgQ09MLTE0NCBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lLENvTHVjaWQgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwxNDA1NiwyMDA2LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInpvbmlzYW1pZGUgKyBidXByb3Bpb24gKG9iZXNpdHkpLCBPcmV4aWdlbiIsNTU0NTUsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLE5vIERldmVsb3BtZW50IFJlcG9ydGVkLE5EUixPYmVzaXR5LDIzOCxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRGlmZmVyZW50IENvbWJpbmF0aW9ucyBvZiBab25pc2FtaWRlIENSIFBsdXMgQnVwcm9waW9uIFNSIHRvIFRyZWF0IFVuY29tcGxpY2F0ZWQgT2Jlc2l0eSxPcmV4aWdlbiBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDQwMTc0LDIwMDYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LFNhZmV0eSxZLE4sU3VzcGVuZGVkLFMsTWlncmFpbmUsMjEwLE5QMTAxLTAwOSxBbiBPcGVuLUxhYmVsIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgb2YgTlAtMTAxIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgTWlncmFpbmUgT3ZlciAxMiBNb250aHMsTnVQYXRoZSBJbmMsSW50ZXJ2ZW50aW9uYWwsMzg0MDgsMjAwOS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiAodHJhbnNkZXJtYWwgcGF0Y2gsIFNtYXJ0UmVsaWVmKSwgTnVQYXRoZSIsNTU3MDcsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxOUDEwMS0wMDgsQW4gT3Blbi1MYWJlbCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IG9mIE5QLTEwMSBpbiB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1pZ3JhaW5lIE92ZXIgMTIgTW9udGhzLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDM2MDA1LDIwMDktMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksRWZmaWNhY3kiLFksTixTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsUFJFRElDVCxUaGUgRWZmaWNhY3kgYW5kIFRvbGVyYWJpbGl0eSBvZiBOUC0xMDEgUGF0Y2ggaW4gdGhlIFRyZWF0bWVudCBvZiBBY3V0ZSBNaWdyYWluZSxOdVBhdGhlIEluYyxJbnRlcnZlbnRpb25hbCwyMzIwNywyMDA5LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgU21hcnRSZWxpZWYpLCBOdVBhdGhlIiw1NTcwNywiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxTdXNwZW5kZWQsUyxNaWdyYWluZSwyMTAsbnVsbCxDb21wYXJlIFBLIGFuZCBCaW9hdmFpbGFiaWxpdHkgb2YgVHdvIE5QLTEwMSBQYXRjaGVzIFdpdGggT3JhbCBJbWl0cmV4IGluIEhlYWx0aHkgQWR1bHRzLFRldmEgUGhhcm1hY2V1dGljYWwgSW5kdXN0cmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc4MDQ1LDIwMDktMTItMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKHRyYW5zZGVybWFsIHBhdGNoLCBTbWFydFJlbGllZiksIE51UGF0aGUiLDU1NzA3LCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFN1c3BlbmRlZCxTLE1pZ3JhaW5lLDIxMCxudWxsLCJBIFBoYXNlIEksIE9wZW4tbGFiZWwsIFNpbmdsZS1kb3NlIFN0dWR5IG9mIFplY3VpdHkgdG8gQXNzZXNzIFNhZmV0eSwgUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IGluIEFkb2xlc2NlbnRzIHdpdGggYSBIaXN0b3J5IG9mIE1pZ3JhaW5lIEF0dGFja3MiLE51UGF0aGUgSW5jLEludGVydmVudGlvbmFsLDE2MDk4MywyMDEzLTA5LTIzIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLFBGLTIxNzgzMCw1NjcyOSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixEaXNjb250aW51ZWQsRFgsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCwiRG9zZS1SZXNwb25zZSBTdHVkeSB0byBFdmFsdWF0ZSBTYWZldHksIEVmZmljYWN5LCBhbmQgUGhhcm1hY29raW5ldGljcyBvZiBQRi0wMDIxNzgzMCBDb21wYXJlZCBXaXRoIFBsYWNlYm8gaW4gQWN1dGUgRXhhY2VyYmF0aW9uIG9mIFNjaGl6b3BocmVuaWEiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsMjExNzMsMjAwNy0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHBpcm9tZWxhdGluZSw1ODYzNSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUGhhc2UgMiBDbGluaWNhbCxDMixPcGVuIGFuZ2xlIGdsYXVjb21hLDMxNDcsbnVsbCxUcmVhdG1lbnQgb2YgcGlyb21lbGF0aW5lIGluIHBhdGllbnRzIHdpdGggb2N1bGFyIGh5cGVydGVuc2lvbiBvciBwcmltYXJ5IG9wZW4gYW5nbGUgZ2xhdWNvbWEsTmV1cmltIFBoYXJtYWNldXRpY2FscyxJbnRlcnZlbnRpb25hbCwzMjcyNTEsMjAxNi0wOS0xOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsRHlzcGVwc2lhLDQzMixudWxsLCJBIEJpY2VudGVyLCBSYW5kb21pemVkLCBEb3VibGUtQmxpbmQsIFBsYWNlYm8tQ29udHJvbGxlZCBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBEQS05NzAxIGluIFBhdGllbnRzIHdpdGggTWluaW1hbCBDaGFuZ2UgRXNvcGhhZ2l0aXMiLCJTZXZlcmFuY2UgSG9zcGl0YWwsIFlvbnNlaSBVbml2ZXJzaXR5IENvbGxlZ2Ugb2YgTWVkaWNpbmUiLEludGVydmVudGlvbmFsLDIwOTA3OCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixEQS05NzAxLDU5MDUwLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBwbGFjZWJvLWNvbnRyb2xsZWQsIHNpbmdsZS1ibGluZCwgMi13ZWVrIHByb29mIG9mIGNvbmNlcHQgc3R1ZHkgdG8gY29tcGFyZSB0aGUgcXVhbGl0eSBvZiBsaWZlIGluIHN1YmplY3RzIHJlY2VpdmluZyBEQS05NzAxIGFuZCBtb3NhcHJpZGUiLERvbmctQSBTVCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTc2NDIsMjAwOC0wMy0yMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLFRBSy05NTQsNjAyOTIsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxQaGFzZSAyIENsaW5pY2FsLEMyLEdhc3Ryb2ludGVzdGluYWwgbW90aWxpdHkgZGlzb3JkZXIsMzc5NyxudWxsLCJBIFBoYXNlIEksIE11bHRpcGxlIEludHJhdmVub3VzIERvc2UgU3R1ZHkgdG8gRXhhbWluZSBTYWZldHksIFRvbGVyYWJpbGl0eSBhbmQgUEsgb2YgSW50cmF2ZW5vdXMgVEQtODk1NCwgYSA1LUhUNCBSZWNlcHRvciBBZ29uaXN0LCBpbiBIZWFsdGh5IFN1YmplY3RzIixUaGVyYXZhbmNlIEJpb3BoYXJtYSBJbmMsSW50ZXJ2ZW50aW9uYWwsODkzMTcsMjAxMi0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDQsUGhhc2UgMSBDbGluaWNhbCxDMSwic3VtYXRyaXB0YW4gKGxvdy1kb3NlIGludHJhbmFzYWwsIG1pZ3JhaW5lKSwgT3B0aU5vc2UvQVZBTklSIiw2MDY5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksTGF1bmNoZWQsTCxNaWdyYWluZSwyMTAsbnVsbCxCaW9hdmFpbGFiaWxpdHkgU3R1ZHkgdG8gQ29tcGFyZSBPcHRpTm9zZSBTdW1hdHJpcHRhbiBXaXRoIEltaXRyZXggaW4gSGVhbHRoeSBTdWJqZWN0cyxPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw4MzkxOCwyMDEyLTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsInN1bWF0cmlwdGFuIChsb3ctZG9zZSBpbnRyYW5hc2FsLCBtaWdyYWluZSksIE9wdGlOb3NlL0FWQU5JUiIsNjA2OTEsIkVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXNlIEksIHBoYXJtYWNva2luZXRpYyBhbmQgZWZmaWNhY3kgc3R1ZHkgb2YgaW50cmFuYXNhbCBzdW1hdHJpcHRhbiwgYWRtaW5pc3RlcmVkIHVzaW5nIGFuIE9wdGlOb3NlIGRldmljZSwgaW4gbWlncmFpbmUgc3VmZmVyZXJzIixPcHRpTm9zZSBBUyxJbnRlcnZlbnRpb25hbCw2NDQzNSwyMDA4LTA0LTE3IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgTG9uZy1UZXJtIFRyaWFsIG9mIE9QQy0zNDcxMiBpbiBQYXRpZW50cyBXaXRoIFNjaGl6b3BocmVuaWEsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCw4MTc1NCwyMDExLTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KQXNpYW4gQW5jZXN0cnksMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksbnVsbCxBIERvc2UtZmluZGluZyBUcmlhbCBvZiBPUEMtMzQ3MTIgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLE90c3VrYSBQaGFybWFjZXV0aWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODE1MjYsMjAxMS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsVHJpYWwgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdHMgb2YgT1BDLTM0NzEyIG9uIFFUL1FUYyBpbiBTdWJqZWN0cyBXaXRoIFNjaGl6b3BocmVuaWEgb3IgU2NoaXpvYWZmZWN0aXZlIERpc29yZGVyLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsODAzNjAsMjAxMS0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixOLFksTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEEgU3R1ZHkgRXZhbHVhdGluZyB0aGUgT1BDLTM0NzEyIGluIFN1YmplY3RzIFdpdGggTm9ybWFsIEhlcGF0aWMgRnVuY3Rpb24gYW5kIEhlcGF0aWNhbGx5IEltcGFpcmVkIFN1YmplY3RzLE90c3VrYSBIb2xkaW5ncyBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsNzQ4ODcsMjAxMC0xMi0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyIENsaW5pY2FsLEMyLGJyZXhwaXByYXpvbGUsNjIwMDEsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxTVEVQIDIwMywiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmljYWN5LCBTYWZldHksIGFuZCBUb2xlcmFiaWxpdHkgb2YgT3JhbCBPUEMtMzQ3MTIgYW5kIEFyaXBpcHJhem9sZSBmb3IgVHJlYXRtZW50IG9mIEFjdXRlIFNjaGl6b3BocmVuaWEiLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDU1Njc3LDIwMDktMDctMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU2FmZXR5IGFuZCBFZmZpY2FjeSBvZiBCcmV4cGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgU2NoaXpvcGhyZW5pYSxPdHN1a2EgQmVpamluZyBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzczMzk4LDIwMTktMDUtMDUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnJleHBpcHJhem9sZSw2MjAwMSxFZmZpY2FjeSxOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFN1YmplY3RpdmUgYXNzZXNzbWVudCBvZiBicmV4cGlwcmF6b2xlIHdpdGggYWN1dGUgc2NoaXpvcGhyZW5pYSxGdWppdGEgSGVhbHRoIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzQ4ODMxLDIwMTgtMDYtMTUgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsYnJleHBpcHJhem9sZSw2MjAwMSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLFRyaWFsIHRvIEV2YWx1YXRlIHRoZSBTaG9ydC10ZXJtIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQnJleHBpcHJhem9sZSBNb25vdGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkb2xlc2NlbnRzIFdpdGggU2NoaXpvcGhyZW5pYSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwzMDMwNTMsMjAxNy0wNi0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsWSxOLFBoYXNlIDMgQ2xpbmljYWwsQzMsQmlwb2xhciBJIGRpc29yZGVyLDMxMTQsbnVsbCxBIFRyaWFsIHRvIEFzc2VzcyBCcmV4cGlwcmF6b2xlIFZlcnN1cyBQbGFjZWJvIGZvciB0aGUgVHJlYXRtZW50IG9mIEFjdXRlIE1hbmljIEVwaXNvZGVzIEFzc29jaWF0ZWQgV2l0aCBCaXBvbGFyIEkgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzEwMTAzLDIwMTctMTAtMDQgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDYsUGhhc2UgMiBDbGluaWNhbCxDMixicmV4cGlwcmF6b2xlLDYyMDAxLEVmZmljYWN5LE4sTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLEFudGktZGVwcmVzc2FudCBEaXNjb250aW51YXRpb24gaW4gVHJlYXRtZW50IFJlc2lzdGFudCBEZXByZXNzaW9uLFVuaXZlcnNpdHkgb2YgTG91aXN2aWxsZSxJbnRlcnZlbnRpb25hbCwzNjUzMDYsMjAxOS0wMi0yOCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsRWZmaWNhY3ksTixOLExhdW5jaGVkLEwsTWFqb3IgZGVwcmVzc2l2ZSBkaXNvcmRlciw0ODk4LG51bGwsQnJleHBpcHJhem9sZSAoT1BDLTM0NzEyKSB0cmlhbCBpbiB0aGUgdHJlYXRtZW50IG9mIGFkdWx0cyB3aXRoIG1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIgYW5kIGlycml0YWJpbGl0eSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwyMDc5NjgsMjAxNC0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxTaXJpdXMsU3R1ZHkgb2YgdGhlIFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgRml4ZWQtZG9zZSBCcmV4cGlwcmF6b2xlIChPUEMtMzQ3MTIpIGFzIEFkanVuY3RpdmUgVGhlcmFweSBpbiB0aGUgVHJlYXRtZW50IG9mIEFkdWx0cyBXaXRoIE1ham9yIERlcHJlc3NpdmUgRGlzb3JkZXIgV2l0aCBhbmQgV2l0aG91dCBBbnhpb3VzIERpc3RyZXNzLE90c3VrYSBQaGFybWFjZXV0aWNhbCBEZXZlbG9wbWVudCBhbmQgQ29tbWVyY2lhbGl6YXRpb24gSW5jLEludGVydmVudGlvbmFsLDIwNjI2MywyMDE0LTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVsZW5vcHJpZGUsNjM1NTcsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxBIFBoYXNlIElJIFN0dWR5IHRvIEV2YWx1YXRlIFBoYXJtYWNvZHluYW1pY3Mgb2YgWUtQLTEwODExIGluIFBhdGllbnRzIFdpdGggQ2hyb25pYyBvciBGdW5jdGlvbmFsIENvbnN0aXBhdGlvbixTSyBCaW9waGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsODQ1MDQsMjAxMi0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGludHJhbXVzY3VsYXIgZGVwb3QsIHNjaGl6b3BocmVuaWEpLCBPdHN1a2EvSCBMdW5kYmVjayIsNjQzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLExhdW5jaGVkLEwsU2NoaXpvcGhyZW5pYSwyOTksQVJSSVZFLSBFVSxPcGVuLWxhYmVsIFN0dWR5IHRvIENvbXBhcmUgSG9zcGl0YWxpemF0aW9uIFJhdGVzIG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9yYWwgQW50aXBzeWNob3RpY3MgVmVyc3VzIElNIERlcG90IEFyaXBpcHJhem9sZSxPdHN1a2EgQW1lcmljYSBQaGFybWFjZXV0aWNhbCBJbmMsSW50ZXJ2ZW50aW9uYWwsODM5NTUsMjAxMi0wMS0zMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMywiYXJpcGlwcmF6b2xlIChpbnRyYW11c2N1bGFyIGRlcG90LCBzY2hpem9waHJlbmlhKSwgT3RzdWthL0ggTHVuZGJlY2siLDY0MzI4LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFSUklWRSBVUyxPcGVuLUxhYmVsIFN0dWR5IHRvIENvbXBhcmUgSG9zcGl0YWxpemF0aW9uIFJhdGVzIG9mIFNjaGl6b3BocmVuaWMgUGF0aWVudHMgVHJlYXRlZCBXaXRoIE9yYWwgQW50aXBzeWNob3RpY3MgVmVyc3VzIElNIERlcG90IEFyaXBpcHJhem9sZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCw4MDc2OCwyMDExLTA5LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDMgQ2xpbmljYWwsQzMsImFyaXBpcHJhem9sZSAoaW50cmFtdXNjdWxhciBkZXBvdCwgc2NoaXpvcGhyZW5pYSksIE90c3VrYS9IIEx1bmRiZWNrIiw2NDMyOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixMYXVuY2hlZCxMLFNjaGl6b3BocmVuaWEsMjk5LEFTUElSRSxJbnRyYW11c2N1bGFyIERlcG90IEZvcm11bGF0aW9uIG9mIEFyaXBpcHJhem9sZSBhcyBNYWludGVuYW5jZSBUcmVhdG1lbnQgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLCJPdHN1a2EgUGhhcm1hY2V1dGljYWwgQ28gTHRkLCBPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyIsSW50ZXJ2ZW50aW9uYWwsMjEyNjksMjAwOC0wOS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJhcmlwaXByYXpvbGUgKGV4dGVuZGVkLXJlbGVhc2UgaW50cmFtdXNjdWxhciwgTGlua2VSeCwgc2NoaXpvcGhyZW5pYSksIEFsa2VybWVzIiw2NTUyMywiU2FmZXR5LEVmZmljYWN5IixOLE4sTGF1bmNoZWQsTCxTY2hpem9waHJlbmlhLDI5OSxudWxsLEFuIEV4dGVuc2lvbiBvZiBhIExvbmctdGVybSBTYWZldHkgU3R1ZHkgb2YgQUxLUy05MDcyIChBbHNvIEtub3duIGFzIEFMS1MtOTA3MCksQWxrZXJtZXMgcGxjLEludGVydmVudGlvbmFsLDE0NTM1MSwyMDEzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsUEYtMDQ5OTUyNzQsNjYwNDYsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksWSxEaXNjb250aW51ZWQsRFgsQWx6aGVpbWVycyBkaXNlYXNlLDE0LG51bGwsQSBTdHVkeSBUbyBPYnNlcnZlIFNhZmV0eSBBbmQgQmxvb2QgQ29uY2VudHJhdGlvbnMgT2YgUEYtMDQ5OTUyNzQgRHVyaW5nIEFuZCBGb2xsb3dpbmcgdGhlIEFkbWluaXN0cmF0aW9uIG9mIE11bHRpcGxlIERvc2VzIE9mIFBGLTA0OTk1Mjc0IEluIEhlYWx0aHkgQWR1bHQgQW5kIEhlYWx0aHkgRWxkZXJseSBWb2x1bnRlZXJzLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsNjg1NjUsMjAxMC0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LGNpbml0YXByaWRlIHRhcnRyYXRlLDc0MzU3LCJTYWZldHksRWZmaWNhY3kiLFksTixMYXVuY2hlZCxMLER5c3BlcHNpYSw0MzIsbnVsbCxFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIENpbml0YXByaWRlIGluIEZ1bmN0aW9uYWwgRHlzcGVwc2lhLEhpZ2hub29uIExhYm9yYXRvcmllcyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTUxODE3LDIwMDktMDctMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMiwiWm9sbWl0cmlwdGFuICh0cmFuc2Rlcm1hbCBwYXRjaCwgWlAgUGF0Y2ggdGVjaG5vbG9neSwgbWlncmFpbmUvY2x1c3RlciBoZWFkYWNoZSksIFpvc2FubyBQaGFybWEiLDc3MjA4LCJTYWZldHksRWZmaWNhY3kiLE4sTixEaXNjb3ZlcnksRFIsQ2x1c3RlciBoZWFkYWNoZSw3MyxudWxsLEEgUGhhc2UgSUkgY2xpbmljYWwgc3R1ZHkgb2YgUXRyeXB0YSBpbiBwYXRpZW50cyB3aXRoIGNsdXN0ZXIgaGVhZGFjaGVzLFpvc2FubyBQaGFybWEgQ29ycCxJbnRlcnZlbnRpb25hbCwzNzM3NDQsbnVsbCxQbGFubmVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSxTRVAtMzYzODU2LDgxNjk2LEVmZmljYWN5LE4sWSxQaGFzZSAyIENsaW5pY2FsLEMyLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsU3R1ZHkgQXNzZXNzaW5nIFNFUC0zNjM4NTYgaW4gTWFsZSBhbmQgRmVtYWxlIFZvbHVudGVlcnMgV2l0aCBIaWdoIG9yIExvdyBTY2hpem90eXBlIENoYXJhY3RlcmlzdGljcyxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTU5NDAxLDIwMTQtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiY2luaXRhcHJpZGUgKyBvbWVwcmF6b2xlIChleHRlbmRlZCByZWxlYXNlLCBjYXBzdWxlLCBkeXNwZXBzaWEvR0VSRCksIENhZGlsYSBIZWFsdGhjYXJlIiw4OTc0MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sTm8gRGV2ZWxvcG1lbnQgUmVwb3J0ZWQsTkRSLER5c3BlcHNpYSw0MzIsbnVsbCwiQSBDbGluaWNhbCBUcmlhbCBUbyBTdHVkeSBUaGUgRWZmZWN0cyBPZiBUd28gRHJ1Z3MsIEZpeGVkIERvc2UgQ29tYmluYXRpb24gQ2Fwc3VsZXMgT2YgT21lcHJhem9sZSBhbmQgQ2luaXRhcHJpZGUgRVIgQW5kIE9tZXByYXpvbGUgQ2Fwc3VsZXMgSW4gUGF0aWVudHMgV2l0aCBOb24tVWxjZXIgRHlzcGVwc2lhIChOVUQpIE9yIEdhc3Ryb2Vzb3BoYWdlYWwgUmVmbHV4IERpc2Vhc2UgKEdFUkQpIixDYWRpbGEgUGhhcm1hY2V1dGljYWxzIChFQSkgTHRkLEludGVydmVudGlvbmFsLDE2MDA0NiwyMDA5LTA0LTE4IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsInN1bWF0cmlwdGFuIChhdXRvaW5qZWN0b3IsIG1pZ3JhaW5lKSwgUHJvbWl1cyBQaGFybWEiLDk2Mjc5LCJTYWZldHksRWZmaWNhY3kiLE4sTixMYXVuY2hlZCxMLE1pZ3JhaW5lLDIxMCxudWxsLFBpbG90IFN0dWR5IG9mIERGTi0xMSBJbmplY3Rpb24gaW4gTWVkaWNhdGlvbiBPdmVydXNlIEhlYWRhY2hlLERyIFJlZGR5J3MgTGFib3JhdG9yaWVzIEx0ZCxJbnRlcnZlbnRpb25hbCwyNDM3NDYsMjAxNS0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMywiY3ljbG9zZXJpbmUgKyBsdXJhc2lkb25lIChiaXBvbGFyIGRlcHJlc3Npb24sIHN1aWNpZGFsaXR5KSwgTmV1cm9SeCIsOTc4NDYsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBoYXNlIDMgQ2xpbmljYWwsQzMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTZXZlcmVCRCxOUlgtMTAwIHZlcnN1cyBQbGFjZWJvIGZvciBSYXBpZCBTdGFiaWxpemF0aW9uIG9mIEFjdXRlIFN1aWNpZGFsIElkZWF0aW9uIGFuZCBCZWhhdmlvciBpbiBCaXBvbGFyIERlcHJlc3Npb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1Mzc3LDIwMTktMDEtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMS9QaGFzZSAyIENsaW5pY2FsLEMxMiwibWVsb3hpY2FtICsgcml6YXRyaXB0YW4gKGZpeGVkLWRvc2UgY29tYmluYXRpb24vb3JhbCwgbWlncmFpbmUpLCBBeHNvbWUiLDEwODQ2MCxQaGFybWFjb2tpbmV0aWNzLE4sTixQaGFzZSAzIENsaW5pY2FsLEMzLE1pZ3JhaW5lLDIxMCxudWxsLCJBIHBoYXJtYWNva2luZXRpYywgcmFuZG9taXplZCBhbmQgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgQVhTLTA3IChNb1NFSUMgbWVsb3hpY2FtIGFuZCByaXphdHJpcHRhbikgZm9yIHRoZSBhY3V0ZSB0cmVhdG1lbnQgb2YgbWlncmFpbmUiLEF4c29tZSBUaGVyYXBldXRpY3MgSW5jLEludGVydmVudGlvbmFsLDM2MjI1MCxudWxsLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTm9uLWluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLDgzNyxudWxsLFRoZSBFZmZlY3Qgb2YgQ29tYmluYXRpb24gb2YgTW9zYXByaWRlIGFuZCBEUFAtNCBJbmhpYml0b3Igb24gUGxhc21hIENvbmNlbnRyYXRpb24gb2YgSW5jcmV0aW4gSG9ybW9uZXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyMDE4NzIsMjAxNC0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgM2IgQ2xpbmljYWwsQzNCLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFNhZmV0eSBvZiBTUEQtNDE3IENvbWJpbmVkIFdpdGggT3RoZXIgUHN5Y2hvdHJvcGljIE1lZGljYXRpb25zIGluIHRoZSBUcmVhdG1lbnQgb2YgQmlwb2xhciBJIERpc29yZGVyLFZhbGlkdXMgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDM1MDQ0LDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsU3R1ZHkgb2YgQXJpcGlwcmF6b2xlIGluIFBhdGllbnRzIFdpdGggYSBIaXN0b3J5IG9mIEJpcG9sYXIgRGlzb3JkZXIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ1MTAsMjAwMC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEJpcG9sYXIgSSBkaXNvcmRlciwzMTE0LG51bGwsIkEgTXVsdGljZW50ZXIsIFJhbmRvbWl6ZWQsIERvdWJsZS1CbGluZCwgUGxhY2Viby1Db250cm9sbGVkLCBQYXJhbGxlbC1Hcm91cCwgQ29tcGFyaXNvbiBUcmlhbCBvZiBBcmlwaXByYXpvbGUgaW4gdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEJpcG9sYXIgRGlzb3JkZXIgRXhwZXJpZW5jaW5nIGEgTWFuaWMgb3IgTWl4ZWQgRXBpc29kZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTQ2MiwyMDA4LTAxLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsTkxYLTExMiw4NDEwOCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsRGlhYmV0aWMgcGVyaXBoZXJhbCBuZXVyb3BhdGh5LDM5MjMsQkVTVCxBIERvc2UtRmluZGluZyBTdHVkeSBvZiBFZmZpY2FjeSBhbmQgU2FmZXR5IG9mIEYtMTM2NDAgaW4gUGF0aWVudHMgV2l0aCBNb2RlcmF0ZSB0byBTZXZlcmUgUGFpbmZ1bCBQZXJpcGhlcmFsIERpYWJldGljIFBvbHluZXVyb3BhdGh5LFBpZXJyZS1GYWJyZSBSZXNlYXJjaCBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTg4NDA4LDIwMDktMDctMTUgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsZWxldHJpcHRhbiw4NzE1LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEFuIG9wZW4gc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZWxldHJpcHRhbiBpbiBoZWFsdGh5IHZvbHVudGVlcnMsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwxMTA5MDcsMjAwMS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxBcmlwaXByYXpvbGUgQXVnbWVudGF0aW9uIG9mIEFudGlkZXByZXNzYW50cyBpbiBQVFNELER1cmhhbSBWQSBNZWRpY2FsIENlbnRlcixJbnRlcnZlbnRpb25hbCw0NTQ2OCwyMDA3LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUG9zdCB0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyLDE5MzUsbnVsbCxBbiBPcGVuLUxhYmVsIFN0dWR5IG9mIHRoZSB1c2Ugb2YgQXJpcGlwcmF6b2xlIGluIHRoZSBUcmVhdG1lbnQgb2YgQ2hyb25pYyBQb3N0IFRyYXVtYXRpYyBTdHJlc3MgRGlzb3JkZXIsQXVzdGluIEhlYWx0aCxJbnRlcnZlbnRpb25hbCwxMzcwOTYsMjAwNi0wMy0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHBydWNhbG9wcmlkZSwxNTcxNiwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2xvbm9zY29weSwzMDEwLG51bGwsRWZmaWNhY3kgb2YgUHJ1Y2Fsb3ByaWRlIFBsdXMgUG9seWV0aHlsZW5lIEdseWNvbCBpbiBCb3dlbCBQcmVwYXJhdGlvbiBmb3IgQ29sb25vc2NvcHksU2hhbmRvbmcgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwyNjE3MjgsMjAxNi0wNi0zMCAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMyssUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUb3hpY2l0eSw3MzUsUFJFUEFSRSxQcmVlbXB0aXZlIFBoYXJtYWNvZ2Vub21pYyBUZXN0aW5nIGZvciBQcmV2ZW50aW5nIEFkdmVyc2UgRHJ1ZyBSZWFjdGlvbnMsTGVpZGVuIFVuaXZlcnNpdHkgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjkyMzMwLDIwMTctMDMtMjAgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE9waWF0ZSBkZXBlbmRlbmNlLDI0MyxudWxsLEJ1c3Bpcm9uZSBmb3IgT3Bpb2lkIFRhcGVyaW5nLEpvaG5zIEhvcGtpbnMgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMzkxMTcsMjAxOC0wNS0zMCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLEEgVHJpYWwgdG8gU3R1ZHkgb2YgdGhlIEVmZmVjdHMgb2YgRWxldHJpcHRhbiA0MCBtZyBvbiBNaWxkIHZzIE1vZGVyYXRlIHRvIFNldmVyZSBQYWluIEludGVuc2l0eSBvZiBNaWdyYWluZSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDEzNzkzLDIwMDUtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpFdXJvcGVhbiBBbmNlc3RyeSwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsem9sbWl0cmlwdGFuLDQ3MzYsIkJpb2VxdWl2YWxlbmNlLFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLENsaW5pY2FsIHN0dWR5IHRvIGRldGVybWluZSBiaW9lcXVpdmFsZW5jZSBiZXR3ZWVuIHR3byBtZWRpY2luYWwgcHJvZHVjdHMgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgWm9sbWl0cmlwdGFuIGluIDIuNSBtZyBkaXNwZXJzaWJsZSB0YWJsZXRzIGluIGhlYWx0aHkgZmVtYWxlIHZvbHVudGVlcnMgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zLCJQcm9kdWN0b3MgQ2llbnTtZmljb3MsIFMuQS4gZGUgQy5WLiIsSW50ZXJ2ZW50aW9uYWwsMzAyODA3LDIwMTYtMDgtMDggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx6b2xtaXRyaXB0YW4sNDczNiwiQmlvZXF1aXZhbGVuY2UsQmlvYXZhaWxhYmlsaXR5IixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiUHJvc3BlY3RpdmUsIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNyb3NzLW92ZXIsIGNvbXBhcmF0aXZlIHN0dWR5IHRvIGVzdGFibGlzaCB0aGUgYmlvZXF1aXZhbGVuY2Ugb2YgWm9sbWl0cmlwdGFuIDIuNSBtZyBkaXNwZXJzaWJsZSB0YWJsZXRzIChMYWJvcmF0b3Jpb3MgUElTQSwgU0EgZGUgQ1YpIHZlcnN1cyBab21pZyBSYXBpbWVsdCAoQXN0cmF6ZW5lY2EsIFNBIGRlIENWKSIsIlBpc2EgTGFib3JhdG9yaW9zLCBTQSBkZSBDViIsSW50ZXJ2ZW50aW9uYWwsMzAyMjIyLG51bGwsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHpvbG1pdHJpcHRhbiw0NzM2LCJTYWZldHksRWZmaWNhY3kiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdHMgb2Ygem9sbWl0cmlwdGFuIChab21pZykgb24gcHN5Y2hvbW90b3IgcGVyZm9ybWFuY2UgYWxvbmUgYW5kIGluIGNvbWJpbmF0aW9uIHdpdGggZGlhemVwYW0gaW4gaGVhbHRoeSB2b2x1bnRlZXJzLFplbmVjYSBQaGFybWFjZXV0aWNhbHMsSW50ZXJ2ZW50aW9uYWwsMTA1ODYxLDE5OTgtMDktMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGZsaWJhbnNlcmluLDg1NDksIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvIGFuZCBwb3NpdGl2ZS1jb250cm9sbGVkICh6b3BpY2xvbmUpLCBmb3VyLXdheSBjcm9zc292ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgZmxpYmFuc2VyaW4gaW4gaGVhbHRoeSBwcmVtZW5vcGF1c2FsIHdvbWVuIixTcHJvdXQgUGhhcm1hY2V1dGljYWxzLEludGVydmVudGlvbmFsLDIxNjU1MSxudWxsLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlbHVzaW9uLDMxOTQsSEFSTU9OWSwiQSBwaGFzZSBJSUksIHBpdm90YWwsIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5LCBldmFsdWF0aW5nIHRoZSBlZmZpY2FjeSBhbmQgc2FmZXR5IG9mIHBpbWF2YW5zZXJpbiBmb3IgdGhlIHRyZWF0bWVudCBvZiBoYWxsdWNpbmF0aW9ucyBhbmQgZGVsdXNpb25zIGFzc29jaWF0ZWQgd2l0aCBkZW1lbnRpYS1yZWxhdGVkIHBzeWNob3NpcyIsQUNBRElBIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsMzE0NzEwLDIwMTctMTAtMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFpbiwyMCxudWxsLFJlbWlmZW50YW5pbCBhbmFsZ2VzaWEgZHVyaW5nIGxhYm9yIGFuZCBkZWNyZWFzaW5nIG1hdGVybmFsIHJlc3BpcmF0b3J5IGRlcHJlc3Npb24gd2l0aCBtb3NhcHJpZGUsIkt1cmFzaGlraSBDZW50cmFsIEhvc3BpdGFsLCBLeW90byBVbml2ZXJzaXR5LCBNaXRzdWJpc2hpIEt5b3RvIEhvc3BpdGFsIixJbnRlcnZlbnRpb25hbCwyNzY5NTAsMjAxNi0wNi0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGJ1c3Bpcm9uZSw0NDM2NCxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEeXNwbmVhLDI0MDAsbnVsbCxCdXNwaXJvbmUgaW4gUmVkdWNpbmcgU2hvcnRuZXNzIG9mIEJyZWF0aCBpbiBQYXRpZW50cyBXaXRoIENhbmNlcixVbml2ZXJzaXR5IG9mIFJvY2hlc3RlcixJbnRlcnZlbnRpb25hbCwzODQyMywyMDAyLTExLTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMscGltYXZhbnNlcmluLDI1MTQ4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEhhbGx1Y2luYXRpb24sMTA1MCxIQVJNT05ZLCJBIHBoYXNlIElJSSwgcGl2b3RhbCwgcmFuZG9taXplZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHksIGV2YWx1YXRpbmcgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgcGltYXZhbnNlcmluIGZvciB0aGUgdHJlYXRtZW50IG9mIGhhbGx1Y2luYXRpb25zIGFuZCBkZWx1c2lvbnMgYXNzb2NpYXRlZCB3aXRoIGRlbWVudGlhLXJlbGF0ZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCwzMTQ3MTAsMjAxNy0xMC0zMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZW1lbnRpYSw5MCxudWxsLEFyaXBpcHJhem9sZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBQYXRpZW50cyBXaXRoIEFnaXRhdGlvbiBBc3NvY2lhdGVkIFdpdGggRGVtZW50aWEgb2YgdGhlIEFsemhlaW1lcidzIFR5cGUsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxOTg0MDIsMjAxNC0wNi0xMSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSxTYWZldHksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUGFya2luc29ucyBkaXNlYXNlLDI1NSxudWxsLEFyaXBpcHJhem9sZSBpbiBQYXRpZW50cyBXaXRoIFBzeWNob3NpcyBBc3NvY2lhdGVkIFdpdGggUGFya2luc29uJ3MgRGlzZWFzZSxPdHN1a2EgUGhhcm1hY2V1dGljYWwgRGV2ZWxvcG1lbnQgYW5kIENvbW1lcmNpYWxpemF0aW9uIEluYyxJbnRlcnZlbnRpb25hbCwxNDI1MywyMDAzLTA3LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscGltYXZhbnNlcmluLDI1MTQ4LFNhZmV0eSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsIkFuIG9wZW4tbGFiZWwsIGV4dGVuc2lvbiBzdHVkeSBvZiBBQ1AtMTAzIGluIHBhdGllbnRzIHdpdGggUGFya2luc29uJ3MgZGlzZWFzZSBhbmQgdHJlYXRtZW50LWluZHVjZWQgcHN5Y2hvc2lzIixBQ0FESUEgUGhhcm1hY2V1dGljYWxzIEluYyxJbnRlcnZlbnRpb25hbCw3NjQ1LDIwMDYtMDMtMjMgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAzIENsaW5pY2FsLEMzLHBpbWF2YW5zZXJpbiwyNTE0OCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LG51bGwsQSBTdHVkeSBvZiB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgUGltYXZhbnNlcmluIChBQ1AtMTAzKSBpbiBQYXRpZW50cyBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UgUHN5Y2hvc2lzLEFDQURJQSBQaGFybWFjZXV0aWNhbHMgSW5jLEludGVydmVudGlvbmFsLDYxMTcsMjAwNy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsIlJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgcGxhY2Viby1jb250cm9sbGVkIHN0dWR5IG9mIHZpbGF6b2RvbmUncyBlZmZpY2FjeSwgc2FmZXR5LCBhbmQgYmlvbWFya2VycyBvZiByZXNwb25zZSBpbiBtYWpvciBkZXByZXNzaXZlIGRpc29yZGVyIChNREQpIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxNTQyNSwyMDA4LTAzLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIG9wZW4tbGFiZWwsIHJhbmRvbWl6ZWQsIHR3by1wZXJpb2QsIGNyb3Nzb3ZlciBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIHBoYXJtYWNva2luZXRpY3Mgb2YgdGhlIDMgbWcgU1RBVGRvc2UgYWRtaW5pc3RlcmVkIDIgaCBhZnRlciBhIHNpbmdsZSBJbWl0cmV4IDEwMCBtZyB0YWJsZXQgcmVsYXRpdmUgdG8gdHdvIDYgbWcgU1RBVGRvc2UgaW5qZWN0aW9ucyBhZG1pbmlzdGVyZWQgMSBoIGFwYXJ0IGluIGhlYWx0aHkgdm9sdW50ZWVycyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw4NzcyMSwyMDAzLTA3LTE1IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw0LFBoYXNlIDEgQ2xpbmljYWwsQzEsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdGhyZWUtd2F5IGNyb3Nzb3ZlciwgcGlsb3Qgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHJlbGF0aXZlIGJpb2F2YWlsYWJpbGl0eSBvZiB0d28gbmV3bHkgZm9ybXVsYXRlZCBmYXN0IGRpc2ludGVncmF0aW5nIHN1bWF0cmlwdGFuIDUwIG1nIHRhYmxldHMgdmVyc3VzIHRoZSBjdXJyZW50bHkgbWFya2V0ZWQgc3VtYXRyaXB0YW4gNTAgbWcgdGFibGV0cyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsODc2MjIsMjAwMS0xMC0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMyxQaGFzZSAxIENsaW5pY2FsLEMxLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxCaW9lcXVpdmFsZW5jZSxQaGFybWFjb2tpbmV0aWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBwaGFzZSBJLCBzaW5nbGUtY2VudGVyLCBzaW5nbGUtZG9zZSwgb3Blbi1sYWJlbCwgcmFuZG9taXplZCwgdHdvLXBlcmlvZCwgY3Jvc3NvdmVyIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHBoYXJtYWNva2luZXRpY3MgYW5kIGJpb2VxdWl2YWxlbmNlIG9mIGZhc3QgZGlzaW50ZWdyYXRpbmcgc3VtYXRyaXB0YW4gMTAwIG1nIHRhYmxldCBkaXNzb2x2ZWQgaW4gd2F0ZXIgY29tcGFyZWQgdG8gdGhlIGN1cnJlbnRseSBtYXJrZXRlZCBzdW1hdHJpcHRhbiAxMDAgbWcgdGFibGV0IGFkbWluaXN0ZXJlZCBpbiB0aGUgZmFzdGVkIHN0YXRlIHRvIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDg3NjAzLDIwMDItMDktMjYgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgb2YgTGFzbWlkaXRhbiBXaGVuIEdpdmVuIFdpdGggU3VtYXRyaXB0YW4gaW4gSGVhbHRoeSBQYXJ0aWNpcGFudHMsRWxpIExpbGx5ICYgQ28sSW50ZXJ2ZW50aW9uYWwsMzE2MDk5LDIwMTctMTAtMTcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkEgcGhhc2UgSSwgcGxhY2Viby1jb250cm9sbGVkLCBwaGFybWFjb2tpbmV0aWNzIGFuZCBzYWZldHkgc3R1ZHkgb2YgYXNjZW5kaW5nIGRvc2VzIG9mIEdSLTQzMTc1QyBhZG1pbmlzdGVyZWQgc3ViY3V0YW5lb3VzbHkgdG8gaGVhbHRoeSBtYWxlIHZvbHVudGVlcnMiLEdsYXhvU21pdGhLbGluZSBwbGMsSW50ZXJ2ZW50aW9uYWwsMTU2OTc4LDE5ODgtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxzdW1hdHJpcHRhbiw0NDkxLCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFJhbmRvbWl6ZWQsIE9wZW4tbGFiZWwsIENyb3NzLW92ZXIgVHJpYWwgVG8gRGV0ZXJtaW5lIHRoZSBFZmZlY3Qgb2YgRm9vZCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBPcmFsIEdSLTQzMTc1QyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwxNTM1OTcsMTk4OC0xMC0wNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZvcnRpb3hldGluZSBoeWRyb2Jyb21pZGUsNDgxMTksIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxBbnhpZXR5IGRpc29yZGVyLDI1LG51bGwsUGhhcm1hY29raW5ldGljcyBhbmQgVG9sZXJhYmlsaXR5IG9mIEx1LUFBMjEwMDQgaW4gQ2hpbGQgYW5kIEFkb2xlc2NlbnQgUGF0aWVudHMgV2l0aCBEZXByZXNzaXZlIG9yIEFueGlldHkgRGlzb3JkZXIsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsODMyMjAsMjAxMi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLCJyb3RpZ290aW5lICh0cmFuc2Rlcm1hbCBwYXRjaCwgUGFya2luc29uJ3MvcmVzdGxlc3MgbGVncyBzeW5kcm9tZSksIFVDQiIsNzk3MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdHJva2UsNjUsbnVsbCxEb3BhbWluZSBBZ29uaXN0IGZvciBIZW1pc3BhdGlhbCBOZWdsZWN0IGFuZCBNb3RvciBEZWZpY2l0IFBvc3QgU3Ryb2tlLFVuaXZlcnNpdHkgQ29sbGVnZSBMb25kb24sSW50ZXJ2ZW50aW9uYWwsMTEwODYsMjAxMC0wMS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGJyZXhwaXByYXpvbGUsNjIwMDEsU2FmZXR5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsemhlaW1lcnMgZGlzZWFzZSwxNCxudWxsLCJBIDEyLXdlZWssIEV4dGVuc2lvbiBUcmlhbCB0byBFdmFsdWF0ZSB0aGUgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQnJleHBpcHJhem9sZSBpbiB0aGUgVHJlYXRtZW50IG9mIFN1YmplY3RzIFdpdGggQWdpdGF0aW9uIEFzc29jaWF0ZWQgV2l0aCBEZW1lbnRpYSBvZiB0aGUgQWx6aGVpbWVyJ3MgVHlwZSIsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMzQ3MTEzLDIwMTgtMTAtMTIgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIkVmZmljYWN5LFBoYXJtYWNvZHluYW1pY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN0b21hY2ggZGlzZWFzZSw4MDIsbnVsbCxFYXJseSBlZmZlY3RzIG9mIG9yYWwgYWRtaW5pc3RyYXRpb25zIG9mIG9tZXByYXpvbGUgd2l0aCBtb3NhcHJpZGUgb24gaW50cmFnYXN0cmljIHBILFlva29oYW1hIENpdHkgVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzMDIyODcsMjAwOS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCkV1cm9wZWFuIEFuY2VzdHJ5LDMsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyx6aXByYXNpZG9uZSwyODYwLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJhbm9pZCBzY2hpem9waHJlbmlhLDE5MzAsbnVsbCwiUGhhcm1hY29nZW5ldGljIHN0dWR5IHRvIGFzc2VzcyBzYWZldHkgYW5kIHRoZSBhc3NvY2lhdGlvbnMgYmV0d2VlbiBwb2x5bW9ycGhpc21zIG9mIGRvcGFtaW5lcmdpYywgc2Vyb3RvbmVyZ2ljLCBhbmQgZ2x1dGFtYXRlcmdpYyBzeXN0ZW0tcmVsYXRlZCBnZW5lcyB3aXRoIGFkdmVyc2UgZXZlbnRzIGluIHNjaGl6b3BocmVuaWEgdHJlYXRtZW50OiBjb21wYXJpc29uIHN0dWR5IG9mIHppcHJhc2lkb25lLCBvbGFuemFwaW5lIGFuZCBwZXJhemluZSIsUGZpemVyIEluYyxJbnRlcnZlbnRpb25hbCwyMjEzNjMsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxKyxQaGFzZSAyIENsaW5pY2FsLEMyLGVsdG9wcmF6aW5lLDUwMjQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBhcmtpbnNvbnMgZGlzZWFzZSBkZW1lbnRpYSwzNDgzLG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIERvc2UtRmluZGluZyBTdHVkeSBvZiBPcmFsIEVsdG9wcmF6aW5lIGZvciBUcmVhdG1lbnQgb2YgTGV2b2RvcGEtSW5kdWNlZCBEeXNraW5lc2lhcyAoTElEKSBpbiBhIExldm9kb3BhIENoYWxsZW5nZS1Eb3NlIFNldHRpbmcgaW4gUGFya2luc29ucyBEaXNlYXNlIixQc3ljaG9HZW5pY3MgSW5jLEludGVydmVudGlvbmFsLDE0MjAyOCwyMDEwLTEwLTA2IDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHRlZ2FzZXJvZCwxMDA5MSxQaGFybWFjb2tpbmV0aWNzLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHJhbmRvbWl6ZWQsIG9wZW4tbGFiZWwsIGNyb3NzLW92ZXIgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHBoYXJtYWNva2luZXRpY3Mgb2YgdGVnYXNlcm9kIGluIGhlYWx0aHkgbWFsZSBzdWJqZWN0cyIsTm92YXJ0aXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTk4NTQsMTk5OS0xMi0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsREEtOTcwMSw1OTA1MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQYXJraW5zb25zIGRpc2Vhc2UsMjU1LFBBU1MtR0ksRWZmZWN0IG9mIFNob3J0LXRlcm0gTW90aWxpdG9uZSBUaGVyYXB5IG9uIEhlYWx0aC1yZWxhdGVkIFF1YWxpdHkgb2YgTGlmZSBpbiBQRCBQYXRpZW50cyBXaXRoIEdhc3Ryb2ludGVzdGluYWwgU3ltcHRvbXMsU2VvdWwgTmF0aW9uYWwgVW5pdmVyc2l0eSBIb3NwaXRhbCxJbnRlcnZlbnRpb25hbCwyNjEyODksMjAxNi0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LGxvcmNhc2VyaW4sNDc1MDQsIlNhZmV0eSxFZmZpY2FjeSxQaGFybWFjb2R5bmFtaWNzIixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LENBTUVMTElBLVRJTUksQSBTdHVkeSB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0IG9mIExvbmctdGVybSBUcmVhdG1lbnQgV2l0aCBCZWx2aXEgKExvcmNhc2VyaW4gSENsKSBvbiB0aGUgSW5jaWRlbmNlIG9mIE1ham9yIEFkdmVyc2UgQ2FyZGlvdmFzY3VsYXIgRXZlbnRzIGFuZCBDb252ZXJzaW9uIHRvIFR5cGUgMiBEaWFiZXRlcyBNZWxsaXR1cyBpbiBPYmVzZSBhbmQgT3ZlcndlaWdodCBTdWJqZWN0cyBXaXRoIENhcmRpb3Zhc2N1bGFyIERpc2Vhc2Ugb3IgTXVsdGlwbGUgQ2FyZGlvdmFzY3VsYXIgUmlzayBGYWN0b3JzLEVpc2FpIEluYyxJbnRlcnZlbnRpb25hbCwxNjUwMDAsMjAxNC0wMS0yNCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLE5MWC0xMTIsODQxMDgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FuY2VyIHBhaW4sMzIxMSxudWxsLCJQcm9vZiBvZiBDb25jZXB0IFN0dWR5IG9mIHRoZSBFZmZpY2FjeSBhbmQgVG9sZXJhYmlsaXR5IG9mIGEgNC1XZWVrIFRyZWF0bWVudCBXaXRoIEYtMTM2NDAgaW4gUGF0aWVudHMgaW4gV2hvbSB0aGUgQWRhcHRhdGlvbiBvZiBPcGlvaWQgVGhlcmFweSBvZiBDYW5jZXIgUGFpbiBIYXMgRmFpbGVkLiBBIFByb3NwZWN0aXZlLCBNdWx0aW5hdGlvbmFsLCBNdWx0aWNlbnRlciwgUmFuZG9taXplZCwgRG91YmxlLUJsaW5kLCBQbGFjZWJvLUNvbnRyb2xsZWQgU3R1ZHkiLFBpZXJyZSBGYWJyZSBTQSxJbnRlcnZlbnRpb25hbCwxMTg0MTQsMjAwNy0wOS0yNCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN5bmRyb21lIFgsMTU4NSxudWxsLFppcHJhc2lkb25lIGZvciBJbXByb3ZpbmcgSW5zdWxpbiBTZW5zaXRpdml0eSBpbiBQZW9wbGUgV2l0aCBTY2hpem9waHJlbmlhIFdobyBBcmUgYXQgUmlzayBmb3IgRGlhYmV0ZXMsVmV0ZXJhbnMgTWVkaWNhbCBSZXNlYXJjaCBGb3VuZGF0aW9uLEludGVydmVudGlvbmFsLDE4MjE3LDIwMDYtMDYtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDMsUGhhc2UgNCBDbGluaWNhbCxDNCx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLERlcHJlc3Npb24sOTMsbnVsbCxNQlJQICsgVm9ydGlveGV0aW5lIHZlcnN1cyBNQlJQIG9uIFByZXZlbnRpbmcgUmVsYXBzZSBpbiBDaHJvbmljIE1BIFVzZXJzLENlbnRyYWwgU291dGggVW5pdmVyc2l0eSxJbnRlcnZlbnRpb25hbCwzNjkxNTQsMjAxOS0wNC0wMSAwMDowMDowMCxOb3QgeWV0IHJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsSW5mbHVlbmNlIG9mIFRyZWF0bWVudCBXaXRoIE9sYW56YXBpbmUgb3IgWmlwcmFzaWRvbmUgb24gVHJhbnNjYXBpbGxhcnkgR2x1Y29zZSBUcmFuc3BvcnQgaW4gSHVtYW4gU2tlbGV0YWwgTXVzY2xlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBWaWVubmEsSW50ZXJ2ZW50aW9uYWwsNDQzMTksMjAwNS0wNC0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLHppcHJhc2lkb25lLDI4NjAsQmlvZXF1aXZhbGVuY2UsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIkJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIHppcHJhc2lkb25lIDQwIG1nIGNhcHN1bGUgZnJvbSBMYWJvcmF0b3J5IFJhYW0gZGUgU2FodWF5bywgU0EgZGUgQ1YgdmVyc3VzIEdlb2RvbiA0MCBtZyBjYXBzdWxlIGZyb20gUGZpemVyLCBTQSBkZSBDViwgaW4gaGVhbHRoeSByZXNlYXJjaCBzdWJqZWN0cyBvZiBib3RoIGdlbmRlcnMiLCJSQUFNIFNhaHVheW8gTGFib3JhdG9yeSwgU0EgZGUgQ1YiLEludGVydmVudGlvbmFsLDIxOTk4MSxudWxsLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyx6aXByYXNpZG9uZSwyODYwLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFueGlldHkgZGlzb3JkZXIsMjUsbnVsbCxDbGluaWNhbCBUcmlhbCBXaXRoIFppcHJhc2lkb25lIGZvciB0aGUgVHJlYXRtZW50IG9mIFBzeWNoaWF0cmljIFBhdGhvbG9neSBBc3NvY2lhdGVkIHRvIEFsY29ob2xpc20sRnVuZGFjaW8gUHJpdmFkYSBJIEluc3RpdHV0IERlIFJlY2VyY2EgRGUgTCdIb3NwaXRhbCBEZSBMYSBTYW50YSBDcmV1IEkgU2FudCBQYXUsSW50ZXJ2ZW50aW9uYWwsMzMxMTgsMjAwNC0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEFsY29ob2xpc20sMTEsbnVsbCxBcmlwaXByYXpvbGUgZm9yIEJpcG9sYXIgRGlzb3JkZXIgYW5kIEFsY29ob2wgVXNlIERpc29yZGVyLFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyLEludGVydmVudGlvbmFsLDI3MzIyMCwyMDE2LTExLTMwIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAyYiBDbGluaWNhbCxDMkIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxBTk9EWU5FLTIsT3JhbCBBTExPRC0yIHZlcnN1cyBPcmFsIFN1bWF0cmlwdGFuIGFuZCB2ZXJzdXMgUGxhY2VibyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIFdpdGggQXNzb2NpYXRlZCBOYXVzZWEsQWxsb2R5bmljIFRoZXJhcGV1dGljcyBMTEMsSW50ZXJ2ZW50aW9uYWwsMzAxNzM4LDIwMTctMDYtMjcgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgM2IgQ2xpbmljYWwsQzNCLHN1bWF0cmlwdGFuLDQ0OTEsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBEb3VibGUtQmxpbmQsIEdlbmVyYWwgUHJhY3RpY2UgU3R1ZHkgdG8gQ29tcGFyZSBHUi00MzE3NSBXaXRoIFBhcmFjZXRhbW9sIGFuZCBNZXRvY2xvcHJhbWlkZSBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE1Mzg0NSwxOTkxLTA0LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxDb21wYXJpc29uIG9mIHBoYXJtYWNva2luZXRpY3MgYmV0d2VlbiBpbW1lZGlhdGUtcmVsZWFzZSB0YWJsZXRzIGFuZCBjb250cm9sbGVkLXJlbGVhc2UgdGFibGV0cyBvZiBtb3NhcHJpZGUgY2l0cmF0ZSxLb3JlYSBVbml0ZWQgUGhhcm0gSW5jLEludGVydmVudGlvbmFsLDM2MDk1NCwyMDEyLTAyLTA2IDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCw2LFBoYXNlIDIgQ2xpbmljYWwsQzIsbW9zYXByaWRlLDM2NTgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3Ryb2tlLDY1LElGLVNUUk9LRSxPcHRpbWl6aW5nIEVhcmx5IEVudGVyYWwgTnV0cml0aW9uIGluIFNldmVyZSBTdHJva2UsWGlqaW5nIEhvc3BpdGFsLEludGVydmVudGlvbmFsLDI4MTI0NywyMDE3LTAxLTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCxQaWxvdCBzdHVkeSBvZiBjb21wYXJhdGl2ZSBiaW9hdmFpbGFiaWxpdHkgYmV0d2VlbiB0d28gZHJ1Z3MgZm9yIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgTG9yY2FzZXJpbiBIeWRyb2NobG9yaWRlIGluIHByb2xvbmdlZC1yZWxlYXNlIHRhYmxldHMgd2l0aCAyMCBtZyBpbiBoZWFsdGh5IHN1YmplY3RzIHVuZGVyIGZlZWRpbmcgY29uZGl0aW9ucyxaeWR1cyBDYWRpbGEgSGVhbHRoY2FyZSBMdGQsSW50ZXJ2ZW50aW9uYWwsMzM2NzIyLG51bGwsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxsb3JjYXNlcmluLDQ3NTA0LCJTYWZldHksRWZmaWNhY3ksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLEJlbHZpcSBQSyxQaGFybWFjb2tpbmV0aWMgU3R1ZHkgb2YgQmVsdmlxIGluIEFkdWx0IEtvcmVhbiBWb2x1bnRlZXJzLElsIERvbmcgUGhhcm1hY2V1dGljYWwgQ28gTHRkLEludGVydmVudGlvbmFsLDE0MTU1OSwyMDEzLTA2LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ2FyZGlvdmFzY3VsYXIgZGlzZWFzZSw1NyxudWxsLFRoZSBFZmZlY3Qgb2YgU3dpdGNoaW5nIHRvIEFyaXBpcHJhem9sZSBvbiBIZWFydCBIZWFsdGggaW4gT3ZlcndlaWdodCBhbmQgT2Jlc2UgUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLFVuaXZlcnNpdHkgb2YgUGl0dHNidXJnaCxJbnRlcnZlbnRpb25hbCw4NzgxLDIwMDQtMTAtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxFdmFsdWF0aW9uIG9mIHRoZSBTdHJhdGVnaWVzIG9mIFN3aXRjaGluZyBTY2hpem9waHJlbmlhIFBhdGllbnRzIHRvIEFyaXBpcHJhem9sZSBGcm9tIE90aGVyIEFudGlwc3ljaG90aWMgQWdlbnRzLE5hdGlvbmFsIFRhaXdhbiBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDM2MzEwLDIwMDctMDgtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDcsUGhhc2UgNCBDbGluaWNhbCxDNCxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxQUk9BQ1RJVkUsUHJldmVudGluZyBSZWxhcHNlIGluIFNjaGl6b3BocmVuaWE6IE9yYWwgQW50aXBzeWNob3RpY3MgQ29tcGFyZWQgVG8gSW5qZWN0YWJsZXM6IEV2YWx1YXRpbmcgRWZmaWNhY3ksTm9ydGggU2hvcmUgTG9uZyBJc2xhbmQgSmV3aXNoIEhlYWx0aCBTeXN0ZW0sSW50ZXJ2ZW50aW9uYWwsMzYyOTQsMjAwNi0wNS0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LGFyaXBpcHJhem9sZSw3NzgxLCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LFBBRklQMl9uYzFZLE5ldXJvY29nbml0aXZlIEVmZmVjdGl2ZW5lc3MgaW4gVHJlYXRtZW50IG9mIEZpcnN0LWVwaXNvZGUgTm9uLWFmZmVjdGl2ZSBQc3ljaG9zaXM6IE9uZS15ZWFyIEZvbGxvdy11cCxGdW5kYWNpb24gTWFycXVlcyBkZSBWYWxkZWNpbGxhLEludGVydmVudGlvbmFsLDIzODkxNSwyMDA1LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0aHlyb2lkaXNtLDE3OSxudWxsLCJBIHJhbmRvbWl6ZWQsIHNpbmdsZS1ibGluZGVkLCBwbGFjZWJvLWNvbnRyb2xsZWQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbnRpZG9wYW1pbmVyZ2ljIHRyZWF0bWVudCB3aXRoIGFyaXBpcHJhem9sZSwgaGFsb3Blcmlkb2wsIGFuZCByZXNlcnBpbmUgb24gcHN5Y2hvcGF0aG9sb2d5IGFuZCBtb3RvciBzeW1wdG9tcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMiLCJEZXV0c2NoZSBGb3JzY2h1bmdzZ2VtZWluc2NoYWZ0IChERkcpLCBSaGVpbmlzY2gtV2VzdGZhZWxpc2NoZSBUZWNobmlzY2hlIEhvY2hzY2h1bGUgQWFjaGVuIixJbnRlcnZlbnRpb25hbCw4MzgxNywyMDExLTAzLTExIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhZG9wcmF6aW5lLDI5NDkzLFNhZmV0eSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIsMTI1NyxudWxsLFN0dWR5IEV2YWx1YXRpbmcgU2FmZXR5IGFuZCBUb2xlcmFiaWxpdHkgb2YgQXNjZW5kaW5nIE11bHRpcGxlIERvc2Ugb2YgU0xWLTMxMyBpbiBTY2hpem9waHJlbmlhIFBhdGllbnRzLFd5ZXRoLEludGVydmVudGlvbmFsLDM2NjA0LDIwMDgtMDEtMzEgMDA6MDA6MDAsVGVybWluYXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsYWRvcHJhemluZSwyOTQ5MyxTYWZldHksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTdHVkeSBFdmFsdWF0aW5nIE11bHRpcGxlIEFzY2VuZGluZyBEb3NlIGluIFNjaGl6b3BocmVuaWEgUGF0aWVudHMsV3lldGgsSW50ZXJ2ZW50aW9uYWwsMzY2MDMsMjAwOC0wMi0yOSAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsSEFNTEVUVCxIYW5kbGluZyBBbnRpcHN5Y2hvdGljIE1lZGljYXRpb246IExvbmctdGVybSBFdmFsdWF0aW9uIG9mIFRhcmdldGVkIFRyZWF0bWVudC4gQSBzdHVkeSBjb21wYXJpbmcgY29udGludWF0aW9uIHZlcnN1cyBkaXNjb250aW51YXRpb24vZG9zZSByZWR1Y3Rpb24gb2YgYW50aXBzeWNob3RpYyBtZWRpY2F0aW9uIGluIHBhdGllbnRzIHJlbWl0dGVkIGFmdGVyIGEgZmlyc3QgZXBpc29kZSBvZiBwc3ljaG9zaXMsVW5pdmVyc2l0eSBNZWRpY2FsIENlbnRlciBHcm9uaW5nZW4sSW50ZXJ2ZW50aW9uYWwsMzc2MTg2LDIwMTktMDQtMDQgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxCRVNTVCxCdXNwaXJvbmUgZm9yIEVhcmx5IFNhdGlldHkgYW5kIFN5bXB0b21zIG9mIEdhc3Ryb3BhcmVzaXMsIk5hdGlvbmFsIEluc3RpdHV0ZSBvZiBEaWFiZXRlcywgRGlnZXN0aXZlIGFuZCBLaWRuZXkgRGlzZWFzZXMiLEludGVydmVudGlvbmFsLDM0NjQ3NSwyMDE5LTA2LTE1IDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxUYXJkaXZlIGR5c2tpbmVzaWEsMzIwLG51bGwsQW4gb3Blbi1sYWJlbCBzdHVkeSBvZiBidXNwaXJvbmUgaW4gdGhlIHRyZWF0bWVudCBvZiB0YXJkaXZlIGR5c2tpbmVzaWEsVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uLEludGVydmVudGlvbmFsLDEwODM1NCwxOTkzLTA2LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsemlwcmFzaWRvbmUsMjg2MCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEZXByZXNzaW9uLDkzLG51bGwsIlRyZWF0bWVudC1SZXNpc3RhbnQgRGVwcmVzc2lvbiwgSGlwcG9jYW1wdXMgQXRyb3BoeSBhbmQgU2Vyb3RvbmluIEdlbmV0aWMgUG9seW1vcnBoaXNtIixVbml2ZXJzaXR5IG9mIE90dGF3YSxJbnRlcnZlbnRpb25hbCwyMDU2OTUsMjAwNS0wMi0yOCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJPcGVuLUxhYmVsLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFBhcmFsbGVsLUdyb3VwIFN0dWR5IGluIEhlYWx0aHkgVm9sdW50ZWVycyB0byBFdmFsdWF0ZSB0aGUgRWZmZWN0cyBvZiBUd28gU2luZ2xlIE1ULTQwMCBvciBOYXByb3hlbiBTb2RpdW0gVGFibGV0cyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NjMyOCwyMDA3LTEwLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDIvUGhhc2UgMyBDbGluaWNhbCxDMjMsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b3BocmVuaWEsMjk5LG51bGwsIkEgcGhhc2UgSUkvSUlJLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCwgcGFyYWxsZWwtZ3JvdXAgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYnVzcGlyb25lIGFkZGVkIHRvIHJpc3Blcmlkb25lIGFzIGF1Z21lbnRhdGlvbiB0aGVyYXB5IGluIHBhdGllbnRzIHdpdGggY2hyb25pYyBzY2hpem9waHJlbmlhIixUZWhyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDcyNjQ2LDIwMDYtMDQtMjAgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLERBLTk3MDEsNTkwNTAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLFRoZXJhcGV1dGljIGVmZmVjdHMgb2YgTW90aWxpdG9uZSBpbiBwYXRpZW50IHdpdGggY29uc3RpcHRhdGlvbixEb25nLUEgU1QgQ28gTHRkLEludGVydmVudGlvbmFsLDI0NTkxNCwyMDE1LTExLTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxsdXJhc2lkb25lLDg3MzIsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU3VpY2lkYWwgaWRlYXRpb24sMzExNyxTQkQtQVNJQixOUlgtMTAxIGZvciBNYWludGVuYW5jZSBvZiBSZW1pc3Npb24gRnJvbSBTZXZlcmUgQmlwb2xhciBEZXByZXNzaW9uIGluIFBhdGllbnRzIFdpdGggU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MzA4LDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLGx1cmFzaWRvbmUsODczMiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTdWljaWRhbCBpZGVhdGlvbiwzMTE3LE1CRCxOUlgtMTAxIGZvciBNb2RlcmF0ZSBCaXBvbGFyIERlcHJlc3Npb24gYW5kIFN1aWNpZGFsIElkZWF0aW9uLE5ldXJvUnggSW5jLEludGVydmVudGlvbmFsLDMyNTI5MSwyMDE5LTAxLTAxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDQrLFBoYXNlIDQgQ2xpbmljYWwsQzQsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFN1aWNpZGFsIGlkZWF0aW9uLDMxMTcsbnVsbCxOTURBIEFudGFnb25pc3RzIGluIEJpcG9sYXIgRGVwcmVzc2lvbixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMTIxODMxLDIwMTMtMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDErLFBoYXNlIDQgQ2xpbmljYWwsQzQsYnVzcGlyb25lLDQ0MzY0LEVmZmljYWN5LE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1ham9yIGRlcHJlc3NpdmUgZGlzb3JkZXIsNDg5OCxudWxsLFRyZWF0aW5nIENhcmVnaXZlciBEZXByZXNzaW9uIHRvIEltcHJvdmUgQ2hpbGRob29kIEFzdGhtYTogSW1wYWN0IGFuZCBNZWRpYXRvcnMsVW5pdmVyc2l0eSBvZiBUZXhhcyBTb3V0aHdlc3Rlcm4gTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjYzOTcwLDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsem9sbWl0cmlwdGFuLDQ3MzYsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQSBkb3VibGUtYmxpbmQsIHJhbmRvbWl6ZWQsIG11bHRpY2VudGVyLCBjcm9zcy1vdmVyLCBjb21wYXJhdGl2ZSwgSXRhbGlhbiBzdHVkeSB0byBjb21wYXJlIHRoZSBlZmZpY2FjeSBvZiBmcm92YXRyaXB0YW4gYW5kIHpvbG1pdHJpcHRhbiBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggbWlncmFpbmUgd2l0aCBhdXJhIixJc3RpdHV0byBMdXNvZmFybWFjbyBEYEl0YWxpYSBTcEEsSW50ZXJ2ZW50aW9uYWwsMTE4OTkwLDIwMTItMDUtMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLGxvcmNhc2VyaW4sNDc1MDQsIkJpb2VxdWl2YWxlbmNlLEJpb2F2YWlsYWJpbGl0eSxQaGFybWFjb2tpbmV0aWNzIixOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNZXRhYm9saWMgZGlzb3JkZXIsNjU1LG51bGwsIlN0dWR5IG9mIEJpb2VxdWl2YWxlbmNlIGZvciBDb3N0YSBSaWNhIEJldHdlZW4gdGhlIExvcmNhc2VyaW5lIFByb3RlaW4gQ2hsb3JoeWRyYXRlIG9mIEd1dGlzIExpbWl0ZWQgYW5kIEJlbHZpcSBvZiBBcmVuYSBQaGFybWFjZXV0aWNhbHMsIEFzIGEgUmVmZXJlbmNlIE1lZGljaW5lIixHdXRpcyBGYXJtYWPpdXRpY2EsSW50ZXJ2ZW50aW9uYWwsMzgyNDc2LDIwMTgtMDktMjIgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx2b3J0aW94ZXRpbmUgaHlkcm9icm9taWRlLDQ4MTE5LFBoYXJtYWNvZHluYW1pY3MsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsRWxlY3Ryb2VuY2VwaGFsb2dyYXBoeSBTdHVkeSBJbnZlc3RpZ2F0aW5nIHRoZSBFZmZlY3RzIG9mIFZvcnRpb3hldGluZSBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsSCBMdW5kYmVjayBBL1MsSW50ZXJ2ZW50aW9uYWwsMTc1MjgyLDIwMTQtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LFNQQVJUQU4sIlRocmVlIERvc2VzIG9mIExhc21pZGl0YW4gKDUwLCAxMDAgYW5kIDIwMCBtZykgQ29tcGFyZWQgdG8gUGxhY2VibyBpbiB0aGUgQWN1dGUgVHJlYXRtZW50IG9mIE1pZ3JhaW5lIiwiQ29MdWNpZCBQaGFybWFjZXV0aWNhbHMgSW5jLCBFbGkgTGlsbHkgJiBDbyIsSW50ZXJ2ZW50aW9uYWwsMjQ2MzQwLDIwMTYtMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpBc2lhbiBBbmNlc3RyeSw1LFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLENoaW5lc2UgRmlyc3QgRXBpc29kZSBTY2hpem9waHJlbmlhJ3MgT3B0aW1hbCBEeW5hbWljIEFudGlwc3ljaG90aWMgVHJlYXRtZW50IFJlZ2ltZW4sU2hhbmdoYWkgTWVudGFsIEhlYWx0aCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMzM3NzY0LDIwMTgtMTAtMDEgMDA6MDA6MDAsTm90IHlldCByZWNydWl0aW5nDQpudWxsLDUsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLFNUb1AtUyxTdWJzdGFuY2UgTWlzdXNlIFRvIFBzeWNob3NpcyBmb3IgU3RpbXVsYW50cywiTGkgS2EgU2hpbmcgRmFjdWx0eSBvZiBNZWRpY2luZSwgVGhlIFVuaXZlcnNpdHkgb2YgSG9uZyBLb25nIixJbnRlcnZlbnRpb25hbCwzMzUwNTgsMjAxOS0wNi0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDEsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaG90aWMgZGlzb3JkZXIsMjgyLG51bGwsIkEgcmFuZG9taXplZCwgcGxhY2Viby1jb250cm9sbGVkLCBkb3VibGUtYmxpbmQgdHJpYWwgdG8gc3R1ZHkgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgYXJpcGlwcmF6b2xlIGluIHRoZSB0cmVhdG1lbnQgb2YgbWV0aGFtcGhldGFtaW5lIGRlcGVuZGVuY2UgYW5kIGFzc29jaWF0ZWQgcHN5Y2hvc2lzIixVbml2ZXJzaXR5IG9mIE1hbGF5YSxJbnRlcnZlbnRpb25hbCwxNDk1MTYsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDQgQ2xpbmljYWwsQzQsYXJpcGlwcmF6b2xlLDc3ODEsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFBzeWNob3RpYyBkaXNvcmRlciwyODIsbnVsbCxBcmlwaXByYXpvbGUgaW4gUGF0aWVudHMgV2l0aCBQc3ljaG9zaXMgQXNzb2NpYXRlZCBXaXRoIFBhcmtpbnNvbidzIERpc2Vhc2UsT3RzdWthIFBoYXJtYWNldXRpY2FsIERldmVsb3BtZW50IGFuZCBDb21tZXJjaWFsaXphdGlvbiBJbmMsSW50ZXJ2ZW50aW9uYWwsMTQyNTMsMjAwMy0wNy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSssUGhhc2UgMSBDbGluaWNhbCxDMSxidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwb3RoZXJtaWEsNDcyLEhJQ0hWLEh5cG90aGVybWlhIEluIENvbnNjaW91cyBIZWFsdGh5IFZvbHVudGVlcnM6IGEgZmVhc2liaWxpdHkgdHJpYWwsRW1jb29scy1FbWVyZ2VuY3kgTWVkaWNhbCBDb29saW5nIFN5c3RlbXMgQUcsSW50ZXJ2ZW50aW9uYWwsMTUxMjAxLDIwMTEtMDMtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMiBDbGluaWNhbCxDMixiaWZlcHJ1bm94LDE3NTE1LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIEkgZGlzb3JkZXIsMzExNCxudWxsLFBoYXJtYWNva2luZXRpYyBFZmZlY3RzIG9mIEJpZmVwcnVub3ggYW5kIFZhbHByb2F0ZSBpbiBCaXBvbGFyIEksU29sdmF5IFNBLEludGVydmVudGlvbmFsLDM0MTExLDIwMDUtMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMi9QaGFzZSAzIENsaW5pY2FsLEMyMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxTZXh1YWwgZHlzZnVuY3Rpb24sMzc3NCxudWxsLEVmZmVjdCBvZiBhcmlwaXByYXpvbGUgaW4gdHJlYXRtZW50IG9mIHNleHVhbCBkeXNmdW5jdGlvbiBkdWUgdG8gYW50aWRlcHJlc3NhbnRzLE1hemFuZGFyYW4gVW5pdmVyc2l0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLEludGVydmVudGlvbmFsLDI5Mjc4MCwyMDE1LTExLTIyIDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSwicm90aWdvdGluZSAodHJhbnNkZXJtYWwgcGF0Y2gsIFBhcmtpbnNvbidzL3Jlc3RsZXNzIGxlZ3Mgc3luZHJvbWUpLCBVQ0IiLDc5NzEsRWZmaWNhY3ksTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBUcmlhbCB0byBFeHBsb3JlIFN5bXB0b21hdGljIFRoZXJhcHkgZm9yIEFwcGxpY2F0aW9uIFNpdGUgUmVhY3Rpb24gdG8gU1BNLTk2MiBpbiBIZWFsdGh5IFN1YmplY3QsT3RzdWthIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwxMDAxNTYsMjAxMi0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLGFsbW90cmlwdGFuLDEwNTI0LCJTYWZldHksQmlvYXZhaWxhYmlsaXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLCByYW5kb21pemVkLCBjcm9zc292ZXIsIHNpbmdsZS1kb3NlIHN0dWR5IHRvIGV2YWx1YXRlIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZWZmZWN0IG9mIGZvb2QgaW50YWtlIG9uIHRoZSBiaW9hdmFpbGFiaWxpdHkgb2YgYWxtb3RyaXB0YW4gaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixBbG1pcmFsbCBQcm9kZXNmYXJtYSBTQSxJbnRlcnZlbnRpb25hbCw2ODkzMywyMDA2LTA0LTMwIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxhbG1vdHJpcHRhbiwxMDUyNCwiU2FmZXR5LEVmZmljYWN5IixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxudWxsLG51bGwsbnVsbCwiQSBjcm9zc292ZXIsIG9wZW4sIHJhbmRvbWl6ZWQgc3R1ZHkgb24gdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgbW9jbG9iZW1pZGUgYW5kIGFsbW90cmlwdGFuIGluIGhlYWx0aHkgdm9sdW50ZWVycyIsUGhhcm1hY2lhICYgVXBqb2huIEluYyxJbnRlcnZlbnRpb25hbCwxMTA3NjYsMjAwMS0wNS0zMSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsU2FmZXR5LFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBbiBvcGVuLWxhYmVsIHN0dWR5IG9mIHBoYXJtYWNva2luZXRpYyBpbnRlcmFjdGlvbiBiZXR3ZWVuIHRoZSBhbnRpbWlncmFpbmUgY29tcG91bmQsIGFsbW90cmlwdGFuLCBhbmQgcHJvcHJhbm9sb2wgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixQaGFybWFjaWEgJiBVcGpvaG4gSW5jLEludGVydmVudGlvbmFsLDExMDMyNywyMDAxLTAyLTI4IDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxSUS0wMDAwMDAxMCw1OTIzNCwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLFksWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIGZpcnN0LWluLWh1bWFuLCByYW5kb21pemVkLCBkb3VibGUtYmxpbmQsIHBsYWNlYm8tY29udHJvbGxlZCBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGFuZCBwaGFybWFjb2tpbmV0aWNzIG9mIHNpbmdsZSBhbmQgbXVsdGlwbGUgZG9zZXMgb2YgUlEtMDAwMDAwMTAsIGFuZCB0aGUgY29tcG91bmQncyBlZmZlY3RzIG9uIGdhc3RyaWMgZW1wdHlpbmcgaW4gaGVhbHRoeSBzdWJqZWN0cyIsUmFRdWFsaWEgUGhhcm1hIEluYyxJbnRlcnZlbnRpb25hbCw5NzIzOSwyMDEyLTA2LTAxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEFLLTk1NCw2MDI5MiwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBNYXNzIEJhbGFuY2UsIFBoYXJtYWNva2luZXRpY3MgKFBLKSwgTWV0YWJvbGlzbSBhbmQgRXhjcmV0aW9uIG9mIFRBSy05NTQgQ29udGFpbmluZyBNaWNyb3RyYWNlciAoWzE0Q10tVEFLLTk1NCkgaW4gSGVhbHRoeSBNYWxlIFBhcnRpY2lwYW50cyIsVGFrZWRhIE9uY29sb2d5LEludGVydmVudGlvbmFsLDMzNjczOSwyMDE4LTA0LTMwIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsVEFLLTk1NCw2MDI5MiwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEEgU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIEVmZmVjdCBvZiBIZXBhdGljIEltcGFpcm1lbnQgb24gdGhlIFNpbmdsZS1Eb3NlIFBoYXJtYWNva2luZXRpY3MgKFBLKSBvZiBJbnRyYXZlbm91cyAoSVYpIFRBSy05NTQsVGFrZWRhIFBoYXJtYWNldXRpY2FsIENvIEx0ZCxJbnRlcnZlbnRpb25hbCwzMTIxOTcsMjAxNy0xMS0wOSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsNCxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixQQUZJUDJfbmMxWSxOZXVyb2NvZ25pdGl2ZSBFZmZlY3RpdmVuZXNzIGluIFRyZWF0bWVudCBvZiBGaXJzdC1lcGlzb2RlIE5vbi1hZmZlY3RpdmUgUHN5Y2hvc2lzOiBPbmUteWVhciBGb2xsb3ctdXAsRnVuZGFjaW9uIE1hcnF1ZXMgZGUgVmFsZGVjaWxsYSxJbnRlcnZlbnRpb25hbCwyMzg5MTUsMjAwNS0xMC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hvdGljIGRpc29yZGVyLDI4MixudWxsLCJBIENvbXBhcmF0aXZlLCBNdWx0aWNlbnRlciwgT3Blbi1sYWJlbGVkLCBSYW5kb21pemVkIFN0dWR5IHRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIEludHJhbXVzY3VsYXIgWmlwcmFzaWRvbmUgQ29tcGFyZWQgd2l0aCBJbnRyYW11c2N1bGFyIEhhbG9wZXJpZG9sIGluIHRoZSBUcmVhdG1lbnQgb2YgQWN1dGUgUHN5Y2hvc2lzIixTdGVya2ZvbnRlaW4gSG9zcGl0YWwsSW50ZXJ2ZW50aW9uYWwsMTA5NTcxLDIwMDAtMTItMzEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMyxQaGFzZSAzIENsaW5pY2FsLEMzLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsTU9NRU5UVU0sTWF4aW1pemluZyBPdXRjb21lcyBpbiBUcmVhdGluZyBBY3V0ZSBNaWdyYWluZSxBeHNvbWUgVGhlcmFwZXV0aWNzIEluYyxJbnRlcnZlbnRpb25hbCwzMjA4ODgsMjAxOS0wMy0wNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxVbmRpZmZlcmVudGlhdGVkIHNjaGl6b3BocmVuaWEsMTkzMyxudWxsLFNhZmV0eSBhbmQgRWZmaWNhY3kgb2YgQ2FyaXByYXppbmUgaW4gUGF0aWVudHMgV2l0aCBTY2hpem9waHJlbmlhLEZvcmVzdCBMYWJvcmF0b3JpZXMgSW5jLEludGVydmVudGlvbmFsLDY1NjgyLDIwMTAtMDQtMjMgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb2NhaW5lIGFkZGljdGlvbiw3NixudWxsLCJBIERvdWJsZS1CbGluZCwgQ29udHJvbGxlZCBTdHVkeSBvZiBBcmlwaXByYXpvbGUgaW4gQ28tTW9yYmlkIFNjaGl6b3BocmVuaWEgYW5kIENvY2FpbmUgRGVwZW5kZW5jZSIsRGVudmVyIFJlc2VhcmNoIEluc3RpdHV0ZSxJbnRlcnZlbnRpb25hbCwyMzQ3OSwyMDA4LTA4LTMxIDAwOjAwOjAwLFJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQXV0aXNtLDQyMyxudWxsLFppcHJhc2lkb25lIGluIENoaWxkcmVuIFdpdGggQXV0aXNtOiBBIFBpbG90IFN0dWR5LERyZXhlbCBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDQzNTk2LDIwMDItMDItMjggMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDQsUGhhc2UgNCBDbGluaWNhbCxDNCxsdXJhc2lkb25lLDg3MzIsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBJSSBkaXNvcmRlciwzMTE1LG51bGwsMThGLURPUEEgUEVUIHRvIEVsdWNpZGF0ZSB0aGUgQW50aWRlcHJlc3NhbnQgTWVjaGFuaXNtIG9mIEx1cmFzaWRvbmUgaW4gQmlwb2xhciBEaXNvcmRlcixOZXcgWW9yayBTdGF0ZSBQc3ljaGlhdHJpYyBJbnN0aXR1dGUsSW50ZXJ2ZW50aW9uYWwsMzc1OTIzLDIwMTktMDItMDcgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIsc3VtYXRyaXB0YW4sNDQ5MSwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGhvdXQgYXVyYSwzNjgwLG51bGwsIkEgRG91YmxlLWJsaW5kLCBQbGFjZWJvLWNvbnRyb2xsZWQsIFBhcmFsbGVsIFN0dWR5IFRvIEV2YWx1YXRlIHRoZSBTYWZldHkgYW5kIEVmZmljYWN5IG9mIDI1LCA1MCBhbmQgMTAwIG1nIFN1bWF0cmlwdGFuIGFuZCBQbGFjZWJvIGluIFN1YmplY3RzIHdpdGggQWN1dGUgTWlncmFpbmUgQXR0YWNrcyIsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCwyMDIxNzcsMTk4OS0wOS0wMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHN1bWF0cmlwdGFuLDQ0OTEsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aG91dCBhdXJhLDM2ODAsbnVsbCxBbiBPcGVuLWxhYmVsIFN0dWR5IE9mIFN1bWF0cmlwdGFuIEluIFRyZWF0aW5nIE1pZ3JhaW5lIFdpdGggVW5pbGF0ZXJhbCBDcmFuaWFsIEF1dG9ub21pYyBTeW1wdG9tcyxVbml2ZXJzaXRhIGRlZ2xpIFN0dWRpIGRpIFJvbWEgTGEgU2FwaWVuemEsSW50ZXJ2ZW50aW9uYWwsMTEzOTI5LDIwMDMtMDQtMzAgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMixQaGFzZSAxIENsaW5pY2FsLEMxLCJkaWh5ZHJvZXJnb3RhbWluZSAobWlncmFpbmUsIFRlbXBvLWluaGFsZWQvb3JhbCksIEFsbGVyZ2FuIiwzOTQ5MSwiU2FmZXR5LFBoYXJtYWNva2luZXRpY3MsUGhhcm1hY29keW5hbWljcyIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlFUIEludGVydmFscyBTdHVkeSB0byBDb21wYXJlIHRoZSBBY3V0ZSBFZmZlY3RzIG9mIE9yYWxseSBJbmhhbGVkIERpaHlkcm9lcmdvdGFtaW5lIChESEUpLCBPcmFsIE1veGlmbG94YWNpbiwgYW5kIFBsYWNlYm8iLCJBbGxlcmdhbiBJbmMsIE1BUCBQaGFybWFjZXV0aWNhbHMgSW5jIixJbnRlcnZlbnRpb25hbCw2OTk2MywyMDEwLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxKyxQaGFzZSAxIENsaW5pY2FsLEMxLG5hcmF0cmlwdGFuLDMyMzUsIlNhZmV0eSxQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLCJBIHBoYXNlIEksIHJhbmRvbWl6ZWQsIGRvdWJsZS1ibGluZCwgZm91ci13YXkgY3Jvc3NvdmVyLCBpbnBhdGllbnQgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIHNhZmV0eSwgcGhhcm1hY29keW5hbWljcyBhbmQgcGhhcm1hY29raW5ldGljcyBvZiBuYXJhdHJpcHRhbiBhbmQgZGloeWRyb2VyZ290YW1pbmUgaW4gaGVhbHRoeSB2b2x1bnRlZXJzIixHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDc3MTMyLDE5OTUtMDktMTYgMDA6MDA6MDAsQ29tcGxldGVkDQpKYXBhbmVzZSBBbmNlc3RyeSwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsUGhhcm1hY29raW5ldGljcyxZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxQc3ljaGlhdHJpYyBkaXNvcmRlciwyMDcsbnVsbCwiQSByYW5kb21pemVkLCBwaGFybWFjb2tpbmV0aWMgc3R1ZHkgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBlc2NpdGFsb3ByYW0gb24gcGxhc21hIGNvbmNlbnRyYXRpb25zIG9mIGFyaXBpcHJhem9sZSBhbmQgaXRzIGFjdGl2ZSBtZXRhYm9saXRlLCBkZWh5ZHJvYXJpcGlwcmF6b2xlLCBpbiBKYXBhbmVzZSBwc3ljaGlhdHJpYyBwYXRpZW50cyIsVW5pdmVyc2l0eSBvZiB0aGUgUnl1a3l1cyxJbnRlcnZlbnRpb25hbCwyMzg1MjQsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYXJpcGlwcmF6b2xlLDc3ODEsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsUHN5Y2hpYXRyaWMgZGlzb3JkZXIsMjA3LG51bGwsQSBSZXNlYXJjaCBvZiBBcmlwaXByYXpvbGUgVHJlYXRtZW50IGZvciB0aGUgQmVoYXZpb3JhbCBTeW1wdG9tcyBpbiBTdWJqZWN0cyBXaXRoIFBlcnZhc2l2ZSBEZXZlbG9wbWVudGFsIERpc29yZGVycywiRmFjdWx0eSBvZiBNZWRpY2FsIFNjaWVuY2VzLCBVbml2ZXJzaXR5IG9mIEZ1a3VpIixJbnRlcnZlbnRpb25hbCwxMTkwNTgsMjAxMS0xMC0wMSAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2Ugbm90IHNwZWNpZmllZCxOUyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsR2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciwxOTM3LG51bGwsIkEgcGxhY2Viby1jb250cm9sbGVkLCBlZmZpY2FjeSBzdHVkeSBvZiB2ZW5sYWZheGluZSBYUiwgY29tcGFyZWQgdG8gYnVzcGlyb25lIGluIHBhdGllbnRzIHdpdGggZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlciIsV3lldGgsSW50ZXJ2ZW50aW9uYWwsNTA2NzAsMTk5OC0wNy0xNSAwMDowMDowMCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwyLFBoYXNlIDIgQ2xpbmljYWwsQzIsYnVzcGlyb25lLDQ0MzY0LCJTYWZldHksRWZmaWNhY3kiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEh5cG9hY3RpdmUgc2V4dWFsIGRlc2lyZSBkaXNvcmRlciwyMDM5LG51bGwsIkEgRG91YmxlLUJsaW5kLCBSYW5kb21pemVkLCBQbGFjZWJvLUNvbnRyb2xsZWQsIFByb29mLW9mLUNvbmNlcHQgU3R1ZHkgdG8gSW52ZXN0aWdhdGUgdGhlIERpZmZlcmVuY2VzIEJldHdlZW4gdGhlIENvbWJpbmVkIEFkbWluaXN0cmF0aW9uIG9mIDAuNSBtZyBTdWJsaW5ndWFsIFRlc3Rvc3Rlcm9uZSBhbmQgMTAgbWcgQnVzcGlyb25lIGFuZCAxMCBtZyBCdXNwaXJvbmUgQWRtaW5pc3RyYXRpb24gQWxvbmUgaW4gV29tZW4gV2l0aCBIeXBvYWN0aXZlIFNleHVhbCBEZXNpcmUgRGlzb3JkZXIiLEVtb3Rpb25hbCBCcmFpbiBCVixJbnRlcnZlbnRpb25hbCwxMTgwMDEsMjAxMi0wOC0yNCAwMDowMDowMCxSZWNydWl0aW5nDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxlbGV0cmlwdGFuLDg3MTUsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsTWlncmFpbmUgd2l0aCBhdXJhLDM2NzksbnVsbCwiQ29tcGFyYXRpdmUgU3R1ZHkgb2YgT3JhbCBFbGV0cmlwdGFuICg0MCBhbmQgODAgbWcpLCBPcmFsIFN1bWF0cmlwdGFuICgyNSBhbmQgNTAgbWcpIGFuZCBQbGFjZWJvIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDE2MTcyMiwxOTk2LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwzLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsemlwcmFzaWRvbmUsMjg2MCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxOb24taW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMsODM3LG51bGwsUGZpemVyL0lWR1RUL1ppcHJhc2lkb25lL09sYW56YXBpbmUsV2FzaGluZ3RvbiBVbml2ZXJzaXR5IGluIFN0IExvdWlzLEludGVydmVudGlvbmFsLDM1ODAsMjAwMC0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHppcHJhc2lkb25lLDI4NjAsU2FmZXR5LFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsQW4gb3BlbiBleHRlbnNpb24gc3R1ZHkgdG8gYXNzZXNzIHRoZSBzYWZldHkgYW5kIHRvbGVyYWJpbGl0eSBvZiBvcmFsIHppcHJhc2lkb25lIGluIHBhdGllbnRzIHdobyBoYXZlIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYSBwcmV2aW91cyB6aXByYXNpZG9uZSBzdHVkeSxQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDg4ODc4LDIwMDItMDUtMTIgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSA0IENsaW5pY2FsLEM0LHppcHJhc2lkb25lLDI4NjAsIlNhZmV0eSxFZmZpY2FjeSIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCwiQSBwaGFzZSBJViwgb3Blbi1sYWJlbCwgbXVsdGljZW50ZXIsIG5vbi1jb21wYXJhdGl2ZSBzdHVkeSB0byBkZXRlcm1pbmUgdGhlIHRvbGVyYWJpbGl0eSwgc2FmZXR5LCBhbmQgZWZmaWNhY3kgb2YgemlwcmFzaWRvbmUgKEdlb2RvbikgaW4gdHJlYXRtZW50IG9mIHN1YmplY3RzIHdpdGggc2NoaXpvcGhyZW5pYSBvciBzY2hpem9hZmZlY3RpdmUgZGlzb3JkZXIgd2hvIHdlcmUgaW5lZmZlY3RpdmVseSB0cmVhdGVkIHdpdGggYW50aXBzeWNob3RpYyBhZ2VudHMiLFBmaXplciBJbmMsSW50ZXJ2ZW50aW9uYWwsODY2ODYsMjAwMi0xMS0xNSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSBub3Qgc3BlY2lmaWVkLE5TLHJpemF0cmlwdGFuLDUzMjgsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBEb3VibGUtYmxpbmQ7IFBsYWNlYm8tY29udHJvbGxlZDsgUmFuZG9taXplZCBzdHVkeSB0byBhc3Nlc3MgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgUml6YXRyaXB0YW4gaW4gaGVhbHRoeSBzdWJqZWN0cyxNZXJjayBSZXNlYXJjaCBMYWJvcmF0b3JpZXMsSW50ZXJ2ZW50aW9uYWwsMTA4NzA3LDIwMDAtMDItMjkgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCkFzaWFuIEFuY2VzdHJ5LDEsUGhhc2UgMSBDbGluaWNhbCxDMSxicmV4cGlwcmF6b2xlLDYyMDAxLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsIlRoZSBQaGFybWFjb2tpbmV0aWNzLCBUb2xlcmFiaWxpdHkgYW5kIFNhZmV0eSBvZiBCcmV4cGlwcmF6b2xlIGluIEhlYWx0aHkgQ2hpbmVzZSBTdWJqZWN0cyIsT3RzdWthIEJlaWppbmcgUmVzZWFyY2ggSW5zdGl0dXRlLEludGVydmVudGlvbmFsLDM1OTI5NywyMDE5LTA0LTA3IDAwOjAwOjAwLE5vIGxvbmdlciByZWNydWl0aW5nDQpudWxsLDMsUGhhc2UgMSBDbGluaWNhbCxDMSxsYXNtaWRpdGFuLDU0ODEyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsTixZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsbnVsbCxudWxsLG51bGwsQSBTdHVkeSBvZiBMYXNtaWRpdGFuIGluIEhlYWx0aHkgUGFydGljaXBhbnRzIFdoZW4gQ28tYWRtaW5pc3RlcmVkIFdpdGggVG9waXJhbWF0ZSxFbGkgTGlsbHkgJiBDbyxJbnRlcnZlbnRpb25hbCwzMTU4NDEsMjAxNy0xMC0xNiAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLG1vc2FwcmlkZSwzNjU4LCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLENvbnN0aXBhdGlvbiw0MDQsbnVsbCxSYW5kb21pemVkIFRyaWFsIG9mIE1vc2FwcmlkZSB2ZXJzdXMgUGxhY2VibyBpbiB0aGUgVHJlYXRtZW50IG9mIENvbnN0aXBhdGlvbi1QcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUsQW1lcmljYW4gVW5pdmVyc2l0eSBvZiBCZWlydXQgTWVkaWNhbCBDZW50ZXIsSW50ZXJ2ZW50aW9uYWwsMjUzMjMsMjAwOC0wOS0zMCAwMDowMDowMCxUZXJtaW5hdGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCxFZmZpY2FjeSxOLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxDb25zdGlwYXRpb24sNDA0LG51bGwsRWZmZWN0IG9mIE1vc2FwcmlkZSBvbiBHdXQgVHJhbnNpdCBpbiBQYXRpZW50cyBXaXRoIENocm9uaWMgQ29uc3RpcGF0aW9uIG9yIENvbnN0aXBhdGVkIElycml0YWJsZSBCb3dlbCBTeW5kcm9tZSBhbmQgSGVhbHRoeSBTdWJqZWN0cyxTZW91bCBOYXRpb25hbCBVbml2ZXJzaXR5IEhvc3BpdGFsLEludGVydmVudGlvbmFsLDIyODQ3NywyMDE1LTA1LTMxIDAwOjAwOjAwLE5vdCB5ZXQgcmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLEVsZWN0cm9hY3VwdW5jdHVyZSBmb3IgdGhlIFRyZWF0bWVudCBvZiBGdW5jdGlvbmFsIENvbnN0aXBhdGlvbixIdWF6aG9uZyBVbml2ZXJzaXR5IG9mIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3ksSW50ZXJ2ZW50aW9uYWwsMTA3MjIzLDIwMTMtMDItMjggMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCw0KyxQaGFzZSAyIENsaW5pY2FsLEMyLGJ1c3Bpcm9uZSw0NDM2NCwiU2FmZXR5LEVmZmljYWN5LFBoYXJtYWNva2luZXRpY3MiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEVmZmVjdHMgb2YgR2luc2VuZyBhbmQgR2lua2dvIG9uIERydWcgRGlzcG9zaXRpb24gaW4gTWFuLE5hdGlvbmFsIENlbnRlciBmb3IgQ29tcGxlbWVudGFyeSBhbmQgQWx0ZXJuYXRpdmUgTWVkaWNpbmUsSW50ZXJ2ZW50aW9uYWwsMTY4MjIzLDIwMDItMDMtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDIsUGhhc2UgMSBDbGluaWNhbCxDMSx2aWxhem9kb25lLDk5NDMsIlNhZmV0eSxFZmZpY2FjeSIsWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2V4dWFsIGR5c2Z1bmN0aW9uLDM3NzQsbnVsbCwiU3R1ZHkgdG8gRXZhbHVhdGUgdGhlIFNleHVhbCBGdW5jdGlvbmluZyBvZiBIZWFsdGh5IEFkdWx0cyBBZnRlciBSZWNlaXZpbmcgVmlsYXpvZG9uZSwgUGFyb3hldGluZSBvciBQbGFjZWJvIixGb3Jlc3QgTGFib3JhdG9yaWVzIEluYyxJbnRlcnZlbnRpb25hbCwxNzkzODQsMjAxNC0wMy0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMissUGhhc2UgMiBDbGluaWNhbCxDMixidXNwaXJvbmUsNDQzNjQsIlNhZmV0eSxFZmZpY2FjeSIsTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQmlwb2xhciBkaXNvcmRlciw2NTMsbnVsbCxTYXhlbmRhIGluIE9iZXNlIG9yIE92ZXJ3ZWlnaHQgUGF0aWVudHMgV2l0aCBTdGFibGUgQmlwb2xhciBEaXNvcmRlciAoSW52ZXN0aWdhdG9yIEluaXRpYXRlZCksVGhlIExpbmRuZXIgQ2VudGVyIG9mIEhPUEUsSW50ZXJ2ZW50aW9uYWwsMjk5MTQzLDIwMTctMDQtMjYgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwyLFBoYXNlIDEgQ2xpbmljYWwsQzEscHJ1Y2Fsb3ByaWRlLDE1NzE2LCJTYWZldHksUGhhcm1hY29raW5ldGljcyxQaGFybWFjb2R5bmFtaWNzIixZLFksUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxHYXN0cm9pbnRlc3RpbmFsIG1vdGlsaXR5IGRpc29yZGVyLDM3OTcsbnVsbCxTYWZldHkvVG9sZXJhYmlsaXR5IGFuZCBQaGFybWFjb2tpbmV0aWNzL1BoYXJtYWNvZHluYW1pY3Mgb2YgWUgtMTI4NTIgQWZ0ZXIgT3JhbCBBZG1pbmlzdHJhdGlvbiBpbiBIZWFsdGh5IE1hbGUgU3ViamVjdHMsWXVoYW4gQ29ycCxJbnRlcnZlbnRpb25hbCwxMzc4MDQsMjAxMy0wOC0zMSAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMixQaGFzZSAyL1BoYXNlIDMgQ2xpbmljYWwsQzIzLCJjeWNsb3NlcmluZSArIGx1cmFzaWRvbmUgKGJpcG9sYXIgZGVwcmVzc2lvbiwgc3VpY2lkYWxpdHkpLCBOZXVyb1J4Iiw5Nzg0NiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxCaXBvbGFyIElJIGRpc29yZGVyLDMxMTUsTUJELE5SWC0xMDEgZm9yIE1vZGVyYXRlIEJpcG9sYXIgRGVwcmVzc2lvbiBhbmQgU3VpY2lkYWwgSWRlYXRpb24sTmV1cm9SeCBJbmMsSW50ZXJ2ZW50aW9uYWwsMzI1MjkxLDIwMTktMDEtMDEgMDA6MDA6MDAsU3RhdHVzIG5vdCBzcGVjaWZpZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLHJlbnphcHJpZGUsNDIxMSxTYWZldHksWSxZLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsQ29uc3RpcGF0aW9uLDQwNCxudWxsLExvbmctVGVybSBTYWZldHkgb2YgUmVuemFwcmlkZSBpbiBXb21lbiBXaXRoIENvbnN0aXBhdGlvbi1QcmVkb21pbmFudCBJcnJpdGFibGUgQm93ZWwgU3luZHJvbWUgKElCUy1DKSxBbGl6eW1lIHBsYyxJbnRlcnZlbnRpb25hbCwxODEzNCwyMDA2LTA0LTMwIDAwOjAwOjAwLFRlcm1pbmF0ZWQNCm51bGwsMSxQaGFzZSAzIENsaW5pY2FsLEMzLCJzdW1hdHJpcHRhbiArIG5hcHJveGVuIHNvZGl1bSwgUGVybml4L09sZCBBUEkgV2luZC1kb3duIiwzMTQ4MiwiU2FmZXR5LEVmZmljYWN5IixZLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxNaWdyYWluZSB3aXRoIGF1cmEsMzY3OSxudWxsLE1pZ3JhaW5lIFN0dWR5IGluIEFkb2xlc2NlbnQgUGF0aWVudHMsR2xheG9TbWl0aEtsaW5lIHBsYyxJbnRlcnZlbnRpb25hbCw0NTY1NCwyMDA4LTEyLTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsInN1bWF0cmlwdGFuICsgbmFwcm94ZW4gc29kaXVtLCBQZXJuaXgvT2xkIEFQSSBXaW5kLWRvd24iLDMxNDgyLCJTYWZldHksRWZmaWNhY3kiLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pZ3JhaW5lIHdpdGggYXVyYSwzNjc5LG51bGwsQSBTdHVkeSBvZiBDb21iaW5hdGlvbiBQcm9kdWN0IChTdW1hdHJpcHRhbiBTdWNjaW5hdGUgYW5kIE5hcHJveGVuIFNvZGl1bSkgaW4gTWlncmFpbmUgU3ViamVjdHMgV2hvIFJlcG9ydCBQb29yIFJlc3BvbnNlIG9yIEludG9sZXJhbmNlIHRvIFNob3J0IEFjdGluZyBUcmlwdGFucyAoU3R1ZHkgMSBvZiAyKSxHbGF4b1NtaXRoS2xpbmUgcGxjLEludGVydmVudGlvbmFsLDE0MDU0LDIwMDYtMTEtMzAgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMyBDbGluaWNhbCxDMyxidXNwaXJvbmUsNDQzNjQsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxTZXJvdG9uaW4gMUEgQWdvbmlzdHMgYW5kIENvZ25pdGlvbiBpbiBTY2hpem9waHJlbmlhLE5vcnRod2VzdGVybiBVbml2ZXJzaXR5LEludGVydmVudGlvbmFsLDM1NzkwLDIwMDMtMDEtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxhcmlwaXByYXpvbGUsNzc4MSxQaGFybWFjb2tpbmV0aWNzLFksTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLE1pb3NpcywyNTkzLG51bGwsQSBzdHVkeSB0byBldmFsdWF0ZSB3aGV0aGVyIGFyaXBpcHJhem9sZSBhZmZlY3RzIHB1cGlsIGNvbnRyYWN0aW9uIGFuZCBpdHMgcmVsYXRpb25zaGlwIHdpdGggcGhhcm1hY29raW5ldGljcyBhbmQgcGhhcm1hY29nZW5ldGljcyBpbiBoZWFsdGh5IHZvbHVudGVlcnMsSG9zcGl0YWwgVW5pdmVyc2l0YXJpbyBkZSBMYSBQcmluY2VzYSxJbnRlcnZlbnRpb25hbCwzNjgxNjIsbnVsbCxTdGF0dXMgbm90IHNwZWNpZmllZA0KbnVsbCwxLFBoYXNlIDIgQ2xpbmljYWwsQzIscmVuemFwcmlkZSw0MjExLCJTYWZldHksRWZmaWNhY3kiLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLEdhc3Ryb3BhcmVzaXMsMjEwMCxudWxsLCJBIHBoYXNlIElJLCAxMi13ZWVrLCBwaXZvdGFsIHRyaWFsIHRvIGlkZW50aWZ5IHRoZSBiZXN0IGRvc2Ugb2YgcmVuemFwcmlkZSBpbiB0aGUgdHJlYXRtZW50IG9mIHBhdGllbnRzIHdpdGggZ2FzdHJvcGFyZXNpcyIsRW5kb0xvZ2ljIExMQyxJbnRlcnZlbnRpb25hbCwzMzk3MDEsbnVsbCxQbGFubmVkDQpudWxsLDIsUGhhc2UgMyBDbGluaWNhbCxDMyxhcmlwaXByYXpvbGUsNzc4MSxFZmZpY2FjeSxOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJcnJpdGFibGUgYm93ZWwgc3luZHJvbWUsMTkyLG51bGwsRWZmZWN0cyBvZiBBcmlwaXByYXpvbGUgb24gSXJyaXRhYmxlIEJvd2VsIFN5bmRyb21lIChJQlMpLFBvdXJzaW5hIEhha2ltIENsaW5pYyxJbnRlcnZlbnRpb25hbCwyOTQ1ODgsMjAxNy0wNC0wNCAwMDowMDowMCxObyBsb25nZXIgcmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIG5vdCBzcGVjaWZpZWQsTlMsYWxtb3RyaXB0YW4sMTA1MjQsRWZmaWNhY3ksWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSHlwZXJ0ZW5zaW9uLDE3OCxudWxsLCJBIGNyb3Nzb3ZlciwgZG91YmxlLWJsaW5kLCBwbGFjZWJvLWNvbnRyb2xsZWQsIHJhbmRvbWl6ZWQgc3R1ZHkgdG8gaW52ZXN0aWdhdGUgdGhlIGNhcmRpb3Zhc2N1bGFyIGVmZmVjdHMgb2YgYWxtb3RyaXB0YW4sIGEgNS1oeWRyb3h5dHJ5cHRhbWluZSAxQi8xRCBhZ29uaXN0LCBpbiB0cmVhdGVkIHBhdGllbnRzIHdpdGggaHlwZXJ0ZW5zaW9uIixQZml6ZXIgSW5jLEludGVydmVudGlvbmFsLDExNDcwNCwyMDAyLTAzLTMxIDAwOjAwOjAwLFN0YXR1cyBub3Qgc3BlY2lmaWVkDQpudWxsLDIsUGhhc2UgMiBDbGluaWNhbCxDMixhcmlwaXByYXpvbGUsNzc4MSwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxPYnNlc3NpdmUgY29tcHVsc2l2ZSBkaXNvcmRlciw0NjgsbnVsbCxUaGUgQ29tcGFyaXNvbiBvZiBBcmlwaXByYXpvbGUgYW5kIFF1ZXRpYXBpbmUgQXVnbWVudGF0aW9uIEJldHdlZW4gU2VsZWN0aXZlIFNlcm90b25pbiBSZXVwdGFrZSBJbmhpYml0b3JzIGluIFJlZnJhY3RvcnkgT2JzZXNzaXZlLUNvbXB1bHNpdmUgRGlzb3JkZXIsTWFzaGhhZCBVbml2ZXJzaXR5IG9mIE1lZGljYWwgU2NpZW5jZXMsSW50ZXJ2ZW50aW9uYWwsMTY5Nzg0LDIwMTMtMDUtMjIgMDA6MDA6MDAsTm8gbG9uZ2VyIHJlY3J1aXRpbmcNCm51bGwsMSxQaGFzZSAyIENsaW5pY2FsLEMyLHZpbGF6b2RvbmUsOTk0MywiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxEcnVnIGRlcGVuZGVuY2UsNTg4LG51bGwsVmlsYXpvZG9uZSBUcmVhdG1lbnQgZm9yIE1hcmlqdWFuYSBEZXBlbmRlbmNlLE1lZGljYWwgVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSxJbnRlcnZlbnRpb25hbCw4NjM3MSwyMDEyLTA4LTMxIDAwOjAwOjAwLENvbXBsZXRlZA0KbnVsbCwxLFBoYXNlIDMgQ2xpbmljYWwsQzMsbW9zYXByaWRlLDM2NTgsRWZmaWNhY3ksTixOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsSWxldXMsMTUxOSxudWxsLE1vdXRoIERpc3NvbHZpbmcgTW9zYXByaWRlIFRhYmxlcyBFbmhhbmNlIFBvc3QgQ2VzYXJlYW4gR3V0IFJlY292ZXJ5LEJlbmhhIFVuaXZlcnNpdHksSW50ZXJ2ZW50aW9uYWwsMzMzNzA4LDIwMTgtMDQtMDEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgNCBDbGluaWNhbCxDNCxtb3NhcHJpZGUsMzY1OCwiU2FmZXR5LEVmZmljYWN5IixOLE4sUEhBU0UgTk9UIFNQRUNJRklFRCxOUyxJbGV1cywxNTE5LElMRVVTLEVmZmVjdCBvZiBNb3NhcHJpZGUgb24gUG9zdG9wZXJhdGl2ZSBJbGV1cyBpbiBQYXRpZW50cyBVbmRlcmdvaW5nIENvbG9yZWN0YWwgU3VyZ2VyeSxIb3NwaXRhbCBJdGFsaWFubyBkZSBCdWVub3MgQWlyZXMsSW50ZXJ2ZW50aW9uYWwsMTcxODM2LDIwMTUtMTItMzEgMDA6MDA6MDAsUmVjcnVpdGluZw0KbnVsbCwxLFBoYXNlIDEgQ2xpbmljYWwsQzEsbHVyYXNpZG9uZSw4NzMyLCJTYWZldHksUGhhcm1hY29raW5ldGljcyIsWSxOLFBIQVNFIE5PVCBTUEVDSUZJRUQsTlMsU2NoaXpvYWZmZWN0aXZlIGRpc29yZGVyLDEyNTcsbnVsbCxMdXJhc2lkb25lIFBlZGlhdHJpYyBQaGFybWFjb2tpbmV0aWNzIFN0dWR5LFN1bm92aW9uIFBoYXJtYWNldXRpY2FscyBJbmMsSW50ZXJ2ZW50aW9uYWwsODg0MDUsMjAxMi0wNi0zMCAwMDowMDowMCxDb21wbGV0ZWQNCm51bGwsMSxQaGFzZSAxIENsaW5pY2FsLEMxLGx1cmFzaWRvbmUsODczMixQaGFybWFjb2tpbmV0aWNzLE4sTixQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLFNjaGl6b2FmZmVjdGl2ZSBkaXNvcmRlciwxMjU3LG51bGwsRWZmZWN0IG9mIENhbG9yaWVzIGFuZCBGYXQgQ29udGVudCBvbiB0aGUgUGhhcm1hY29raW5ldGljcyBvZiBMdXJhc2lkb25lIEhDbCxTdW1pdG9tbyBDaGVtaWNhbCBDbyBMdGQsSW50ZXJ2ZW50aW9uYWwsMTcyODQxLDIwMDktMDUtMzEgMDA6MDA6MDAsQ29tcGxldGVkDQpudWxsLDEsUGhhc2UgMSBDbGluaWNhbCxDMSxGLTE3NDY0LDgxMDk0LCJQaGFybWFjb2tpbmV0aWNzLFBoYXJtYWNvZHluYW1pY3MiLE4sWSxQSEFTRSBOT1QgU1BFQ0lGSUVELE5TLG51bGwsbnVsbCxudWxsLEJyYWluIEltYWdpbmcgU3R1ZHkgb2YgRi0xNzQ2NCxQaWVycmUgRmFicmUgU0EsSW50ZXJ2ZW50aW9uYWwsOTE5ODQsMjAxMi0xMS0zMCAwMDowMDowMCxDb21wbGV0ZWQ="}],"title":"I pass a &quot;operation = trialProgramByAction and name = actionId and value = 1&quot; as parameter to &quot;Analytics_v2_analysisCSV&quot; operation","status":"passed"},{"date":"2019-06-14 23:43:44","substeps":[{"date":"2019-06-14 23:43:44","message":"response in present","status":"passed"}],"title":"check if response is not empty","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2008 R2 6.1 x86","ip":"10.152.84.170","name":"Feature_AnalysisCsvAnalyticsV2","time":"2019-06-14 23:43:27","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"DDAPI_Smoke_RT77"}}]