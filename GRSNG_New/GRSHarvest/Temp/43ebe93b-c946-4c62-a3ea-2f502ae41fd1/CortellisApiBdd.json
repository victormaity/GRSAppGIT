[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"LS-29061_07\")","time":"2019-06-15 01:12:58","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:12:58","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:12:58","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPUFVLENOJmNvdW50cnlEZXB0aD1BVSxDTg=="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = AU,CN&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:00","substeps":[{"date":"2019-06-15 01:13:00","message":"Values in the list match[179, 168, 198, 157, 194, 108, 112, 181, 161, 191, 201, 110, 107, 199, 200, 104, 105, 109, 158, 169, 171, 172, 195, 196, 202, 106, 111, 159, 166, 170, 103, 197]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuc3ViamVjdF9pZCBmcm9tIExTX1NSVi5KUEFfR0xPQkFMX1JFR19DT01QQVJJU09OIGdyYyAgICAgICAgIEpPSU4gTFNfU1JWLlRCTF9TVUJKRUNUSU5TVEFOQ0Ugc3ViICAgICAgICAgT04gZ3JjLnN1YmplY3RfaWQ9c3ViLnN1YmplY3RfaWQgICAgICAgICBKT0lOIExTX1NSVi5KUEFfR01fTUFUUklYX1RFUlJJVE9SWV9EQVRBIG1hdHJpeCAgICAgICAgIE9OIHN1Yi5jb3VudHJ5X2lkPW1hdHJpeC5jb3VudHJ5X2lkICAgICAgICAgV0hFUkUgZ3JjLnByb2R1Y3RfaWQgaW4gKDEsNikgICAgICAgICBBTkQgbWF0cml4LmNvZGUgaW4gKCdBVScsJ0NOJykgICAgIA=="}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual1_id&quot; in json &quot;GlobalRegComparisons.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_07\")","time":"2019-06-15 01:13:00","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:13:00","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:00","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPURaLENOJmNvdW50cnlEZXB0aD1EWixDTg=="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = DZ,CN&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:02","substeps":[{"date":"2019-06-15 01:13:02","message":"Values in the list match[179, 168, 198, 157, 194, 108, 112, 181, 161, 191, 201, 110, 107, 199, 200, 104, 105, 109, 158, 169, 171, 172, 195, 196, 202, 106, 111, 159, 166, 170, 103, 197]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuc3ViamVjdF9pZCBmcm9tIExTX1NSVi5KUEFfR0xPQkFMX1JFR19DT01QQVJJU09OIGdyYyAgICAgICAgIEpPSU4gTFNfU1JWLlRCTF9TVUJKRUNUSU5TVEFOQ0Ugc3ViICAgICAgICAgT04gZ3JjLnN1YmplY3RfaWQ9c3ViLnN1YmplY3RfaWQgICAgICAgICBKT0lOIExTX1NSVi5KUEFfR01fTUFUUklYX1RFUlJJVE9SWV9EQVRBIG1hdHJpeCAgICAgICAgIE9OIHN1Yi5jb3VudHJ5X2lkPW1hdHJpeC5jb3VudHJ5X2lkICAgICAgICAgV0hFUkUgZ3JjLnByb2R1Y3RfaWQgaW4gKDEsNikgICAgICAgICBBTkQgbWF0cml4LmNvZGUgaW4gKCdEWicsJ0NOJykgICAgIA=="}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual2_id&quot; in json &quot;GlobalRegComparisons.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_07\")","time":"2019-06-15 01:13:02","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:13:02","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:02","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUUmY291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUU="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = INT,CA,US,EU,AT,BE,BG,HR,CY,CZ,DK,EE,FI,FR,DE,GR,HU,IS,IR,IT,LV,LT,LU,MT,NL,NO,PL,PT,RO,RU,RS,SK,SI,SP,SE,CH,TR,UA,UK,ASE,AU,CN,HK,IN,ID,JP,MY,NZ,PH,SG,KR,TW,TH,VN,MER,SIC,AR,BR,CL,CO,CR,GT,MX,PA,PE,VE,GCC,DZ,EG,IQ,IL,JO,KE,LB,MA,NG,SA,ZA,TN,AE&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:04","substeps":[{"date":"2019-06-15 01:13:04","message":"Values in the list match[179, 168, 198, 157, 194, 108, 112, 181, 161, 201, 191, 110, 107, 199, 200, 105, 104, 172, 158, 109, 169, 171, 195, 196, 202, 111, 103, 159, 106, 166, 170, 197]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuc3ViamVjdF9pZCBmcm9tIExTX1NSVi5KUEFfR0xPQkFMX1JFR19DT01QQVJJU09OIGdyYyAgICAgICAgIEpPSU4gTFNfU1JWLlRCTF9TVUJKRUNUSU5TVEFOQ0Ugc3ViICAgICAgICAgT04gZ3JjLnN1YmplY3RfaWQ9c3ViLnN1YmplY3RfaWQgICAgICAgICBKT0lOIExTX1NSVi5KUEFfR01fTUFUUklYX1RFUlJJVE9SWV9EQVRBIG1hdHJpeCAgICAgICAgIE9OIHN1Yi5jb3VudHJ5X2lkPW1hdHJpeC5jb3VudHJ5X2lkICAgICAgICAgV0hFUkUgZ3JjLnByb2R1Y3RfaWQgaW4gKDEsNikgICAgICAgICBBTkQgbWF0cml4LmNvZGUgaW4gKCdJTlQnLCdDQScsJ1VTJywnRVUnLCdBVCcsJ0JFJywnQkcnLCdIUicsJ0NZJywnQ1onLCdESycsJ0VFJywnRkknLCdGUicsJ0RFJywnR1InLCdIVScsJ0lTJywnSVInLCdJVCcsJ0xWJywnTFQnLCdMVScsJ01UJywnTkwnLCdOTycsJ1BMJywnUFQnLCdSTycsJ1JVJywnUlMnLCdTSycsJ1NJJywnU1AnLCdTRScsJ0NIJywnVFInLCdVQScsJ1VLJywnQVNFJywnQVUnLCdDTicsJ0hLJywnSU4nLCdJRCcsJ0pQJywnTVknLCdOWicsJ1BIJywnU0cnLCdLUicsJ1RXJywnVEgnLCdWTicsJ01FUicsJ1NJQycsJ0FSJywnQlInLCdDTCcsJ0NPJywnQ1InLCdHVCcsJ01YJywnUEEnLCdQRScsJ1ZFJywnR0NDJywnRFonLCdFRycsJ0lRJywnSUwnLCdKTycsJ0tFJywnTEInLCdNQScsJ05HJywnU0EnLCdaQScsJ1ROJywnQUUnKSAgICAg"}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual3_id&quot; in json &quot;GlobalRegComparisons.id&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_08\")","time":"2019-06-15 01:13:04","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:13:04","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:04","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPUFVLENOJmNvdW50cnlEZXB0aD1BVSxDTg=="},{"mime":"TXT","content":"eyJHbG9iYWxSZWdDb21wYXJpc29ucyI6W3siaWQiOjE1OCwiVGl0bGUiOiJCaW9zaW1pbGFyIFByb2R1Y3RzIiwiU2VjdGlvbnMiOiJMZWdhbCBEZWZpbml0aW9ucyBhbmQgTWFya2V0aW5nIFJlcXVpcmVtZW50cyIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IHByZXNlbnRzIHRoZSBjdXJyZW50IGxlZ2lzbGF0aXZlIGFuZC9vciByZWd1bGF0b3J5IGZyYW1ld29yayByZWxhdGVkIHRvIGJpb3NpbWlsYXIgbWVkaWNpbmFsIHByb2R1Y3RzICB3b3JsZHdpZGUuIEJlY2F1c2UgJ2Jpb3NpbWlsYXInIHRlcm1pbm9sb2d5IHZhcmllcyBhY3Jvc3MgY291bnRyaWVzLCB0aGlzIHN1YmplY3QgcHJvdmlkZXMgdGhlIGxvY2FsIHRlcm0gYW5kIGRlZmluaXRpb24gb2YgYmlvc2ltaWxhciBtZWRpY2luYWwgcHJvZHVjdCBhcyB3ZWxsIGFzIHJlZmVyZW5jZSBwcm9kdWN0IHRvIGJlIHVzZWQgZm9yIHRoZSBjb21wYXJhYmlsaXR5IGV4ZXJjaXNlLiBUaGVzZSBkZWZpbml0aW9ucyBhcmUgaW4gRW5nbGlzaCwgYXMgcGVyIG9mZmljaWFsIHRleHRzLCBvciBpbiB0aGUgbG9jYWwgbmF0aW9uYWwgbGFuZ3VhZ2UgYnkgZGVmYXVsdC4gPGJyLz48YnIvPkFiYnJldmlhdGlvbnM6IEFCTjogQXVzdHJhbGlhIEJpb2xvZ2ljYWwgTnVtYmVyOyBBTlZJU0E6IEFnZW5jaWEgTmFjaW9uYWwgZGUgVmlnaWxhbmNpYSBTYW5pdGFyaWEgKE5hdGlvbmFsIEhlYWx0aCBTdXJ2ZWlsbGFuY2UgQWdlbmN5KTsgQ0RTQ086IENlbnRyYWwgRHJ1Z3MgU3RhbmRhcmQgQ29udHJvbCBPcmdhbml6YXRpb247IERDR0k6IERydWdzIENvbnRyb2xsZXIgR2VuZXJhbCBvZiBJbmRpYTsgRU1FQTogRXVyb3BlYW4gTWVkaWNpbmVzIEFnZW5jeTsgRVU6IEV1cm9wZWFuIFVuaW9uOyBGREE6IEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb247IElOTjogSW50ZXJuYXRpb25hbCBOb25wcm9wcmlldGFyeSBOYW1lOyBKQVpNUDogSmF2bmEgQWdlbmNpamEgUmVwdWJsaWtlIFNsb3ZlbmlqZSB6YSBaZHJhdmlsYSBpbiBNZWRpY2luc2tlIFByaXBvbW9ja2UgKEFnZW5jeSBmb3IgTWVkaWNpbmFsIFByb2R1Y3RzIGFuZCBNZWRpY2FsIERldmljZXMgb2YgdGhlIFJlcHVibGljIG9mIFNsb3ZlbmlhKTsgTW9IOiBNaW5pc3RyeSBvZiBIZWFsdGg7IE5CRTogTmV3IEJpb2xvZ2ljYWwgRW50aXR5OyBOQ0U6IE5ldyBDaGVtaWNhbCBFbnRpdHk7IFNCTVA6IFNpbWlsYXIgQmlvbG9naWNhbCBNZWRpY2luYWwgUHJvZHVjdDsgU0ZEQTogU2F1ZGkgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgVEdBOiBUaGVyYXBldXRpYyBHb29kcyBBZG1pbmlzdHJhdGlvbjsgV0hPOiBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uLiIsIk51bWJlciI6MTA5MjM2fSx7ImlkIjoxNjYsIlRpdGxlIjoiR2VuZXJpYyBQcm9kdWN0cyIsIlNlY3Rpb25zIjoiTGVnYWwgRGVmaW5pdGlvbnMgYW5kIE1hcmtldGluZyBSZXF1aXJlbWVudHMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBmb2N1c2VzIG9uIGdlbmVyaWMgbWVkaWNpbmFsIHByb2R1Y3RzLiBJdCBwcm92aWRlcyB0aGUgbG9jYWwgZGVmaW5pdGlvbiBvZiBnZW5lcmljIGFuZCByZWZlcmVuY2UgbWVkaWNpbmFsIHByb2R1Y3RzIChvciBlcXVpdmFsZW50IGV4cHJlc3Npb24gaW4gQ291bnRyeSkuIFdpdGggcmVzcGVjdCB0byByZWZlcmVuY2UgbWVkaWNpbmFsIHByb2R1Y3RzLCDCoGl0IHBvaW50cyBvdXQgd2hldGhlciBpdCBuZWVkcyB0byBiZSBhIGxvY2FsbHkgYXBwcm92ZWQgcHJvZHVjdCBvciBpZiByZWZlcmVuY2UgdG8gYWJyb2FkIHByb2R1Y3RzIGNhbiBiZSBtYWRlLiBJdCBpbnRyb2R1Y2VzIHRoZSBjb25jZXB0IG9mIGludGVyY2hhbmdlYWJpbGl0eSBhbmQgYmlvZXF1aXZhbGVuY2UuIEl0IGRlc2NyaWJlcyB3aGljaCBpcyB0aGUgbG9jYWwgbWVkaWNhbCBwcmFjdGljZSB3aXRoIHJlc3BlY3QgdG8gwqB0aGUgZ2VuZXJpYyBzdWJzdGl0dXRpb24gYW5kIHByZXNjcmlwdGlvbi4gSXQgZGVzY3JpYmVzIHBhdGVudCBhbmQgZGF0YSBwcm90ZWN0aW9uIHRlcm1zIGFwcGxpY2FibGUgaW4gdGhlIENvdW50cnkuIEl0IGJyaWVmbHkgb3V0bGluZXMgZG9zc2llciByZXF1aXJlbWVudHMgYW5kIHJldmlldyB0aW1lbGluZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhcHByb3ZhbCBvZiBhIGdlbmVyaWMgcHJvZHVjdC4gTG5rcyB0byBsb2NhbCBwb2xpY2llcywgZ3VpZGVsaW5lcywgYW5kIGFueSByZWxldmFudCB0ZXh0IG9uIGdlbmVyaWNzIGFyZSBpbmNsdWRlZC48YnIvPkFiYnJldmlhdGlvbnM6IEFDVEQ6IEFTRUFOIENvbW1vbiBUZWNobmljYWwgRG9jdW1lbnQ7IEFDVFI6IEFTRUFOIENvbW1vbiBUZWNobmljYWwgUmVndWxhdGlvbnM7IEFOREE6IEFiYnJldmlhdGVkIE5ldyBEcnVnIEFwcHJvdmFsOyBBUEk6IEFjdGl2ZSBQaGFybWFjZXV0aWNhbCBJbmdyZWRpZW50OyBBUkdQTTogQXVzdHJhbGlhbiBSZWd1bGF0b3J5IEd1aWRlbGluZXMgZm9yIFByZXNjcmlwdGlvbiBNZWRpY2luZXM7IERDR0k6IERydWcgQ29udHJvbGxlciBHZW5lcmFsIG9mIEluZGlhOyBESUdFTUlEOiBEaXJlY2Npb24gR2VuZXJhbCBkZSBNZWRpY2FtZW50b3MsIEluc3Vtb3MgeSBEcm9nYXM7IEVNQTogRXVyb3BlYW4gTWVkaWNpbmVzIEFnZW5jeTsgRVU6IEV1cm9wZWFuIFVuaW9uOyBGREE6IEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb247IEZJTUVBOiBGaW5uaXNoIE1lZGljaW5lcyBBZ2VuY3k7IEhTQTogSGVhbHRoIFNjaWVuY2VzIEF1dGhvcml0eTsgSU5OOiBJbnRlcm5hdGlvbmFsIE5vbi1wcm9wcmlldGFyeSBOYW1lOyBLRkRBOiBLb3JlYW4gRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgTUE6IE1hcmtldGluZyBBdXRob3JpemF0aW9uOyBNQUE6IE1hcmtldGluZyBBdXRob3JpemF0aW9uIEFwcGxpY2F0aW9uOyBNQ0M6IE1lZGljaW5lcyBDb250cm9sIENvdW5jaWw7IE1ITFc6IE1pbmlzdHJ5IG9mIEhlYWx0aCwgTGFib3IgYW5kIFdlbGZhcmU7IE1vSDogTWluaXN0cnkgb2YgSGVhbHRoOyBNUEE6IE1lZGljYWwgUHJvZHVjdHMgQWdlbmN5OyBOQURGQzogTmF0aW9uYWwgQWdlbmN5IG9mIERydWcgYW5kIEZvb2QgQ29udHJvbDsgTkNFOiBOZXcgQ2hlbWljYWwgRW50aXR5OyBOWlJQOiBOZXcgWmVhbGFuZCBSZWZlcmVuY2UgUHJvZHVjdDsgT05MUzogUnVzc2lhbiBBZGRpdGlvbmFsIERydWcgU3VwcGx5IHByb2dyYW07IE9UQzogT3Zlci1UaGUtQ291bnRlcjsgUEFBOiBQaGFybWFjZXV0aWNhbCBBZmZhaXJzIEFjdDsgUkxEOiBSZWZlcmVuY2UgTGlzdGVkIERydWc7IFBBTDogUGhhcm1hY2V1dGljYWwgQWZmYWlycyBMYXc7IFJNUDogUmVmZXJlbmNlIE1lZGljaW5hbCBQcm9kdWN0OyBTRkRBIDogU3RhdGUgRm9vZCAmIERydWcgQWRtaW5pc3RyYXRpb247IFNSUDogU2luZ2Fwb3JlIFJlZmVyZW5jZSBQcm9kdWN0OyBUUklQUzogVHJhZGUtUmVsYXRlZCBhc3BlY3RzIG9mIEludGVsbGVjdHVhbCBQcm9wZXJ0eSByaWdodHMuIiwiTnVtYmVyIjoxMjUyMzN9LHsiaWQiOjE5MSwiVGl0bGUiOiJNZWRpY2FsIERldmljZXMgYW5kIElWRHMgTGF3cyBhbmQgUmVndWxhdGlvbnMiLCJTZWN0aW9ucyI6IkxlZ2FsIERlZmluaXRpb25zIGFuZCBNYXJrZXRpbmcgUmVxdWlyZW1lbnRzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgZGlzcGxheXMgdGhlIG1haW4gbGF3cyBhbmQgcmVndWxhdGlvbnMgc2V0dGluZyB0aGUgcmVxdWlyZW1lbnRzIHJlbGF0ZWQgdG8gTWVkaWNhbCBEZXZpY2VzIGFuZCBJVkRzIGluIGVhY2ggY291bnRyeS48YnIvPkxpbmtzIHRvIHRoZSByZWZlcmVuY2UgZG9jdW1lbnRzIGZvciBlYWNoIGxhdywgZGVjcmVlIGFuZCByZWd1bGF0aW9uIGFyZSBpbmNsdWRlZC4iLCJOdW1iZXIiOjI0NzAzMH0seyJpZCI6MTk0LCJUaXRsZSI6Ik1lZGljYWwgRGV2aWNlcyBhbmQgSVZEcyBQcm9kdWN0IENsYXNzaWZpY2F0aW9ucyIsIlNlY3Rpb25zIjoiTGVnYWwgRGVmaW5pdGlvbnMgYW5kIE1hcmtldGluZyBSZXF1aXJlbWVudHMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBwcmVzZW50cyB0aGUgY3VycmVudCBNRCBhbmQgSVZEIHByb2R1Y3QgY2xhc3NpZmljYXRpb24gc3lzdGVtcy4gRGlmZmVyZW50IE1EIGFuZCBJVkQgcHJvZHVjdCBjbGFzc2VzLCBjcml0ZXJpYSBvZiBjbGFzc2lmaWNhdGlvbiBhbmQgZ3VpZGVsaW5lcyB0byBiZSB1c2VkIHRvIGRldGVybWluYXRlIHByb2R1Y3QgY2xhc3MgYXJlIHByb3ZpZGVkOyBhcyB3ZWxsIGFzIHRoZSBwb3NzaWJpbGl0eSBvZiBjbGFzc2lmaWNhdGlvbiBjaGFuZ2VzIGFuZCBhY2NlcHRhYmlsaXR5IG9mIG90aGVyIGNsYXNzaWZpY2F0aW9uIHN5c3RlbXMuPGJyLz5MaW5rcyB0byB0aGUgUmVndWxhdGlvbnMgYW5kIEd1aWRlbGluZXMgYXJlIGluY2x1ZGVkLiIsIk51bWJlciI6MjY4MjcwfSx7ImlkIjoxMDMsIlRpdGxlIjoiUGhhcm1hY2V1dGljYWwgTGF3cyBhbmQgUmVndWxhdGlvbnMiLCJTZWN0aW9ucyI6IkxlZ2FsIERlZmluaXRpb25zIGFuZCBNYXJrZXRpbmcgUmVxdWlyZW1lbnRzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgZGlzcGxheXMgdGhlIG1haW4gbGF3cyBhbmQgcmVndWxhdGlvbnMgc2V0dGluZyB0aGUgcmVxdWlyZW1lbnRzIHJlbGF0ZWQgdG8gbWVkaWNpbmFsIHByb2R1Y3RzIGluIGVhY2ggY291bnRyeS48YnIvPkxpbmtzIHRvIHRoZSByZWZlcmVuY2UgZG9jdW1lbnRzIGZvciBlYWNoIGxhdywgZGVjcmVlLCByZWd1bGF0aW9uIGFuZCB0byB0aGUgUmVndWxhdG9yeSBTdW1tYXJpZXMgb24gXCJMZWdhbCBEZWZpbml0aW9ucyBhbmQgTWFya2V0aW5nIFJlcXVpcmVtZW50c1wiIGFyZSBpbmNsdWRlZC4iLCJOdW1iZXIiOjk2NjIwfSx7ImlkIjoxNTksIlRpdGxlIjoiUGhhcm1hY29wb2VpYXMiLCJTZWN0aW9ucyI6IkxlZ2FsIERlZmluaXRpb25zIGFuZCBNYXJrZXRpbmcgUmVxdWlyZW1lbnRzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2YgbmF0aW9uYWwgcGhhcm1hY29wb2VpYXMsIHRoZWlyIGxhdGVzdCBlZGl0aW9uLCBsYW5ndWFnZXMsIGFuZCBzcGVjaWZpZXMgd2hpY2ggZm9yZWlnbiBwaGFybWFjb3BvZWlhcyBhcmUgYWNjZXB0ZWQgYnkgdGhlIHJlZ3VsYXRvcnkgYXV0aG9yaXRpZXMgaW4gZWFjaCBjb3VudHJ5LiBMaW5rcyB0byBvZmZpY2lhbCB3ZWJzaXRlcyBkZWRpY2F0ZWQgdG8gbG9jYWwgcGhhcm1hY29wb2VpYXMgYW5kIHJlbGV2YW50IHB1YmxpY2F0aW9ucyBhcmUgcHJvdmlkZWQuIiwiTnVtYmVyIjoxMTA4Nzd9LHsiaWQiOjE5OCwiVGl0bGUiOiJSZWd1bGF0b3J5IEJvZGllcyIsIlNlY3Rpb25zIjoiQXV0aG9yaXRpZXMgYW5kIE9yZ2FuaXphdGlvbnMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBwcm92aWRlcyBiYXNpYyBpbmZvcm1hdGlvbiBvbiBIZWFsdGggUmVndWxhdGlvbiBBdXRob3JpdGllczogdGhlIG5hbWVzIGFuZCB3ZWJzaXRlcyBvZiBlYWNoIGNvdW50cnkncyBSZWd1bGF0b3J5IEF1dGhvcml0eSBhbmQgTWluaXN0cnkgb2YgSGVhbHRoLiA8YnIvPkl0IGFsc28gc3RhdGVzIHRoZSBhdmFpbGFiaWxpdHkgYW5kIGNvbXBldGVuY2llcyBvZiBOb3RpZmllZCBCb2RpZXMgKG9yIG90aGVyIFJlZ3VsYXRvcnkgQm9kaWVzKSBpbiB0aGUgY291bnRyeS4gPGJyLz5MaW5rcyB0byByZWxhdGVkIFJlZ3VsYXRvcnkgU3VtbWFyeSBkb2N1bWVudHMgYXJlIHByb3ZpZGVkLiIsIk51bWJlciI6Mjc3NzM5fSx7ImlkIjoxMDksIlRpdGxlIjoiQ29tbW9uIFRlY2huaWNhbCBEb2N1bWVudCAoQ1REKSAtIGVsZWN0cm9uaWMgQ29tbW9uIFRlY2huaWNhbCBEb2N1bWVudCAoZUNURCkgQWNjZXB0YWJpbGl0eSIsIlNlY3Rpb25zIjoiRm9ybWF0IGFuZCBDb250ZW50IG9mIEFwcGxpY2F0aW9ucyIsIkFic3RyYWN0IjoiVGhlIENURCBhbmQgZUNURCBmb3JtYXRzIHByb3ZpZGUgc3RhbmRhcmQgZG9jdW1lbnRzIHdpdGggY29tbW9uIGVsZW1lbnRzIHRvIHN1cHBvcnQgZHJ1ZyBtYXJrZXRpbmcgYXBwbGljYXRpb25zIGluIHRoZSB0aHJlZSBJQ0ggcmVnaW9ucy4gQWx0aG91Z2ggY291bnRyaWVzIGJleW9uZCB0aGUgVVMsIEphcGFuIGFuZCBFdXJvcGVhbiBVbmlvbiBhcmUgYWNjZXB0aW5nIHJlZ3VsYXRvcnkgaW5mb3JtYXRpb24gaW4gdGhlIENURC9lQ1REIGZvcm1hdCB0aGVyZSBhcmUgdXN1YWxseSBjb3VudHJ5LXNwZWNpZmljIHJlcXVpcmVtZW50cyB0aGF0IHNob3VsZCBiZSBmb2xsb3dlZC4gPGJyLz5UaGlzIHN1YmplY3QgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gYWNjZXB0YWJpbGl0eSBzdGF0dXMgZm9yIGJvdGggQ1REIGFuZCBlQ1REIHN1Ym1pc3Npb25zLjxici8+SXQgaGlnaGxpZ2h0cyByZWd1bGF0b3J5IGF1dGhvcml0aWVzIGFjY2VwdGluZyBvbmxpbmUgc3VibWlzc2lvbnMgdmlhIHRoZSBpbnRlcm5ldCBvciBzcGVjaWZpYyB3ZWIgcG9ydGFscywgdGhvc2UgcmVxdWlyaW5nIENEL0RWRHMgYW5kIHRob3NlIHN0aWxsIGFza2luZyBmb3IgcGFwZXIgZG9jdW1lbnRhdGlvbiBhcyBhIHN1cHBsZW1lbnQgb3IgYSByZXBsYWNlbWVudCB0byBhbiBlbGVjdHJvbmljIHN1Ym1pc3Npb24uIDxici8+TGlua3MgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcmllcyBhbmQgcmVmZXJlbmNlIGRvY3VtZW50cyBhcmUgaW5jbHVkZWQsIHdpdGggYSBmb2N1cyBvbiB2YWxpZGF0aW9uIGNyaXRlcmlhIHJlcXVpcmVtZW50cyBmb3IgZUNURCBvciBOZWVTIHN1Ym1pc3Npb25zLjxici8+Tm90ZSB0aGF0IGZvciBFVSBtZW1iZXIgc3RhdGVzLCB0aGUgcmVxdWlyZW1lbnRzIHNob3duIGluIHRoaXMgdGFibGUgYXJlIHJlc3RyaWN0ZWQgdG8gbmF0aW9uYWwgcHJvY2VkdXJlcy48YnIvPjxici8+QWJicmV2aWF0aW9uczogQUNURDogQVNFQU4gQ29tbW9uIFRlY2huaWNhbCBEb3NzaWVyOyBBTk1BVDogQWRtaW5pc3RyYWNpw7NuIE5hY2lvbmFsIGRlIE1lZGljYW1lbnRvcywgQWxpbWVudG9zIHkgVGVjbm9sb2fDrWEgTcOpZGljYSAoTmF0aW9uYWwgQWRtaW5pc3RyYXRpb24gb2YgRHJ1Z3MsIEZvb2RzIGFuZCBNZWRpY2FsIERldmljZXMpOyBBTlNNOiBBZ2VuY2UgTmF0aW9uYWxlIGRlIFPDqWN1cml0w6kgZHUgTcOpZGljYW1lbnQgZXQgZGVzIFByb2R1aXRzIGRlIFNhbnTDqSAoTmF0aW9uYWwgQWdlbmN5IGZvciBNZWRpY2luZXMgYW5kIEhlYWx0aCBQcm9kdWN0cyBTYWZldHkpOyBBTlZJU0E6IEFnw6puY2lhIE5hY2lvbmFsIGRlIFZpZ2lsw6JuY2lhIFNhbml0w6FyaWEgKE5hdGlvbmFsIEhlYWx0aCBTdXJ2ZWlsbGFuY2UgQWdlbmN5KTsgQlBGSzogQmlybyBQZW5nYXdhbGFuIEZhcm1hc2V1dGlrYWwgS2ViYW5nc2FhbiAoTmF0aW9uYWwgUGhhcm1hY2V1dGljYWwgQ29udHJvbCBCdXJlYXUpOyBDREU6IENlbnRlciBmb3IgRHJ1ZyBFdmFsdWF0aW9uOyBDREVSOiBDZW50ZXIgZm9yIERydWcgRXZhbHVhdGlvbiBhbmQgUmVzZWFyY2g7IENGREE6IENoaW5hIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb247IENITVA6IENvbW1pdHRlZSBmb3IgTWVkaWNpbmFsIFByb2R1Y3RzIGZvciBIdW1hbiBVc2U7IENNQzogQ2hlbWlzdHJ5LCBNYW51ZmFjdHVyaW5nIGFuZCBDb250cm9sOyBDT0ZFUFJJUzogQ29taXNpw7NuIEZlZGVyYWwgcGFyYSBsYSBQcm90ZWNjacOzbiBjb250cmEgUmllc2dvcyBTYW5pdGFyaW9zIChGZWRlcmFsIENvbW1pc3Npb24gZm9yIFByb3RlY3Rpb24gYWdhaW5zdCBIZWFsdGggUmlza3M7IENURDogQ29tbW9uIFRlY2huaWNhbCBEb2N1bWVudDsgRENQOiBEZWNlbnRyYWxpc2VkIFByb2NlZHVyZTsgRENBOiBEcnVnIENvbnRyb2wgQXV0aG9yaXR5OyBESUdFTUlEOiBEaXJlY2Npw7NuIEdlbmVyYWwgZGUgTWVkaWNhbWVudG9zLCBJbnN1bW9zIHkgRHJvZ2FzIChHZW5lcmFsIERpcmVjdG9yYXRlIG9mIE1lZGljaW5lcywgU3VwcGxpZXMgYW5kIERydWdzKTsgRE9IOiBEZXBhcnRtZW50IG9mIEhlYWx0aDsgRFBNOiBEaXJlY3Rpb24gZGUgbGEgUGhhcm1hY2llIGV0IGR1IE3DqWRpY2FtZW50IChEaXJlY3RvcmF0ZSBvZiBQaGFybWFjeSBhbmQgTWVkaWNpbmVzKTsgZUNURDogZWxlY3Ryb25pYyBDb21tb24gdGVjaG5pY2FsIERvY3VtZW50OyBFTUE6IEV1cm9wZWFuIE1lZGljaW5lcyBBZ2VuY3k7IEZEQTogRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgR0lDT05BOiBHZXN0acOzbiBkZSBsYSBJbmZvcm1hY2nDs24gZGUgbG9zIFByb2Nlc29zIGRlIENvbnRyb2wgTmFjaW9uYWwgKE1hbmFnZW1lbnQgU3lzdGVtIG9mIE5hdGlvbmFsIENvbnRyb2wgSW5mb3JtYXRpb24pOyBIU0E6IEhlYWx0aCBTY2llbmNlcyBBdXRob3JpdHk7IElDSDogSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIEhhcm1vbml6YXRpb247IElOVklNQTogSW5zdGl0dXRvIE5hY2lvbmFsIGRlIFZpZ2lsYW5jaWEgZGUgTWVkaWNhbWVudG9zIHkgQWxpbWVudG9zIChOYXRpb25hbCBJbnN0aXR1dGUgb2YgRm9vZCBhbmQgRHJ1ZyBNb25pdG9yaW5nKTsgTUFBOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBBcHBsaWNhdGlvbjsgTUFIOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBIb2xkZXI7IE1SUDogTXV0dWFsIFJlY29nbml0aW9uIFByb2NlZHVyZTsgTkNFOiBOZXcgQ2hlbWljYWwgRW50aXR5OyBOZWVTOiBOb24gZUNURCBlbGVjdHJvbmljIFN1Ym1pc3Npb247IE5QOiBOYXRpb25hbCBQcm9jZWR1cmU7IE5UQTogTm90aWNlIHRvIEFwcGxpY2FudHM7IE9UQzogT3Zlci10aGUtQ291bnRlcjsgUFNVUjogUGVyaW9kaWMgU2FmZXR5IFVwZGF0ZSBSZXBvcnQ7IFJBRUZBUjogUmVnaXN0cm8gZGUgQXV0b3JpemFjaW9uZXMgZGUgRXNwZWNpYWxpZGFkZXMgRmFybWFjw6l1dGljYXM7IFRHQTogVGhlcmFwZXV0aWMgR29vZHMgQWRtaW5pc3RyYXRpb247IFRJVENLOiBUw7xya2l5ZSBJbGHDpyB2ZSBUxLFiYmkgQ2loYXogS3VydW11IChUdXJraXNoIFBoYXJtYWNldXRpY2FscyBhbmQgTWVkaWNhbCBEZXZpY2VzIEluc3RpdHV0aW9uKSIsIk51bWJlciI6OTc0NDF9LHsiaWQiOjE5NSwiVGl0bGUiOiJNZWRpY2FsIERldmljZXMgYW5kIElWRHMgTWFya2V0aW5nIEFwcGxpY2F0aW9uIFByb2NlZHVyZXMiLCJTZWN0aW9ucyI6Ik1hcmtldCBDbGVhcmFuY2UiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBhaW1zIHRvIHByb3ZpZGUgYW4gb3ZlcnZpZXcgb2Ygd2hpY2ggdHlwZS9zIG9mIGFwcGxpY2F0aW9uIE1hcmtldGluZyBBcHBsaWNhdGlvbiBQcm9jZWR1cmUgKG5vdGlmaWNhdGlvbiwgcmVnaXN0cmF0aW9uLCBjZXJ0aWZpY2F0aW9uLi4uKSBpcy9hcmUgcmVxdWlyZWQgaW4gZWFjaCBjb3VudHJ5IGZvciBNRHMgYW5kIElWRHMgbWFya2V0IGNsZWFyYW5jZSBhY2NvcmRpbmcgdG8gdGhlIHByb2R1Y3QgY2xhc3MgYW5kIHdoaWNoIGFyZSB0aGUgQ29tcGV0ZW50IEF1dGhvcml0aWVzIG9yIFJlZ3VsYXRvcnkgQm9kaWVzIGludm9sdmVkIGluIHRoZSBwcm9jZWR1cmUuIDxici8+Q29tcGxlbWVudGFyeSBleHBsaWNhdGl2ZSBub3RlcyBhcmUgcHJvdmlkZWQgdG8gaWxsdXN0cmF0ZSBsb2NhbCBwcmFjdGljZSBhbmQgdHlwZSBvZiByZXZpZXcvYXBwcm92YWwgbmVlZGVkICh3aGVuIGF2YWlsYWJsZSkuPGJyLz5MaW5rcyB0byB0aGUgcmVsZXZhbnQgcmVmZXJlbmNlIGRvY3VtZW50cyBhbmQgZ3VpZGVsaW5lcyBhcmUgYWxzbyBwcm92aWRlZC4iLCJOdW1iZXIiOjI2OTU2OH0seyJpZCI6MTk2LCJUaXRsZSI6Ik1lZGljYWwgRGV2aWNlcyBhbmQgSVZEcyBQb3N0LU1hcmtldGluZyBEZXZpY2UgTW9kaWZpY2F0aW9ucyIsIlNlY3Rpb25zIjoiTWFya2V0IENsZWFyYW5jZSIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IGZvY3VzZXMgb24gdGhlIGFwcGxpY2FibGUgcmVxdWlyZW1lbnRzIGZvciBQb3N0LU1hcmtldGluZyBEZXZpY2UgbW9kaWZpY2F0aW9ucyBhbmQgcmVuZXdhbHMsIGFuZCBob3cgdGhleSBhcmUgcHJvY2Vzc2VkLiA8YnIvPkl0IGhpZ2hsaWdodHMgd2hpY2ggdHlwZSBvZiAgYXBwbGljYXRpb24gcHJvY2VkdXJlIChub3RpZmljYXRpb24sIHJlZ2lzdHJhdGlvbiwgY2VydGlmaWNhdGlvbi4uLikgaXMgcmVxdWlyZWQgaW4gZWFjaCBjb3VudHJ5IGZvciBNRHMgYW5kIElWRHMgUG9zdC1NYXJrZXRpbmcgRGV2aWNlIG1vZGlmaWNhdGlvbnMgYW5kIHJlbmV3YWxzIGFjY29yZGluZyB0byB0aGUgcHJvZHVjdCBjbGFzcyBhbmQgd2hpY2ggYXJlIHRoZSBDb21wZXRlbnQgQXV0aG9yaXRpZXMgb3IgUmVndWxhdG9yeSBCb2RpZXMgaW52b2x2ZWQgaW4gdGhlIHByb2NlZHVyZXMuIDxici8+TGlua3MgdG8gdGhlIGFwcGxpY2FibGUgcmVmZXJlbmNlIGRvY3VtZW50cyBhbmQgZ3VpZGVsaW5lcyBhcmUgYWxzbyBwcm92aWRlZC4iLCJOdW1iZXIiOjI2OTU3MH0seyJpZCI6MTA0LCJUaXRsZSI6IlN0YWJpbGl0eSBEYXRhIGFuZCBDb25kaXRpb25zIGZvciBGaW5pc2hlZCBQcm9kdWN0cyIsIlNlY3Rpb25zIjoiRm9ybWF0IGFuZCBDb250ZW50IG9mIEFwcGxpY2F0aW9ucyIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IHByb3ZpZGVzIGFuIG92ZXJ2aWV3IG9mIHN0YWJpbGl0eSB0ZXN0aW5nIHJlcXVpcmVtZW50cyBmb3IgZmluaXNoZWQgbmV3IGRydWcgcHJvZHVjdHMgYXMgcmVxdWlyZWQgYXQgdGhlIHRpbWUgb2Ygc3VibWlzc2lvbi4gSW5mb3JtYXRpb24gaXMgcHJvdmlkZWQgZm9yIGxvbmctdGVybSAocmVhbC10aW1lKSwgYWNjZWxlcmF0ZWQsIGFuZCBpbnRlcm1lZGlhdGUgdGVzdGluZyBjb25kaXRpb25zIGluY2x1ZGluZzogbWluaW11bSB0aW1lIHBlcmlvZCwgdGVzdGluZyBmcmVxdWVuY3kgKHRpbWUgcG9pbnRzKSwgbWluaW11bSBudW1iZXIgb2YgYmF0Y2hlcy4gPGJyLz5UaGUgY2xpbWF0aWMgem9uZSB0byB3aGljaCBlYWNoIGNvdW50cnkgYmVsb25ncyB0byBpcyBhbHNvIHByb3ZpZGVkLiBSZWZlcmVuY2UgaXMgbWFkZSB0byBXSE8gcHVibGljYXRpb25zIGZvciBkZWZpbml0aW9uIG9mIGNsaW1hdGljIHpvbmUgSSwgSUksIElJSSwgSVYgKElWYSBhbmQgSVZiKS4gPGJyLz5MaW5rcyBhcmUgaW5jbHVkZWQgdG8gcmVsYXRlZCByZWZlcmVuY2UgZG9jdW1lbnRzLiA8YnIvPkFiYnJldmlhdGlvbnM6IEMsIENlbHNpdXM7IE4vQSwgTm90IEFwcGxpY2FibGU7IFJILCBSZWxhdGl2ZSBIdW1pZGl0eS4iLCJOdW1iZXIiOjk2Njc3fSx7ImlkIjoxNjksIlRpdGxlIjoiQWNjZXNzIHRvIFVuYXBwcm92ZWQgRHJ1Z3MiLCJTZWN0aW9ucyI6Ik1hcmtldGluZyBBdXRob3JpemF0aW9uIFByb2NlZHVyZXMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBhaW1zIHRvIHByb3ZpZGUgYW4gb3ZlcnZpZXcgb2YgYWxsIG9wcG9ydHVuaXRpZXMgZXhpc3RpbmcgaW4g4oCYQ291bnRyeeKAmSBmb3IgbWFraW5nIGFuIHVuYXBwcm92ZWQgKGkuZS4gdW5saWNlbnNlZC91bnJlZ2lzdGVyZWQpIG1lZGljaW5hbCBwcm9kdWN0IGF2YWlsYWJsZSB0byBwYXRpZW50cy4gPGJyLz5UaGlzIGNhbiBvY2N1ciB0aHJvdWdoOiAgPGJyLz4tXHRDb21wYXNzaW9uYXRlIHVzZSBwcm9ncmFtbWVzIChwYXRpZW50LW5hbWVkIGJhc2lzIG9yIGNvaG9ydCBncm91cHMpPGJyLz4tXHRPZmYgbGFiZWwgdXNlIHByb3Zpc2lvbnM8YnIvPi1cdFVubGljZW5zZWQgdXNlIChpbXBvcnQgZnJvbSBDb3VudHJ5IHdpdGggc2ltaWxhciBsZWdpc2xhdGlvbik8YnIvPkRlcGVuZGluZyBvbiB0aGUgcHJvZ3JhbW1lcy9wcm92aXNpb25zIGV4aXN0aW5nIGluIGVhY2ggQ291bnRyeSwgcGFydGljdWxhcnMgb24gd2hvIGluaXRpYXRlcyB0aGUgYXBwbGljYXRpb24sIG9uIHRoZSBTcG9uc29yIGFuZCBDb21wZXRlbnQgUmVndWxhdG9yeSBBdXRob3JpdHnigJlzIHJvbGUgYXJlIHByb3ZpZGVkLiBMaW5rcyB0byByZWxldmFudCBwdWJsaWNhdGlvbnMgYXJlIGluY2x1ZGVkLjxici8+PGJyLz5BYmJyZXZpYXRpb25zOiBCR1REOiBCaW9sb2dpY3MgYW5kIEdlbmV0aWMgVGhlcmFwaWVzIERpcmVjdG9yYXRlOyBUUEQ6IFRoZXJhcGV1dGljIFByb2R1Y3RzIERpcmVjdG9yYXRlIiwiTnVtYmVyIjoxMzk1Mzh9LHsiaWQiOjE4MSwiVGl0bGUiOiJDaGFuZ2Ugb2YgTWFudWZhY3R1cmluZyBTaXRlIChGaW5pc2hlZCBQcm9kdWN0KSIsIlNlY3Rpb25zIjoiTWFya2V0aW5nIEF1dGhvcml6YXRpb24gUHJvY2VkdXJlcyIsIkFic3RyYWN0IjoiVGhpcyB0b3BpYyBjb25jZXJucyB0aGUgY2hhbmdlIG9mIG1hbnVmYWN0dXJpbmcgc2l0ZSBmb3IgYSBmaW5pc2hlZCBwcm9kdWN0IChGUCkgYXMgZGV0YWlsZWQgaW4gaXRzIG1hcmtldGluZyBhdXRob3JpemF0aW9uLCB3aXRoIHRoZSBhc3N1bXB0aW9uIHRoYXQgdGhlcmUgaXMgbm8gY2hhbmdlIGluIHRoZSBtYW51ZmFjdHVyaW5nIHByb2Nlc3MgYW5kIG5vIGltcGFjdCBvbiB0aGUgcHJvZHVjdCdzIHF1YWxpdHkvZWZmaWNhY3kuIEl0IGRvZXMgbm90IHJlZmVyIHRvIGFkbWluaXN0cmF0aXZlIGNoYW5nZXMgdG8gdGhlIG1hbnVmYWN0dXJpbmcgc2l0ZSAoZS5nLiBjaGFuZ2Ugb2YgbmFtZS9hZGRyZXNzLCBldGMpLiBSZXNlYXJjaCBzY29wZSBpcyBsaW1pdGVkIHRvIGNoZW1pY2FsIGRydWdzOyBzb21lIHJlZmVyZW5jZXMgdG8gb3RoZXIgZHJ1ZyB0eXBlcyAoYmlvbG9naWNzLCBldGMpIG1heSBiZSBpbmNsdWRlZCBidXQgdGhlIHRhYmxlIGRvZXMgbm90IHByZXRlbmQgdG8gYmUgZXhoYXVzdGl2ZSBmb3Igb3RoZXIgdGhhbiBjaGVtaWNhbCBkcnVncy48YnIvPkZvciB0aGUgb3BlcmF0aW9ucyB3aGljaCBtaWdodCBiZSBjb25kdWN0ZWQgYXQgYSBtYW51ZmFjdHVyaW5nIHNpdGUgLSBtYW51ZmFjdHVyaW5nLCBwYWNrYWdpbmcsIGJhdGNoIHJlbGVhc2UvY29udHJvbCAtIHRoZSBmb2xsb3dpbmcgaXRlbXMgaGF2ZSBiZWVuIGFkZHJlc3NlZDogIDxici8+4oCiIExvY2FsIHRpdGxlIGZvciB0aGUgdmFyaWF0aW9uL2NoYW5nZSA8YnIvPuKAoiBVbmRlciB3aGljaCBhcHBsaWNhdGlvbiB0eXBlIHRoZSBjaGFuZ2UgaXMgZGVhbHQgKG5ldyByZWdpc3RyYXRpb24sIG1pbm9yL21ham9yIHZhcmlhdGlvbiwgZXRjKTxici8+4oCiIFdoaWNoIHNwZWNpZmljIGNvbmRpdGlvbnMvcHJlLXJlcXVpc2l0ZXMgYXBwbHkgPGJyLz7igKIgV2hpY2ggZG9jdW1lbnRhdGlvbiBuZWVkcyB0byBiZSBzdXBwbGllZCBwZXIgZWFjaCBjaGFuZ2UgaWRlbnRpZmllZCA8YnIvPuKAoiBCYXNpYyBhZG1pbmlzdHJhdGl2ZSBhc3BlY3RzIG9mIHRoZSBzdWJtaXNzaW9uPGJyLz7igKIgRmVlcyBhc3NvY2lhdGVkPGJyLz7igKIgVGltZWxpbmVzIGZvciBhZ2VuY3kgYXNzZXNzbWVudC9zcG9uc29yIHJlc3BvbnNlLyBpbXBsZW1lbnRhdGlvbiBvZiBjaGFuZ2U8YnIvPkxpbmtzIHRvIHJlbGF0ZWQgcmVndWxhdG9yeSBzdW1tYXJpZXMgYW5kIHJlZmVyZW5jZSBkb2N1bWVudHMgYXJlIGFsc28gaW5jbHVkZWQuPGJyLz48YnIvPkFjcm9ueW1zOiBBQ1REOiBBU0VBTiBDb21tb24gVGVjaG5pY2FsIERvc3NpZXI7IEFlUk86IEFwbGlrYXNpIGUtUmVnaXN0cmFzaSBPYmF0IChNZWRpY2luZSBlLVJlZ2lzdHJhdGlvbiBBcHBsaWNhdGlvbik7IEFOTUFUOiBBZG1pbmlzdHJhY2nDs24gTmFjaW9uYWwgZGUgTWVkaWNhbWVudG9zLCBBbGltZW50b3MgeSBUZWNub2xvZ8OtYSBNw6lkaWNhOyBDRkRBOiBDaGluYSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uOyBDb0E6IENlcnRpZmljYXRlIG9mIEFuYWx5c2lzOyBDT0ZFUFJJUzogQ29taXNpw7NuIEZlZGVyYWwgcGFyYSBsYSBQcm90ZWNjacOzbiBjb250cmEgUmllc2dvcyBTYW5pdGFyaW87IENQUDogQ2VydGlmaWNhdGUgb2YgUGhhcm1hY2V1dGljYWwgUHJvZHVjdDsgRENHSTogRHJ1ZyBDb250cm9sbGVyIEdlbmVyYWwgb2YgSW5kaWE7IERSQTogRHJ1ZyBSZWd1bGF0b3J5IEF1dGhvcml0eTsgRkFNSFA6IEZlZGVyYWwgQWdlbmN5IGZvciBNZWRpY2luZXMgYW5kIEhlYWx0aCBQcm9kdWN0czsgRlA6IEZpbmlzaGVkIFByb2R1Y3Q7IEZQUDogRmluaXNoZWQgUGhhcm1hY2V1dGljYWwgUHJvZHVjdDsgR01QOiBHb29kIE1hbnVmYWN0dXJpbmcgUHJhY3RpY2U7IElOQU1FOiBJbnN0aXR1dG8gTmFjaW9uYWwgZGUgTWVkaWNhbWVudG9zOyBNUkE6IE11dHVhbCBSZWNvZ25pdGlvbiBBZ3JlZW1lbnQ7IE1PVTogTWVtb3JhbmR1bSBvZiBVbmRlcnN0YW5kaW5nOyBOQS1ERkM6IE5hdGlvbmFsIEFnZW5jeSBvZiBEcnVnIGFuZCBGb29kIENvbnRyb2w7IFBQQjogUGhhcm1hY3kgYW5kIFBvaXNvbnMgQm9hcmQ7IFBNREE6IFBoYXJtYWNldXRpY2FscyBhbmQgTWVkaWNhbCBEZXZpY2VzIEFnZW5jeTsgUkFFRkFSOiBSZWdpc3RybyB5IEF1dG9yaXphY2nDs24gZGUgRXNwZWNpYWxpZGFkZXMgRmFybWFjw6l1dGljYXM7IFRHQTogVGhlcmFwZXV0aWMgR29vZHMgQWRtaW5pc3RyYXRpb24uIiwiTnVtYmVyIjoxNzMzNzJ9LHsiaWQiOjEwOCwiVGl0bGUiOiJNYXJrZXQgQXV0aG9yaXphdGlvbiBBcHByb3ZhbCBFeHBlY3RlZCBBdXRob3JpdHkgUmV2aWV3IFRpbWVzIiwiU2VjdGlvbnMiOiJNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBQcm9jZWR1cmVzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgcmVndWxhdG9yeSBhdXRob3JpdGllc+KAmSBleHBlY3RlZCB0aW1lbGluZXMgZm9yIGEgc3RhbmRhcmQgYW5kIHByaW9yaXR5IHJldmlldyAoaS5lLiBldmFsdWF0aW9uIG9yIGFzc2Vzc21lbnQpIG9mIGEgbWFya2V0IGF1dGhvcml6YXRpb24vZHJ1ZyBhcHBsaWNhdGlvbi4gPGJyLz48YnIvPldoZW4gYXZhaWxhYmxlLCBleHBlY3RlZCB0aW1lbGluZXMgZm9yIGEgc3RhbmRhcmQgYXBwbGljYXRpb27igJlzIHZhbGlkYXRpb24gKGkuZS4gZmlsaW5nIG9yIHNjcmVlbmluZykgb2NjdXJyaW5nIHByaW9yIHRvIGZvcm1hbCByZXZpZXcgb2YgZHJ1ZyBlZmZpY2FjeS9zYWZldHkvZWZmaWNhY3kgYXJlIGluZGljYXRlZC4gPGJyLz48YnIvPkFsbCB0aW1lZnJhbWVzIChudW1lcmljIHZhbHVlIC0gbWF4aW11bSBudW1iZXIgb2YgZGF5cyApIHByb3ZpZGVkIGluIHRoaXMgc3ViamVjdCBhcmUgaWRlbnRpZmllZCBhcyBsZWdpc2xhdGVkICh3aGVuIHN0YXRlZCBpbiBsYXdzKSwgcmVndWxhdGVkIChpZiBiYXNlZCBvbiByZWd1bGF0aW9ucyBvciBBZ2VuY2llcyBndWlkYW5jZeKAmXMpIG9yIHRhcmdldGVkIHBlcmZvcm1hbmNlIHRpbWVzIChpZiBkZXJpdmVkIGJ5IEFnZW5jaWVzIHByYWN0aWNlIC8gd2Vic2l0ZXMpLiA8YnIvPjxici8+Rm9yIGNvdW50cmllcyB3aGljaCBkbyBub3QgaGF2ZSBhbnkgcHVibGljbHkgYXZhaWxhYmxlIHJldmlldyB0aW1lIGluZm9ybWF0aW9uLCB0aGUgbnVtZXJpYyB2YWx1ZSBpcyBsZWZ0IGVtcHR5IGJ1dCBsb2NhbGx5IGV4cGVyaW1lbnRlZCB0aW1lbGluZXMgYXJlIG5vdGVkIGJhc2VkIG9uIENSSSBjb25zdWx0YW50cyBwcmFjdGljZS48YnIvPjxici8+RGV0YWlscyBhcmUgcHJvdmlkZWQgZm9yIGEgc3RhbmRhcmQgbmV3IGRydWcgYXBwbGljYXRpb24sIG5ldyBjaGVtaWNhbCBlbnRpdHksIG9yIG5ldyBhY3RpdmUgZHJ1ZyBzdWJzdGFuY2Ugc3VibWl0dGVkIHRvIGEgcmVndWxhdG9yeSBhdXRob3JpdHkgZm9yIGFwcHJvdmFsLiBXaGVuIGF2YWlsYWJsZS9hcHBsaWNhYmxlLCBvdGhlciBhcHBsaWNhdGlvbnMgdGltZWxpbmVzIGFyZSBhZGRlZCAoZ2VuZXJpY3MsIGltcG9ydGVkIHZzIGxvY2FsbHkgbWFudWZhY3R1cmVkLCBldGMpLjxici8+PGJyLz5UaGUg4oCYVGltZWZyYW1lIE1lYXN1cmXigJkgaGVhZGluZyBpbmRpY2F0ZXMgd2hpY2ggc3lzdGVtIGlzIHVzZWQgYnkgdGhlIHJlZ3VsYXRvcnkgYXV0aG9yaXR5IChXb3JraW5nIG9yIENhbGVuZGFyIERheXMpLCBpZiB0aGF0IGl0IGlzIGNsZWFybHkgZXhwcmVzc2VkIGluIG9mZmljaWFsIGRvY3VtZW50cy4gPGJyLz48YnIvPlRoZSBFdXJvcGVhbiBVbmlvbiBNZW1iZXIgU3RhdGVz4oCZIHJldmlldyB0aW1lcyBhcmUgZm9yIHRoZSBuYXRpb25hbCBhdXRob3JpdHkgcmV2aWV3IHByb2NlZHVyZS4gPGJyLz48YnIvPkxpbmtzIHRvIHJlbGF0ZWQgUmVndWxhdG9yeSBTdW1tYXJpZXMgYW5kIHF1b3RlZCByZWZlcmVuY2UgZG9jdW1lbnRzIGFyZSBpbmNsdWRlZCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4iLCJOdW1iZXIiOjk3MzUzfSx7ImlkIjoyMDIsIlRpdGxlIjoiTWVkaWNhbCBEZXZpY2VzIGFuZCBJVkRzIEFkdmVydGlzaW5nIFJlcXVpcmVtZW50cyIsIlNlY3Rpb25zIjoiUHJvZHVjdCBNYXRlcmlhbHMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBkaXNwbGF5cyBhbiBvdmVydmlldyBvZiBNRHMgYW5kIElWRHMgYWR2ZXJ0aXNpbmcgcmVxdWlyZW1lbnRzIGFuZCBjb25kaXRpb25zLjxici8+SXQgaGlnaGxpZ2h0cyB3aGV0aGVyIGFwcGxpY2F0aW9uL3N1Ym1pc3Npb24gYW5kL29yIHRoZSBDb21wZXRlbnQgQXV0aG9yaXRpZXMgcmV2aWV3L2FwcHJvdmFsIGlzIHJlcXVpcmVkIG9yIG5vdCBhbmQgdGhlIHNwZWNpZmljIHJlcXVpcmVtZW50cyBhbmQgcHJvY2VkdXJlcyB0byBmb2xsb3cuPGJyLz5MaW5rcyB0byB0aGUgYXBwbGljYWJsZSByZWZlcmVuY2UgZG9jdW1lbnRzIGFuZCBndWlkZWxpbmVzIGFyZSBhbHNvIGluY2x1ZGVkIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIHRoaXMgc3ViamVjdC4iLCJOdW1iZXIiOjI4NjA1MX0seyJpZCI6MjAxLCJUaXRsZSI6Ik1lZGljYWwgRGV2aWNlcyBhbmQgSVZEcyBMYWJlbGluZyBSZXF1aXJlbWVudHMiLCJTZWN0aW9ucyI6IlByb2R1Y3QgTWF0ZXJpYWxzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgIGFpbXMgdG8gcHJvdmlkZSBhbiBvdmVydmlldyBvZiBNRHMgYW5kIElWRHMgcGFja2FnaW5nIGFuZCBsYWJlbGluZyByZXF1aXJlbWVudHMuIEl0IGFsc28gcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFwcGxpY2FibGUgbGFiZWxpbmcgYW5kIHBhY2thZ2luZyBzdGFuZGFyZHMuPGJyLz5TcGVjaWZpYyBjb3VudHJ5IHJlcXVpcmVtZW50cyBhcmUgZGV0YWlsZWQgaW4gdGhpcyBzdWJqZWN0LCB3aGV0aGVyIHRoZXkgYXJlIG1hbmRhdG9yeSB0byBhcHBlYXIgaW4gdGhlIHBhY2thZ2luZyBvciBsYWJlbGluZy4gQWRkaXRpb25hbCBjb2x1bW5zIHByb3ZpZGUgaW5mb3JtYXRpb24gb24gcmVxdWlyZW1lbnRzIHJlbGF0ZWQgdG8gdGhlIHRyYWNlYWJpbGl0eSBvZiBNZWRpY2FsIERldmljZXMgYXMgYSByZXF1aXJlbWVudC48YnIvPkxpbmtzIHRvIHRoZSByZWxldmFudCByZWZlcmVuY2UgZG9jdW1lbnRzIGFuZCBndWlkZWxpbmVzIGFyZSBpbmNsdWRlZC4iLCJOdW1iZXIiOjI4NjA1MH0seyJpZCI6MTcwLCJUaXRsZSI6IlJlZ3VsYXRvcnkgYW5kIEdvdmVybm1lbnRhbCBCb2RpZXMiLCJTZWN0aW9ucyI6IkF1dGhvcml0aWVzIGFuZCBPcmdhbml6YXRpb25zIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgYmFzaWMgaW5mb3JtYXRpb24gb24gaGVhbHRoIHJlZ3VsYXRpb24gYXV0aG9yaXRpZXM6IHRoZSBuYW1lcyBhbmQgd2Vic2l0ZXMgb2YgZWFjaCBjb3VudHJ5J3MgcmVndWxhdG9yeSBhdXRob3JpdHkgYW5kIGhlYWx0aCBtaW5pc3RyeSwgYXMgd2VsbCBhcyBjb250YWN0IGRldGFpbHMgYW5kIGxpbmtzIHRvIHRoZSBhdXRob3JpdHkncyBcImFib3V0XCIgd2VicGFnZS4gTGlua3MgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcnkgZG9jdW1lbnRzIGFyZSBwcm92aWRlZC4iLCJOdW1iZXIiOjE0NTg3NH0seyJpZCI6MTc5LCJUaXRsZSI6IlRyYW5zcGFyZW5jeSIsIlNlY3Rpb25zIjoiQXV0aG9yaXRpZXMgYW5kIE9yZ2FuaXphdGlvbnMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBpbnZlc3RpZ2F0ZXMgbmF0aW9uYWwgbGVnaXNsYXRpdmUgcHJvdmlzaW9ucyBhcHBsaWNhYmxlIHRvIG1ha2UgYWRtaW5pc3RyYXRpdmUgaW5mb3JtYXRpb24gcHVibGljbHkgYXZhaWxhYmxlIGFuZC9vciB0cmFuc3BhcmVuY3kgaW5pdGlhdGl2ZXMgcHJvbW90ZWQgbG9jYWxseSBieSBIZWFsdGgvUmVndWxhdG9yeSBBdXRob3JpdGllcy4gV2l0aCByZWdhcmRzIHRvIGRydWcgZGV2ZWxvcG1lbnQsIHRoZXNlIHNwZWNpZmljIGl0ZW1zIGFyZSBjb25zaWRlcmVkOjxici8+LSBJZiBhbmQgd2hpY2ggY2xpbmljYWwgdHJpYWwgZGF0YSBpcyBkaXNjbG9zZWQgYnkgQWdlbmNpZXMgKG90aGVyIHRoYW4gdHJpYWwgcmVnaXN0cmF0aW9uIGFuZCByZXN1bHRzIHB1YmxpY2F0aW9uKTxici8+LSBJZiBkcnVnIGFzc2Vzc21lbnQgcmVwb3J0cyBjb25kdWN0ZWQgYnkgQWdlbmNpZXMgYXJlIGF2YWlsYWJsZSAgPGJyLz4tIEF2YWlsYWJpbGl0eSBvZiBsb2NhbCBkYXRhYmFzZXMgbGlzdGluZyBkcnVnIGFwcHJvdmFscyBhbmQgcHJvZHVjdCBpbmZvcm1hdGlvbjxici8+LSBJZiBwaGFybWFjb3ZpZ2lsYW5jZSBhc3Nlc3NlZCBkYXRhIChvdGhlciB0aGFuIGFkdmVyc2UgZHJ1ZyByZWFjdGlvbnMgc2FmZXR5IGluZm9ybWF0aW9uKSBpcyBtYWRlIGF2YWlsYWJsZTxici8+LSBJZiBpbnNwZWN0aW9uIHJlcG9ydHMgYXJlIGRpc2Nsb3NlZCA8YnIvPi0gQWdlbmN5IGVuZGVhdm91cnMgaW4gY29tcGx5aW5nIHRvIHRyYW5zcGFyZW5jeSBwb2xpY3kgKHB1YmxpY2F0aW9uIG9mIGV4cGVydHMgaW5mb3JtYXRpb24sIGNvbmZsaWN0IG9mIGludGVyZXN0cywgbWVldGluZ3PigJkgYWdlbmRhcyBhbmQgbWludXRlcywgYW5udWFsIHJlcG9ydHMsICBldGMuKTxici8+UmVsZXZhbnQgcmVmZXJlbmNlIGRvY3VtZW50cyBhbmQgbGlua3MgdG8gZXh0ZXJuYWwgd2Vic2l0ZXMgY29tcGxlbWVudCB0aGUgaW52ZW50b3J5LiIsIk51bWJlciI6MTY3ODgxfSx7ImlkIjoyMDAsIlRpdGxlIjoiTWVkaWNhbCBEZXZpY2VzIGFuZCBJVkRzIFF1YWxpdHkgTWFuYWdlbWVudCBTeXN0ZW1zICYgSW5zcGVjdGlvbnMiLCJTZWN0aW9ucyI6IlF1YWxpdHkgTWFuYWdlbWVudCBTeXN0ZW0gUmVxdWlyZW1lbnRzIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJlc2VudHMgY3VycmVudCBRdWFsaXR5IE1hbmFnZW1lbnQgU3lzdGVtcyByZXF1aXJlbWVudHMgZm9yIE1EcyBhbmQgSVZEcyBpbiBlYWNoIGNvdW50cnkuIEl0IGhpZ2hsaWdodHMgd2hldGhlciBHTVAgcmVxdWlyZW1lbnRzIGFwcGx5IG9yIG5vdCwgYXMgd2VsbCBhcyBpZiB0aGUgQ29tcGV0ZW50IEF1dGhvcml0aWVzJyBpbnNwZWN0aW9uIGlzIHJlcXVpcmVkLCBhbmQgdGhlIHNwZWNpZmljIHJlcXVpcmVtZW50cyBhbmQgcHJvY2VkdXJlcyB0byBiZSBjb21wbGV0ZWQuPGJyLz5MaW5rcyB0byByZWZlcmVuY2UgZG9jdW1lbnRzIGFyZSBwcm92aWRlZCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiB0aGlzIHN1YmplY3QuIiwiTnVtYmVyIjoyODExNzl9LHsiaWQiOjEwNywiVGl0bGUiOiJQcmUtIGFuZCBQb3N0LUFwcHJvdmFsIEZlZXMiLCJTZWN0aW9ucyI6IkZlZXMiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBpcyBhbiBvdmVydmlldyBvZiBuYXRpb25hbCBmZWVzIHJlbGF0ZWQgdG8gcHJvZHVjdCBwcmUtIGFuZCBwb3N0LSByZWdpc3RyYXRpb24gYXBwcm92YWwuPGJyLz5QcmUtYXBwcm92YWwgZmVlcywgd2hlcmUgYXBwbGljYWJsZSBieSByZWd1bGF0b3J5IGF1dGhvcml0eSwgYXJlIGluY2x1ZGVkIGZvciBjbGluaWNhbCB0cmlhbCBhcHBsaWNhdGlvbnMsIGV0aGljcyBjb21taXR0ZWUgcmV2aWV3LCBhbmQgc2NpZW50aWZpYyBhZHZpY2UuIFJlZ2lzdHJhdGlvbiBmZWVzIGFyZSBpbmNsdWRlZCBmb3IgbmV3IGFjdGl2ZSBzdWJzdGFuY2UgL25ldyBjaGVtaWNhbCBlbnRpdHkgYXBwbGljYXRpb25zIChkYXRhIGZvciBFdXJvcGVhbiBVbmlvbiBpcyBmb3IgQ2VudHJhbGl6ZWQgUHJvY2VkdXJlLCBkYXRhIGZvciBFVSBtZW1iZXIgc3RhdGVzIGlzIGZvciBOYXRpb25hbCBQcm9jZWR1cmUpLiBQb3N0LWFwcHJvdmFsIGZlZXMsIHdoZXJlIGFwcGxpY2FibGUgYnkgcmVndWxhdG9yeSBhdXRob3JpdHksIGFyZSBpbmNsdWRlZCBmb3IgYSBtYXJrZXRpbmcgYXBwbGljYXRpb24gcmVuZXdhbCwgZXh0ZW5zaW9uIChpLmUuIGNoYW5nZXMgb3IgYWRkaXRpb25zIG9mIGEgbmV3IHN0cmVuZ3RoLCBwaGFybWFjZXV0aWNhbCBmb3JtLCBvciByb3V0ZSBvZiBhZG1pbmlzdHJhdGlvbiksIHZhcmlhdGlvbiAoaS5lLiBtaW5vciBvciBtYWpvciBjaGFuZ2VzIHRvIHRoZSBjb250ZW50cyBvZiB0aGUgZXhpc3RpbmcgbWFya2V0aW5nIGF1dGhvcml6YXRpb24pLCB0cmFuc2ZlciwgYW5udWFsIG1haW50ZW5hbmNlLCBpbnNwZWN0aW9ucyBhbmQgY2VydGlmaWNhdGVzLjxici8+VXNlcnMgc2hvdWxkIHJlZmVyIHRvIGxvY2FsIHJlZ3VsYXRpb24gZm9yIHRoZSBkZWZpbml0aW9uIG9mIGNvdW50cnkgc3BlY2lmaWMgYXBwbGljYXRpb25zL3ZhcmlhdGlvbiB0eXBlcy4gVG8gdGhhdCBlbmQsIGxpbmtzIHRvIHJlbGF0ZWQgUmVndWxhdG9yeSBTdW1tYXJpZXMgYW5kIHJlZmVyZW5jZSBkb2N1bWVudHMgYXJlIGluY2x1ZGVkLjxici8+QWJicmV2aWF0aW9uczogQUZNUFM6IEFnZW5jZSBGZWRlcmFsZSBkZXMgTWVkaWNhbWVudHMgZXQgUHJvZHVpdHMgZGUgU2FudGU7IEFJRkE6IEFnZW56aWEgSXRhbGlhbmEgZGVsIEZhcm1hY287IEFQSTogQWN0aXZlIFBoYXJtYWNldXRpY2FsIEluZ3JlZGllbnQ7IEJmQXJNOiBCdW5kZXNpbnN0aXR1dCBmdXIgQXJ6bmVpbWl0dGVsIHVuZCBNZWRpemlucHJvZHVrdGU7IENCRVI6IENlbnRlciBmb3IgQmlvbG9naWNzIEV2YWx1YXRpb24gYW5kIFJlc2VhcmNoOyBDQ01POiBDZW50cmFsZSBDb21taXNzaWUgTWVuc2dlYm9uZGVuIE9uZGVyem9lazsgQ0RFUjogQ2VudGVyIGZvciBEcnVnIEV2YWx1YXRpb24gYW5kIFJlc2VhcmNoOyBDSE1QOiBDb21taXR0ZWUgZm9yIE1lZGljaW5hbCBQcm9kdWN0cyBmb3IgSHVtYW4gVXNlOyBDUFA6IENlcnRpZmljYXRlIG9mIFBoYXJtYWNldXRpY2FsIFByb2R1Y3Q7IENUSUw6IENsaW5pY2FsIFRyaWFsIEltcG9ydCBMaWNlbmNlOyBDVE46IENsaW5pY2FsIFRyaWFsIE5vdGlmaWNhdGlvbjsgQ1RYOiBDbGluaWNhbCBUcmlhbCBFeGVtcHRpb247IEVDOiBFdGhpY3MgQ29tbWl0dGVlOyBlQ1REOiBlbGVjdHJvbmljIENvbW1vbiBUZWNobmljYWwgRG9jdW1lbnQ7IEVVOiBFdXJvcGVhbiBVbmlvbjsgRkFHRzogRmVkZXJhYWwgQWdlbnRzY2hhcCB2b29yIEdlbmVlc21pZGRlbGVuIGVuIEdlem9uZGhlaWRzcHJvZHVjdGVuOyBGVU0vU086IEZvbGxvdy1VcCBNZWFzdXJlL1NhZmV0eSBPYmxpZ2F0aW9uOyBHQ1A6IEdvb2QgQ2xpbmljYWwgUHJhY3RpY2U7IEdMUDogR29vZCBsYWJvcmF0b3J5IFByYWN0aWNlLCBHTVA6IEdvb2QgTWFudWZhY3R1cmluZyBQcmFjdGljZTsgR1NQOiBHb29kIFNjaWVudGlmaWMgUHJhY3RpY2U7IE1BOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbjsgTUFIOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBIb2xkZXI7IE1DQzogTWVkaWNpbmVzIENvbnRyb2wgQ291bmNpbDsgTUhMVzogTWluaXN0ZXIgb2YgSGVhbHRoLCBMYWJvdXIgYW5kIFdlbGZhcmU7IE4vQSwgTm90IEFwcGxpY2FibGU7IE5IUzogTmF0aW9uYWwgSGVhbHRoIFNlcnZpY2U7IE9UQzogT3ZlciBUaGUgQ291bnRlcjsgUEVJOiBQYXVsLUVocmxpY2gtSW5zdGl0dXQ7IFBMOiBQYWNrYWdlIExlYWZsZXQ7IFBTVVI6IFBlcmlvZGljIFNhZmV0eSBVcGRhdGUgUmVwb3J0OyBQTURBOiBQaGFybWFjZXV0aWNhbHMgYW5kIE1lZGljYWwgRGV2aWNlcyBBZ2VuY3k7IFJNUzogUmVmZXJlbmNlIE1lbWJlciBTdGF0ZTsgU0ZEQTogU3RhdGUgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgU1BDOiBTdW1tYXJ5IG9mIFByb2R1Y3QgQ2hhcmFjdGVyaXN0aWNzOyBVU1I6IFVyZ2VudCBTYWZldHkgUmVzdHJpY3Rpb247IFZBVDogVmFsdWUgQWRkZWQgVGF4LiIsIk51bWJlciI6OTcxOTJ9LHsiaWQiOjE5NywiVGl0bGUiOiJNZWRpY2FsIERldmljZXMgYW5kIElWRHMgQWR2ZXJzZSBJbmNpZGVudHMgUmVwb3J0aW5nIiwiU2VjdGlvbnMiOiJNYXJrZXQgU3VydmVpbGxhbmNlIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2YgcmVwb3J0aW5nIHJlcXVpcmVtZW50cyB0byBDb21wZXRlbnQgQXV0aG9yaXRpZXMgZm9yIGRvbWVzdGljIGFuZCBmb3JlaWduLCBzZXJpb3VzIGFuZCBub24gc2VyaW91cywgYWR2ZXJzZSBpbmNpZGVudHMgaW4gZWFjaCBjb3VudHJ5LiBJdCBoaWdobGlnaHRzIHRoZSBtYW5kYXRvcnkgdGltZWxpbmVzIHByb3ZpZGVkIHRvIGVjb25vbWljIG9wZXJhdG9ycyB0byBub3RpZnkgQ29tcGV0ZW50IEF1dGhvcml0aWVzIChpbiBjYWxlbmRhciBkYXlzIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkKSBhbmQgdGhlIG1ldGhvZCB0byBmb2xsb3cgZm9yIGEgcHJvbXB0IG5vdGlmaWNhdGlvbi48YnIvPlRoaXMgc3ViamVjdCBhbHNvIGV4cGxvcmVzIGF1dGhvcml0eSByZXF1aXJlbWVudHMgd2l0aCByZWdhcmRzIHRvICBQb3N0LU1hcmtldCBwZXJpb2RpYyByZXBvcnRzLCB0aGVpciBmb3JtYXQsIGZyZXF1ZW5jeSBvZiBzdWJtaXNzaW9ucywgYW5kIHN1Ym1pc3Npb24gYWRkcmVzcyBhcyB3ZWxsIGFzIGN1cnJlbnRseSBhdmFpbGFibGUgcmVwb3J0aW5nIGRhdGFiYXNlcy48YnIvPkxpbmtzIHRvIHRoZSByZWxldmFudCByZWZlcmVuY2UgZG9jdW1lbnRzIChpbmNsdWRpbmcgZm9ybXMgYW5kIHJlZmVyZW5jZSB0ZXh0cyBzcGVjaWZpYyB0byBwZXJpb2RpYyByZXBvcnRpbmcpIGFyZSBwcm92aWRlZCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiB0aGlzIHN1YmplY3QuIiwiTnVtYmVyIjoyNzc3Mzh9LHsiaWQiOjExMSwiVGl0bGUiOiJQYWNrYWdpbmcgLSBMYWJlbGluZyIsIlNlY3Rpb25zIjoiUHJvZHVjdCBJbmZvcm1hdGlvbiIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IHByb3ZpZGVzIGFuIG92ZXJ2aWV3IG9mIHBoYXJtYWNldXRpY2FsIG91dGVyIHBhY2thZ2UgbGFiZWxpbmcgcmVndWxhdG9yeSByZXF1aXJlbWVudHMuIFNvbWUgZ2VuZXJhbCBpbmZvcm1hdGlvbiAtLSBzdWNoIGFzIHRyYWRlIG5hbWVzLCBJbnRlcm5hdGlvbmFsIE5vbnByb3ByaWV0YXJ5IE5hbWUsIHN0cmVuZ3RoLCBjb21wb3NpdGlvbiwgcGhhcm1hY2V1dGljYWwgL2Rvc2FnZSBmb3JtLCBtZXRob2QgLyByb3V0ZSBvZiBhZG1pbmlzdHJhdGlvbiwgdGhlcmFwZXV0aWMgdXNlLCBzcGVjaWFsIHN0b3JhZ2UgcHJlY2F1dGlvbnMgLyBjb25kaXRpb25zIC0tIHJlcHJlc2VudCB0aGUgbWluaW11bSBlbGVtZW50cyB0byBhcHBlYXIgb24gcGFja2FnZSBsYWJlbGluZyBmb3IgYWxtb3N0IGFsbCBjb3VudHJpZXMuPGJyLz5TcGVjaWZpYyBjb3VudHJ5IHJlcXVpcmVtZW50cywgaW5jbHVkaW5nIHRoZWlyIGxvY2FsIHdvcmRpbmcsIGFyZSBkZXRhaWxlZCBpbiB0aGlzIHN1YmplY3QsIHdoZXRoZXIgdGhleSBhcmUgbWFuZGF0b3J5IHRvIGFwcGVhciBvbiB0aGUgb3V0ZXIgcGFja2FnaW5nIG9yIG5vdCwgZm9yIHRoZSBmb2xsb3dpbmcgaXRlbXM6IDxici8+IExhYmVsaW5nIGxhbmd1YWdlPGJyLz4gV2FybmluZ3MgcmVsYXRlZCB0byBzYWZldHkgbWVhc3VyZXM8YnIvPiBNYW51ZmFjdHVyaW5nIGFuZCBFeHBpcnkgRGF0ZXM8YnIvPiBNYW51ZmFjdHVyZXIsIE1hcmtldGluZyBBdXRob3JpemF0aW9uIEhvbGRlciAoTUFIKSwgTUFI4oCZcyBsb2NhbCByZXByZXNlbnRhdGl2ZSA8YnIvPiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbi9SZWdpc3RyYXRpb24gTnVtYmVyPGJyLz4gQmF0Y2ggLyBMb3QgTnVtYmVyPGJyLz4gQnJhaWxsZSBSZXF1aXJlbWVudHMgPGJyLz4gQmFyIGNvZGVzPGJyLz4gUHJpY2UsIFJlaW1idXJzZW1lbnQsIExlZ2FsIFN1cHBseSBTdGF0dXM8YnIvPiBQaWN0b2dyYW1zLCBMb2dvcywgVGFnczxici8+QWRkaXRpb25hbCBjb2x1bW5zIHByb3ZpZGUgaW5mb3JtYXRpb24gb24gcmVxdWlyZW1lbnRzIHJlbGF0ZWQgdG8gdGhlIHRyYWNlYWJpbGl0eSBvZiBtZWRpY2luYWwgcHJvZHVjdHMgYW5kIHRoZSBuZWVkIHRvIHN1Ym1pdCBtb2NrLXVwcyBpbiB0aGUgbWFya2V0aW5nIGFwcGxpY2F0aW9uIGRvc3NpZXIuPGJyLz5MaW5rcyB0byByZWxhdGVkIFJlZ3VsYXRvcnkgU3VtbWFyaWVzIGFuZCByZWZlcmVuY2UgZG9jdW1lbnRzIGFyZSBpbmNsdWRlZC48YnIvPjxici8+QWJicmV2aWF0aW9uczogQU5NQVQ6IEFkbWluaXN0cmFjaW9uIE5hY2lvbmFsIGRlIE1lZGljYW1lbnRvcywgQWxpbWVudG9zIHkgVGVjbm9sb2dpYSBNZWRpY2E7IENOUEo6IENhZGFzdHJvIE5hY2lvbmFsIGRlIFBlc3NvYXMgSnVyaWRpY2FzOyBEQ0I6IERlbm9taW5hY2FvIENvbXVtIEJyYXNpbGVpcmE7IERITUE6IERhbmlzaCBIZWFsdGggYW5kIE1lZGljaW5lcyBBdXRob3JpdHk7IERPVTogRGlhcmlvIE9maWNpYWwgZGEgVW5pYW87IEVBTjogRXVyb3BlYW4gQXJ0aWNsZSBOdW1iZXIsIEVFQTogRXVyb3BlYW4gRWNvbm9taWMgQXJlYTsgR1RJTjogR2xvYmFsIEl0ZW0gVHJhZGUgTnVtYmVyOyBJTk46IEludGVybmF0aW9uYWwgTm9uLXByb3ByaWV0YXJ5IE5hbWU7IEpBTjogSmFwYW5lc2UgQXJ0aWNsZSBOdW1iZXI7IE1BOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbjsgTUFIOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBIb2xkZXI7IE1TOiBNaW5pc3RlcmlvIGRhIFNhdWRlOyBOQU4vVm5yOiBOb3JkaWMgQXJ0aWNsZSBOdW1iZXJzL1ZhcmVudW1tZXI7IE9UQzogT3Zlci10aGUtQ291bnRlcjsgUElMOiBQcm9kdWN0IEluZm9ybWF0aW9uIExlYWZsZXQ7IFJ4OiBQcmVzY3JpcHRpb24gKGRydWcpOyBVUEM6IFVuaXZlcnNhbCBQcm9kdWN0IENvZGUuIiwiTnVtYmVyIjo5ODAzNX0seyJpZCI6MTA1LCJUaXRsZSI6IkNsaW5pY2FsIFRyaWFsIEFwcGxpY2F0aW9uIGFuZCBFdGhpY3MgQ29tbWl0dGVlIEV4cGVjdGVkIEF1dGhvcml0eSBSZXZpZXcgVGltZXMiLCJTZWN0aW9ucyI6IkNsaW5pY2FsIFJlc2VhcmNoIiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgZXhwZWN0ZWQgdGltZSBpbiBkYXlzIGZvciB0aGUgcmVndWxhdG9yeSBhdXRob3JpdHkgcmV2aWV3IG9mIGEgY2xpbmljYWwgdHJpYWwgYXBwbGljYXRpb24gKENUQSkgb3IgaW52ZXN0aWdhdGlvbmFsIG5ldyBkcnVnIGFwcGxpY2F0aW9uIChJTkQpIGZvciByZXNlYXJjaCBpbnZvbHZpbmcgaHVtYW4gc3ViamVjdHMgZm9yIG1lZGljaW5hbCBkcnVnIHByb2R1Y3RzLiA8YnIvPkV4cGVjdGVkIHJldmlldyB0aW1lcyBhcmUgaW5kaWNhdGVkIGZvciBldGhpY3MgY29tbWl0dGVlIGFuZCByZWd1bGF0b3J5IGF1dGhvcml0eS4gQ29tcGxlbWVudGFyeSBleHBsaWNhdGl2ZSBub3RlcyBhcmUgcHJvdmlkZWQgdG8gaWxsdXN0cmF0ZSBsb2NhbCBwcmFjdGljZSBhbmQgdHlwZSBvZiBhcHByb3ZhbCAod2hlbiBhdmFpbGFibGUpLiBUaGUgbnVtYmVyIGluIGJyYWNrZXRzIFsuLi5dIHJlZmVycyB0byB0aGUgbnVtZXJpYyB2YWx1ZSBpZGVudGlmeWluZyB0aGUgcmV2aWV3IHRpbWVmcmFtZSBtZW50aW9uZWQgaW4gdGhlIHByZXZpb3VzIGNvbHVtbnMuPGJyLz5UaGUgdG90YWwgZXhwZWN0ZWQgcmV2aWV3IHRpbWUgaXMgY2FsY3VsYXRlZCBieSB0YWtpbmcgaW50byBhY2NvdW50IHdoZXRoZXIgZXRoaWNzIGNvbW1pdHRlZSByZXZpZXcgaXMgZG9uZSBzZXF1ZW50aWFsbHkgdG8gdGhlIHJlZ3VsYXRvcnkgYXV0aG9yaXR5IHJldmlldyAoaS5lLiBldGhpY3MgY29tbWl0dGVlIHBsdXMgcmVndWxhdG9yeSBhdXRob3JpdHkgcmV2aWV3IHRpbWVmcmFtZSkgIG9yIGluIHBhcmFsbGVsIChpLmUuIHRoZSBsb25nZXN0IHJldmlldyB0aW1lZnJhbWUgaXMgcmV0YWluZWQpLiBXaGVuIHRoZXJlIGlzIG5vIGluZm9ybWF0aW9uIGFib3V0IHRoZSB0eXBlIG9mIHJldmlldyBvciB3aGVuIG5laXRoZXIgdGhlIHJlZ3VsYXRvcnkgYXV0aG9yaXR5IG5vciB0aGUgZXRoaWNzIGNvbW1pdHRlZSByZXZpZXcgdGltZSBpcyBrbm93biB0aGUgY2VsbCBpcyBsZWZ0IGVtcHR5LiA8YnIvPkFsbCByZXZpZXcgdGltZWZyYW1lcyBwcm92aWRlZCBpbiB0aGlzIHN1YmplY3QgYXJlIGV4cGVjdGVkIHJldmlldyB0aW1lcyBhbmQgZG8gbm90IHJlcHJlc2VudCBhY3R1YWwgcmVndWxhdG9yeSBhdXRob3JpdHkgcGVyZm9ybWFuY2UgdGltZS4gVGhleSBhcmUgYmFzZWQgb24gcHVibGljIGluZm9ybWF0aW9uIGZyb20gcmVndWxhdG9yeSBhZ2VuY2llcyBvciBhcyBzdGF0ZWQgaW4gbGF3cywgcmVndWxhdGlvbnMgb3IgZ3VpZGFuY2UgZm9yIGluZHVzdHJ5LiBGb3IgY291bnRyaWVzIHdoaWNoIGRvIG5vdCBoYXZlIHB1YmxpY2x5IGF2YWlsYWJsZSBpbmZvcm1hdGlvbiwgdGhlIGV4cGVjdGVkIHRpbWUgaXMgcHJvdmlkZWQgYnkgZWFjaCBjb3VudHJ5IG1vZHVsZSdzIGNvbnN1bHRhbnRzLiBUaGUgV29ya2luZyBEYXlzL0NhbGVuZGFyIERheXMgaGVhZGluZyBpbmRpY2F0ZXMgd2hpY2ggc3lzdGVtIGlzIHVzZWQgYnkgdGhlIHJlZ3VsYXRvcnkgYXV0aG9yaXR5Ljxici8+TGlua3MgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcmllcyBhbmQgcmVmZXJlbmNlIGRvY3VtZW50cyBhcmUgaW5jbHVkZWQgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gb24gdGhpcyBzdWJqZWN0Ljxici8+PGJyLz5BYmJyZXZpYXRpb25zOiBBRE1FOiBBYnNvcnB0aW9uIERpc3RyaWJ1dGlvbiBNZXRhYm9saXNtIGFuZCBFeGNyZXRpb247IENNQzogQ2hlbWlzdHJ5LCBNYW51ZmFjdHVyaW5nIGFuZCBDb250cm9sczsgQ1Q6IENsaW5pY2FsIFRyaWFsOyBDVEE6IENsaW5pY2FsIFRyaWFsIEFwcGxpY2F0aW9uOyBDVE46Q2xpbmljYWwgVHJpYWwgTm90aWZpY2F0aW9uOyBDVFg6IENsaW5pY2FsIFRyaWFsIGVYZW1wdGlvbjsgRUM6IEV0aGljcyBDb21taXR0ZWU7IEdNTzogR2VuZXRpY2FsbHkgTW9kaWZpZWQgT3JnYW5pc207IElSQjogSW52ZXN0aWdhdGlvbmFsIFJldmlldyBCb2FyZDsgIE4vQTogTm90IEFwcGxpY2FibGU7IE5DRTogTmV3IENoZW1pY2FsIEVudGl0eTsgUEs6ICBQaGFybWFjb0tpbmV0aWM7IFJBOiBSZWd1bGF0b3J5IEF1dGhvcml0eS4iLCJOdW1iZXIiOjk2Njk1fSx7ImlkIjoxMTIsIlRpdGxlIjoiQ2xpbmljYWwgVHJpYWwgQXBwbGljYXRpb246IExvY2FsIFJlcXVpcmVtZW50cyIsIlNlY3Rpb25zIjoiQ2xpbmljYWwgUmVzZWFyY2giLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBwcm92aWRlcyBhbiBvdmVydmlldyBvZiB0aGUgc3BlY2lmaWMgbG9jYWwgY291bnRyeSByZXF1aXJlbWVudHMgZm9yIHJlc2VhcmNoIGludm9sdmluZyBodW1hbiBzdWJqZWN0cyBmb3IgbWVkaWNpbmFsIGRydWcgcHJvZHVjdHMsIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBvbiBhZG1pbmlzdHJhdGl2ZSBkb2N1bWVudHMsIGFncmVlbWVudHMsIGludmVzdGlnYXRpb25hbCByZXZpZXcgYm9hcmRzIChJUkIpLCBpbmZvcm1hdGlvbiBwcm92aWRlZCB0byB0cmlhbCBzdWJqZWN0cywgd2hldGhlciBhbiBpbnZlc3RpZ2F0b3LigJlzIGJyb2NodXJlIGlzIHJlcXVpcmVkLCBwcm90b2NvbHMsIGludmVzdGlnYXRpb25hbCBtZWRpY2luYWwgcHJvZHVjdHMgKGluY2x1ZGluZyBxdWFsaXR5KSwgdHJpYWwgc3RhZmYsIHRyaWFsIGZhY2lsaXRpZXMsIGZpbmFuY2lhbC9pbnN1cmFuY2UsIGFuZCBDVEEgc3VibWlzc2lvbiBkb2N1bWVudGF0aW9uLjxici8+TGlua3MgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcmllcyBhbmQgcmVmZXJlbmNlIGRvY3VtZW50cyBhcmUgaW5jbHVkZWQgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gb24gdGhpcyBzdWJqZWN0LiA8YnIvPjxici8+QWJicmV2aWF0aW9uczogQ09JOiBDb25mbGljdCBvZiBJbnRlcmVzdDsgQ1JGOiBDYXNlIFJlcG9ydCBGb3JtOyBDUk86IENvbnRyYWN0IFJlc2VhcmNoIE9yZ2FuaXphdGlvbjsgQ1Q6IENsaW5pY2FsIFRyaWFsOyBDVEE6IENsaW5pY2FsIFRyaWFsIEFwcGxpY2F0aW9uOyBDVEQ6IENvbW1vbiBUZWNobmljYWwgRG9jdW1lbnQ7IENWOiBDdXJyaWN1bHVtIFZpdGFlOyBFQzogRXRoaWNzIENvbW1pdHRlZTsgRUVBOiBFdXJvcGVhbiBFY29ub21pYyBBcmVhOyBFVTogRXVyb3BlYW4gVW5pb247IEdDUDogR29vZCBDbGluaWNhbCBQcmFjdGljZTsgR0xQOiBHb29kIExhYm9yYXRvcnkgUHJhY3RpY2U7IEdNTzogR2VuZXRpY2FsbHkgTW9kaWZpZWQgT3JnYW5pc207IEdNUDogR29vZCBNYW51ZmFjdHVyaW5nIFByYWN0aWNlOyBJQjogSW52ZXN0aWdhdG9yJ3MgQnJvY2h1cmU7IElDRjogSW5mb3JtZWQgQ29uc2VudCBGb3JtOyBJRUM6IEluc3RpdHV0aW9uYWwgRXRoaWNzIENvbW1pdHRlZTsgSU1QOiBJbnZlc3RpZ2F0aW9uYWwgTWVkaWNpbmFsIFByb2R1Y3Q7IElNUEQ6IEludmVzdGlnYXRpb25hbCBNZWRpY2luYWwgUHJvZHVjdCBEb3NzaWVyOyBJUkI6IEluc3RpdHV0aW9uYWwgUmV2aWV3IEJvYXJkOyBJU1A6IEluc3RpdHV0byBkZSBTYWx1ZCBQdWJsaWNhOyBNQTogTWFya2V0aW5nIEF1dGhvcml6YXRpb247IE1TOiBNZW1iZXIgU3RhdGU7IFBJOiBQcmluY2lwYWwgSW52ZXN0aWdhdG9yOyBTQ09UVDogU3RhbmRpbmcgQ29tbWl0dGVlIG9uIFRoZXJhcGV1dGljIFRyaWFsczsgU0ZEQTogU2F1ZGkgRm9vZCBhbmQgRHJ1ZyBBdXRob3JpdHk7IFNQQyBvciBTbVBDOiBTdW1tYXJ5IG9mIFByb2R1Y3QgQ2hhcmFjdGVyaXN0aWNzOyBUU0U6IFRyYW5zbWlzc2libGUgU3BvbmdpZm9ybSBFbmNlcGhhbG9wYXRoeSIsIk51bWJlciI6OTgyODB9LHsiaWQiOjEwNiwiVGl0bGUiOiJDbGluaWNhbCBUcmlhbCBSZWdpc3RyaWVzIGFuZCBSZXN1bHRzIERpc2Nsb3N1cmUiLCJTZWN0aW9ucyI6IkNsaW5pY2FsIFJlc2VhcmNoIiwiQWJzdHJhY3QiOiJDbGluaWNhbCB0cmlhbCByZWdpc3RyaWVzIGFyZSBwdWJsaWMgbGlzdGluZ3Mgb2YgZ292ZXJubWVudGFsbHkgb3IgcHJpdmF0ZWx5IHN1cHBvcnRlZCBjbGluaWNhbCB0cmlhbHMuIFJlZ2lzdHJpZXMgcHJvdmlkZSBwdWJsaWMgaW5mb3JtYXRpb24gYWJvdXQgYSB0cmlhbCdzIHB1cnBvc2UsIHdobyBtYXkgcGFydGljaXBhdGUsIGxvY2F0aW9ucywgYW5kIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uIENsaW5pY2FsIHRyaWFsIHJlc3VsdHMgZGlzY2xvc3VyZXMgcmVmZXJzIHRvIGEgcHVibGljIGxpc3Rpbmcgb2YgZGV0YWlscyBvbiB0aGUgcmVzdWx0cyBvZiBjbGluaWNhbCB0cmlhbHMgZm9yIHByb2R1Y3RzIGFwcHJvdmVkIGluIGEgZ2l2ZW4gY291bnRyeS4gPGJyLz48YnIvPlRoaXMgc3ViamVjdCBjb21waWxlcyB0aGUgcmVndWxhdG9yeSBvciBsZWdpc2xhdGl2ZSByZXF1aXJlbWVudHMgYXBwbHlpbmcgdG8gY2xpbmljYWwgdHJpYWwgcmVnaXN0cmllcyBhbmQgY2xpbmljYWwgdHJpYWwgcmVzdWx0cyBkaXNjbG9zdXJlLjxici8+PGJyLz5Gb3IgZWFjaCBjb3VudHJ5LCB0aGUgYXZhaWxhYmlsaXR5IG9mIGEgbG9jYWwgcmVnaXN0cnkgaXMgaW5kaWNhdGVkLCB3aXRoIGh5cGVybGlua3MgdG8gYWNjZXNzIGl0LiBJbmZvcm1hdGlvbiBpcyBwcm92aWRlZCB0byBzcGVjaWZ5IHdoZXRoZXIgY2xpbmljYWwgdHJpYWxzIHJlZ2lzdHJhdGlvbiBpcyBtYW5kYXRvcnkgLSBpZiBzbywgYWNjb3JkaW5nIHRvIHdoaWNoIG9mZmljaWFsIGRvY3VtZW50IC0gb3Igdm9sdW50YXJ5LiBUeXBlcyBvZiB0cmlhbHMgbmVlZGluZyB0byBiZSByZWdpc3RlcmVkIGFuZCBhcHBsaWNhYmxlIHRpbWVsaW5lcyBhcmUgYWxzbyBkZXRhaWxlZC48YnIvPjxici8+Rm9yIGNsaW5pY2FsIHRyaWFsIHJlc3VsdHMgZGlzY2xvc3VyZSwgaW5mb3JtYXRpb24gaXMgcHJvdmlkZWQgdG8gaW5kaWNhdGUgaWYgZGlzY2xvc3VyZSBpcyByZXF1aXJlZCBhbmQgd2hldGhlciB0aGlzIHJlcXVpcmVtZW50IGlzIG1hbmRhdG9yeSBvciB2b2x1bnRhcnk7IGlmIGxvY2FsIGRpc2Nsb3N1cmUgaXMgcmVxdWlyZWQsIHRoZSB0eXBlcyBvZiB0cmlhbHMgYW5kIHRpbWluZyB0byBzdWJtaXQgZGF0YS4iLCJOdW1iZXIiOjk2Nzk2fSx7ImlkIjoxNjgsIlRpdGxlIjoiSW52ZXN0aWdhdGlvbmFsIE1lZGljaW5hbCBQcm9kdWN0IChJTVApIExhYmVsaW5nIiwiU2VjdGlvbnMiOiJDbGluaWNhbCBSZXNlYXJjaCIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IHByb3ZpZGVzIGFuIG92ZXJ2aWV3IG9mIHRoZSBzcGVjaWZpYyBsb2NhbCBjb3VudHJ5IHJlcXVpcmVtZW50cyBmb3IgdGhlIGxhYmVsaW5nIG9mIGludmVzdGlnYXRpb25hbCBtZWRpY2luYWwgcHJvZHVjdHMgKElNUCkuIEFsdGhvdWdoIG1hbnkgaXRlbXMgYXJlIGluY2x1ZGVkIGFzIHBlciBoYXJtb25pemVkIEdvb2QgTWFudWZhY3R1cmluZyBQcmFjdGljZSAoR01QKSBndWlkZWxpbmVzLCBzdGlsbCBzb21lIHNwZWNpZmljIGNvdW50cnkgcmVxdWlyZW1lbnQgYXBwbHksIHN1Y2ggYXMgdGhlIGxhbmd1YWdlcyB0byBiZSB1c2VkLCBsb2NhbCB3YXJuaW5ncyBhbmQgZXhwcmVzc2lvbnMuIEl0ZW1zIGV4cGxvcmVkIGZvciB0aGlzIHN1YmplY3QgaW5jbHVkZSBpbmZvcm1hdGlvbiBhYm91dCA6IDxici8+4oCiXHRMYW5ndWFnZTxici8+4oCiXHRJbnZlc3RpZ2F0aW9uYWwgTWVkaWNpbmFsIFByb2R1Y3QgPGJyLz7igKJcdFNwb25zb3IsIENsaW5pY2FsIFJlc2VhcmNoIE9yZ2FuaXphdGlvbiAoQ1JPKSwgSW52ZXN0aWdhdG9yLCBNYW51ZmFjdHVyZXI8YnIvPuKAolx0VHJpYWwgU3ViamVjdDxici8+4oCiXHRUcmlhbCBpZGVudGlmaWNhdGlvbjxici8+4oCiXHRNYW5kYXRvcnkgd2FybmluZ3M8YnIvPuKAolx0RXhwaXJ5IGRhdGU8YnIvPuKAolx0QmF0Y2gvbG90IG51bWJlcjxici8+4oCiXHRTdG9yYWdlIGNvbmRpdGlvbnM8YnIvPjxici8+TGlua3MgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcmllcyBhbmQgY2xpbmljYWwgdHJpYWxzIHNwZWNpZmljIHJlZmVyZW5jZSB0ZXh0cyBhcmUgaW5jbHVkZWQuIiwiTnVtYmVyIjoxMzU1MzR9LHsiaWQiOjE5OSwiVGl0bGUiOiJNZWRpY2FsIERldmljZXMgYW5kIElWRHMgSW1wb3J0IGFuZCBFeHBvcnQgUmVxdWlyZW1lbnRzIiwiU2VjdGlvbnMiOiJJbXBvcnQgYW5kIEV4cG9ydCIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IGZvY3VzZXMgb24gY3VycmVudCBNRHMgYW5kIElWRHMgaW1wb3J0IGFuZCBleHBvcnQgcHJvY2VkdXJlcyBpbiBlYWNoIGNvdW50cnkuIEl0IGhpZ2hsaWdodHMgdGhlIHJlcXVpcmVkIGRvY3VtZW50YXRpb24gb3IgYXBwbGljYXRpb24gcHJvY2VkdXJlcyB0byBiZSBzdWJtaXR0ZWQgZm9yIGltcG9ydCBhbmQgZXhwb3J0IGFjdGl2aXRpZXMuPGJyLz5MaW5rcyB0byByZWxhdGVkIHJlZmVyZW5jZSBkb2N1bWVudHMgYW5kIGZvcm1zIGFyZSBpbmNsdWRlZCBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiB0aGlzIHN1YmplY3QuIiwiTnVtYmVyIjoyODExNzh9LHsiaWQiOjE3MiwiVGl0bGUiOiJHWFBzIiwiU2VjdGlvbnMiOiJRdWFsaXR5IEFzc3VyYW5jZSIsIkFic3RyYWN0IjoiVGhpcyBzdWJqZWN0IG9mZmVycyBhIGxpc3Qgb2YgcmVmZXJlbmNlcyB0byBHb29kIE1hbnVmYWN0dXJpbmcgUHJhY3RpY2UgKEdNUCksIEdvb2QgTGFib3JhdG9yeSBQcmFjdGljZSAoR0xQKSwgR29vZCBDbGluaWNhbCBQcmFjdGljZSAoR0NQKSBhbmQgR29vZCBEaXN0cmlidXRpb24gUHJhY3RpY2UgKEdEUCkgZ3VpZGVsaW5lcyBpbiBmb3JjZSBpbiBhbGwgY292ZXJlZCBjb3VudHJ5IG1vZHVsZXMgY29tcGxlbWVudGVkIGJ5IG5vdGVzIHdoZW4gc3VjaCB0ZXh0cyBoYXZlIG5vdCBiZWVuIGFkb3B0ZWQuIiwiTnVtYmVyIjoxNTAzMjh9LHsiaWQiOjExMCwiVGl0bGUiOiJQb3N0LU1hcmtldGluZyBQaGFybWFjb3ZpZ2lsYW5jZSBSZXF1aXJlbWVudHMiLCJTZWN0aW9ucyI6IlBoYXJtYWNvdmlnaWxhbmNlIGFuZCBSaXNrIE1hbmFnZW1lbnQiLCJBYnN0cmFjdCI6IlRoaXMgc3ViamVjdCBwcm92aWRlcyBhbiBvdmVydmlldyBvZiByZXBvcnRpbmcgcmVxdWlyZW1lbnRzIHRvIHJlZ3VsYXRvcnkgYWdlbmNpZXMgZm9yIGRvbWVzdGljIGFuZCBmb3JlaWduLCBzZXJpb3VzIGFuZCBub24gc2VyaW91cywgYWR2ZXJzZSBkcnVnIHJlYWN0aW9ucyAoQURScykuIFRoZSBvdmVydmlldyBwcm92aWRlcyBpbmZvcm1hdGlvbiBvbiB0aGUgbWFuZGF0b3J5IGRlYWRsaW5lcyBwcm92aWRlZCB0byBtYXJrZXRpbmcgYXV0aG9yaXphdGlvbiBob2xkZXJzIHRvIG5vdGlmeSByZWd1bGF0b3J5IGF1dGhvcml0aWVzIChpbiBjYWxlbmRhciBkYXlzIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkKSBhbmQgdGhlIG1ldGhvZCB0byBmb2xsb3cgZm9yIGEgcHJvbXB0IG5vdGlmaWNhdGlvbi4gPGJyLz5UaGlzIHN1YmplY3QgYWxzbyBleHBsb3JlcyBhdXRob3JpdHkgcmVxdWlyZW1lbnRzIHdpdGggcmVnYXJkcyB0byBwZXJpb2RpYyBzYWZldHkgcmVwb3J0cywgdGhlaXIgZm9ybWF0LCBmcmVxdWVuY3kgb2Ygc3VibWlzc2lvbnMsIGFuZCBzdWJtaXNzaW9uIGFkZHJlc3MuPGJyLz5MaW5rcyBhcmUgaW5jbHVkZWQgdG8gcmVsYXRlZCBSZWd1bGF0b3J5IFN1bW1hcmllcyBhbmQgcmVmZXJlbmNlIGRvY3VtZW50cyAoaW5jbHVkaW5nIGZvcm1zIGFuZCByZWZlcmVuY2UgdGV4dHMgc3BlY2lmaWMgdG8gcGVyaW9kaWMgcmVwb3J0aW5nKS48YnIvPkFiYnJldmlhdGlvbnM6IEFEUjogQWR2ZXJzZSBEcnVnIFJlYWN0aW9uOyBDSU9NUzogQ291bmNpbCBmb3IgSW50ZXJuYXRpb25hbCBPcmdhbml6YXRpb25zIG9mIE1lZGljYWwgU2NpZW5jZXM7IERDUCBvciBEUDogRGVjZW50cmFsaXplZCBQcm9jZWR1cmU7IEVFQTogRXVyb3BlYW4gRWNvbm9taWMgQXJlYTsgRU1BOiBFdXJvcGVhbiBNZWRpY2luZXMgQWdlbmN5OyBFVTogRXVyb3BlYW4gVW5pb247IEZEQTogRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgSUNIOiBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gSGFybW9uaXphdGlvbjsgTUE6IE1hcmtldGluZyBBcHByb3ZhbDsgTUFIOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBIb2xkZXI7IE1SUDogTXV0dWFsIFJlY29nbml0aW9uIFByb2NlZHVyZTsgTVM6IE1lbWJlciBTdGF0ZTsgUEJSRVI6IFBlcmlvZGljIEJlbmVmaXQgUmlzayBFdmFsdWF0aW9uIFJlcG9ydDsgUFNVUjogUGVyaW9kaWMgU2FmZXR5IFVwZGF0ZSBSZXBvcnQ7IFJBOiBSZWd1bGF0b3J5IEF1dGhvcml0eTsgUk1TOiBSZWZlcmVuY2UgTWVtYmVyIFN0YXRlOyBTRkRBOiBTYXVkaSBGb29kIGFuZCBEcnVnIEF1dGhvcml0eTxici8+PGJyLz5Ob3RlOiBmb3IgVVMsIFwiQURSXCIgKEFkdmVyc2UgRHJ1ZyBSZWFjdGlvbnMpIHJhdGhlciByZWZlcnMgdG8gXCJBREVcIiAoQWR2ZXJzZSBEcnVnIEV4cGVyaWVuY2UpIHdoaWNoIGRvZXMgbm90IGluY2x1ZGUgY2F1c2FsaXR5IGFzc2Vzc21lbnQuIiwiTnVtYmVyIjo5Nzc5OH0seyJpZCI6MTYxLCJUaXRsZSI6IlByZS1NYXJrZXRpbmcgUGhhcm1hY292aWdpbGFuY2UgUmVxdWlyZW1lbnRzIiwiU2VjdGlvbnMiOiJQaGFybWFjb3ZpZ2lsYW5jZSBhbmQgUmlzayBNYW5hZ2VtZW50IiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgcHJvdmlkZXMgYW4gb3ZlcnZpZXcgb2Ygc3BvbnNvcnMnIHJlcG9ydGluZyByZXF1aXJlbWVudHMgdG8gbmF0aW9uYWwgUmVndWxhdG9yeSBBdXRob3JpdGllcyAoUkEpIGFuZCBFdGhpY3MgQ29tbWl0dGVlcyAoRUMpIGR1cmluZyB0aGUgY29uZHVjdCBvZiBjbGluaWNhbCBUcmlhbHMuIFJlcG9ydGluZyB0aW1lbGluZXMgYXJlIGluZGljYXRlZCBpbiBjYWxlbmRhciBkYXlzIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLiBQcmUtbWFya2V0aW5nIHBlcmlvZGljIHJlcG9ydHMgbWF5IHJlZmVyIHRvIERTVVJzIChEcnVnIFNhZmV0eSBVcGRhdGUgUmVwb3J0KSwgbGluZSBsaXN0aW5ncyBvciBzZW1pLWFubnVhbCBzYWZldHkgcmVwb3J0cy4gVGhlIHRhYmxlIGluY2x1ZGVzIGxpbmtzIHRvIHJlbGF0ZWQgUmVndWxhdG9yeSBTdW1tYXJpZXMgYW5kIHJlZmVyZW5jZSBkb2N1bWVudHMuPGJyLz5BYmJyZXZpYXRpb25zOiBBRSwgQWR2ZXJzZSBFdmVudHM7IEFFTVBTLCBTcGFuaXNoIE1lZGljaW5lcyBhbmQgTWVkaWNhbCBEZXZpY2VzIEFnZW5jeTsgQUZNUFMvRkFHRywgRmVkZXJhbCBBZ2VuY3kgZm9yIE1lZGljaW5lcyBhbmQgSGVhbHRoIFByb2R1Y3RzIChCZWxnaXVtKTsgQUZTU0FQUywgRnJlbmNoIEhlYWx0aCBQcm9kdWN0cyBTYWZldHkgQWdlbmN5OyBBR0VTLCBBdXN0cmlhbiBBZ2VuY3kgZm9yIEhlYWx0aCBhbmQgRm9vZCBTYWZldHk7IEFOTSwgUm9tYW5pYW4gTmF0aW9uYWwgTWVkaWNpbmVzIGFuZCBNZWRpY2FsIERldmljZXMgQWdlbmN5OyBBTk1BVCwgTmF0aW9uYWwgQWRtaW5pc3RyYXRpb24gZm9yIE1lZGljaW5lcy9Gb29kIGFuZCBNZWRpY2FsIERldmljZXMgKEFyZ2VudGluYSk7IEFOVklTQSwgQnJhemlsaWFuIEhlYWx0aCBTdXJ2ZWlsbGFuY2UgQWdlbmN5OyBBUFJNQywgQWR2ZXJzZSBQcm9kdWN0IFJlYWN0aW9uIE1vbml0b3JpbmcgQ2VudGVyIChUaGFpbGFuZCk7IEFSLCBBZHZlcnNlIFJlYWN0aW9uOyBCREEsIEJ1bGdhcmlhbiBEcnVnIEFnZW5jeTsgQ0RTQ08sIENlbnRyYWwgRHJ1Z3MgU3RhbmRhcmQgQ29udHJvbCBPcmdhbml6YXRpb24gKEluZGlhKTsgQ0VOSU1FRiwgTmF0aW9uYWwgRHJ1ZyBJbmZvcm1hdGlvbiBhbmQgUGhhcm1hY292aWdpbGFuY2UgQ2VudHJlL0NlbnRybyBOYWNpb25hbCBkZSBJbmZvcm1hY2nDs24gZGUgTWVkaWNhbWVudG9zIHkgRmFybWFjb3ZpZ2lsYW5jaWEgIChDaGlsZSk7IENJT01TLCBDb3VuY2lsIGZvciBJbnRlcm5hdGlvbmFsIE9yZ2FuaXphdGlvbnMgb2YgTWVkaWNhbCBTY2llbmNlczsgQ05GViwgTmF0aW9uYWwgUGhhcm1hY292aWdpbGFuY2UgQ2VudGVyL0NlbnRybyBOYWNpb25hbCBkZSBGYXJtYWNvdmlnbGFuY2lhIChNZXhpY28pOyBDT05FUCwgTmF0aW9uYWwgQ29tbWlzc2lvbiBmb3IgUmVzZWFyY2ggRXRoaWNzL0NvbWlzc8OjbyBOYWNpb25hbCBkZSDDiXRpY2EgZW0gUGVzcXVpc2EgKEJyYXppbCk7IENULCBDbGluaWNhbCBUcmlhbDsgQ1ROLCBDbGluaWNhbCBUcmlhbCBOb3RpZmljYXRpb24gKEF1c3RyYWxpYSk7IENUWCwgQ2xpbmljYWwgVHJpYWwgRXhlbXB0aW9uIChBdXN0cmFsaWEpOyBEQ1Agb3IgRFAsIERlY2VudHJhbGl6ZWQgUHJvY2VkdXJlOyBET0gsIERlcGFydG1lbnQgb2YgSGVhbHRoIChET0gpOyBFQ0lDLCBDb21pc3PDo28gZGUgw4l0aWNhIHBhcmEgSW52ZXN0aWdhw6fDo28gQ2zDrW5pY2EgKFBvcnR1Z2FsKTsgRUVBLCBFdXJvcGVhbiBFY29ub21pYyBBcmVhOyBFTUEsIEV1cm9wZWFuIE1lZGljaW5lcyBBZ2VuY3k7IEVPRiwgTmF0aW9uYWwgT3JnYW5pemF0aW9uIGZvciBNZWRpY2luZXMgKEdyZWVjZSk7IEV0aGljcyBSZXZpZXcgQ29tbWl0dGVlIChFVFQgS0ZFQikgKEh1bmdhcnkpOyBFVSwgRXVyb3BlYW4gVW5pb247IEVWQ1RNLCAgRXVkcmFWaWdpbGFuY2UgQ2xpbmljYWwgdHJpYWwgTW9kdWxlOyBFVldFQiwgRXVkcmFWaWdpbGFuY2UgR2F0ZXdheTsgRkRBLCBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uOyBGSU1FQSwgRmlubmlzaCBNZWRpY2luZXMgQWdlbmN5OyBHQ1AsIEdvb2QgQ2xpbmljYWwgUHJhY3RpY2VzOyBIUFJBOiBIZWFsdGggUHJvZHVjdHMgUmVndWxhdG9yeSBBdXRob3JpdHkgKElyZWxhbmQpOyBIUkVDOiBIdW1hbiBSZXNlYXJjaCBFdGhpY3MgQ29tbWl0dGVlcyAoQXVzdHJhbGlhKTsgSUNILCBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gSGFybW9uaXphdGlvbjsgSUNTUiwgSW5kaXZpZHVhbCBDYXNlIFNhZmV0eSBSZXBvcnRzOyBJRE1DLCBJbmRlcGVuZGVudCBEYXRhLU1vbml0b3JpbmcgQ29tbWl0dGVlOyBJRUMsIEluc3RpdHV0aW9uYWwgRXRoaWNzIENvbW1pdHRlZTsgSUVHTSwgR2VuZXJhbCBEaXJlY3RvcmF0ZSBvZiBQaGFybWFjZXV0aWNhbHMgYW5kIFBoYXJtYWN5IChUdXJrZXkpOyBJTVA6IEludmVzdGlnYXRpb25hbCBNZWRpY2luYWwgUHJvZHVjdDsgSU5WSU1BLCBOYXRpb25hbCBJbnN0aXR1dGUgb2YgRm9vZCBhbmQgRHJ1ZyBNb25pdG9yaW5nIChDb2xvbWJpYSk7IExQTFYsIExhc3QgUGF0aWVudCBMYXN0IFZpc2l0OyBMUE8sIExhc3QgUGF0aWVudCBPdXQ7IE1BLCBNYXJrZXRpbmcgQXBwcm92YWw7IE1BSCwgTWFya2V0aW5nIEF1dGhvcml6YXRpb24gSG9sZGVyOyBNRUIsIE1lZGljaW5lcyBFdmFsdWF0aW9uIEJvYXJkIChOZXRoZXJsYW5kcyk7IE1IUkEsIE1lZGljaW5lcyBhbmQgSGVhbHRoY2FyZSBQcm9kdWN0cyBSZWd1bGF0b3J5IEFnZW5jeSAoVUspOyBNb0gsIE1pbmlzdHJ5IG9mIEhlYWx0aDsgTVJQLCBNdXR1YWwgUmVjb2duaXRpb24gUHJvY2VkdXJlOyBNUywgTWVtYmVyIFN0YXRlOyBOQURGQywgTmF0aW9uYWwgQWdlbmN5IG9mIERydWcgYW5kIEZvb2QgQ29udHJvbCAoSW5kb25lc2lhKTsgTk1NREEsIE5hdGlvbmFsIE1lZGljaW5lcyBhbmQgTWVkaWNhbCBEZXZpY2VzIEFnZW5jeSAoUm9tYW5pYSk7IE5vTUEsIE5vcndlZ2lhbiBNZWRpY2luZXMgQWdlbmN5OyBOUENCLCBOYXRpb25hbCBQaGFybWFjZXV0aWNhbCBDb250cm9sIEJ1cmVhdSAoTWFsYXlzaWEpOyBOUkVTLCBOYXRpb25hbCBSZXNlYXJjaCBFdGhpY3MgU2VydmljZTsgT0dJVFQsIE9maWNpbmEgR2VuZXJhbCBkZSBJbnZlc3RpZ2FjacOzbiB5IFRyYW5zZmVyZW5jaWEgZGUgVGVjbm9sb2fDrWEgKFBlcnUpOyBPR1lJLCBOYXRpb25hbCBJbnN0aXR1dGUgb2YgUGhhcm1hY3kgKEh1bmdhcnkpOyBQRkRBLCBQcm92aW5jaWFsIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gKENoaW5hKTsgUE1EQSwgUGhhcm1hY2V1dGljYWxzIGFuZCBNZWRpY2FsIERldmljZXMgQWdlbmN5IChKYXBhbik7IFJBLCBSZWd1bGF0b3J5IEF1dGhvcml0eTsgUkVDLCBSZXNlYXJjaCBFdGhpY3MgQ29tbWl0dGVlIChVSyk7IERDR0ksIERydWcgQ29udHJvbGxlciBHZW5lcmFsIG9mIEluZGlhOyBSTVMsIFJlZmVyZW5jZSBNZW1iZXIgU3RhdGU7IFNBRSwgU2VyaW91cyBBZHZlcnNlIEV2ZW50OyBTQU0sIFN0YXRlIEFnZW5jeSBvZiBNZWRpY2luZXMgKEVzdG9uaWEpOyBTRUFEUiwgU2VyaW91cyBFeHBlY3RlZCBBZHZlcnNlIERydWcgUmVhY3Rpb247IFNGREEsIFN0YXRlIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gKENoaW5hKTsgU0lEQywgU3RhdGUgSW5zdGl0dXRlIGZvciBEcnVnIENvbnRyb2wgKFNsb3Zha2lhKTsgU01DQSwgU3RhdGUgTWVkaWNpbmVzIENvbnRyb2wgQWdlbmN5IChMaXRodWFuaWEpOyBTw5pLTCAsIFN0YXRlIEluc3RpdHV0ZSBmb3IgRHJ1ZyBDb250cm9sIChDemVjayBSZXAuKTsgU1VTQVIsIFN1c3BlY3RlZCBVbmV4cGVjdGVkIFNlcmlvdXMgQWR2ZXJzZSBSZWFjdGlvbjsgVERDRCwgVGhhaSBEcnVnIENvbnRyb2wgRGl2aXNpb247IFRHQSwgVGhlcmFwZXV0aWMgR29vZHMgQWRtaW5pc3RyYXRpb24gKEF1c3RyYWxpYSk7IFhNTCwgRXh0ZW5zaWJsZSBNYXJrdXAgTGFuZ3VhZ2UuIiwiTnVtYmVyIjoxMTY3MDF9LHsiaWQiOjE3MSwiVGl0bGUiOiJSaXNrIE1hbmFnZW1lbnQgYW5kIFF1YWxpZmllZCBQZXJzb24gZm9yIFBoYXJtYWNvdmlnaWxhbmNlIiwiU2VjdGlvbnMiOiJQaGFybWFjb3ZpZ2lsYW5jZSBhbmQgUmlzayBNYW5hZ2VtZW50IiwiQWJzdHJhY3QiOiJUaGlzIHN1YmplY3QgaWRlbnRpZmllcyBDb3VudHJpZXMgcmVxdWlyaW5nIHJpc2sgbWFuYWdlbWVudCBwbGFucy9zeXN0ZW1zIGFuZCBwb2ludHMgdG8gdGhlIHJlbGV2YW50IGd1aWRlbGluZSBkZXNjcmliaW5nIGl0Ljxici8+SXQgYWxzbyBoaWdobGlnaHRzIHRoZSBuZWVkIGZvciBhcHBsaWNhbnRzL21hcmtldGluZyBhdXRob3Jpc2F0aW9uIGhvbGRlcnMgdG8gaGF2ZSBhIHF1YWxpZmllZCBwZXJzb24gZm9yIHBoYXJtYWNvdmlnaWxhbmNlLiBJdCBkZXRhaWxzIHJlcXVpcmVkIHF1YWxpZmljYXRpb25zLCByb2xlcyBhbmQgcmVzcG9uc2liaWxpdGllcyBhbmQgd2hlcmUgaGUvc2hlIG11c3QgcmVzaWRlLjxici8+TGlua3MgYXJlIGluY2x1ZGVkIHRvIGxvY2FsIGxlZ2lzbGF0aW9uIGFuZCByZWd1bGF0b3J5IHN1bW1hcmllcy4iLCJOdW1iZXIiOjE0NjYzMX0seyJpZCI6MTU3LCJUaXRsZSI6IkNlcnRpZmljYXRlIG9mIFBoYXJtYWNldXRpY2FsIFByb2R1Y3QiLCJTZWN0aW9ucyI6IkltcG9ydCBhbmQgRXhwb3J0IiwiQWJzdHJhY3QiOiJUaGUgQ2VydGlmaWNhdGUgb2YgUGhhcm1hY2V1dGljYWwgUHJvZHVjdCAoQ1BQKSBpcyBhIHN0YW5kYXJkIGluZm9ybWF0aW9uIGRvY3VtZW50IGV4Y2hhbmdlZCBiZXR3ZWVuIGV4cG9ydGluZyBhbmQgaW1wb3J0aW5nIGF1dGhvcml0aWVzIHBhcnRpY2lwYXRpbmcgaW4gdGhlIFdITyBDZXJ0aWZpY2F0aW9uIFNjaGVtZSBvbiB0aGUgUXVhbGl0eSBvZiBQcm9kdWN0cyBtb3ZpbmcgaW4gSW50ZXJuYXRpb25hbCBDb21tZXJjZSBjZXJ0aWZ5aW5nIHRoYXQgdGhlIHByb2R1Y3QgaXMgbWFudWZhY3R1cmVkIHVuZGVyIEdNUCBjb25kaXRpb25zIGFuZCBnaXZpbmcgaW5mb3JtYXRpb24gb24gdGhlIHRlcm1zIG9mIHRoZSBtYXJrZXRpbmcgYXV0aG9yaXNhdGlvbi4gPGJyLz5UaGlzIHN1YmplY3QgZGV0YWlscyBmb3IgZWFjaCBjb3VudHJ5IHdoaWNoIGlzIHRoZSBDUFAgaXNzdWluZyBhdXRob3JpdHksIHRoZSB0aW1lZnJhbWUgZm9yIGl0cyByZWxlYXNlLCB0aGUgY29zdCBhc3NvY2lhdGVkLCB0aGUgbGFuZ3VhZ2UgYSBDUFAgbWF5IGJlIGlzc3VlZCwgaXRzIHZhbGlkaXR5IGFuZCB0aGUgcHJvY2VkdXJlIGFwcGxpY2FudHMgc2hvdWxkIGZvbGxvdy4gSW4gYWRkaXRpb24gdGhpcyBzdWJqZWN0IGlkZW50aWZpZXMgQ291bnRyaWVzIGZvciB3aGljaCBhIENQUCBpcyByZXF1aXJlZCBmb3IgbWFya2V0aW5nIGF1dGhvcmlzYXRpb24gKG9yIG90aGVyIHJlZ3VsYXRvcnkgcHJvY2VkdXJlKSBhbmQgZGVzY3JpYmVzIHNwZWNpZmljIGxvY2FsIHJlcXVpcmVtZW50cyB3aXRoIHJlc3BlY3QgdG8gQ1BQIG9yaWdpbiwgdGltaW5nIGZvciBzdWJtaXNzaW9uIGFuZCBsZWdhbGl6YXRpb24uPGJyLz5BYmJyZXZpYXRpb25zOiBBRU1QUzpcdEFnZW5jaWEgZXNwYW5vbGEgZGUgbWVkaWNhbWVudG9zIHkgcHJvZHVjdG9zIHNhbml0YXJpb3M7IEFHRVM6IEFnZW50dXIgZnVyIEdlc3VuZGhlaXQgdW5kIEVybmFocnVuZ3NzaWNoZXJoZWl0OyBCUE9NOiBCYWRhbiBQZW5nYXdhcyBPYmF0IGRhbiBNYWthbmFuOyBDQUQ6IENhbmFkaWFuIERvbGxhcjsgQ0JFUjogQ2VudGVyIGZvciBCaW9sb2dpY3MgRXZhbHVhdGlvbiBhbmQgUmVzZWFyY2g7IENERVI6IENlbnRlciBmb3IgRHJ1Z3MgRXZhbHVhdGlvbiBhbmQgUmVzZWFyY2g7IENEUkg6IENlbnRlciBmb3IgRGV2aWNlcyBhbmQgUmFkaW9sb2dpY2FsIEhlYWx0aDsgQ0RTQ086IENlbnRyYWwgRHJ1Z3MgU3RhbmRhcmQgQ29udHJvbCBPcmdhbml6YXRpb247IENNQzogQ2hlbWlzdHJ5LCBNYW51ZmFjdHVyaW5nICYgQ29udHJvbDsgQ1BQOiBDZXJ0aWZpY2F0ZSBvZiBQaGFybWFjZXV0aWNhbCBQcm9kdWN0OyBHREE6IEdlbmVyaWMgRHJ1ZyBBcHBsaWNhdGlvbjsgR01QOiBHb29kIE1hbnVmYWN0dXJpbmcgUHJhY3RpY2U7IEhQRkI6IEhlYWx0aCBQcm9kdWN0cyBhbmQgRm9vZCBCcmFuY2g7IEpBWk1QOiBKYXZuYSBBZ2VuY2lqYSByZXB1Ymxpa2Ugc2xvdmVuaWplIHphIFpkcmF2aWxhIGluIE1lZGljaW5za2UgUHJpcG9tb2tlOyBLaUZEQTogS29yZWEgaW50ZXJuZXQgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbjsgTUFIOiBNYXJrZXRpbmcgQXV0aG9yaXphdGlvbiBIb2xkZXI7IE1DQzogTWVkaWNpbmVzIENvbnRyb2wgQ291bmNpbDsgTkNFOiBOZXcgQ2hlbWljYWwgRW50aXR5OyBOREE6IE5ldyBEcnVnIEFwcGxpY2F0aW9uOyBPVEM6IE92ZXItdGhlLUNvdW50ZXI7IFBJTDogUHJvZHVjdCBJbmZvcm1hdGlvbiBMZWFmbGV0OyBQTURBOiBQaGFybWFjZXV0aWNhbHMgYW5kIE1lZGljYWwgRGV2aWNlcyBBZ2VuY3k7IFNCUkE6IFN1bW1hcnkgQmFzaXMgZm9yIFJlZ2lzdHJhdGlvbiBBcHBsaWNhdGlvbjsgU1BDIG9yIFNtUEM6IFN1bW1hcnkgb2YgUHJvZHVjdCBDaGFyYWN0ZXJpc3RpY3M7IFRJVENLOiBUw7xya2l5ZSBJbGHDpyB2ZSBUaWJiaSBDaWhheiBLdXJ1bXUuIiwiTnVtYmVyIjoxMDkwMTd9XX0="},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = AU,CN&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:06","substeps":[{"date":"2019-06-15 01:13:06","message":"Values in the list match[Generic Products, Pre- and Post-Approval Fees, Pharmaceutical Laws and Regulations, Investigational Medicinal Product (IMP) Labeling, Medical Devices and IVDs Marketing Application Procedures, Medical Devices and IVDs Post-Marketing Device Modifications, Medical Devices and IVDs Import and Export Requirements, Change of Manufacturing Site (Finished Product), Packaging - Labeling, Medical Devices and IVDs Adverse Incidents Reporting, Medical Devices and IVDs Quality Management Systems &amp; Inspections, Regulatory and Governmental Bodies, Transparency, Certificate of Pharmaceutical Product, Pre-Marketing Pharmacovigilance Requirements, Post-Marketing Pharmacovigilance Requirements, Clinical Trial Registries and Results Disclosure, Biosimilar Products, Risk Management and Qualified Person for Pharmacovigilance, GXPs, Regulatory Bodies, Pharmacopoeias, Medical Devices and IVDs Product Classifications, Stability Data and Conditions for Finished Products, Market Authorization Approval Expected Authority Review Times, Clinical Trial Application: Local Requirements, Medical Devices and IVDs Advertising Requirements, Clinical Trial Application and Ethics Committee Expected Authority Review Times, Common Technical Document (CTD) - electronic Common Technical Document (eCTD) Acceptability, Access to Unapproved Drugs, Medical Devices and IVDs Laws and Regulations, Medical Devices and IVDs Labeling Requirements]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuU1VCX05BTUUgQVMgVGl0bGUgZnJvbSBMU19TUlYuSlBBX0dMT0JBTF9SRUdfQ09NUEFSSVNPTiBncmMgICAgICAgICBKT0lOIExTX1NSVi5UQkxfU1VCSkVDVElOU1RBTkNFIHN1YiAgICAgICAgIE9OIGdyYy5zdWJqZWN0X2lkPXN1Yi5zdWJqZWN0X2lkICAgICAgICAgSk9JTiBMU19TUlYuSlBBX0dNX01BVFJJWF9URVJSSVRPUllfREFUQSBtYXRyaXggICAgICAgICBPTiBzdWIuY291bnRyeV9pZD1tYXRyaXguY291bnRyeV9pZCAgICAgICAgIFdIRVJFIGdyYy5wcm9kdWN0X2lkIGluICgxLDYpICAgICAgICAgQU5EIG1hdHJpeC5jb2RlIGluICgnQVUnLCdDTicpICAgICA="}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual1_title&quot; in json &quot;GlobalRegComparisons.Title&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_08\")","time":"2019-06-15 01:13:06","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:13:06","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:06","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPURaLENOJmNvdW50cnlEZXB0aD1EWixDTg=="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = DZ,CN&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:08","substeps":[{"date":"2019-06-15 01:13:08","message":"Values in the list match[Generic Products, Pre- and Post-Approval Fees, Pharmaceutical Laws and Regulations, Investigational Medicinal Product (IMP) Labeling, Medical Devices and IVDs Marketing Application Procedures, Medical Devices and IVDs Post-Marketing Device Modifications, Medical Devices and IVDs Import and Export Requirements, Change of Manufacturing Site (Finished Product), Packaging - Labeling, Medical Devices and IVDs Adverse Incidents Reporting, Medical Devices and IVDs Quality Management Systems &amp; Inspections, Regulatory and Governmental Bodies, Transparency, Certificate of Pharmaceutical Product, Pre-Marketing Pharmacovigilance Requirements, Post-Marketing Pharmacovigilance Requirements, Clinical Trial Registries and Results Disclosure, Biosimilar Products, Risk Management and Qualified Person for Pharmacovigilance, GXPs, Regulatory Bodies, Pharmacopoeias, Medical Devices and IVDs Product Classifications, Stability Data and Conditions for Finished Products, Market Authorization Approval Expected Authority Review Times, Clinical Trial Application: Local Requirements, Medical Devices and IVDs Advertising Requirements, Clinical Trial Application and Ethics Committee Expected Authority Review Times, Common Technical Document (CTD) - electronic Common Technical Document (eCTD) Acceptability, Access to Unapproved Drugs, Medical Devices and IVDs Laws and Regulations, Medical Devices and IVDs Labeling Requirements]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuU1VCX05BTUUgQVMgVGl0bGUgZnJvbSBMU19TUlYuSlBBX0dMT0JBTF9SRUdfQ09NUEFSSVNPTiBncmMgICAgICAgICBKT0lOIExTX1NSVi5UQkxfU1VCSkVDVElOU1RBTkNFIHN1YiAgICAgICAgIE9OIGdyYy5zdWJqZWN0X2lkPXN1Yi5zdWJqZWN0X2lkICAgICAgICAgSk9JTiBMU19TUlYuSlBBX0dNX01BVFJJWF9URVJSSVRPUllfREFUQSBtYXRyaXggICAgICAgICBPTiBzdWIuY291bnRyeV9pZD1tYXRyaXguY291bnRyeV9pZCAgICAgICAgIFdIRVJFIGdyYy5wcm9kdWN0X2lkIGluICgxLDYpICAgICAgICAgQU5EIG1hdHJpeC5jb2RlIGluICgnRFonLCdDTicpICAgICA="}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual2_title&quot; in json &quot;GlobalRegComparisons.Title&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_08\")","time":"2019-06-15 01:13:08","title":"Response DB validation for GRC Id with no depth parameter","steps":[{"date":"2019-06-15 01:13:08","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:08","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUUmY291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUU="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = INT,CA,US,EU,AT,BE,BG,HR,CY,CZ,DK,EE,FI,FR,DE,GR,HU,IS,IR,IT,LV,LT,LU,MT,NL,NO,PL,PT,RO,RU,RS,SK,SI,SP,SE,CH,TR,UA,UK,ASE,AU,CN,HK,IN,ID,JP,MY,NZ,PH,SG,KR,TW,TH,VN,MER,SIC,AR,BR,CL,CO,CR,GT,MX,PA,PE,VE,GCC,DZ,EG,IQ,IL,JO,KE,LB,MA,NG,SA,ZA,TN,AE&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:10","substeps":[{"date":"2019-06-15 01:13:10","message":"Values in the list match[Pre- and Post-Approval Fees, Pharmaceutical Laws and Regulations, Investigational Medicinal Product (IMP) Labeling, Generic Products, Medical Devices and IVDs Marketing Application Procedures, Medical Devices and IVDs Post-Marketing Device Modifications, Medical Devices and IVDs Import and Export Requirements, Change of Manufacturing Site (Finished Product), Packaging - Labeling, Medical Devices and IVDs Adverse Incidents Reporting, Medical Devices and IVDs Quality Management Systems &amp; Inspections, Transparency, Certificate of Pharmaceutical Product, Regulatory and Governmental Bodies, Pre-Marketing Pharmacovigilance Requirements, Post-Marketing Pharmacovigilance Requirements, GXPs, Biosimilar Products, Clinical Trial Registries and Results Disclosure, Risk Management and Qualified Person for Pharmacovigilance, Regulatory Bodies, Pharmacopoeias, Medical Devices and IVDs Product Classifications, Market Authorization Approval Expected Authority Review Times, Stability Data and Conditions for Finished Products, Clinical Trial Application: Local Requirements, Medical Devices and IVDs Advertising Requirements, Clinical Trial Application and Ethics Committee Expected Authority Review Times, Common Technical Document (CTD) - electronic Common Technical Document (eCTD) Acceptability, Access to Unapproved Drugs, Medical Devices and IVDs Labeling Requirements, Medical Devices and IVDs Laws and Regulations]","status":"passed"}],"StepAttachment":[{"mime":"TXT","content":"ICAgICAgICAgIHNlbGVjdCBkaXN0aW5jdCBncmMuU1VCX05BTUUgQVMgVGl0bGUgZnJvbSBMU19TUlYuSlBBX0dMT0JBTF9SRUdfQ09NUEFSSVNPTiBncmMgICAgICAgICBKT0lOIExTX1NSVi5UQkxfU1VCSkVDVElOU1RBTkNFIHN1YiAgICAgICAgIE9OIGdyYy5zdWJqZWN0X2lkPXN1Yi5zdWJqZWN0X2lkICAgICAgICAgSk9JTiBMU19TUlYuSlBBX0dNX01BVFJJWF9URVJSSVRPUllfREFUQSBtYXRyaXggICAgICAgICBPTiBzdWIuY291bnRyeV9pZD1tYXRyaXguY291bnRyeV9pZCAgICAgICAgIFdIRVJFIGdyYy5wcm9kdWN0X2lkIGluICgxLDYpICAgICAgICAgQU5EIG1hdHJpeC5jb2RlIGluICgnSU5UJywnQ0EnLCdVUycsJ0VVJywnQVQnLCdCRScsJ0JHJywnSFInLCdDWScsJ0NaJywnREsnLCdFRScsJ0ZJJywnRlInLCdERScsJ0dSJywnSFUnLCdJUycsJ0lSJywnSVQnLCdMVicsJ0xUJywnTFUnLCdNVCcsJ05MJywnTk8nLCdQTCcsJ1BUJywnUk8nLCdSVScsJ1JTJywnU0snLCdTSScsJ1NQJywnU0UnLCdDSCcsJ1RSJywnVUEnLCdVSycsJ0FTRScsJ0FVJywnQ04nLCdISycsJ0lOJywnSUQnLCdKUCcsJ01ZJywnTlonLCdQSCcsJ1NHJywnS1InLCdUVycsJ1RIJywnVk4nLCdNRVInLCdTSUMnLCdBUicsJ0JSJywnQ0wnLCdDTycsJ0NSJywnR1QnLCdNWCcsJ1BBJywnUEUnLCdWRScsJ0dDQycsJ0RaJywnRUcnLCdJUScsJ0lMJywnSk8nLCdLRScsJ0xCJywnTUEnLCdORycsJ1NBJywnWkEnLCdUTicsJ0FFJykgICAgIA=="}],"title":"I get a response with &quot;DBQueryForId_GRCBrowse_Dual3_title&quot; in json &quot;GlobalRegComparisons.Title&quot;","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"LS-29061_11\")","time":"2019-06-15 01:13:10","title":"Check the presence of all the tags","steps":[{"date":"2019-06-15 01:13:10","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:13:10","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDYvbXIvUmV0cmlldmVTZXJ2aWNlL3Jlc3QvdjMvZ2xvYmFsUmVnQ29tcGFyaXNvbi9hbGw/Y291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUUmY291bnRyeURlcHRoPUlOVCxDQSxVUyxFVSxBVCxCRSxCRyxIUixDWSxDWixESyxFRSxGSSxGUixERSxHUixIVSxJUyxJUixJVCxMVixMVCxMVSxNVCxOTCxOTyxQTCxQVCxSTyxSVSxSUyxTSyxTSSxTUCxTRSxDSCxUUixVQSxVSyxBU0UsQVUsQ04sSEssSU4sSUQsSlAsTVksTlosUEgsU0csS1IsVFcsVEgsVk4sTUVSLFNJQyxBUixCUixDTCxDTyxDUixHVCxNWCxQQSxQRSxWRSxHQ0MsRFosRUcsSVEsSUwsSk8sS0UsTEIsTUEsTkcsU0EsWkEsVE4sQUUmZGVwdGg9ZGI="},{"mime":"TXT","content":""},{"mime":"TXT","content":""}],"title":"I pass a &quot;dataset = globalRegComparison and grcType = all and countryDepth = INT,CA,US,EU,AT,BE,BG,HR,CY,CZ,DK,EE,FI,FR,DE,GR,HU,IS,IR,IT,LV,LT,LU,MT,NL,NO,PL,PT,RO,RU,RS,SK,SI,SP,SE,CH,TR,UA,UK,ASE,AU,CN,HK,IN,ID,JP,MY,NZ,PH,SG,KR,TW,TH,VN,MER,SIC,AR,BR,CL,CO,CR,GT,MX,PA,PE,VE,GCC,DZ,EG,IQ,IL,JO,KE,LB,MA,NG,SA,ZA,TN,AE and depth = db&quot; as parameter to &quot;RetrieveCI&quot; operation","status":"passed"},{"date":"2019-06-15 01:13:10","title":"response contains &quot;GlobalRegComparisons.id&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:13:10","title":"response contains &quot;GlobalRegComparisons.Abstract&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:13:10","title":"response contains &quot;GlobalRegComparisons.Sections&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:13:10","title":"response contains &quot;GlobalRegComparisons.Title&quot; in json fields","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_LS-29061","time":"2019-06-15 01:12:58","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]