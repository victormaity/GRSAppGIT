[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"DiseaseBriefings_09\")","time":"2019-06-15 01:14:17","title":"Check for the presence of mentioned tags in the response","steps":[{"date":"2019-06-15 01:14:17","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:14:17","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDcvbXIvUmV0cmlldmVTSVNlcnZpY2UvcmVzdC92MS9yZXRyaWV2ZS9zaURpc2Vhc2VCcmllZmluZ3M/aWRMaXN0PTEwJmZpZWxkTGlzdD1yZWxhdGVkTmV3cyxkaXNlYXNlQnJpZWZpbmdOYW1lLHRhYmxlT2ZDb250ZW50cyxnbG9zc2FyeSxtZWRpYUZpbGVzLHN1Z2dlc3RlZFJlYWRpbmc="},{"mime":"TXT","content":"{"List":[{"id":"10","RelatedNews":["165095","164578","164078","163253","161089","160950","160709","157727","157386","156509","155526","155187","155186","155035","153861","153844","152325","152265","150891","150581","150542","149647","148049","147956","147827","147601","147541","147217","146990","146453","146255","145511","145487","144975","144110","144082","142677","142398","142225","142221","142062","141627","141433","141196","141067","140956","140957","140889","140785","140581","140448","139902","139687","139627","139353","139357","139282","139249","139218","138999","139068","138864","138774","138060","138074","138025","137773","137305","136977","136822","136767","136907","136533","136460","136381","136342","135639","135506","135316","135182","134778","134798","134490","134416","134290","134105","133478","133413","133398","133281","133210","132721","132703","132678","132642","132625","132623","132620","132531","132393","132414","132083","131837","131583","131570","131082","130819","130809","130699","130693","130585","130559","130492","130387","130272","129979","129955","129924","129936","129915","129899","129752","129419","129080","128546","128486","128383","128366","128311","128237","128242","127992","127890","127841","127885","127559","127415","127408","127389","127237","127200","127155","126961","126514","126565","126561","126411","126093","125976","125843","125741","125686","125674","125638","125481","125393","125384","125224","125143","125096","125024","124883","124690","124482","124374","124367","124350","124275","124100","124049","123921","123670","123639","123590","123552","123502","123348","123345","123042","122853","122728","122705","122638","122503","122366","121984","121768","121602","121543","121493","121192","121188","121163","121121","121004","120999","120982","120761","120728","120566","120464","120384","120394","120266","120263","120249","120211","120162","120127","120121","120031","120028","119987","119976","119982","119954","119943","119909","119641","119615","119530","119505","119309","119298","119255","119251","119062","118881","118754","118743","118738","118735","118667","118607","118508","118484","118307","118250","118144","118001","117789","117461","117032","117031","116977","116762","116733","116632","116543","116558","116453","116460","116408","116387","116326","116286","116252","116119","116127","116103","116068","116069","116090","116073","115904","116029","116027","115977","115892","115890","115891","115893","115889","115915","115839","115780","115764","115715","115511","115434","115416","115392","115353","115332","115309","115288","115148","115063","115028","115021","114969","114888","114808","114670","114516","114460","114414","114315","114146","114050","113998","113983","113993","113995","113976","113940","113905","113814","113802","113735","113752","113775","113732","113724","113713","113675","113684","113601","113573","113416","113401","113361","113340","113299","113239","113209","113208","113186","113136","113104","112903","112860","112773","112770","112705","112600","112589","112557","112568","112534","112459","112373","112381","112273","112249","112213","112116","112079","112078","111938","111757","111625","111599","110641","110643","110538","110473","110418","110239","110002","109874","109783","109736","109663","109538","109349","109302","109329","109267","109244","109209","109198","109165","108831","108840","108817","108608","108603","108390","108354","108337","107999","107964","107981","107945","107709","107686","107660","107506","107356","107348","107259","106933","106808","106777","106583","106325","105449","105255","105071","104899","104866","104757","104613","104565","104549","104376","104044","103938","103412","103306","103187","103279","103190","103184","103169","103005","102894","102838","102781","102542","102355","102456","102346","102389","102401","102365","102309","102265","102225","102224","102245","102236","101888","102173","102164","101936","101890","101874","101813","101854","101700","101579","101540","101534","101474","101491","101395","101336","101334","101268","101200","101144","101152","101151","101143","101134","101069","101019","100815","100706","100637","100600","100598","100522","100343","100335","100246","100135","100116","99994","100036","99991","99938","99912","99825","99775","99756","99747","99505","99496","99468","99455","99390","99351","99239","99240","99241","99209","99046","98545","98542","98525","98498","98495","98426","98408","98295","98232","98203","98149","98144","97692","97600","97642","97464","97205","97165","97088","96872","96670","96631","96430","96443","96383","96381","96018","95897","95896","95905","95889","95878","95743","95801","95740","95757","95688","95485","95473","95336","95337","95310","95226","95256","95239","95200","94919","94868","94608","94522","94531","94379","94344","94319","94317","94088","94046","94040","94037","93796","93694","93693","93697","93347","93311","93225","93129","92897","92780","92727","92664","92603","92473","92320","92274","92245","92175","92226","92148","92050","91963","91962","91901","91923","91793","91779","91666","91373","91482","91407","91187","91186","91097","91096","91053","90845","90638","90636","90563","90502","90443","90277","90225","90246","90204","90177","90096","89899","89805","89616","89584","89545","89555","89492","89459","89483","89441","89436","89390","89356","89306","89013","88984","88895","88841","88730","88476","88431","88409","88354","88332","88356","88177","88176","88136","88120","87845","87816","87773","87614","87564","87454","87508","87494","87388","87353","87145","87195","87192","87171","86994","87149","87011","87076","87060","86977","86934","86757","86698","86634","86673","86632","86607","86611","86579","86420","86444","86405","86353","86347","86274","86184","86181","86053","86048","86008","85939","85909","85598","85578","85573","85496","85125","85085","85079","85011","85025","84985","84984","84811","84816","84779","84726","84698","84692","84713","84681","84564","84623","84375","84180","84151","84071","84051","83957","83954","83953","83946","83929","83900","83840","83778","83795","83718","83671","83648","83631","83590","83588","83607","83548","83542","83493","83418","83409","83302","83266","82855","83165","83070","83056","83023","82979","82968","82907","82859","82806","82868","82864","82829","82790","82127","82651","82665","82518","82529","82486","82472","82392","82222","82053","82079","81917","81990","81837","81843","81668","81618","81440","81280","81186","81078","81109","80937","80898","80753","80720","80719","80712","80705","80599","80520","80399","80474","80472","80450","80443","80459","80403","80431","80424","80384","80293","80261","80109","80119","79962","79829","79831","79836","79646","79670","79589","79557","79510","79490","79365","79228","79093","79039","79022","78970","78914","78900","78888","78878","78874","78618","78570","78568","78608","78590","78501","78473","78432","78225","78201","78069","78062","77986","77964","77916","77859","77799","77851","77797","77772","77813","77709","77678","77392","77350","77136","77324","77283","77164","77158","77052","76981","76904","76905","76874","76873","76836","76796","76806","76780","76757","76671","76708","76655","76651","76574","76462","76352","76275","76309","76330","76313","76226","76130","76103","76060","75940","75835","75881","75891","75794","75786","75735","75635","75592","75598","75555","75561","75525","75489","75487","75481","75479","75456","75447","75319","75284","75206","75167","75126","75000","75032","74998","74990","74968","74899","74940","74891","74762","74742","74690","74644","74578","74549","74496","74442","74480","74472","74358","74253","74194","74166","74109","73852","73768","73708","73591","73574","73572","73518","73533","73546","73538","73527","73426","73408","73407","73383","73329","73355","73292","73211","73190","73168","73124","73091","73063","72970","72901","72879","72837","72820","72739","72719","72709","72592","72449","72398","72361","72339","72335","72230","72081","72066","72062","72057","71974","71866","71781","71757","71726","71696","71510","71541","71472","71439","71434","71437","71395","71403","71348","71334","71272","71246","71192","71194","71167","71169","71137","71049","71109","71122","71113","71110","71088","71072","71016","71046","70984","70943","70797","70707","70719","70673","70647","70620","70601","70562","70521","70516","70426","70403","70394","70281","70141","70106","70125","70084","70062","70024","70013","69985","69856","69880","69855","69713","69678","69690","69686","69685","69527","69605","69539","69534","69533","69535","69345","69342","69279","69254","69200","69192","69191","69073","69098","69037","69057","68909","68849","68896","68865","68778","68777","68763","68465","68368","68377","68294","68327","68250","68165","68108","68107","67850","67856","67783","67796","67713","67668","67655","67534","67618","67434","67194","67497","67431","67435","67425","67384","67377","67351","67324","67318","67190","67201","67200","67165","67095","66873","66696","66681","66639","66582","66554","66471","66456","66446","66367","66376","66375","66357","66288","66299","66298","66269","66204","66150","66137","66132","66108","66087","66063","66062","66038","66028","65948","65895","65857","65706","65721","65688","65653","65651","65647","65416","65297","65231","65162","65160","65116","65040","65034","65028","64953","64800","64790","64720","64684","64541","64659","64533","64517","64334","64295","64224","64093","64082","64089","64028","63987","64019","64018","63931","63972","63975","63974","63973","63828","63801","63824","63799","63717","63707","63636","63544","63541","63476","63459","63305","63281","63262","63256","63118","63154","63105","63051","63019","62961","62854","62916","62870","62769","62602","62502","62431","62395","62334","62319","62296","62085","61973","61833","61773","61552","61541","61487","61488","61482","61386","61311","61308","61240","61166","61127","60898","61023","61045","61074","61072","60994","60978","60969","60892","60812","60686","60612","60624","60564","60563","60561","60573","60550","60266","60521","60507","60366","60393","60423","60421","60317","60335","60227","60177","60252","60046","60054","60051","59993","60010","59828","59967","59856","59915","59906","59869","59814","59694","59732","59672","59658","59586","59535","59493","59492","59488","59353","59397","59440","59343","59371","59222","59160","59089","58923","58879","58929","58918","58917","58889","58792","58771","58741","58558","58440","58380","58239","58229","57691","57676","58090","57675","58113","58099","57958","57959","57956","57955","57916","57912","57911","57905","57869","57777","57702","57683","57611","57600","57598","57481","57510","57465","57450","57369","57311","57283","57282","57230","57210","57204","57070","57017","56870","56833","56779","56745","56704","56668","56603","56491","56488","56486","56291","56218","56217","53836","56110","56077","56045","56041","55951","55949","55900","55899","55817","55698","55522","55493","55499","55389","55367","55344","55340","55321","55239","55107","54876","54805","54806","54608","54530","54514","54381","54312","54270","54186","54185","54138","54095","54023","53980","53869","53866","53835","53807","53800","53722","53628","53706","53661","53643","53669","53640","53631","53465","53606","53427","53408","53326","53284","53272","53157","53124","53069","53080","53039","53032","52998","52956","52872","52893","52734","52632","52508","52454","52367","52341","52218","52152","52150","52130","52028","51922","51717","51671","51443","51216","51215","51210","51207","51203","51200","51180","51108","50859","50656","50477","50465","50200","50212","50134","50060","50045","49987","49961","49947","49896","49842","49839","49817","49824","49797","49796","49674","49669","49556","49435","49325","49308","49250","49036","49245","49030","49142","49054","49052","48958","48934","48863","48878","48809","48808","48820","48695","48713","48666","48660","48635","48627","48521","48492","48467","48333","48256","48181","48122","48065","48004","47949","47878","47664","47634","47574","47549","47540","47513","47372","47389","47456","47349","47365","47188","47162","47160","47078","47008","46932","46894","46862","46860","46841","46825","46802","46798","46779","46735","46592","46568","46558","46535","46448","46429","46371","46369","46341","46219","46220","46218","46217","46195","46170","46085","46130","46121","46039","46004","45908","45905","45902","45954","45903","45882","45906","45808","45708","45489","45476","45436","45395","45369","45358","45327","45273","45283","45182","45105","45061","45054","45036","44916","44749","44706","44743","44568","44581","44580","44488","44408","44445","44429","44423","44371","44340","44319","44256","44247","44219","44172","44171","44124","44114","44076","44088","44084","44018","44059","43841","44055","44054","44015","43928","43803","43784","43742","43719","43716","43674","43646","43604","43611","43589","43587","43579","43515","43512","43394","43391","43356","43264","43156","43135","43071","42956","42889","42865","42735","42719","42687","42645","42638","42630","42627","42625","42600","42595","42575","42476","42474","42338","42390","42364","42221","42216","42127","42000","41982","41948","41864","41849","41679","41638","41616","41612","41558","41513","41412","41041","41019","40843","40730","40677","40597","40582","40540","40472","40506","40462","40406","40368","40310","40221","40176","40083","40007","39837","39648","39622","39607","39399","39425","39446","39350","39310","39277","39275","39256","39280","39260","39220","39243","39160","39210","39182","39178","39174","39170","39086","39144","39141","39123","38987","38921","38954","38969","38830","38684","38676","38556","38621","38364","38540","38492","38321","38448","38403","38281","38182","38167","38044","38021","37998","37988","37965","37860","37836","37773","37700","37729","37657","37627","37596","37566","37561","37544","37514","37347","37321","37219","37196","37211","37184","37181","37028","36944","36854","36763","36829","36762","36751","36755","36744","36706","36684","36623","36574","36570","36561","36553","36551","36548","36528","36522","36448","36469","36405","36219","36212","36032","35950","35924","35912","35664","35633","35517","35508","35399","35355","35245","35244","35275","35180","35151","34956","35068","35018","34999","34998","34906","34896","34919","34889","34888","34843","34867","34720","34858","34812","34665","34548","34412","34169","34363","34324","34216","34231","34182","34053","33992","33942","33798","33858","33714","33705","33635","33542","33586","33466","33570","33505","33473","33410","33298","33165","32936","32984","32781","32829","32764","32657","32615","32565","32496","32403","32435","32326","32301","32300","32076","32113","32097","32004","32088","31942","31867","31823","31680","31719","31715","31672","31520","31606","31584","31556","31425","31443","31389","31432","31429","31408","31405","31401","31365","31370","31279","31316","31338","31301","31293","31290","31236","31139","31120","31174","31080","31033","31050","31052","31035","31049","30981","30977","30975","30871","30820","30850","30758","30738","30730","30713","30616","30588","30501","30417","30208","30283","30250","30313","30142","30196","30100","30068","30123","30075","30108","30066","30012","29916","29862","29816","29668","29665","29662","29625","29495","29574","29525","29468","29501","29447","29399","29195","29313","29142","29296","29292","29257","29137","29124","29086","28953","28870","28795","28776","28800","28796","28765","28736","28719","28706","28697","28662","28576","28508","28528","28487","28460","28193","28136","28092","28126","28106","27738","28037","27992","27903","27668","27715","27663","27651","27655","27614","27578","27448","27483","27388","27274","27209","27174","27115","27171","27169","27119","27097","27085","27019","26920","26911","26908","26755","26811","26752","26613","26523","26588","26335","26219","26093","26023","26022","25889","25885","25750","25674","25821","25716","25815","25705","25664","25621","25494","25386","25442","25425","25458","25342","25255","24866","24691","25035","24889","24793","24805","24817","24603","24670","24585","24432","24277","24250","24243","24206","24214","24125","24104","24000","23982","23954","23903","23921","23917","23874","23859","23891","23776","23813","23507","23420","23461","23175","23251","23289","23314","23312","23305","23226","23212","23194","23189","23104","23146","23115","23113","23105","23103","23099","23109","23065","23050","23048","23041","22987","22881","22740","22550","22629","22645","22643","22596","22503","22449","22465","22408","22405","22353","22229","22220","22213","22128","22087","22067","22062","22006","21878","21895","21877","21791","21802","21771","21653","21639","21638","21604","21520","21479","21478","21429","21359","21363","21235","21310","21288","21242","21218","21142","21193","21042","20925","20985","20810","20853","20608","20675","20747","20670","20700","20567","20558","20508","20481","20387","20318","20274","20293","20277","20242","20059","20052","19997","19922","19861","19779","19783","19668","19666","19630","19507","19424","19180","19175","19164","19193","19132","19172","19162","19184","19052","18779","18858","18849","18762","18727","18552","18425","18505","18465","18171","18170","18039","17867","17804","17680","17618","17536","17498","17494","17490","17333","17377","17364","17357","17354","17325","17351","17249","17352","17347","17339","17323","17228","17107","17047","17006","16801","16918","16719","16642","16668","16680","16581","16574","16661","16566","16636","16537","16471","16318","16295","16364","16286","16242","16231","16087","16062","16060","16046","16026","15945","15976","15850","15734","15633","15490","15514","15463","15394","15355","15353","15435","15363","15362","15325","15282","15201","15233","15219","15205","15204","15026","15106","14777","15001","14902","14859","14784","14743","14742","14799","14747","14781","14734","14701","14602","14645","14623","14614","14577","14572","14561","14539","14538","14509","14390","14441","14414","14344","14262","14278","14203","14201","14157","14133","14123","14009","13879","13878","13625","13763","13233","13568","13572","13569","13518","13302","13463","13484","13116","13231","13095","13093","13039","12992","12925","12858","12856","12791","12755","12745","12725","12691","12614","12561","12518","12488","12436","12433","12352","12334","12256","12278","12260","12258","12160","12127","12049","12046","11907","11806","11775","11759","11750","11752","11721","11711","11706","11653","11595","11456","11562","11552","11547","11545","11544","11543","11534","11513","11510","11529","11509","11508","11494","11496","11475","11477","11485","11482","11416","11348","11362","11293","11253","11236","11209","11150","11042","11068","11065","11057","10898","10869","10695","10631","10436","10527","10468","10495","10444","10439","10441","10446","10435","10408","10307","10306","10305","9295","9226","9173","8905","8891","8741","8732","8697","8684","8598","8599","8552","8550","8525","8516","8492","8416","8386","8378","8369","8123","8085","8045","8019","7957","7920","7764","7527","7512","7476","7449","7422","7395","7390","7287","7280","7158","7134","7131","7128","7092","7030","6942","6892","6836","6716","6683","6661","6568","6447","6408","6371","6352","6098","6079","6030","6052","5953","5952","5909","5803","5676","5584","5558","5477","5449","5247","5233","5193","5089","5108","5110","4916","4796","4288","4289","4128","4129","4131","4130","4096","4095","4070","4068","4097","3898","3770","3769","3774","3625","3627","3626","3490","3491","3487","3497","3364","3365","3366","3245","3117","740","741","607","606","605","497","1657","1655","1656","1541","1383","1384","2197","1979","1872","1873","3026","3027","2904","2683","2682","2681","2587","2585","384","385","383","388","386","382","92","98","93","100","99","96","97","2482"],"DiseaseBriefingName":"Atherosclerosis","TableOfContents":[{"id":"1366","name":"Facts about Atherosclerosis","level":"1"},{"id":"1373","name":"Pathophysiology","level":"2"},{"id":"1374","name":"Hypercholesterolemia: The Primary Risk Factor","level":"2"},{"id":"5403","name":"The Role of Inflammation and the Immune System","level":"2"},{"id":"1375","name":"Other Risk Factors","level":"2"},{"id":"3748","name":"Genetics","level":"3"},{"id":"1376","name":"Epidemiology","level":"2"},{"id":"1377","name":"Morbidity and Mortality","level":"2"},{"id":"2582","name":"Cost","level":"2"},{"id":"1367","name":"Diagnosis","level":"1"},{"id":"1378","name":"Diagnostic Imaging","level":"2"},{"id":"1368","name":"Prevention","level":"1"},{"id":"4226","name":"Lifestyle Modification","level":"2"},{"id":"1381","name":"Hormone Replacement Therapy","level":"2"},{"id":"1369","name":"Treatment","level":"1"},{"id":"1384","name":"LDL Cholesterol-Lowering Drug Therapy","level":"2"},{"id":"1385","name":"Bile Acid Sequestrants","level":"3"},{"id":"1387","name":"Fibric Acid Derivatives","level":"3"},{"id":"1388","name":"Nicotinic Acid and Derivatives","level":"3"},{"id":"1389","name":"HMG-CoA Reductase Inhibitors","level":"3"},{"id":"1390","name":"ACAT Inhibitors","level":"3"},{"id":"1391","name":"Cholesterol Absorption Inhibitors","level":"3"},{"id":"1392","name":"MTTP Inhibitors","level":"3"},{"id":"4726","name":"PCSK9 Inhibitors","level":"3"},{"id":"1395","name":"APOB Expression Inhibitors","level":"3"},{"id":"2920","name":"Thyroid Hormone Receptor Agonists","level":"3"},{"id":"1397","name":"HDL-Targeted Therapies","level":"2"},{"id":"1398","name":"Apolipoprotein A-I-Directed Therapies","level":"3"},{"id":"1400","name":"Cholesteryl Ester Transfer Protein Inhibitors","level":"3"},{"id":"1402","name":"The Role of Scavenger Receptors","level":"3"},{"id":"1403","name":"Paraoxonase as a Target","level":"3"},{"id":"1404","name":"ABCA1 Expression Enhancers","level":"3"},{"id":"1414","name":"Drugs Targeting Nuclear Hormone Receptors","level":"3"},{"id":"1405","name":"Antiinflammatory Strategies","level":"2"},{"id":"1406","name":"Statins","level":"3"},{"id":"1409","name":"Antioxidants","level":"3"},{"id":"2932","name":"Chemokine-Targeting Compounds","level":"3"},{"id":"1410","name":"Phospholipase A2 Inhibitors","level":"3"},{"id":"1411","name":"Novel Targets for Atherosclerosis","level":"2"},{"id":"1412","name":"PPAR Receptors","level":"3"},{"id":"1415","name":"Endothelial Dysfunction","level":"3"},{"id":"1413","name":"Endothelin Receptors","level":"4"},{"id":"2921","name":"Endocannabinoid System","level":"3"},{"id":"3189","name":"Combination Therapy","level":"2"},{"id":"1419","name":"Gene Therapy","level":"2"},{"id":"5402","name":"Antisense Therapy","level":"3"},{"id":"1420","name":"Natural Products and Herbal Remedies","level":"2"},{"id":"1417","name":"Current Atherosclerosis Pipeline","level":"2"},{"id":"1422","name":"Surgical Treatment","level":"2"},{"id":"4583","name":"Targets for Therapeutic Intervention","level":"1"}],"Glossary":[{"letter":"A","Terms":[{"term":"ABC Transporters","value":"See ATP-Binding Cassette (ABC) Transporters"},{"term":"ABCA","value":"See ATP-Binding Cassette Transporter-1 (ABCA1)\r\n"},{"term":"ABCA1","value":"A gene (also known as CERP, HDLDT1 and TGD) involved in cholesterol metabolism. It expresses ABCA1, an ATP-binding cassette transporter that is a 2261 amino acid integral cell membrane protein regulating secretion of excess cholesterol from macrophages into the metabolic lipoprotein HDL pathway. It has been found to be mutated in patients with Tangier disease. Mutations in this gene are also associated with familial high-density lipoprotein deficiency and atherosclerosis. It is a promising new drug target for controlling cholesterol levels in cardiovascular disease. See also ATP-Binding Cassette Transporter-1 (ABCA1)"},{"term":"Acetylcholine (ACh)","value":"Neurotransmitter at cholinergic synapses; acetic acid ester of choline."},{"term":"Acetylcholinesterase","value":"One (EC 3.1.1.7) of a family of enzymes that catalyze the hydrolysis of acetylcholine. Also known as cholinesterase."},{"term":"Acute","value":"Referring to a health-related state or exposure that indicates brief (short-term) duration and strong intensity."},{"term":"Acyl-Coenzyme A:Cholesterol O-Acyltransferase (ACAT)","value":"The major enzyme (EC 2.3.1.26) involved in the esterification of cholesterol. It is located in the endoplasmic reticulum and is involved in cholesterol absorption in the intestine, accumulation of cholesterol in macrophages in the arterial wall and assembly and secretion of VLDL in the liver."},{"term":"Adenosine 5'-Monophosphate (AMP)-Activated Protein Kinase (AMPK)","value":"A metabolite-sensing heterotrimeric enzyme complex composed of alpha, beta and gamma subunits, that is activated by AMP. The alpha subunit contains a typical serine/threonine kinase domain and a carboxy-terminal regulatory domain. The beta subunit acts as a scaffold for binding of the other two subunits and contains a glycogen-binding domain. The gamma subunit contains four cystathionine-beta-synthase (CBS) domains that play a role in AMP and ATP binding (i.e., the allosteric effectors of the kinase). AMPK is involved in the regulation of intracellular energy and is activated following myocardial ischemia. It is thought that activation of AMPK may be an endogenous cardioprotective signaling mechanism. Increased activation of AMPK increases ATP synthesis and decreases ATP utilization thus maintaining normal cellular energy stores during ischemia. Activated AMPK stimulates fatty acid oxidation, glucose transport, glycolysis and increases phosphorylation and activity of endothelial nitric oxide synthase (eNOS; expressed in cardiac myocytes); activation of AMPK also inhibits triglyceride and protein synthesis. Chronic activation of AMPK also phosphorylates transcription factors altering gene expression and modulates muscle mitochondrial biogenesis. Chronic activation of AMPK increases phosphorylation eNOS and consequent production of NO has been shown to improve vascular tone and therefore cardiac function and survival in experimental models. Thus, AMPK improves myocardial glucose and lipid metabolism and prevents ventricular contractile dysfunction in the ischemic heart. Activation of the AMPK could play a possible role in vasodilation of the cardiac cells making it an important therapeutic target in myocardial infarction. AMPK is also being investigated as a possible target for the treatment of metabolic syndrome."},{"term":"Adenovirus","value":"A DNA-containing virus that causes respiratory tract and eye infections. In gene therapy, adenoviruses are genetically modified to carry a specific gene effective against diseases such as certain types of cancer, cystic fibrosis and others."},{"term":"Adhesion","value":"The interaction of one cell with another, thereby controlling the position of a cell in lymphoid tissue or the migration of cells into tissues. It is also a prerequisite for antigen presentation and other immune effector functions."},{"term":"Adhesion Molecules","value":"Membrane-bound proteins that enable one cell to interact with another during leukocyte migration. These proteins often traverse the membrane and are linked to the cytoskeleton so that the cell may use them to gain traction on other cells or on the extracellular matrix as they migrate. These molecules are subdivided into several structural groups: selectins, immunoglobulin (Ig) supergene family and integrins. Some of these molecules are constitutively expressed by cells (e.g., CR3 on mononuclear cells), while others are induced by cytokines or cellular activation. Some must be synthesized (e.g., ICAM-1 in endothelium), while others are stored intracellularly and may be mobilized to the cell surface (LFA-1 in neutrophils)."},{"term":"Adipocyte","value":"A fat cell present in connective tissue that is enlarged with one or more fat globules. The cytoplasm is compressed into a thin envelope while the nucleus occurs at the periphery. Adipocytes have been shown to secrete various proteins including leptin and angiotensinogen."},{"term":"Adipocytokine","value":"A biologically active substance produced and secreted by an adipocyte that is involved in glucose and fatty acid metabolism. Examples include TNF-alpha, IL-6, leptin, plasminogen activator inhibitor-1 (PAI-1), C-reactive protein (CRP), angiotensinogen, adiponectin and resistin. Disruption of regulation of these cytokines could be responsible in part for the development of obesity-related disorders."},{"term":"Adipokine","value":"See Adipocytokine"},{"term":"Adiponectin","value":"An secreted protein (30 kD; also known as adipocyte complement-related protein or Acrp30) expressed exclusively in differentiated adipocytes that exhibits antiinflammatory and antiatherogenic effects and has been shown to contribute to the pathology of obesity and type 2 diabetes. Levels of this adipocytokine are abundant in plasma and it increases insulin sensitivity via stimulation of fatty oxidation, reductions in triglycerides and improvements in glucose metabolism. Adiponectin levels are inversely related to the degree of adiposity and reduced titers have been observed in insulin-resistant states. In addition, adiponectin has been shown to inhibit expression of extracellular matrix adhesive proteins in endothelial cells and atherogenic cytokines."},{"term":"Adipose Tissue","value":"A type of connective tissue composed mainly of adipocytes surrounded by reticular fibers and arranged in lobular groups or along small blood vessels. Also known as fat tissue. There are two types of adipose tissue: brown and white. Brown fat is a type of adipose tissue that is energy-dissipating or thermogenic tissue. It is composed of brown adipocytes containing multilocular lipid droplets and many well developed mitochondria. It is found in hibernating animals, pigs, rodents and newborn humans and it may play an antiobesity role in overfed animals. White fat is energy-storing adipose tissue composed of white adipocytes which contain unilocular droplets and only a few poorly developed mitochondria."},{"term":"AIDS ","value":"See Acquired Immune Deficiency Syndrome\r\n"},{"term":"Akt","value":"An enzyme also known as protein kinase B (PKB) that is involved in the phosphoinositide 3-kinase (PI3K) signal transduction pathway. Its possesses numerous modulatory affects including activation of glycogen synthesis, glycolysis and platelet activation and mediation of antiapoptotic and cell survival signaling. It has been implicated as a major factor in many types of cancer due to effects on cell growth and proliferation.\r\n"},{"term":"Aldosterone","value":"A steroid hormone (mineralocorticoid) produced by the adrenal cortex that controls salt and water balance in the kidney. Abnormally high levels of this hormone cause sodium retention, hypertension, heart rhythm irregularities and, possibly, paralysis."},{"term":"Allergenic","value":"See Antigenic"},{"term":"alphaIIb/beta3  Integrin","value":"See Integrin alphaIIb/beta3 (Fibrinogen gpIIb/IIIa) Receptor"},{"term":"AMPK","value":"See Adenosine 5'-Monophosphate (AMP)-Activated Protein Kinase"},{"term":"Amylases","value":"A group of amylolytic enzymes (EC 3.2.1.- ) produced in the pancreas and salivary glands that cleave starch, glycogen and related alpha-1,4-glucans. "},{"term":"Amylin","value":"An endogenous peptide neuroendocrine hormone synthesized in pancreatic beta cells and released together with insulin in response to hyperglycemia to control postprandial glucose levels. The hormone inhibits the release of glucagon and also delays gastric emptying. Pancreatic beta-cells can be damaged or destroyed in patients with type 1 or 2 diabetes  which can result in reduced postprandial secretion of both insulin and amylin. Amylin replacement therapy in addition to insulin replacement may result in more complete restoration of normal glucose control."},{"term":"Analgesia","value":"An insensitivity to pain."},{"term":"Angina Pectoris","value":"Paroxysmal thoracic pain commonly due to anoxia of the myocardium. Frequently it ia a symptom of coronary artery disease that can be aggravated by physical exertion, emotional stress, extreme heat or cold, heavy meals, alcohol and cigarette smoking. The two most common forms of angina pectoris are stable angina and unstable angina."},{"term":"Angiogenesis","value":"The development of new blood vessels from existing ones. Persistent upregulation of this process has been implicated in the pathogenesis of solid tumors, hematologic malignanacies, ischemic heart disease, atherosclerosis, psoriasis, rheumatoid arthritis, diabetic retinopathy and age-related macular degeneration. The inhibition of angiogenesis is an attractive antitumor therapeutic strategy that may also be effective in the treatment of rheumatoid arthritis. The induction of therapeutic angiogenesis has been proposed as a method of treating stroke and angina pectoris."},{"term":"Angiography","value":"A radiographic technique in which a radio-opaque contrast material is injected into a blood vessel in order to see its structure on X-ray. It is used to image arteries in the brain, heart, kidneys, gastrointestinal tract, aorta, neck (carotids), chest, limbs and the pulmonary circuit. Fluorescein angiopathy is used on the eyes in combination with fluorescein electroretinography to detect diabetic retinopathy. It is also a widely used for imaging atherosclerosis. The procedure is also included in balloon angioplasty used to repair blood vessels."},{"term":"Angiopathy","value":"A disease of the blood vessels (arteries, veins, and capillaries) that occurs when in individuals with chronic diabetes. Two types of angiopathy exist: macroangiopathy and microangiopathy. Macroangiopathy involves the build up of fat and blood clots in large blood vessels that stick to the vessel walls causing occlusion. Microangiopathy is a disease of smaller vessels in which vessel walls become so thick and weak that they bleed, leak protein and slow blood flow. The result is that cells such as those in the center of the eye as in the case of retinopathy do not receive an adequate blood supply and may therefore be damaged."},{"term":"Angioplasty","value":"The technique of mechanically widening a narrowed or obstructed blood vessel due to, for example, atherosclerosis. It involves passing ttightly folded balloons into the narrowed vessels and then inflating them using water pressures some 75 to 500 times normal blood pressure (6 to 20 atmospheres).\r\n"},{"term":"Angiotensin Converting Enzyme (ACE)","value":"An enzyme (EC 3.4.15.1) that cleaves the biologically inactive decapeptide angiotensin I to the active angiotensin II. High levels of ACE (normal values = 18-67 U/ml for individuals over age 20) are seen in sarcoidosis, histoplasmosis, alcoholic cirrhosis, asbestosis, berylliosis, diabetes, Hodgkin's disease, hyperthyroidism, amyloidosis, primary biliary cirrhosis, idiopathic pulmonary fibrosis, pulmonary embolism, scleroderma, silicosis, tuberculosis, Gaucher's disease and leprosy. See also Renin-Angiotensin System"},{"term":"Angiotensin I","value":"A biologically inactive decapeptide hormone that is formed in the circulation from the cleavage of angiotensinogen by renin. Angiotensin I is cleaved by angiotensin converting enzyme (ACE) resulting in the biologically active angiotensin II. See also Renin-Angiotensin System"},{"term":"Angiotensin II","value":"The active form of angiotensin that is an octapeptide synthesized from angiotensin I and rapidly destroyed. It induces marked vasoconstriction resulting in an increase in blood pressure. It has other effects including stimulation of aldosterone release and renal absorption of sodium. See also Renin-Angiotensin System"},{"term":"Angiotensin II Receptors (AT1, AT2)","value":"Receptor subtypes identified as AT1 and AT2. The G-protein-coupled AT1 receptor is responsible for the major physiological effects of angiotensin II. Agents targeting the AT1 receptor may be effective in the treatment of hypertension, heart failure and diabetic retinopathy. AT2 receptors have been localized in the rat brain, female reproductive organs and in neuronal tumor cells."},{"term":"Angiotensinogen (AGT)","value":"A polypeptide hormone (60 kD) that is an alpha-2 globulin and the substrate for renin. It is released from the liver and cleaved in the circulation by renin to form the biologically inactive decapeptide angiotensin I. Angiotensin I is then cleaved to the active angiotensin II by angiotensin converting enzyme (ACE). Angiotensin is broken down by angiotensinase. See also Renin-Angiotensin System"},{"term":"Antibody","value":"A protein synthesized by B lymphocytes in response to an antigen that has the ability to specifically bind with said antigen. Antibodies are the soluble form of the B cell's specific antigen receptors and are collectively referred to as immunoglobulins (Igs). Igs are produced in many different forms, each with different amino acid sequences and antigen binding sites. Through recruiting the complement system and various white blood cells, they protect the body by inactivating viruses and bacterial toxins and by killing invading microorganisms and larger parasites."},{"term":"Antigenic","value":"Having the properties of an antigen. Synonyms include immunogenic and allergenic."},{"term":"Antioxidant","value":"Any substance that reduces oxidative damage such as that caused by free radicals. Examples include vitamin E and beta carotene which are thought to counteract the damaging effects of oxidation."},{"term":"Antisense","value":"Refers to the complementary strand of a coding sequence of DNA (antisense DNA) or mRNA (antisense RNA). These nucleotide sequences are not templates for synthesis but interact with complementary sequences in other molecules thereby affecting their function. Antisense therapy uses a DNA or RNA sequence that has the reverse orientation (i.e., opposite \"sense\"; antisense oligonucleotide) of the DNA or RNA sequence present in a specific disease-causing target gene and when administered, it will bind to the target gene and inhibit its expression.  See also Antisense Oligonucleotide"},{"term":"Antisense Oligonucleotide","value":"Complementary strands of small segments of mRNA that bind to specific mRNA sequences encoding for disease-causing proteins. Pairing of mRNA with antisense fragments blocks initiation of protein synthesis by reducing the availability of mRNA to ribosomes. Antisense oligonucleotides have been used to inhibit viral infections and to treat cancer and other diseases."},{"term":"Apical Sodium-Dependent Bile Acid Transporter (ASBT)","value":"A protein with eight to nine transmembrane segments that is expressed in high levels in the distal half of the ileum and in the kidney. It is also known as the ileal bile acid transporter (IBAT). ASBT transports bile acid and sodium, efficiently removing bile acid from the lumen of the small intestine. It is a potential target for cholesterol-lowering agents."},{"term":"Apolipoprotein A (ApoA)","value":"The major protein component of HDL and chylomicrons that is involved in promoting the efflux of cholesterol from extrahepatic tissue to the liver where it is metabolized and excreted from the body. It is the activator of lecithin-cholesterol acyltransferase (LCAT) which forms cholesteryl esters in HDL. They consist of several different polypeptides of which the most important are apolipoprotein A-I and A-II. ApoA-I accounts for about 70% of the total HDL protein; it is also found in chylomicrons. An inverse relationship has been shown between ApoA-I/HDL cholesterol levels and the risk of atherosclerosis. Apo A-II is found in HDL and chylomicrons."},{"term":"Apolipoprotein A-I Milano (ApoA-I Milano or AIM)","value":"A mutant gene discovered in family members from a small town in Italy who are almost immune to cholesterol-related heart problems and strokes. The protein expressed by this gene prevents plaque build up in arterial walls by removing harmful cholesterol."},{"term":"Apolipoprotein B (ApoB)","value":"The major structural protein component of LDL, VLDL and IDL that is important in the secretion and transport of these lipoproteins. Atherosclerotic patients have high plasma ApoB levels while they are undetectable in individuals with abetalipoproteinaemia."},{"term":"Apolipoprotein B-100 (ApoB-100)","value":"A type of ApoB that is the major protein component of LDL, VLDL and IDL; it is not present in chylomicrons. It is a ligand for the LDL receptor. Levels are elevated in individuals with familial combined hyperlipidemia and acquired hyperlipidemia and are absent in those suffering from abetalipoproteinemia."},{"term":"Apolipoprotein E (ApoE) Epsilon4 Allele","value":"The presence of this allele on chromosome 19 is associated with an increase in neurofibrillary pathology and is a risk factor for late-onset Alzheimer's disease and stroke. Risk is increased according to the number of copies of the allele present. However, the allele is neither required nor sufficient for development of the disease. In addition, patients with multiple sclerosis who carry ApoE were found to be disabled more quickly by MS-associated symptoms. ApoE gene polymorphism may also play a role in age-related macular degeneration."},{"term":"Apoptosis","value":"An active form of cell death in which intrinsic cellular genetic programs are activated, leading to cellular suicide. Also known as programmed cell death."},{"term":"Arrhythmia","value":"Any variation from the normal rhythm of the heart beat. The two major subtypes of arrhythmia are bradycardia, or abnormally slow heart rate, and tachycardia, or abnormally high heart rate. Other types include sinus arrhythmia, premature beat, heart block, atrial fibrillation, atrial flutter, pulsus alternans and paroxysmal tachycardia."},{"term":"Arteriosclerosis","value":"A group of diseases charaterized by hardening of the walls of arteries. In one type of arteriosclerosis (atherosclerosis), fat builds up in the arterial walls and slows the flow of blood. See also Atherosclerosis."},{"term":"Atherosclerosis","value":"A type of arteriosclerosis characterized by the retention of atherogenic lipoproteins by arterial wall proteoglycans in large- and medium-sized arteries resulting in fibrosis and calcification. This buildup may slow or completely block the flow of blood. See also Arteriosclerosis"},{"term":"ATP-Binding Cassette (ABC) Transporter-1 (ABCA1)","value":"A reverse cholesterol transporter that is regulated by liver X receptors (LXRs) and retinoid X receptors (RXRs). It is a 2261 amino acid integral cell membrane protein that regulates secretion of excess cholesterol from macrophages into the metabolic lipoprotein HDL pathway. It is thought that ABCA1 transports excess free cholesterol generated by cholesteryl esters, from the inner leaflet of the plasma membrane to the cell surface, where it is solubilized into HDL particles by surface-bound apolipoprotein A-I (apoA-I) and effluxed from the cell. A mutation in the ABCA1 protein can interfere with normal transport and processing of cholesterol and has been associated with an increased risk for heart disease. See also ABCA1 gene"},{"term":"ATP-Binding Cassette (ABC) Transporters","value":"A family of highly specific cell membrane proteins that translocate substances across membranes. ABCA1, ABCG1, ABCG5, and ABCG8 act as transporters modulating cholesterol and lipoprotein metabolism. Over expression of ABCA1 in the liver and macrophages of transgenic mice has been shown to increase plasma HDL cholesterol levels and reduce diet-induced atherosclerosis. Overexpression of ABCG1 in the liver decreases plasma HDL levels suggesting a role for ABCG1 in reverse cholesterol transport. ABCG5 and ABCG8 are thought to be involved in the regulation of intestinal cholesterol absorption. Modulation of these transporters is a novel strategy for modulating cholesterol levels. ABCA4 or ABCR is a retina-specific ABC transporter expressed in rod photoreceptor cells that translocates retinyl-derivatives. Mutations in ABCA4 contribute to age-related macular degeneration. Polymorphisms in the sulfonylurea receptor gene, ABCC8 (SUR1), are associated with type 2 diabetes mellitus. Expression of ABCB1 (MDR, P-glycoprotein) increases with age in CD4+ and CD8+ T lymphocytes and may be responsible fro the hyporesponsiveness and reduction in immunoresponses observed with age. Hereditary cases of infant respiratory distress syndrome (IRDS) can be caused by mutations in the ATP-binding cassette transporter A3 (ABCA3) gene. See also ATP-Binding Cassette Transporter-1 (ABCA1)"},{"term":"Attenuate","value":"A gradual reduction."},{"term":"Autosomal Dominant","value":"A genetic trait that is expressed when it is present as a single allele. Thus, only one affected parent is needed to pass it to offspring. \r\n"},{"term":"Autosomal Recessive","value":"A genetic trait that is only expressed when it is present on both alleles of a gene. Thus,  two chromosomes bearing the gene anomaly are required, one from each parent. The risk of transmitting an autosomal recessive disease is 1/4 (25%) at each pregnancy.\r\n\r\n"},{"term":"Autosome","value":"A chromosome not involved in sex determination. The diploid human genome consists of 46 chromosomes: 22 pairs of autosomes in both males and females and 1 pair of sex chromosomes (XX in females and XY in males).\r\n"},{"term":"Axon","value":"A single process (0.25 to more than 10 microns in diameter) of a neuron that conducts impulses away from the cell body and dendrites of that neuron. In contrast to dendrites, which are usually 1.5 mm in length, axons can reach up to 50 cm in length. Those axons that are 0.5 microns in diameter are usually encased in a myelin sheath. In the brain and spinal cord (CNS), oligodendroglia cells are responsible for the sheath, while Schwann cells make up the sheath in the peripheral nervous system. In general, axons transmit impulses to other nerve or effector cells via synaptic terminals."}]},{"letter":"B","Terms":[{"term":"Beta-Adrenoceptors (Beta-Adrenergic Receptors)","value":"G protein-coupled receptors present in effector tissues that can be subdivided into beta1, beta2 and beta3. While beta1 and beta2 receptors are widely distributed, distribution of beta3 receptors is predominantly in adipocytes. Activation of beta1 receptors results in increases in cardiac rate and force of contraction, while activation of beta2 receptors causes relaxation of bronchial and vascular smooth muscle. Beta3 receptors may regulate adipocyte lipolysis in white and brown adipose tissue. Beta3 receptor agonists have been shown to inhibit hunger, increase energy expenditure, lipolysis and fat oxidation, and may be effective therapies for the treatment of diabetes and obesity; they may also be useful as a treatment of depression and discrete social anxiety disorder. Beta2-adrenoceptor antagonists are also known as beta-blockers. These agents block beta2-adrenergic effects, generally resulting in hypotensive effects. Topical beta-blockers are used as a treatment for glaucoma. See Also Beta2 Adrenoceptor (Beta2 Adrenergic Receptor)"},{"term":"Bile","value":"A greenish-yellow fluid containing cholesterol, biliary acids and salts and waste products such as bilirubin that secreted by the liver and stored in the gallbladder. It is involved in the intestinal absorption of fats and is released from the gallbladder in response to a fat-containing meal. Bile salts and acids aid in the digestion of fats. See also Biliary Acids\r\n"},{"term":"Biliary Acids","value":"Primary and secondary steroid acids (e.g., bile acid 7alpha-dehydratase, bile acid 7 alpha-dehydroxylase, bile acid-CoA ligase) present in bile. The primary bile acids are derived from cholesterol in the liver and usually conjugated with glycine or taurine that are further modified to secondary bile acids by bacteria in the intestine. They play an important role in the digestion and absorption of fat and are used in the treatment of gallstones. See also Bile\r\n"},{"term":"Bioavailability","value":"The proportion of an administered drug absorbed into the bloodstream, indicating the physiological concentration of that drug."},{"term":"Biomarker","value":"Characteristic that is objectively measured and evaluated as an indicator of normal biological processess, pathogenic processess or pharmacologic responses to a therapeutic intervention."},{"term":"Blind Trial, Single- or Double-","value":"See Single-Blind and Double-Blind"}]},{"letter":"C","Terms":[{"term":"C-Reactive Protein (CRP)","value":"A member of the pentraxin family and complement system that is produced by hepatocytes in response to prostaglandin E1 or parogen during periods of inflammation. It is detectable in serum in various disease conditions (e.g., rheumatoid arthritis, lupus, pneumococcal pneumonia, rheumatic fever, cancer, tuberculosis and myocardial infarction) and particularly during the acute phase of immune response; C-reactive protein should normally be negative in the bloodstream. It consists of five polypeptide subunits (total molecular weight = 105 kD) and binds to polysaccharides present in  bacterial and fungal cell walls or surfaces in addition to lecithin, phosphoryl or choline containing molecules. See also Pentraxins and Complement System"},{"term":"Calcium Channels","value":"Pore-forming proteins present in cell membranes that control the flow of ions thereby establishing the small voltage gradient that exists across the membrane of cells. These voltage-gated channels (L-, N-, P/Q-, R- and T-type) are formed as a complex of several different subunits and are prominent throughout the nervous system where they are responsible for triggering the release of neurotransmitter. Calcium channel dysfunction has been implicated in several disorders, particular cardiovascular diseases. It has also been suggested that modulation of intracellular calcium levels by voltage-gated calcium channels may be involved in neuronal death and cognitive deficits associated with Alzheimer's disease (AD) and L-type calcium channel modulators have been shown to enhance cognition in AD patients."},{"term":"cAMP (cyclic 3´,5´-Adenosine Monophosphate)","value":"The 3', 5' cyclic ester of adenosine monophosphate (AMP) which acts as a second messenger in signal transduction pathways. cAMP is generated from adenosine 5'-triphosphate (ATP) by the action of adenylate cyclase which is coupled to hormone receptors by G proteins. cAMP activates a specific protein kinase and is inactivated by phosphodiesterase forming 5' AMP. cAMP is responsible for smooth muscle relaxation during bronchodilation, increased ciliary beat frequency and decreased mucus viscosity."},{"term":"Cancer","value":"The abnormal, rapid, unorganized and uncontrolled proliferation of new tissue. The malignant tissue develops from a single cell that has undergone mutations in its DNA. This cell does not mature noramlly and eventually die but it divides prolifically. There are approximately 200 different types of cancers. Cancers arising from epithelial cells are called carcinomas and those arising from mesenchymal tissues are called sarcomas. Leukemias are also classified as malignant growths. Cancer cells can invade nearby tissues (i.e., metastasis) and can spread through the bloodstream and lymphatic system to other parts of the body."},{"term":"Cannabinoid Receptors (CB1, CB2)","value":"A class of G protein-coupled seven-transmembrane-spanning receptor proteins. Two central cannabinoid receptors, CB1 and CB2, have been identified: CB1 is preferentially expressed in brain and mediates the psychoactivity of cannabinoids. Antagonists at CB1 have an antiparkinsonian effect, suggesting a role of overactive cannabinoid receptor transmission in generating parkinsonian symptoms. Antagonism of CB1 may also be a treatment for obesity, multiple sclerosis, Alzheimer's disease, etc. CB2 is almost exclusively expressed in immune cells (e.g. B cells, NK cell, monocytes, microglial cells, neutrophils, T cells, dendritic cells, mast cells). Although their biological function is still unclear, CB2 receptors appear to be responsible for the antiinflammatory and possibly other therapeutic effects of cannabis. CB2 selective agonists, inverse agonists and  antagonists have been shown preclinically to suppress inflammation. CB2 selective agonists have also been shown to alleviate inflammatory and neuropathic pain and emesis. Moreover, results from preclinical studies suggest that peripheral CB2 receptors may play a protective role in thepathology of multiple sclerosis (MS). CB2 appears to mediate myeloid progenitor cell trafficking toward the inflamed spinal cord and its contribution to microglial activation and administration of CB2 agonists to an animal model of MS reduced disease severity. This supports the potential use of non-psychoactive CB2 agonists in the treatment of MS and other neuroinflammatory disorders."},{"term":"Cathepsin S","value":"A cysteine protease (EC 3.4.22.27) involved in the regulation of intracellular trafficking of MHC class II molecules (i.e., regulates degradation of the invariant chain [li] of class II-Ii complexes) to the cell surface in antigen presenting cells therefore affecting immune responses. Inhibitors of this enzyme are potentially useful in the treatment of several inflammatory diseases such as asthma, COPD, emphysema, chronic bronchitis and ARDS. The enzyme has also been found to be localized at sites of vascular matrix remodeling. Cytokine-stimulated vascular intimal smooth muscle cells and macrophages that have migrated into and accumulated within developing intimal plaques can use this enzyme to degrade extracellular elastin. This suggests that cathepsin S plays a role in vessel wall remodeling and may be a potential therapeutic target for regulating plaque stability in atherosclerosis. It is also a potential target for the treatment of COPD."},{"term":"CCR2","value":"See Chemokine (C-C motif) receptor 2 (CCR2)"},{"term":"CD System","value":"Organization of cell surface molecules (markers) that are unique to different subsets of lymphocytes and other cell types (i.e., Natural Killer [NK] cells, monocyte/macrophages, granulocytes, follicular dendritic cells [DCs], thymocytes, interdigitating DCs, endothelium, epithelium). CD markers, of which more than 200 have been identified, are found on the cell surface and can be specific for a population of cells, stage of differentiation or activation. For example, CD2 and CD3 are markers for T cells; CD4 and CD8 are markers for T cell subsets; CD25 is a marker for activated T cells; and CD19 and CD20 are markers for B cells. Accurate identification of a cell population is often achieved by assessing the expression of several, rather than one, CD molecule."},{"term":"CD3 (T Cell Receptor Complex)","value":"The CD3 antigen is a protein complex composed of four distinct chains: CD3gamma chain, CD3delta chain and two CD3epsilon chains. These chains are highly homologous cell surface proteins that are members of the immunoglobulin superfamily and contain a single extracellular immunoglobulin domain. The transmembrane region of these CD3 chains is negatively charged allowing them to associate with the positively charged T cell antigen receptor (TCR) chains (TCRalpha and TCRbeta). The intracellular tails of the CD3 chains contain a single conserved motif known as an immunoreceptor tyrosine-based activation motif (ITAM) which is essential for the signaling capacity of the TCR. Association of the CD3 chains with TCR and the zeta-chain (accessory molecules of TCR) generates an activation signal in T lymphocytes. Thus, the TCR complex is composed of the TCR, zeta-chain and CD3 molecules. CD3+ T cells are increased in patients with Crohn's disease. Therefore modulation of the CD3 complex on T cells may be beneficial in the treatment of the disease."},{"term":"CD36","value":"A scavenger membrane adhesion receptor that is expressed on platelets, monocytes and endothelial cells and is involved in platelet adhesion and in the recognition and phagocytosis of apoptosed cells. It is also known as GPIIIb. CD36 has been implicated in the pathogenesis of atherosclerosis. It is found on endothelial cells in the arterial cell wall that eventually take up excess LDL and become foam cells. CD36 recognizes modified forms of LDL. Antagonism of CD36 may prevent macrophages in blood vessel walls from taking up LDL cholesterol and therefore may be effective strategy in treating atherosclerosis. See also Adhesion Molecules and CD System."},{"term":"CD4","value":"CD4 (cluster of differentiation 4) is a transmembrane glycoprotein and member of the immunoglobulin (Ig) superfamily of receptors that is expressed on the surface of T helper (Th) cells, regulatory T cells, monocytes, macrophages and dendritic cells. It is a coreceptorthat together with the T cell receptor (TCR) activates the T cell following interaction with MHC class II molecules present on the surface of antigen presenting cells. CD4 amplifies the signal generated by the TCR by recruiting the tyrosine kinase lck. It has four Ig domains (D1-D4) exposed on the extracellular surface of the cell and uses the D1 domain to interact with the beta2-domain of MHC class II molecules. T cells expressing CD4 molecules (not CD8) on their surface are MHC class II-restricted, specific for antigens presented by MHC II and not by MHC class I. CD4 is a primary receptor used by HIV-1 to gain entry into host T cells. In multiple sclerosis (MS), myelin antigen-specific CD4+ T cells become activated in the peripheral immune compartment and cross the blood-brain barrier to trigger the disease. Commitment of T cells to proinflammatory effector T helper cell lineages (e.g., IL-17-producing CD4+ T cells or Th17 cells) appears to be an important inducer of organ-specific autoimmunity and studies suggest that Th17 cells are the dominant pathogenic cellular component in MS and other autoimmune inflammatory diseases. Decreasing myelin-specific CD4+ T cell responses with an anti-CD4 antibody, for example, could reduce demyelination and decrease immune cell infiltration into the CNS and thus, reduce subsequent initiation and progression of the autoimmune response. See also CD4+ T Cells"},{"term":"CD4+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta; TCR-2) and the CD4 marker. The TCR recognizes the antigen associated with major histocompatibility complex (MHC) on the surface of the antigen presenting cell (APC), while the CD4 molecule recognizes the class II MHC molecule only. Therefore, CD4 determines that a given T cell be class II- rather than class I-restricted. CD4 also contributes to T cell activation by providing biochemical signals to the T cell at the time of antigen presentation. CD4+ cells can be subdivided into Th0, Th1, Th2 or Th3 populations, depending upon the cytokine profile they secrete. CD4+ cells have been implicated in the development and progression of rheumatoid arthritis. See also CD4"},{"term":"CD8+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta dimer; TCR-2) and the CD8 marker. The TCR recognizes the antigen associated to MHC molecules on the surface of the antigen presenting cell (APC), while the CD8 molecule recognizes the class I molecule only. Therefore, CD8 determines that a given T cell be class I- rather than class II-restricted. The CD8 marker is predominately expressed on cytotoxic lymphocytes (CTLs) capable of killing cellular targets by secreting cytotoxic cytokines and perforins."},{"term":"cDNA","value":"See Complementary DNA (cDNA)\r\n"},{"term":"Central Nervous System (CNS)","value":"The portion of the nervous system encompassing the brain and spinal cord."},{"term":"Chemokine (C-C motif) receptor 2 (CCR2)","value":"CCR2 is a 7-transmembrane, GPCR expressed on monocytes and mast cells as well as B cells, T cells, megakaryocytes, basophils, eosinophils, fibroblasts, astrocytes, dendritic cells, chondrocytes, colonocytes, endothelial cells, enterocytes, Langerhans cells, epithelium cells, smooth muscle cells and synoviocytes. Two isoforms have been identified (CCR2A and CCR2B) which bind monocyte chemoattractant protein-1 (MCP-1); agonist-induced activation of the receptors results in calcium mobilization and inhibition of adenylyl cyclase. MCP-1/CCR2 interactions are responsible for mediation of monocyte recruitment to sites of inflammation such as that seen in MS. Antagonism of the receptor may be effective for the treatment of rheumatoid arthritis and multiple sclerosis. "},{"term":"Chemokine CXCR2 Receptor","value":"See Interleukin 8 (IL-8) beta Receptor"},{"term":"Chemokines","value":"A large group of small polypeptide cytokines (e.g., IL-8, PF4, MCP-1, MIP-1alpha, RANTES) with proinflammatory activities synthesized by several cell types (e.g., monocytes, macrophages, T cells, mast cells, fibroblasts, endothelial cells, platelets, epithelium, microglial cells, keratinocytes). These molecules display a certain degree of selectivity for various immune cell types and are involved in activation of leukocytes during transendothelial migration and chemotaxis in tissues. The chemokine family is composed of two main subgroups: CC chemokines which contain two adjacent cysteine residues and CXC chemokines in which the two cysteine residues are separated by another amino acid. CXC chemokines are further subdivided into ELR+ or ELR- chemokines, where ELR indicates the amino acids (Glu-Leu-Arg) preceding the first cysteine residue. ELR+ chemokines are chemotactic for neutrophils and ELR- chemokines are chemotactic for lymphocytes."},{"term":"Chlamydia","value":"A genus of prokaryotes that replicate in cytoplasmic vacuoles within susceptible eukaryotic cells. <I>Chlamydia trachomatis</I> causes trachoma in man. Other species of <I>Chlamydia</I> can cause a variety of infections including urethritis, epididymitis and proctitis in men, cervicitis, salpingitis and acute urethral syndrome in women and conjunctivitis and pneumonia in newborn infants."},{"term":"Chlamydia pneumoniae","value":"A bacteria belonging to the Chlamydiaceae family that causes pneumonia and diseases of the upper and lower respiratory tract (e.g., pharyngitis, bronchitis and pneumonia). It has recently been associated with coronary heart disease and Alzheimer's disease (AD).  The bacterium was detected in AD brains and related to tau-associated neurofibrillary pathology. Persistent Chlamydia pneumoniae infections are thought to instigate or complicate the inflammatory response leading to atherosclerosis and/or angina pectoris."},{"term":"Cholesterol","value":"Cholesterol (5-cholesten-3beta-ol) is the most abundant steroid in mammals. It is a precursor for other steroid hormones (e.g., estrogens, androgens, progestins). Excessively high serum cholesterol levels are involved in the pathogenesis of atheroma formation in arteries and increase the risk of heart disease."},{"term":"Cholesterol Ester Transfer Protein (CETP)","value":"A protein involved in HDL metabolism that regulates the exchange of cholesterol and triglycerides between plasma lipoproteins (i.e., transfer of cholesteryl ester from HDL). The result  is uptake of cholesterol by hepatocytes via receptor-mediated endocytosis. CETP promotes the atherogenicity of VLDL and LDL by increasing their cholesteryl ester content. CETP may be proatherogenic in individuals with hypercholesterolemia or combined hyperlipidemia and antiatherogenic in individuals with hypertriglyceridemia or hyperalpha- and  hypobetalipoproteinemia. Inhibitors of CETP may be effective in enhancing the beneficial activity of HDL."},{"term":"Choline","value":"(2-Hydroxyethyl)-trimethylammonium ion found in most tissues alone or in combination with lecithin (phosphatidylcholine), acetate (acetylcholine) or cytidine diphosphate (cytidine diphosphocholine). It is essential for synaptic transmission."},{"term":"Choline O-Acetyltransferase (ChAT)","value":"An enzyme (EC 2.3.1.6) responsible for the production of acetylcholine that is reduced in the brains of patients with Alzheimer's disease."},{"term":"Cholinergic","value":"Refers to nerve cells or fibers that use acetylcholine as a neurotransmitter."},{"term":"Cholinesterase","value":"See Acetylcholinesterase."},{"term":"Chronic","value":"A term referring to a health-related state or exposure that signifies prolonged (long-term) duration. In some instances, it can indicate low intensity."},{"term":"Chylomicrons","value":"A class of lipoproteins that transport dietary cholesterol and triglycerides from the small intestine to tissues after meals. They are synthesized in the intestinal mucosa and transported to the blood stream by the intestinal lacteals and lymphatic system. Chylomicrons are degraded to chylomicron remnants in the capillaries of muscle and adipose tissue through endothelial lipoprotein lipase-mediated cleavage of most of their triglycerides; the remnants are then rapidly cleared by the liver via receptor-mediated endocytosis."},{"term":"Chymase","value":"A chymotrypsin-like serine protease that is one of several granule-associated proteases (e.g., tryptase, peroxidase, arylsulfatase B) released from mast cells during an immunological response. It stimulates bronchial mucus secretion and is also capable of degrading vasoactive intestinal peptide (VIP), a mediator of bronchial relaxation. It may also be involved in the localized production of angiotensin II and in tissue remodeling of the cardiovascular system. Because chymase is localized in mast cells, it is thought to be play a role in chronic inflammatory disorders such as arthritis. Chymase inhibitors may be effective as a treatment or in the prevention of atherosclerosis and atopic dermatitis."},{"term":"Complement System","value":"A group of serum molecules that mediate inflammation and opsonization of antigens and microorganisms in addition to controlling lysis of pathogens or cells sensitized with antibody. These serum molecules may be activated via the classical pathway involving activation by immune complexes binding to C1q subcomponent of C1, which has six Fc binding sites, or by an alternative pathway that can involve activation in the presence of suitable surface molecules, such as microbial products. Complement components interact with each other, so that a small stimulus can result in a cascade of activity."},{"term":"Complementary DNA (cDNA)","value":"Deoxyribonucleic Acid (DNA) synthesized a mature (i.e., fully spliced) mRNA template in a reaction catalyzed by reverse transcriptase (RT). RT acts on a single strand of mRNA yielding a sequence of DNA that complements the mRNA template; this strand of DNA is cDNA and can be used to clone eukaryotic genes in prokaryotes. RT generates its cDNA based on the pairing of RNA base pairs (A, U, G and C) to their DNA complements (T, A, C and G respectively).\r\n"},{"term":"Computerized Axial Tomography (CT or CAT Scan)","value":"See Tomography"},{"term":"Connective Tissue","value":"The supporting framework of tissues of the body. It is fibrous and composed of ground substance with numerous cell types present. Types of connective tissue include: areolar or loose; adipose; dense, regular or irregular; white fibrous; elastic; and mucous. Lymphoid tissue, cartilage and bone are also considered connective tissue, in addition to blood and lymph, which have a liquid ground substance."},{"term":"Consolidation","value":"The solidification into a firm dense mass as in inflammatory induration of a normally aerated lung due to the presence of cellular exudate in the pulmonary alveoli.\r\n"},{"term":"Constipation","value":"A reduction in the frequency or ease of stool passage. Symptoms and features of constipation include infrequent bowel movements, hard stools, straining, incomplete evacuation, bloating and abdominal discomfort. The condition may be acute or chronic, as well as primary or secondary in nature. Chronic constipation is a functional bowel disorder characterized by neural dysfunction leading to altered motility and abnormal visceral perception. It is not caused by structural changes or neurochemical abnormalities. \r\n"},{"term":"Coronary Artery Disease (CAD)","value":"The condition also known as atherosclerosis in which the coronary arteries become narrowed or completely occluded due to plaque deposits. It is underlying cause of a heart attack."},{"term":"Creatine Kinase","value":"A dimeric enzyme (82 kD; EC 2.7.3.2) that catalyzes the formation of ATP from ADP and creatine phosphate in muscle."},{"term":"Crossover Trial","value":"A clinical study in which subjects receive two or more drugs separated by drug-free periods."},{"term":"Cyclooxygenase (COX)","value":"An enzyme also known as prostaglandin endoperoxide synthase (EC 1.14.99.1) that catalyzes the two steps in prostaglandin (PG) synthesis forming PG2 and PGH2 from arachidonic acid. The two major forms of the enzyme are COX-1 and COX-2. COX-1 is constitutive and present in endothelium, stomach and kidney. It is involved in maintenance of platelet and kidney function and considered a housekeeper enzyme, maintaining homeostasis. COX-2 is not present at baseline but is inducible during inflammation by cytokines and endotoxins. It has been shown to play a role in propagation of inflammatory cascades leading to disorders such as Alzheimer's disease, rheumatoid arthritis and osteoarthritis, cancer, kidney disease and osteoporosis.  Recently, COX-3, a distinct COX-1 variant,  and two smaller COX-1-derived proteins (partial COX-1 or PCOX-1 proteins) have been cloned and found to be expressed in canine cerebral cortex and in other tissues; COX-3 was predominantly expressed in canine cerebral cortex and heart. Canine COX-3 was shown to be selectively inhibited by NSAIDs and therefore COX-3 may be involved in pain and fever."},{"term":"Cytochrome P450 Enzymes","value":"Key multifunctional isoenzymes (monooxygenases) that are involved in many physiological systems such as steroid hydroxylation in the adrenal cortex and liver and hepatic detoxification of foreign substances. They are also responsible for the biotransformation of many foreign compounds to mutagens and carcinogens."},{"term":"Cytokines","value":"Soluble proteins produced by one of several cell types (i.e., T cells, B cells, fibroblasts, macrophages, epithelial cells, astrocytes, endothelium, monocytes) that are involved in signaling between cells of the immune system. Cytokines include interleukins, tumor necrosis factors (TNFs) and colony-stimulating factors (CSFs)."},{"term":"Cytomegalovirus (CMV)","value":"A member of the group of large herpes-like viruses belonging to the Herpesviridae group, subfamily Betaherpesvirinae. The virus is named for the enlarged inclusion body-bearing cells that occur with infection. Infection with this virus is extremely common and 80% of all healthy adults bear antibodies to the virus (i.e., CMV IgG positive). Infection with CMV can induce an immune-deficient state or acute illness (e.g., pneumonia) in those individual with underlying immune deficiency due to chronic illness."}]},{"letter":"D","Terms":[{"term":"DALYs","value":"Acronym for \"Disability Adjusted Life Years\" which is the sum of years of life lost due to premature death and the years lost due to living with disability. DALYs are used to assess the magnitude of disease, health risks, and premature death. DALYs for a disease or health condition are calculated as the sum of the Years of Life Lost (YLL) due to premature mortality in the population and the Years Lost due to Disability (YLD) for people living with the health condition or its consequences. DALY = YLL + YLD.\r\n\r\n"},{"term":"Dendritic Cell (DC)","value":"An antigen presenting cell (APC) that recognizes and captures foreign antigens and then migrates to the lymph nodes and spleen, where it presents the processed antigens to T cells, thereby initiating specific T cell responses. DCs are important in the generation of antiviral responses since they produce IL-12, a crucial factor in the development of Th1 and cytotoxic responses. In addition, DCs orchestrate these responses by virtue of their simultaneous expression of both class II and class I MHC molecules, which enables activation of both virus-specific CD4+ T cells and CTLs. Interdigitating cells are DCs located in lymph nodes in areas where T cells are present. In contrast to other APCs, these DCs can provide a full activation stimulus to virgin CD4+ T cells. Follicular DCs are closely surrounded by lymphocytes in the spleen and lymph node follicles and present antigen predominantly to B cells."},{"term":"Deoxyribonucleic Acid (DNA)","value":"A nucleic acid which contains deoxyribose as the sugar component loosely bound to protein. It stores the hereditary information required for cell growth and reproduction. It is a linear macromolecular chain of deoxyribose molecules esterified with phosphate groups between 3' and 5' hydroxyl groups. Purines (i.e., adenosine [A] and guanine [G]) and pyrimidines (cytosine [C] and thymine [T]) are linked to this structure. DNA is found in the nuclei (chromatin, chromosomes) and mitochondria of organisms. DNA is the autoreproducing component of viruses and contains all hereditary information. It may be open-ended or circular (e.g., mitochondrial DNA) and single- or double-stranded (e.g., chromosomes)."},{"term":"Diabetes Mellitus","value":"A group of metabolic diseases characterized by chronic hyperglycemia with disturbances in carbohydrate, fat and protein metabolism resulting from defects in insulin secretion, insulin action or both. See also Diabetes Mellitus, Type 1 and Diabetes Mellitus, Type 2"},{"term":"Diacylglycerol (DAG)","value":"A glycerol substituted on the 1 and 2 hydroxyl groups with long chain fatty acyl residues. It is a normal intermediate in the biosynthesis of phosphatidyl phospholipids and is released by phospholipase C (PLC). DAG is involved in signal transduction. Increased DAG levels in membranes activate protein kinase C (PKC). The high levels of glucose seen in diabetes increase the synthesis of DAG and PKC in vascular tissue. This can result in structural and functional abnormalities including changes in vascular permeability and gene expression in the retina (i.e., retinopathy) and kidney (i.e., nephropathy)."},{"term":"Diarrhea","value":"A symptom characterized by loose or unformed stools, frequently accompanied by other gastrointestinal symptoms. It is nearly always a symptom of another disease or condition, rather than a disease in its own right. It is considered acute when it lasts for less than 4 weeks (typically associated with a bacterial or viral infection) and chronic when it persists for more than four weeks. Diarrhea is broadly classified as secretory, osmotic or exudative. Secretory diarrhea is caused by an increase in active secretion or an inhibition of absorption. Osmotic diarrhea occurs when too much water is drawn into the bowels. This can be the result of maldigestion (e.g., pancreatic disease or celiac disease), in which the nutrients are left in the lumen to pull in water, lactose or fructose intolerance, or use of osmotic laxatives, among other causes. Exudative diarrhea is characterized by the presence of blood and/or pus in the stool. This typically occurs with inflammatory bowel disease (Crohn's disease or ulcerative colitis) and severe infections.\r\n"},{"term":"Diastolic Blood Pressure (DBP)","value":"The pressure exerted on the walls of the arteries when the heart is in the relaxation phase (diastole). It is considered abnormally elevated if values are consistently over 90 mmHg."},{"term":"DNA","value":"See Deoxyribonucleic Acid (DNA)"},{"term":"Double-Blind","value":"A research testing method characteristic of a controlled experiment/trial in which neither the participants nor the person administering the treatment know which treatment any particular subject is receiving. Usually the comparison is between an experimental drug and a placebo or a standard comparison agent."},{"term":"Double-Dummy","value":"A research testing method in which patients in all treatment groups receive medication of the same appearance, one of which is inactive (placebo) and the other active. For example, all patients would receive a topical cream and capsules. Those receiving the active cream received dummy capsules and vice versa."},{"term":"Downstream","value":"Segments of nucleotide sequences of DNA or RNA that are remote from the initiation sites (i.e., codons) and are transcribed or translated later. It is also used to decribe events that occur late within sequential reactions. See also Upstream"},{"term":"Dyslipidemia","value":"The presence of abnormally high levels of lipoproteins in the blood. Dyslipidemia is classified into the following different types based on electrophoretic analysis of serum: Type I (elevations in chylomicrons and triglycerides due a deficiency in lipoprotein lipase or apo C-II); Type IIA (elevations in LDL cholesterol only due to genetic causes); Type IIB (elevations in both LDL cholesterol and triglycerides due to genetic causes); Type III (elevations in cholesterol and triglycerides due to a defect in VLDL remnant clearance); Type IV (elevated triglycerides due to multiple-genetic causes, diabetes, nephrosis or medications); and Type V (elevations in chylomicrons and triglycerides due to defective lipolysis and overproduction of VLDL)."}]},{"letter":"E","Terms":[{"term":"E-Selectin","value":"A cellular adhesion molecule (CAM) and CD antigen (CD62E) expressed only on endothelial cells and activated by cytokines. It plays a crucial role in inflammation mediating leukocyte recruitment to the sites of injury or, more specifically, neutrophil, monocyte and memory T cell adhesion to cytokine-activated endothelial cells. E-selectin recognizes sialylated carbohydrate groups present on the surface proteins of certain leukocytes; these carbohydrates include members of the Lewis X or Lewis A family expressed monocytes, granulocytes and T lymphocytes. Neutrophilic inflammation is a pathogenic feature of COPD and inhibition of  E-selectin may an effective therapy for the treatment of this airway disease. E-selectin may play a role in the pathophysiology of stroke."},{"term":"Effectiveness","value":"The therapeutic effect of an intervention as demonstrated or observed in the real-world setting. See also Efficacy"},{"term":"Efficacy","value":"The therapeutic effect of an intervention as demonstrated or observed in a controlled setting, such as a clinical trial. See also Effectiveness"},{"term":"Electrocardiogram (ECG)","value":"A recording of the electrical activity produced by the heart over time. It is a noninvasive procedure that uses skin electrodes. See also P Wave; QRS Complex; QT Interval, ST Segment; T Wave"},{"term":"Emesis","value":"Emesis is the complex reflex consisting of ejecting the contents of the stomach through the mouth. Also known as vomiting, this reflex can be triggered by various endogenous or exogenous factors."},{"term":"Endocrine","value":"A term referring to internal, ductless, secretion (i.e., into the systemic circulation) or to the glands or the hormones which secrete or are secreted, respectively, in this manner."},{"term":"Endocytosis","value":"A general term for an active mechanism by which cells internalize extracellular substances. This process involves the reorganization of plasma membrane-associated proteins which results in the formation of an endocytic vesicle in the cell cytoplasm. There are two forms of endocytosis: the fluid phase or pinocytosis, which involves engulfing liquids; and the receptor-mediated phase. In some cell types, soluble antigen may be captured in small cell membrane-derived vesicles by pinocytosis, which does not involve recognition of the antigen by a receptor. In others cell types such as B cells, endocytosis is triggered following antigen binding to a surface Ig. Endocytosis of large particulate antigens such as bacteria is usually referred to as phagocytosis and occurs mainly in macrophages."},{"term":"Endogenous","value":"Originating from within an organism, tissue or cell. "},{"term":"Endothelin Receptors","value":"Endothelins exert their biological effects through activation of two families of G-protein-coupled receptors: ETA and ETB. ETA receptors have strong affinity for endothelin-1 and ETB receptors have affinity for all three endothelin isoforms (ET-1, ET-2 and ET-3)."},{"term":"Endothelin-1 (ET-1)","value":"A vasoactive peptide (21 amino acids) produced by endothelial and inflammatory cells in pulmonary and systemic circulations. It is produced by the action of endothelin-converting enzyme (ECE) which converts big ET-1 to ET-1. Once released, ET-1 may bind to either type A receptors (ETA receptor), located mainly on vascular smooth muscle cells or type B receptors (ETB receptor), found on endothelial cells. ETA receptors are usually considered mediators of vasoconstriction, while ETB receptors lead to vasodilatation through the release of NO."},{"term":"Endothelins","value":"A family of potent 21-amino acid vasoactive peptides found in at least three distinct isoforms: endothelin-1 (ET-1), endothelin-2 (ET-2) and endothelin-3 (ET-3). A fourth form, ET-4, has recently been described."},{"term":"Endothelium","value":"A layer of flat squamous cells lining blood and lymphatic vessels and other structures such as the heart and posterior surface of the cornea."},{"term":"Enzyme-Linked Immunosorbent Assay (ELISA)","value":"A laboratory test used to detect antibodies or antigens. It is similar to an radioimmunoassay (RIA) except that it substitutes an enzyme for the radioactive isotope. In this assay, the antigen is absorbed to a solid phase followed by addition of the test antibody. The test antibody is later detected using enzyme-labeled protein G (binds IgG) and colorimetry. ELISAs are also used to measure other low- to high-molecular-weight compounds (e.g., peptides, steroids, prostaglandins, enzymes, etc.) from tissue or plasma extracts."},{"term":"Estrogen","value":"A general term used to refer to any naturally occurring or synthetic substance that has activity (i.e., estrogenic) similar to those of the most potent naturally occurring estrogen, 17beta-estradiol. Estrogens are produced by the ovary, testis, placenta, adrenal cortex and by certain plants. Actions of these agents include stimulation of secondary sex characteristics, growth and maturation of long bones and control of the menstrual cycle. They are used clinically as replacement therapies for menstrual disorders and menopausal symptoms."},{"term":"Etiology","value":"The cause or origin of a disease."},{"term":"Exacerbation","value":"An increase in the severity of a disease or in any of its symptoms."},{"term":"Exogenous","value":"Originating from outside an organism, tissue or cell."},{"term":"Exon","value":"A sequence of DNA that encodes information for protein synthesis that is transcribed to messenger RNA.\r\n"}]},{"letter":"F","Terms":[{"term":"Familial","value":"An inherited disorder or trait."},{"term":"Farnesoid X Receptor (FXR)","value":"An orphan nuclear hormone receptor that suppresses expression of cholesterol 7-hydrolase thus decreasing bile acid synthesis and cholesterol absorption. It has been identified as a target for cholesterol-lowering compounds. These receptors along with liver X receptors (LXRs) are heterodimeric partners with the retinoid X receptor (RXR). FXR antagonists may be effective in preventing and treating atherosclerosis."},{"term":"Fat","value":"A greasy soft-solid substance composed of glycerolesters found in animal tissues and plants. Also known as adipose tissue. See also Adipose Tissue"},{"term":"Fibrin","value":"An insoluble protein formed from fibrinogen by the proteolytic action of thrombin during normal clotting of blood. The major portion of the blood clot is composed of fibrin."},{"term":"Fibrinogen","value":"A soluble plasma protein (340 kD) composed of six peptide chains. Normal plasma levels are approximately 2-3 mg/ml."},{"term":"Fibroblast","value":"A spindle-shaped cell with cytoplasmic processes that is present in connective tissue and forms collagen fibers."},{"term":"Foam Cells","value":"Lipid-loaded macrophages originating from monocytes or smooth muscle cells."},{"term":"Folic Acid","value":"A general term referring to pteroylglutamic acids and their oligoglutamic acid conjugates. Pteroylmonoglutamic acid (N-[p-[[(2-amino-4-hydroxypteridin-6-yl)methyl]amino]benzoyl]-L(+)glutamic acid) is a member of the vitamin B complex and is required for normal production of red blood cells. It is found in liver, green vegetables and yeast. Deficiencies in folic acid can trigger epileptic seizure in some individuals. See also Vitamin B"},{"term":"Free Radical","value":"A chemically active atom or molecular fragment which contains a charge due to an excess or deficient number of electrons. These highly reactive atoms or fragments receive or release electrons to achieve a more stable configuration. This process can damage large molecules within cells. Free radicals have been implicated in more than 50 diseases including stroke, asthma, cancer, Crohn's disease and Parkinson's disease."}]},{"letter":"G","Terms":[{"term":"G-Protein","value":"One of several mediators of activated cell surface receptors and their enzymes and ion channels. They are responsible for the signal transduction pathways which alter the concentration of intracellular second messengers (e.g.,  cAMP, cGMP, Ca2+). These second messengers in turn regulate the behavior of other intracellular target proteins, leading to the desired cellular response."},{"term":"G-Protein-Coupled Receptor","value":"Cell surface receptors that are coupled to G proteins (i.e., GTP binding protein). They have seven membrane spanning domains and have been divided into two subclasses: those in which the binding site is in the extracellular domain (e.g., receptors for glycoprotein hormones such as TSH and FSH) and those in which the ligand binding site is in the plane of the seven transmembrane domains (e.g., rhodopsin, receptors for small neurotransmitters and hormones such as the muscarinic acetylcholine receptor). Also called 7TM receptors."},{"term":"Gangrene","value":"Death of a large area of tissue generally associated with loss of vascular supply and followed by bacterial invasion and putrefaction."},{"term":"Gene Therapy","value":"Treatment of pathophysiologic states based on the transfer of genetic material, including complementary DNA (cDNA), full-length genes, RNA or oligonucleotides."},{"term":"Genome","value":"The entire collection of genes and other functional and nonfunctional DNA sequences in the nucleus of an organism. It includes those genes that encode mRNAs, rRNAs, tRNAs and sn/scRNA and the functional sequences that occur as regulatory elements or as sites where replication begins. Much of the nonfunctional DNA consists of sequence elements repeated thousands or millions of times. Arrangement of functional and nonfunctional DNA within the genome is not fixed and existing sequences may be internally rearranged, moving from one location to another."},{"term":"Genotype","value":"The genetic constitution of an organism or cell."},{"term":"Glucose","value":"A simple monosaccharide found in the blood that is derived from transport or glycogenolysis; it is the body's main source of energy."},{"term":"Growth Factors","value":"Protein substances involved in cell differentiation and growth. They mediate fetal development, are involved in maintenance and repair of tissues, stimulate blood cell production and are also involved in cancer growth. Examples include epidermal growth factor (EGF), insulin-like growth factors (IGFs), nerve growth factor (NGF), platelet-derived growth factor (PDGF) and transforming growth factor alpha and beta (TGF-alpha, TGF-beta)."}]},{"letter":"H","Terms":[{"term":"Half-life","value":"The time required for one-half of an amount of a substance to be lost through biological processes."},{"term":"Heart Failure","value":"A clinical syndrome characterized by an abnormality of cardiac function that results in the progressive inability of the heart to pump enough blood. Symptoms of heart failure include dyspnea and exercise intolerance (the most characteristic symptoms), as well as fatigue (very common) and fluid retention. See also Heart Failure, Systolic and Heart Failure, Diastolic"},{"term":"Helicobacter","value":"A genus of Gram-negative, spiral-shaped pathogenic bacteria isolated from the intestinal tract of humans and mammals."},{"term":"Helicobacter pylori","value":"An S-shaped or curved Gram-negative, non-spore forming bacteria that can be flagellate. When present on the gastric epithelium under the mucus layer of the stomach and duodenum, it is responsible for development of some gastric ulcers, gastric inflammation (chronic gastritis) and gastric cancer. Persistent Helicobacter pylori infections are thought to instigate or complicate the inflammatory response leading to atherosclerosis and are positively associated with the risk of ischemic stroke."},{"term":"Hepatitis","value":"An inflammatory liver disease. See also Hepatitis A, Hepatitis B, Hepatitis C, Hepatitis E and Hepatitis D."},{"term":"Hepatocyte","value":"Parenchymal liver cell."},{"term":"Herpes Simplex Virus (HSV)","value":"Viruses belonging to the family Herpesviridae that cause a variety of infections. HSV type 1 infections are generally characterized by eruptions of one or more vesicles on the lips or external nares while HSV type 2-induced eruptions commonly occur on the genitalia. Both types are recrudescent. HSV type 6 is found in some lymphoproliferative disorders but is also highly prevalent in individuals suffering from Alzheimer's disease."},{"term":"High-Density Lipoprotein (HDL)","value":"A lipoprotein that removes cholesterol from the bloodstream by transporting it away from tissues to the liver. Approximately 25-33% of blood cholesterol is transported by HDL. It is thought to have a protective effect on the heart and vasculature since elevated HDL levels have been associated with a lower risk for heart disease. While HDL levels less than 35 mg/dl are considered a positive risk factor for coronary artery disease, levels above 60 mg/dl are considered a negative risk factor."},{"term":"Histamine","value":"A vasoactive amine involved in immune and inflammatory responses that is derived from histidine and stored in mast cell granules. It acts via 4 G-protein-coupled receptors (H1, H2, H3, H4) and has been shown to stimulate gastric secretion and constrict bronchial smooth muscle. It also acts as a vasodilator of capillaries and arterioles, causing a reduction in blood pressure and may mediate signal transduction of painful stimuli (e.g., tissue damage) and cognition. Histamine dihydrochloride has shown antitumor efficacy and may be a potential treatment for hepatitis C."},{"term":"Histamine Receptors","value":"There are four identified histamine receptor subtypes (H1, H2, H3 and H4) which are all G-protein-coupled receptors. H1 signals through coupling to Gq and consequently activates phospholipase C, inositol phosphate and calcium mobilization. H2 activates Galphas resulting in an increase in cAMP formation. H3 receptors couple to Galphai/o proteins resulting in inhibition of cAMP formation and consequent enhancement of calcium mobilization and activation of MAPKs and ion channels. H4 appears to couple mainly with PTX-sensitive Galphai/o proteins in primary cells which increases intracellular calcium. However, in transfected cells, H4 has been shown to inhibit cAMP formation and activate MAPKs and the transcription factor AP-1. H1 receptors are expressed on several cells types (e.g., endothelial cells, smooth muscle cells) where they mediate vasodilation, bronchoconstriction and possibly sleep-wake cycles. H1 antagonists have been shown to be effective for the treatment of many inflammatory responses. H2 receptors are also expressed on several cell types and one of their primary functions is to stimulate gastric acid release; antagonists of this subtype may be effective in the treatment of gastric acid disorders. The H3 receptor is expressed primarily in the nervous system and can act as a presynaptic autoreceptor and control histamine turnover or as a heteroreceptor in dopamine-, serotonin-, norepinephrine-, GABA- and ACh-containing neurons. Activation of H3 depresses adrenergic neurotransmission in the mesenteric artery and attenuates spinal cord- or medulla oblongata-stimulated pressor and tachycardic responses. H3 modulation may be effective in the treatment of narcolepsy. H3 receptors may also play a role in memory formation and pharmacological blockage of central H3 receptors has been shown to enhance cognition suggesting a potential efficacy for these agents in the treatment of cognitive dysfunction in Alzheimer's disease (AD). Agents targeting H4 have little affinity for the H1 and H2 and expression of the H4 receptors is generally limited to cells of hematopoietic origin (e.g., dendritic cells, mast cells, eosinophils, monocytes, basophils and T cells). H4 is implicated in chemotaxis of these cells and may be involved in immune and inflammatory responses."},{"term":"HIV","value":"See Human Immunodeficiency Virus (HIV)"},{"term":"HMG-CoA Reductase","value":"A key enzyme (hydroxymethylglutaryl-CoA reductase; 3-hydroxy-3-methylglutaryl-coenzyme A reductase; EC 1.1.1.88) that catalyzes the rate-limiting step in the biosynthetic pathway leading from mevalonate to cholesterol and isoprenoids such as farnesyl pyrophosphate and geranylgeranyl pyrophosphate which plays a role in protein prenylation, a curcial step in multiple cellular processes. Protein prenylation (i.e., farnesylation and geranylgeranylation) is a posttranslational modification of proteins involving the addition of isoprenoids. Geranylgeranylation allows the activation of small GTP-binding proteins Rho and Rac. Activated Rho regulates the activity of nuclear transcription factors such as NF-kappaB, controls the actin cytoskeleton and induces stress fiber formation. This affects intracellular transport, migration, membrane trafficking, messenger RNA stability and gene transcription. Farnesylation allows the activation of Ras protein. Activated Ras stimulates cytoplasmic signaling pathways such as the mitogen-activated protein kinase (MAPK) pathway that regulates gene transcription and thus growth, proliferation, differentiation and survival of cells. Because of these important cell processes bound to the mevalonate pathway, HMG-CoA reductase is an important target in the treatment of many types of cancer. There is evidence that tangle-bearing cells in Alzheimer's disease (AD) have high levels of free cholesterol as compared to adjacent tangle-free nerve cells. In addition, cellular cholesterol homeostasis has been shown to be involved in several pathological events occurring in the brain of patients with AD. Studies have demonstrated that processing of the APP and tau phosphorylation can be modulated by pronounced alterations in cellular cholesterol levels. Moreover, studies have shown that statins which inhibit HMG-CoA reductase are effective in experimental autoimmune encephalomyelitis (EAE), a preclinical of multiple sclerosis (MS) model, and are promising candidates for future MS medication. Inhibition of this enzyme offers neuroprotection and decreases disease severity via attenuation of inflammation, axonal loss and demyelination. However, statins also exert pleiotropic effects which are independent of cholesterol lowering actions. These include effects on endothelial function, cell proliferation, inflammatory response, immunological reactions, platelet function and lipid oxidation which appear to be beneficial in the context of brain injury. The mechanisms of statin actions underlying the neuroprotective effects may statins may involve heat shock proteins (Hsps) and the survival-related PI-3K/Akt pathway."},{"term":"Hormone Replacement Therapy (HRT)","value":"In women, it is used to relieve and/or prevent the complications (e.g., hot flashes, osteoporosis, increased risk of heart disease) associated with menopause. HRT restores estrogen and progesterone in women entering or already experiencing menopause. Treatment may consist of treatment with estrogen alone (Estrogen Replacement Therapy or ERT; tablet, patch or gel form of pure estrogen, its derivatives or conjugated equine estrogen extracted from pregnant mare urine) or in combination with progestogen (a synthetic form of progesterone). HRT may also be an effective treatment of sexual dysfunction in women. Topical forms of ERT have been shown to improve clitoral sensitivity, increase libido, relieve vaginal dryness and atrophy and reduce pain associated with sexual activity. In addition, HRT including methyltestosterone may be effective against sexual dysfunction in postmenopausal individuals with abnormally low testosterone levels; treatment may improve sexual arousal, responsiveness and dyspareunia. Similarly in men, HRT consists of a testosterone gel and is indicated for individuals with primary hypogonadism or hypogonadotropic hypogonadism due to insufficient secretion of testosterone."},{"term":"Human Immunodeficiency Virus (HIV)","value":"A type of retrovirus first identified in 1983 that belongs to the Retroviridae family and genus lentivirus. HIV causes acquired immunodeficiency syndrome (AIDS) which involves a gradual deterioration of the immune system resulting in opportunistic infections and eventual death. The virus is spread via sexual contact with an infected individual, exposure to contaminated blood (i.e., shared needles/syringes, infusions) and during pregnancy, delivery and/or through breast milk. Two HIV strains have been identified: HIV-1 the retrovirus that causes AIDS and is found worldwide and HIV-2, a virus closely related to HIV-1 that is less virulent, most common in West Africa and also causes immune system suppression. The two viruses differ in protein composition. For example, HIV-2 contains an additional accessory protein Vpx while lacking others. See also AIDS (Acquired Immune Deficiency Syndrome)"},{"term":"Hyaline","value":"Refers to something that is clear, transparent, colorless and granule-free. Examples are hyaline cartilage and hyaline hyphae present in fungus such as Aspergillosis spp."},{"term":"Hypercholesterolemia","value":"A condition characterized by abnormally high cholesterol levels in the cells and plasma of circulating blood."},{"term":"Hyperlipidemia","value":"The presence of excess lipids in the blood.\r\n"},{"term":"Hypertension","value":"A condition characterized by high blood pressure. The cause of this disease is predominately multifactorial. It is referred to as essential or idiopathic hypertension when it is a primary disease and as secondary hypertension when it is caused by other diseases. See also Hypertension, Arterial and Hypertension, Pulmonary"},{"term":"Hypertension, Arterial","value":"A chronic condition in which blood pressure in the arteries is higher than normal. It is a significant risk factor for a variety of serious cardiovascular and renal conditions. See also Hypertension"},{"term":"Hypertensive","value":"A term referring to increased blood pressure or causing an increase in blood pressure."}]},{"letter":"I","Terms":[{"term":"ICAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. It is induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, and binds to integrins mediating adhesion and migration. ICAM-1 may be involved in the pathogenesis of rheumatoid arthritis since high levels of the molecule are found in the rheumatoid synovium."},{"term":"IkappaB Kinase beta (IKKbeta)","value":"A protein serine/threonine kinase (EC 2.7.11.10) that phosphorylates IkappaB, a cytoplasmic inhibitor, at specific residues, targeting it for proteasomal degradation via the ubiquitination pathway and allowing the nuclear translocation of IkappaB. Subsequent degradation of the IkappaB complex (IKK) activates nuclear factor kappaB (NF-kappaB), a translation factor that plays an important role in inflammation, immunity, cell proliferation and apoptosis. If the serine residues are replaced by threonine residues, the activity of the enzyme is decreased considerably. It is composed of alpha, beta and gamma subunits, the latter not having kinase activity but presumed to play a regulatory role. IKKbeta regulates several inflammatory genes such as TNF-alpha, interleukin (IL-1) and cell adhesion molecules and two proinflammatory mediators NF-kappaB and activator protein-1 (AP-1) appear to be activated in airway diseases and inflammatory disease such as MS. Inhibitors of IKKbeta block the NF-kappaB activation cascade thus attenuating inflammatory responses. IKKbeta inhibitors may be effective in the treatment of inflammatory airway diseases such as COPD, asthma and cystic fibrosis. IKKbeta is activated by TNF-alpha and hyperglycemia and its inhibition can reverse insulin resistance. Therefore, this mediator may be a new target for the development of insulin sensitizers and antidiabetic therapies. NF-kappaB is inhibited by binding to IkappaB and polymorphisms of the NFKB and NFKBI genes and an imbalance in NF-kappaB and IkappaB and has been associated with development of many inflammatory diseases, including MS, ulcerative colitis, Crohn's disease, rheumatoid arthritis, systemic lupus erythematosus, psoriatic arthritis, giant cell arthritis, type 1 diabetes, celiac disease, and Parkinson's disease, as well as susceptibility of several cancers."},{"term":"IkappaB Kinase Complex (IKK)","value":"A 900 kDa protein serine/threonine kinase composed of alpha, beta and gamma (IKKalpha, IKKbeta and IKKgamma) subunits that targets the IkappaB protein. IkappaB is the inhibitory of subunit of the transcription factor nuclear factor kappa B (NFkappaB). NFkappaB is activated via sequential phosphorylation, ubiquitination and degradation of IkappaB. IKK phosphorylates IkappaB thus allowing for subsequent proteasomal degradation, nuclear translocation and activation of NFkappaB. The IKKgamma does not appear to have kinase activity but rather plays a regulatory role. IKKalpha is a nuclear factor-inducing kinase (NIK) interacting protein. Direct interaction with NIK results in its phosphorylation and activation. IKKbeta is 50% identical to IKKalpha and contains a kinase domain. Both IKKalpha and IKKbeta can undergo homotypic interactions and can interact with each other. The catalytic activities of both IKKalpha and IKKbeta are essential for proper IkappaB phosphorylation and NF-kappaB activation. See also IkappaB Kinase beta (IKKbeta)"},{"term":"Immunization","value":"The means to produce a protective immune response in susceptible individuals by administration of a living modified agent (e.g., yellow fever vaccine), a suspension of killed organisms (e.g., pertussis vaccine) or an inactivated toxin (e.g., tetanus). Immunization can be passive or active."},{"term":"Immunization, Active","value":"The means by which antibody production or cell-mediated immunity is stimulated by giving the antigen in the form of a vaccine or through exposure to naturally occurring antigens such as bacteria, viruses or fungi."},{"term":"Immunogenic","value":"See Antigenic"},{"term":"Immunoglobulin (Ig)","value":"A subgroup of globulins that are classified as alpha, beta and gamma according to lipid or carbohydrate content and physiological function. Antibodies are Igs and all Igs may function as antibodies. Serum Igs belong to the gamma group and constitute a family of glycoproteins that bind antigens. Serum Igs can be precipitated from plasma or serum and can be normal or specific. Serum Igs are classified into 5 groups: IgG, IgD, IgE, IgA and IgM."},{"term":"Immunoglobulin A (IgA)","value":"Major class of immunoglobulins found in mammalian serum, body fluids (i.e., tears and saliva) and in the respiratory, reproductive, urinary and gastrointestinal tracts. It protects the body's mucosal surfaces from infection. It is present in human colostrum but cannot be transferred across the placenta."},{"term":"Immunoglobulin E (IgE)","value":"IgE is a class of immunoglobulins or \"antibodies\" that attach to mast cells in the respiratory and intestinal tracts, triggering release of inflammatory modulators and resulting in manifestation of symptoms associated with allergic reactions. Of the five types of Igs (IgM, IgG, IgA, IgE and IgD) in the body, only IgE has been shown to be involved in allergic reactions. It is responsible for the symptoms seen in patients with allergic rhinitis, asthma and eczema. IgE elicits an immune response by binding to one of two Fc receptors. The high affinity receptor FcepisilonRI is expressed only on mast cells and/or basophils.  Aggregation of antigens and binding of IgE to the mast cell Fcepisilon results in degranulation and the release of mediators from the cells; binding to FcepisilonRII on basophils causes release of type 2 cytokines (e.g., IL-4, IL-13) and other inflammatory mediators. The low affinity receptor Fcepisilon RII is constitutively expressed on B cells and inducibly expressed by IL-4 on macrophages, eosinophils, platelets and T cells."},{"term":"Immunoglobulin G (IgG)","value":"An immunoglobulin composed of two Fab and one Fc fragment.  The Fabs include the antigen combining sites while the Fc region consists of the remaining constant sequence domains of the heavy chains and contains cell binding and complement binding sites. IgGs act on pathogens via agglutination, opsonization, activation of complement-mediated reactions against cellular pathogens and/or neutralization. Unlike other Igs, IgG can cross the placenta to the fetus as maternal antibodies. There are four known IgG subclasses. IgG2 differs from the rest in that it cannot be transferred across the placenta and IgG4 does not fix complement. IgG is present in serum at a concentration of 8-16 mg/ml."},{"term":"In situ","value":"A Latin phrase that literally means \"in the place.\"  It is used to refer to examination of a phenomenon in exactly the place where it occurs (e.g., organ perfusions). In oncology, in situ refers to malignant cells present as a tumor. They have not metastasized beyond the original site where the tumor was discovered.\r\n"},{"term":"In vitro","value":"A Latin phrase that literally means \"in glass.\" It is used to refer to a process or reaction (or experiment) occurring in an artificial environment (i.e., test tube, culture medium, etc.)."},{"term":"In vivo","value":"A Latin phrase that literally means \"in a living being.\"  It is used to refer to a process or reaction (or experiment) occurring in a living body."},{"term":"Indolent","value":"Slowly progressing, low-grade; causing little or no pain."},{"term":"Infarct","value":"The area of necrosis in tissue resulting from a local lack of oxygen (i.e., ischemia). See also Infarction"},{"term":"Infarction","value":"Sudden lack of sufficient arterial or venous blood supply due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The organs most commonly affected are the heart, brain, spleen, kidney, intestine, lung and testes. See also Infarct"},{"term":"Inflammation","value":"The response of the immune system to an injury caused by irritation, infection, physical damage or chemically-induced cell stress. Local reactions at the site of injury cause immune cells to be recruited into the area, leading to the destruction and removal of the affected tissues and to wound repair. The five symptoms of inflammation are redness, heat, swelling, pain and dysfunction of the affected area, although not all five need be present at any one time."},{"term":"Insulin","value":"A polypeptide hormone secreted by pancreatic beta cells that promotes the uptake and metabolism of glucose by cells; prevents release of glucose by the liver; promotes uptake of amino acids by muscle cells (i.e., protein synthesis); and inhibits breakdown and release of fats. Insulin release is triggered by growth hormone (somatotropin), glucagon and by glucose."},{"term":"Integrin alphaIIb/beta3 (Fibrinogen gpIIb/IIIa) Receptor","value":"An integrin that functions as a receptor for fibrinogen, fibronectin, plasminogen, prothrombin, thrombospondin and vitronectin and mediates platelet aggregation."},{"term":"Interleukin (IL)","value":"A member of a class of cytokines (IL-1 through IL-29) produced by several cell types (i.e., lymphocytes, macrophages, monocytes, fibroblasts, astrocytes, endothelium, etc) with very diverse actions. Some of these actions include effects on stem cell division (IL-11); development and differentiation of B cells (IL-5) and Th1 cells (IL-12); T cell growth and activation (IL-2); lymphocyte growth (IL-6), etc."},{"term":"Interleukin 1 (IL-1)","value":"A soluble protein cytokine that is a member of the IL-1 superfamily which includes IL-1alpha, IL-1beta and the IL-1 receptor antagonist (IL-1RA). IL-1alpha and  IL-beta are proinflammatory cytokines that are involved in inflammatory and immune responses while IL-1RA competes for receptor binding with these tow isotypes thus blocking inflammatory and/ or immune activation. Both isotypes are secreted by monocytes, macrophages and/or accessory cells early during an immune response and they activate T and B cells, stimulate T cell proliferation and enhance T and B cell responses to antigens. Overproduction of IL-1 has been implicated in several diseases including COPD, rheumatoid arthritis, type 1 diabetes, Alzheimer's disease and inflammatory bowel disease (IBD) and inhibitors of this cytokine may be effective treatment options for these disorders."},{"term":"Interleukin 1 Receptor (IL-1R)","value":"The cytokine receptor that binds members of the IL-1 superfamily IL-1alpha, IL-1beta and IL-1 receptor, type I(IL-1R1/IL-1RA). There are two identified subtypes: type I (CD121a) and type II (CD121b) which are involved in cytokine-induced immune and inflammatory responses. Antagonism of these receptor subtypes may be effective in the treatment of inflammatory diseases such as COPD."},{"term":"Interleukin 10 (IL-10)","value":"A cytokine released by Th2 cells that can inhibit cytokine release from Th1 cells. In addition, during late-phase inflammatory reactions, IL-10 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells that are involved in recruitment of inflammatory cells from the circulation. IL-10 has been implicated in the pathogenesis of systemic lupus erythematosus. It inhibits the synthesis and release of proinflammatory cytokines produced by stimulated monocytes and macrophages and is under development for rheumatoid arthritis. Psoriatic lesions show significantly low levels of IL-10 and studies suggest that this cytokine may be an effective treatment for psoriasis."},{"term":"Interleukin 11 (IL-11)","value":"A pleiotropic antiinflammatory cytokine that modulates antigen-specific antibody responses, potentiates megakaryocytes and regulates bone marrow adipogenesis. IL-11 has been shown to act synergistically with IL-10 to inhibit proinflammatory cytokine production and it decreases TNF-alpha, IL-1 and IL-12 production due to inhibition of NFkappaB. IL-11 may be effective as a treatment for psoriasis."},{"term":"Interleukin 12 (IL-12)","value":"A heterodimeric cytokine that promotes cell-mediated immunity by facilitating type 1 helper T lymphocyte responses, including the production of IFN-gamma by both T cells and natural killer cells, potentiating the lytic activity of natural killer cells and boosting specific cytolytic T lymphocyte responses. IL-12 has shown potent therapeutic effects in various cancers and infectious diseases, including some viral infections. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis, psoriasis and multiple sclerosis."},{"term":"Interleukin 13 (IL-13)","value":"Immune regulatory cytokine, predominantly produced by activated Th2 cells and mast cells, that inhibits the production of inflammatory cytokines in monocytes. IL-13 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-13 ( in addition to IL-4, IL-5 and GM-CSF) selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa."},{"term":"Interleukin 15 (IL-15)","value":"A cytokine expressed by monocytes, macrophages, dendritic cells (DC), keratinocytes, fibroblasts and nerve cells. It binds to and signals through a complex composed of the IL-2/IL-15 receptor beta chain (CD122) and the common gamma chain (gamma-C, CD132). It is expressed by T cells, monocytes and keratinocytes in psoriatic epidermis that affects T, B and NK cell division, neutrophil and monocyte activation. It also inhibits lymphocyte apoptosis. Keratinocyte-derived IL-15 has been shown to inhibit keratinocyte and lymphocyte apoptosis and it may play a role in the survival of infiltrating lymphocytes and abnormal keratinocytes features in psoriasis. This cytokine has been implicated as playing a role in rheumatoid arthritis and is overexpressed in psoriasis and pulmonary inflammatory diseases. IL-15 accumulates within synovial lesions and induces the overproduction of IL-17 within rheumatic joints. In addition, IL-15 neutralization has been shown to be beneficial in preclinical models of psoriasis, diabetes and celiac disease. IL-15 is normally not secreted. However, viral infection can cause its secretion."},{"term":"Interleukin 17 (IL-17)","value":"IL-17 is a family of cytokines whose members include IL-17A, IL-17B, IL-17C, IL-17D, IL-17E (also known as IL-25) and IL-17F. These cytokines are associated with many immune regulatory effects and are associated with mediation of proinflammatory and allergic responses. IL-17 induces cytokine (e.g., IL-6, G-CSF, GM-CSF, IL-1beta, TGF-beta, TNF-alpha), chemokine (e.g., IL-8, GRO-alpha and MCP-1) and prostaglandin (e.g. PGE2) production from several cell types (e.g., fibroblasts, endothelial cells, epithelial cells, keratinocytes, monocytes and macrophages). IL-17 is secreted by the novel T helper cell subset Th17 which induces autoimmune inflammation and IL-17 receptor signaling may play a role in the development of chronic destructive arthritis from acute synovitis; IL-17 contributes both directly and indirectly to the bone and cartilage destruction occurring in rheumatoid arthritis. IL-17 may also be involved in the stimulation of osteoclastogenesis. The IL-17 family has been linked to other immune/autoimmune related diseases including asthma (i.e., plays a role in airway remodeling), lupus, allograft rejection, ankylosing spondylitis and antitumor immunity."},{"term":"Interleukin 18 (IL-18)","value":"A proinflammatory cytokine structurally and functionally related to the IL-1 family of proteins that is a strong inducer of IFN-gamma production by T lymphocytes and NK cells. It is the only cytokine that can induce T helper 1 (Th1) and T helper 2 (Th2) cell polarization depending on immunologic context. It is implicated in several immune-mediated diseases. It is invovled in both innate and acquired immunity and its inflammation-promoting role is IFN-gamma-independent. It  also plays a role in the local inflammation seen in rheumatoid arthritis. It is currently under investigation as an immunotherapeutic cancer agent and as an angiogenic factor."},{"term":"Interleukin 18 Binding Protein (IL-18BP)","value":"A constitutively secreted glycoprotein protein that exerts antiinflammatory and immunosuppressive effects. By preventing interleukin 18 (IL-18) receptor binding, it inhibits IL-18 and interferon (IFN)gamma production. Four human splice variants have been identified (IL-18BPa, IL-18BPb, IL-18BPc, IL-18BPd) of which IL-18BPa is the predominant form exhibiting the highest affinity for IL-18. While IL-18Pc also neutralizes IL-18, . IL-18BPb and IL-18BPd cannot bind to or neutralize cytokine. Inhibition of IL-18BP would be effective in suppressing high circulating levels IL-18 observed in many autoimmune diseases such as psoriasis, rheumatoid arthritis, inflammatory bowel disease psoriatic arthritis and in sepsis."},{"term":"Interleukin 1beta (IL-1beta)","value":"A cytokine released by mast cells following allergen-IgE binding that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. It is also released by epithelial cells and astrocytes. An upregulation of IL-1beta production by the microvasculture has been observed in Alzheimer's disease and in response to ischemic insult. See also Interleukin 1 (IL-1)"},{"term":"Interleukin 2 (IL-2)","value":"IL-2 is a cytokine produced by CD4+ T lymphocytes upon activation by antigens and costimulators. It promotes T cell clonal expansion in the adaptative immune response and can activate B lymphocytes, monocytes and NK cells. Binding of IL2 to its receptor activates the JAK/STAT, PI3-kinase and RAS signaling pathways. Alpha chain monomers (CD25) conform a low affinity IL2 receptor. High affinity and intermediate affinity IL2 receptors are conformed by alpha/beta heterodimers and beta chain monomers, respectively, associated to a gamma chain. It plays a role in both proliferative and activation-induced cell death (AICD) signaling of T cells. MS is in part genetically determined and the gene encoding the alpha-chain of the IL-2 receptor, IL2RA, harbors alleles associated with risk to MS and other autoimmune diseases such as GVHD. In addition, IL2RA genetic variants correlate with the levels of a soluble form of the IL-2 receptor in subjects with type 1 diabetes and multiple sclerosis (MS). IL-2 is produced by activated T cells in the synovium during the early stages of rheumatoid arthritis and in psoriatic lesions."},{"term":"Interleukin 20 (IL-20)","value":"A new member of the IL-10 family (including IL-19, IL-22, IL-24 and IL-26) of cytokines which signals through the IL-20R1/IL-20R2 heterodimer. Together with IL-19, it is synthesized by a distinct population of keratinocytes. IL-20 induces keratin proliferation and Stat-3 signal transduction pathway and may be implicated in the pathogenesis of psoriasis."},{"term":"Interleukin 23 (IL-23)","value":"A heterodimeric cytokine composed of a unique p19 subunit and the p40 subunit component of IL-12. It is secreted by activated dendritic cells (DCs) and macrophages and binds to memory T cells, NK cells, macrophages and DCs. In particular, this cytokine is suspected to be involved in the activation and maintenance of the Th17 subset of inflammatory T cells. It has been hypothesized that the autoimmune actions of IL-12 are attributable to IL-23 since mice lacking IL-23p19 (only IL-23 absent) and mice lacking IL-12p40 (both IL-12 and IL-23 absent) were protected from autoimmune encephalomyelitis (EAE) and collagen-induced arthritis (CIA). On the other hand, mice lacking IL-12p35 (only IL-12 absent) developed more severe disease.  Overexpression of IL-23 and/or IL-12 or defect in their receptors may be involved in conditions such as rheumatoid arthritis, psoriatic arthritis, psoriasis, multiple sclerosis, Crohn's disease and ankylosing spondylitis. Patients with Crohn's disease have been shown to have a significantly increased number of intestinal CD14+ macrophages as compared with normal control subjects and these cells produce larger amounts of IL-23 and TNF-alpha as compared to normal controls or patients with ulcerative colitis. Moreover, genomic studies conducted in patients with Crohn's disease have identified the IL-23 pathway as playing a predominant role in this disorder. Monoclonal antibodies directed against both IL-12 and IL-23 may be effective treatment options for these diseases.\r\n"},{"term":"Interleukin 3 (IL-3)","value":"A multilineage cell growth inducing cytokine (hemopoietic colony stimulating factor) secreted by lymphocytes, epithelial cells and astrocytes which stimulates clonal proliferation and differentiation of various types of blood and tissue cells."},{"term":"Interleukin 4 (IL-4)","value":"Pleiotropic, immune regulatory cytokine released by Th2 and mast cells that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-4 (in addition to IL-5, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. Eosinophil infiltration of airway submucosa and mucosa is characteristic allergic diseases. Like IL-12, this cytokine has been found to inhibit HIV-1 replication in primary blood-derived human macrophages. Antagonizing the effects of IL-4 is a potential new approach for the treatment of for asthma, allergic rhinitis and rheumatoid arthritis. IL-4 receptors are overabundant in several tumor types therefore IL-4 fusion toxins may be an effective treatment for some forms of cancer (i.e., breast cancer)."},{"term":"Interleukin 5 (IL-5)","value":"A proinflammatory cytokine released by Th2 and mast cells that is involved in the development and differentiation of eosinophils and B cells; it also upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-5 (in addition to IL-4, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. IL-5 is essential for eosinophilic inflammation which leads to airway hyperresponsivenes. Antagonizing the effects of IL-5 or inhibiting its production are potential new approaches for the treatment of allergic disease such as asthma and allergic rhinitis."},{"term":"Interleukin 6 (IL-6)","value":"A member of a subfamily of related hematopoietic, proinflammatory cytokines, including leukemia inhibitory factor, ciliary neurotrophic factor, oncostatin M, cardiotrophin-1 and IL-11. The expression of IL-6 in the brain has been found to be increased in neurological disorders such as Alzheimer's disease, Parkinson's disease, trauma, stroke and meningitis. IL-6 is also present in abnormally high levels in obesity and type 2 diabetes, and has been implicated in inflammatory bowel disease. IL-6 is upregulated in epithelial cells infected with rhinoviruses and overexpression of IL-6 have been observed in the synovium in the early stages of rheumatoid arthritis, at systemic and cutaneous levels in psoriasis and in human systemic lupus erythematosus. IL-6 in the presence of sex steroids is required for osteoclastogenesis to occur."},{"term":"Interleukin 8 (IL-8)","value":"An ELR+ (Glu-Leu-Arg) CXC chemokine suggested to be an important mediator of angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Overproduction of IL-8 may also be involved in airway inflammation characteristic of cystic fibrosis, asthma, the common cold and rheumatoid arthritis; IL-8 may also play a role in the inflammatory processes involved in psoriasis. Ischemia has been shown to increase the production of IL-8 in the brain. see Also Interleukin 8 beta  Receptor (IL-8betaR)"},{"term":"Interleukin 8 (IL-8) beta Receptor","value":"One of two G-protein-coupled receptor subtypes (alpha and beta) for interleukin 8 (IL-8), an ELR+ (Glu-Leu-Arg) CXC chemokine (chemokine CXCR2) produced by monocytes, fibroblasts and endothelial cells that mediates activation and chemotaxis of T cells, monocytes and neutrophils. Overexpression of IL-8 appears to be involved in airway inflammation characteristic of COPD as well as cystic fibrosis, asthma, the common cold and rheumatoid arthritis. Antagonism of this receptor could prevent recruitment of pathogenic cells into inflamed lungs thus preventing development of COPD. Antagonism of this receptor may also be effective in the treatment of psoriasis and atherosclerosis since IL-8 may also play a role in the inflammatory processes involved in psoriasis and angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Ischemia has also been shown to increase the production of IL-8 in the brain."},{"term":"Interleukin 9 (IL-9)","value":"A cytokine secreted from CD4+ T cells that affects T cell and mast cell division/development. It may also be involved in the pathogenesis of asthma by enhancing the effects of other cytokines and inflammatory mediators. The normal nonasthmatic state is suggested to be associated with downregulation of IL-9."},{"term":"Intermediate-Density Lipoprotein (IDL)","value":"A lipoprotein of intermediate density."},{"term":"Intermittency","value":"Marked intermissions or interruptions during the course of a disease. In BPH, intermittency is a LUTS characterized by dribbling or leakage of urine."},{"term":"Intron","value":"A noncoding sequence of DNA within a gene that is transcribed into mRNA but later removed by RNA splicing in the nucleus leaving a mature mRNA that is then translated in the cytoplasm"},{"term":"iRNA","value":"See RNA Interference (RNAi)"},{"term":"Ischemia","value":"Insufficient blood supply to an organ or tissue which may result in organ damage."}]},{"letter":"J","Terms":[]},{"letter":"K","Terms":[{"term":"Knockin","value":"A gentically modfied mutant organism (e.g., mouse, yeast) that carries a particular gene that is not normally present. The effect of including this gene can be provide information about a specific disease or condition."},{"term":"Knockout","value":"Experimental inactivation of specific genes in laboratory organisms (e.g., mice, yeast) in order to study a specific disease or condition."}]},{"letter":"L","Terms":[{"term":"L-Type Calcium Channels","value":"A large transmembrane ion channel with selective permeability for calcium ions. They are essential for neuronal signal transmission and intracellular signal transduction and are structurally related to T-type calcium channels, exhibit sustained conductance, are slow inactivating and are regulated by cAMP-dependent protein kinase (e.g., phosphorylation enhances the probability of channel opening). They are found on skeletal, cardiac and smooth muscle cells and within the nervous system where they are expressed on neurons and neuroendocrine cells. In the cardiovascular system they are responsible for the plateau phase (i.e., slow inward current) of the action potential and they may trigger the release of internal Ca2+. It has been suggested that modulation of intracellular calcium levels by voltage-gated calcium channels may be involved in neuronal death associated with Alzheimer's disease (AD) and L-type calcium channel modulators have been shown to enhance cognition in AD patients. Moreover, in bipolar disorder, administration of antidepressant medications, behavioral sensitization processes, and neuronal calcium dysregulation can all lead to apoptosis of critical brain circuitry that regulates emotion. Thus, targeting dysregulation in calcium levels in the central nervous system by administering L-type calcium channel blockers may have the potential for altering the cyclical course or progression of bipolar disorder."},{"term":"Lesion","value":"Pathological or traumatic discontinuity of a tissue or loss of function of organ or other body part.\r\n"},{"term":"Lipase","value":"Enzymes (EC class 3.1.1) that catalyze the hydrolysis of fat (lipolysis). Lipases are carboxylesterases."},{"term":"Lipoprotein Lipase (LPL)","value":"An enzyme (EC 3.1.1.34) synthesized in adipocytes and skeletal and cardiac myocytes afterwhich it is transported to the surface of capillary endothelium where where it hydrolyzes triacylglycerols in chylomicrons, VLDL, LDL and diacylglycerols. Genetic deficiency of the enzyme causes familial hyperlipoproteinemia type I. Mutations in the LPL gene have been linked to low HDL cholesterol levels and an increased risk of cardiovascular disease. Activation of this enzyme appears to be a promising mechanism for increasing HDL levels and decreasing atherosclerosis."},{"term":"Lipoprotein(a)","value":"A family of lipoprotein particles that are a genetic variant of LDL cholesterol and triglycerides that vary in density and size according to their protein-lipid ratio. High plasma levels of apolipoprotein(a) are associated with an increased risk of atherosclerotic cardiovascular disease."},{"term":"Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)","value":"A member (EC 3.1.1.47) of the A2 phospholipase family of enzymes that hydrolyze phospholipids at the sn2 position to generate lysophospholipids and fatty acids. The enzyme is also known as 2-acetyl-1-alkylglycerophosphocholine esterase and platelet-activating factor acetylhydrolase (PAF-AH) and appears to be an independent predictor of coronary heart disease. The enzyme circulates bound to LDL and its expression is modulated by mediators of inflammation. It is speculated that this enzyme could either promote atherogenesis if it releases products from LDL phospholipids that are injurious to the artery wall or it could exert protective effects if it decreases inflammation and thrombotic events via hydrolysis of PAF. 5-lipoxygenase-mediated oxygenation of membrane phospholipids and its interaction with phospholipase A(2)s may play a crucial role in the pathogenesis of diseases such as bronchial asthma and atherosclerosis."},{"term":"Lipoproteins","value":"Compounds or complexes containing both lipid and protein. The majority of lipids in plasma are lipoproteins. Examples include: VLDL (very low density lipoproteins), LDL (low density lipoproteins) and HDL (high density lipoproteins)."},{"term":"Lipoxygenase","value":"An enzyme catalyzing the oxidation of unsaturated fatty acids with O2 producing hydroperoxides of the fatty acids. 5-Lipoxygenase (EC 1.13.11.34) catalyzes the first step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes. 5-lipoxygenase inhibitors which block the synthesis of hydroperoxide acid, 5-HPETE and subsequent synthesis of leukotrienes may be effective in the management of COPD or rheumatoid arthritis. 15-Lipoxygenase (EC 1.13.11.33) is an atherogenic enzyme which plays a role in the oxidation of LDL leading to the formation of foam cells. Inhibition of this enzyme may be a potential treatment for atherosclerosis."},{"term":"Liver Receptor Homolog-1 (LRH-1)","value":"A member of the orphan nuclear receptor family that is the mammalian homolog of the Drosophila transcription factor, fushi tarazu F1 receptor (FTZ-F1, NR5A3). LRH-1 is expressed in organs derived from endoderm such as the intestine, liver, pancreas, ovary and exocrine pancreas and has been shown to play an important role in development, bile-acid homeostasis, steroidogenesis and progression of some carcinomas (e.g., breast, colon). It has also been shown to be involved in reverse cholesterol transport (RCT). Studies have demonstrated that its effect on apoA-1 gene transcription is to specifically regulate the expression of CETP and SR-BI thus implicating LRH-1 in HDL remodeling and cholesterol transport and validating it as a potentially effective target for the treatment of atherosclerosis. Targeting of LRH-1 to increase apoA-1 levels may also be effective in the treatment of other conditions caused by reduced plasma apoA-1 levels such as dyslipidemia, peripheral vascular disease, stroke, hypercholesterolemia, cardiovascular disorders and hypertension."},{"term":"Liver X Receptor (LXR)","value":"An orphan nuclear hormone receptor originally isolated from liver that has been identified as a target for cholesterol-lowering compounds. LXRs act as sterol sensors in the mevalonate pathway and regulate the expression of the reverse cholesterol transporter, ATP-binding cassette transporter-1 (ABCA1). LXR agonists or antagonists may be effective in preventing and treating atherosclerosis."},{"term":"Low-Density Lipoprotein (LDL)","value":"A lipoprotein which transports via the circulation cholesterol and fats from the liver to the rest of the body in the bloodstream. It is the major cholesterol carrier which transports 60-80% of the body's cholesterol. Blood levels of less than 130 mg/dl are considered normal while 130-59 mg/dl is borderline high and greater than 160 mg/dl is high. High LDL levels are a positive risk factor for the development of coronary artery disease. High levels of LDL cholesterol can build up on arterial walls (i.e., plaque)."},{"term":"LRH-1","value":"See Liver Receptor Homolog-1 (LRH-1)"},{"term":"Lymphocyte","value":"A type of white blood cell formed in lymphocytic tissue (i.e., lymph nodes, spleen, thymus, tonsils, Peyer's patches, bone marrow) that is responsible for specific immune recognition of pathogens and the initiation of adaptive immune responses."},{"term":"Lymphocytosis","value":"An increased number of circulating lymphocytes. Pathologic lymphocytosis occurs in chronic inflammation, recovery from acute infection, lymphocytic leukemia and hypoadrenocorticism and indicates a strong immune stimulus of chronic duration from a bacterial infection, viremia or immune-mediated disease. Absolute lymphocytosis is the presence of more than 15,000 lymphocytes/mm3 blood.\r\n"}]},{"letter":"M","Terms":[{"term":"Macrophage","value":"An immune cell that is capable of phagocytosis, and that may also be capable of antigen processing and presentation (APCs). These cell have different names depending upon the tissue in which they are located (e.g., Kupffer cells in the liver, alveolar macrophages in lung, histiocytes in connective tissue). Macrophages process the phagocytosed antigen and present it in association with class II molecules to CD4+ T cells. If the CD4+ T cell is Th0, antigen presentation by macrophages often results in differentiation of these Th0 cells into Th1 cells. Phagocytosis and/or cytokines induce macrophage activation, and activated macrophages secrete IL-1 and upregulate expression of costimulatory molecules (e.g., B7 and ICAM-1) on their surface."},{"term":"Magnetic Resonance Imaging (MRI)","value":"A noninvasive diagnostic procedure that produces computerized images of internal tissues. It is used to detect active lesions responsible for epilepsy, multiple sclerosis, coronary artery disease and other disorders. It is also used to diagnose and predict the risk of stroke and may be effective in detecting variant Creutzfeldt-Jakob disease."},{"term":"Major Histocompatibility Complex (MHC)","value":"The genetic loci (class I, II and III regions) found in all mammals encoding a specialized group of highly polymorphic cell surface proteins responsible for antigen recognition. Class I and II MHC gene products are involved in signaling between lymphocytes and cells expressing antigen. Class III molecules are structurally and functionally different from the gene products of class I and II MHC and are commonly referred to as the complement system."},{"term":"MAP Kinase","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)\r\n"},{"term":"MAPK","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)"},{"term":"MEK","value":"See Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)"},{"term":"Metabolic Syndrome","value":"A group or clustering of metabolic conditions that includes impaired glucose tolerance, obesity, dyslipidemia, hypertension and increased prothrombin and fibrinolytic factors. These conditions can occur together promotig the development of type 2 diabetes and cardiovascular disease. Excess cardiovascular morbidity and cardiac dysfunction (from left ventricular hypertrophy and cardiac ischemia) and an increased risk of atherosclerotic disease are also recognized features of of this syndrome. Also known as Insulin Resistance Syndrome and Syndrome X."},{"term":"Microsomal Triglyceride Transfer Protein (MTP)","value":"A heterodimeric transfer protein which limits the production of atherogenic apolipoprotein B (apoB)-containing lipoproteins. It plays a crucial role in the assembly of VLDL. Inhibition of MTP has been shown to reduce plasma LDL and VLDL levels and thus may be a potential target for the treatment of dyslipidemia and prevention of atherosclerosis."},{"term":"Missense Mutation","value":"A mutation that converts a codon coding for one amino acid to a codon coding for another amino acid. \r\n"},{"term":"Mitochondria","value":"A class of tubular-shaped organelles that reside within eukaryotic cells, converting oxygen and nutrients into adenosine triphosphate (ATP), which is required by cells for energy. Mitochondrial dysfunction has been hypothesized to contribute to the pathogenesis of Huntington's disease, Parkinson's disease, schizophrenia, and a wide range of other disorders."},{"term":"Mitogen-Activated Protein (MAP) Kinase (MAPK)","value":"A family of serine/threonine kinases that are activated when quiescent cells are exposed to mitogens and therefore potentially transmit a signal for entry into the cell cycle. One target is transcription factor p62TCF. MAPK can be phosphorylated by MAP kinase kinase (MAPKK) which is controlled by RAF1. C-Jun N-terminal kinases (JNK) are members of the MAPK family of enzymes. MAPK has been implicated in cerebral spasm and inhibitors of this kinase may be useful in the treatment of vasospasm following subarachnoid hemorrhage. See also p38 Mitogen-Activated Protein Kinases (MAPKs)"},{"term":"Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)","value":"A kinase enzyme (EC 2.7.12.2) and member of MAPK signal transduction cascade where it is lies upstream of MAPK and stimulates the enzymatic activity of MAPK. MAPKs, also known as extracellular signal-regulated kinases (ERKs), are activated by a wide variety of extracellular signals and thus serve as an integration point for multiple biochemical pathways. They are activated via rapid phosphorylation on threonine and tyrosine residues. The MAPK signaling cascade is initiated by extracellular signaling which activates (i.e., phosphorylates) MAP kinase kinase kinase (MKKK; MAP3K). Activated MAP3K phosphorylates MEK which then activates MAPK. MEK/ERK inhibitors inhibit mucin secretion which would be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders such asthma and cystic fibrosis. MEK inhibitors have also been shown to inhibit muscarinic receptor-induced human lung fibroblast proliferation which contributes to the pathology of COPD. In Crohn's disease, macroscopically noninflamed colon contributes to diarrhea via impaired epithelial sodium channel-mediated sodium absorption and studies have shown that therapeutic inhibition of MEK1/2 restores electrogenic sodium absorption. Thus, inhibition of MEK could be an effective strategy for the treatment of the chronic inflammation and diarrhea seen in Crohn's disease."},{"term":"Monoclonal Antibody (MAb)","value":"An antibody of a defined specificity that recognizes only a single epitope of an antigen. MAbs are produced by a single clone of B lymphocytes. Production of MAbs for therapeutic use is usually carried out by fusion of the relevant B cell clone with an immortalized cell line. This results in a population of hybrid cells (i.e., hybridoma) that secretes a large amount of the MAb of interest. Therapeutic MAbs can be murine, chimeric or humanized. Murine MAbs are developed in mice and can result in marked human antimouse responses (i.e., immunogenicity) in humans following administration. Thus, chimeric antibodies were developed which are composed of the murine variable region grafted onto a human MAb (two-thirds human). Humanized MAbs are less immunogenic since only the complementary determining regions of the murine antibody (only 5%) are grafted onto a human MAb."},{"term":"Monocyte Chemoattractant Proteins (MCP-1, MCP-2, MCP-3, MCP-4)","value":"MCP-1 through MCP-4 are CC chemokines secreted by monocytes, macrophages, fibroblasts and keratinocytes. They stimulate macrophage activation and basophil histamine release and promote Th2 immunity. MCP-1 targets T cells, monocytes and basophils via CCR2 and CCR9 receptors; MCP-2 targets T cells, monocytes, eosinophils and basophils via CCR2 and CCR9 ; and MCP-3 and MCP-4 target T cells, monocytes, eosinophils, basophils and dendritic cells via CCR2, CCR3 and CCR9 receptors. MCP-1 has been implicated in the pathogenesis of rheumatoid arthritis and atherosclerosis and has been shown to be increase in the brain in response to ischemia."},{"term":"Mutation","value":"Damage or change in a gene or chromosome so that transcription is altered.\r\n"},{"term":"Myalgia","value":"Pain in a muscle or muscles."},{"term":"Myeloperoxidase (MPO)","value":"A member of the heme peroxidase-cyclooxygenase (EC 1.11.1.7) superfamily that is highly expressed in neutrophil granulocytes and also in lower levels in monocytes and certain macrophages. This lysosomal enzyme requires heme as a cofactor and produces hypochlorous acid (HOCl) from hydrogen peroxide (H2O2) and chloride anion (Cl-) during the respiratory burst of the neutrophil and oxidizes tyrosine to tyrosyl radical using H2O2 as an oxidizing agent. Hypochlorous acid and tyrosyl radical are cytotoxic and used by neutrophils to kill bacteria and other pathogens. Circulating levels of this enzyme are used to predict risks for adverse cardiac events. In atherosclerosis oxidized low-density lipoprotein (oxLDL) binds to CD36 (the receptor that recognizes modified forms of LDL) and aids in the formation of lipid-laden foam cells that accumulate in blood vessel walls and form the fatty streaks typical of the disease. Inhibitors of MPO could block modification of LDL thereby preventing CD36 from recognizing it."},{"term":"Myocardial Infarction (MI) ","value":"A sudden lack of sufficient arterial or venous blood supply to the heart due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The resulting necrosis of the cardiac muscle is consistent with prolonged myocardial ischemia. It is common in individuals with coronary artery disease (CAD). See also Infarction and Infarct."},{"term":"Myocyte","value":"Any muscle cell."},{"term":"Myopathy","value":"Any disease of the muscle involving a progressive degeneration and weakening.\r\n"}]},{"letter":"N","Terms":[{"term":"NAD","value":"Coenzymes (nicotinamide adenine dinucleotides) that binds to proteins and acts as electron and hydrogen carriers in some oxidation-reduction reactions (i.e., respiratory metabolism. The oxidized form is NAD+ and NADPH (nicotinamide adenine dinucleotide phosphate) is the reduced form."},{"term":"NADPH Oxidase","value":"A plasma membrane-associated enzyme complex that catalyzes the univalent reduction of oxygen using NADPH as an electron donor. The resulting superoxide acts as an oxidant in phagocytes. Genetic defects in this system result in chronic granulomatous disease. Inhibitors of this enzyme have been shown to decrease systolic blood pressure and inhibit peroxide anion production in mice and may be effective in the treatment of hypertension."},{"term":"Nausea","value":"The unpleasant sensation of queasiness or stomach upset that often precedes or accompanies the act of vomiting. Some common causes include motion, early pregnancy, intense pain, emotional stress, gallbladder disease, food poisoning, enteroviruses among others. It is also be an adverse effect of several chemotherapeutic agents.\r\n"},{"term":"Necrosis","value":"Death of one or more cells of a tissue or organ. Early damage includes irreversible mitochondrial (e.g., swelling, granular calcium deposits) and nuclear (e.g., pyknosis, karyolysis, karyorrhexis) changes. Later, affected cells merge forming a focus of granular, amorphous or hyaline material."},{"term":"Neuron","value":"The cell of the nervous system which is composed of a cell body, dendrites and a single axon."},{"term":"Neutrophil","value":"See Polymorphonuclear Leukocytes."},{"term":"NHANES","value":"Acronym for the National Health and Nutrition Examination Survey. NHANES is a program of studies created and implemented to assess the health and nutritional status of adults and children in the United States."},{"term":"Niacin","value":"See Nicotinic Acids"},{"term":"Nicotinamide","value":"The active amide of nicotinic acid that is also known as niacinamide and nicotinic acid amide. It is used in the treatment of pellagra."},{"term":"Nicotinic Acids","value":"2-, 3- or 4-Pyridinecarboxylic acids of which the 3-carboxy derivative is active as a vitamin (i.e., niacin). Niacin is a water soluble member of the B vitamin group that is used in the production of fatty acids, steroids and cholesterol. It has cholesterol-lowering and vasodilating properties."},{"term":"Nicotinic Cholinergic Receptors","value":"A class of acetylcholine (ACh) receptors that are activated by acetylcholine and the alkaloid nicotine (which imitates the effects of ACh) and thus distinguishes this class of ACh receptors from an unrelated group known as muscarinic ACh receptors (which respond to alkaloid muscarine but not nicotine). The receptors are linked to ion channels in the cell membrane and are divided into two subclasses: the ganglionic nicotinic neuronal receptor and the neuromuscular nicotinic muscular receptor. Activation of the receptor through ligand binding can result in depression or stimulation of autonomic ganglia and neuromuscular junctions."},{"term":"Niemann-Pick C1 Like 1 Protein (NPC1L1)","value":"A protein involved in absorption of intestinal cholesterol that has approximately 50% homology to NPC1, a gene defective in the cholesterol storage disease, Niemann-Pick type C disease. Abundant expression of the protein is observed in the small intestine and in the brush border of enterocytes and it may be a target for the action of the cholesterol absorption inhibitor ezetimibe. See also Niemann-Pick Disease"},{"term":"Niemann-Pick Disease","value":"A group of diseases caused by specific genetic mutations affecting metabolism. The three most commonly recognized forms of the disease are Types A, B and C. Types A and B Niemann-Pick are both caused by the deficiency of the activity of acid sphingomyelinase, an enzyme found in lysosomes and required for sphingomyelin metabolism. Malfunctioning of acid sphingomyelinase results in accumulation of sphingomyelin within the cell eventually causing cell death and the malfunction of major organ systems. Type C Niemann-Pick is different from types A and B at the biochemical and genetic level. Type C has been associated with defects in the NPC1 gene and patients with this type cannot properly metabolize cholesterol and other lipids within the cell. Thus, excessive amounts of cholesterol accumulate within the liver and spleen and excessive amounts of other lipids accumulate in the brain. See also Niemann-Pick C1 like 1 Protein (NPC1L1)"},{"term":"Nitric Oxide (NO), Endogenous","value":"A biologically signaling gas synthesized from L-arginine in endothelium, macrophages, neutrophils, platelets and other tissues. It is formed in bone, brain, granulocytes, pancreatic B cells and peripheral nerves by a calcium-calmodulin-dependent constitutive nitric oxide synthase (cNOS) and, in hepatocytes, macrophages and smooth muscles by a calcium-calmodulin-independent inducible NOS (iNOS). It is involved in many important biological events such as neurotransmission, immune regulation, vascular smooth muscle relaxation (i.e., mechanisms of penile erection), inhibition of platelet aggregation and memory. NO production has been implicated as defective in diabetic peripheral vascular studies. Blockade of NOS, especially the endothelial NOS (eNOS) isoform, can induce insulin resistance which suggests that NO plays an important role in modulating insulin sensitivity and carbohydrate metabolism. Endothelium-derived NO (also known as endothelium-derived relaxing factor or EDRF) refers to the isoform of NO secreted by endothelial cells that is responsible for maintaining systemic blood pressure, vascular remodeling and angiogenesis. Studies have demonstrated that shortages or inactivation of this NO may contribute to high blood pressure and formation of atherosclerotic plaque and excess production is toxic to brain cells. NO has also been implicated in the pathogenesis of ischemic brain injury."},{"term":"Nitric Oxide (NO), Endothelium-derived","value":"See Nitric Oxide (NO), Endogenous"},{"term":"Nitric Oxide Synthase (NOS)","value":"The enzyme (EC 1.14.13.39) that catalyzes the production of NO from L-arginine. Three isoforms of this enzyme have been described: an inducible form (iNOS) and two constitutive forms, neuronal (nNOS) and endothelial (eNOS)."},{"term":"Nonsteroidal Antiinflammatory Drugs (NSAIDs)","value":"A large group of medications, some of which are related to aspirin. They are used to treat conditions associated with inflammation and pain."},{"term":"NPC1L1","value":"See Niemann-Pick C1 like 1 Protein (NPC1L1)"},{"term":"Nuclear Factor kappa B (NF-kappaB)","value":"A protein transcription factor and intracellular mediator of the inflammatory cascade involved in generation of certain adhesion molecules (ICAM-1, VCAM-1), iNO synthase, COX-2, cytokines (e.g., IL-1beta, IL-2, TNF-alpha, IL-6, IFN-gamma) and chemokines (e.g., IL-8). Other genes which are regulated by NFkappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. Recent findings suggest that NF-kappaB provides a mechanistic link between inflammation and cancer, controlling the ability of preneoplastic and malignant cells to resist apoptosis-based tumor surveillance mechanism and regulating tumor angiogenesis and invasiveness. NF-kappaB activity is closely associated with IkappaB Kinase Complex (IKK), and aberrant or constitutive NF-kappaB activation has been detected in many human malignancies including solid tumors and hematological cancers such as acute myeloid leukemia and chronic myelogenous leukemia. It has also been reported that constitutive activation of the receptor tyrosine kinase Flt3 is responsible for IKK activation. Also, TNF activation results in NF-kappaB activation and plays a role in inflammation-driven tumor progression. In addition, NF-kappaB signaling in microglia is essential for the Abeta-induced neuronal death that causes Alzheimer's disease. Therapeutic inhibitors of the NF-kappaB activation may be a useful option for treating cancer, including breast, lung, colorectal and prostate cancer and acute myeloid leukemia, musculoskeletal and connective tissue disorders  including ankylosing spondylitis and rheumatoid arthritis, respiratory disorders including asthma, neurological disorders including multiple sclerosis (MS), and also psychiatric, cardiovascular, renal, gastrointestinal, dermatological, endocrine, infections, metabolic, hematological and immunological diseases. NF-kappaB activation and plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease, depression and inflammatory bowel disease (IBD), atherosclerosis, asthma, arthritis, cachexia, cancer, diabetes, euthyroid sick syndrome, the common cold, AIDS, sepsis and stroke. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Other genes which are regulated by NF-kappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. NF-kappaB activation plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease and depression. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Moreover, enhanced NF-kappaB activity is involved in the pathology of both forms of IBD, Crohn's disease and ulcerative colitis and studies have demonstrated enhanced processing of the NF-kappaB precursor p105 and degradation of inhibitor of NF-kappaB, IkappaBalpha, by immunoproteasomes isolated from the mucosa of Crohn's disease patients. NF-kappaB has been identified as an important target for therapeutic intervention in IBD since it plays a central role in regulating inflammatory responses in these patients. NF-kappaB activation inhibitors may be effective for suppressing inflammation seen in Th17-mediated diseases such as rheumatoid arthritis, psoriasis and Crohn's disease."},{"term":"Nucleoside","value":"The building block of DNA and RNA which is a purine or pyrimidine base linked glycosidically to ribose or deoxyribose. It lacks the phosphate residues that would make it a nucleotide.  The ribonucleosides are adenosine, guanosine, cytidine and uridine and the deoxyribosides are deoxyadenosine, deoxyguanosine, deoxycytidine and deoxythymidine."},{"term":"Nucleotide","value":"The phosphate ester of a nucleoside that is the basic constituent of DNA and RNA. Other structures (e.g., cAMP, cGMP) and molecules with two or three phosphates are also called nucleotides."}]},{"letter":"O","Terms":[{"term":"Obesity","value":"A multifactorial condition (also known as adiposity or corpulence) manifested as excessive amounts of fat accumulated in subcutaneous connective tissue. It is associated with behavioral, endocrinological and metabolic changes. Obesity is classified according to two patterns of fat distribution: apple shaped, characterized by visceral (central or android) fat deposition predominately over the abdomen; and pear shaped, characterized by peripheral (or gynoid) fat deposition in subcutaneous tissue (e.g., hips, thighs, buttocks)."},{"term":"Occlusion","value":"Closure or blockage as in the case of a blood vessel.\r\n"},{"term":"Open-Label Trial","value":"A clinical study in which all participants (i.e., patient and investigator) know the identity of the administered drug."},{"term":"Orphan Drug","value":"A status granted by the FDA to unpatentable medications developed for rare diseases. Rare or orphan diseases are defined affecting fewer than 200,000 people in the US or are associated with a low prevalence of less than 5 per 10,000 in the community. This staus gives the manufacturer a seven-year right to exclusively market the compound. By increasing profitability of these agents, their production is encouraged."}]},{"letter":"P","Terms":[{"term":"P Wave","value":"A wave on an ECG corresponding to sinoatrial node (SA) and atrial depolarization.\r\n\r\n"},{"term":"P-Selectin","value":"A cellular adhesion molecule (CAM) involved in acute inflammation and hemostasis. It is expressed by platelets and endothelium and mediates adhesion. The majority of P-selectin binding lymphocytes are memory cells. P-selectin is stored in intracellular granules and expression can be rapidly upregulated by several mediators such as histamine, thrombin and LTC4. P-selectin binds P-selectin glycoprotein-1 (PSGL-1) which is expressed on most leukocytes and also recognizes sialylated carbohydrate groups related to the Lewis X or Lewis A family."},{"term":"P2Y12 Receptor","value":"A G protein-coupled purinergic chemoreceptor for adenosine diphosphate (ADP) that is expressed on the surface of platelet cells. It is involved in the regulation of platelet aggregation and clotting. It is a target for the therapeutic treatment of thromboembolisms and other clotting disorders.\r\n"},{"term":"p38 MAP Kinase","value":"See p38 Mitogen-Activated Protein Kinases (MAPK)\r\n"},{"term":"p38 Mitogen-Activated Protein Kinases (MAPKs)","value":"A class of MAPKs composed of four isoforms: p38 MAPK-alpha (MAPK14), p38 MAPK-beta (MAPK11), p38 MAPK-gamma (MAPK12) and p38 MAPK-delta (MAPK13 or SAPK4) which are activated by a variety of cellular stresses including osmotic shock, inflammatory cytokines, lipopolysaccharides (LPS), ultraviolet light and growth factors. They are activated via MAP3K and MEK by phosphorylation at Thr180 and Tyr182, Activated p38 MAPKs have been shown to phosphorylate and activate mitogen-activated protein kinase-activated protein kinase 2 (MAPKAPK2) and the transcription factors ATF-2, Mac and MEF2. p38 MAPKs may also be involved in mucin secretion and inhibiotrs of this kinase could be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders and may also inhibit lung fibroblast proliferation which contributes to the pathology of COPD."},{"term":"Palliative","value":"A treatment directed toward the control of symptoms rather than the curing of the disease."},{"term":"Pancreatitis","value":"Acute or chronic inflammation of the pancreas due to autodigestion of pancreatic tissue by its own enzymes. It is frequently caused by alcoholism or biliary tract disease but is also associated with hyperlipemia, hyperparathyroidism, abdominal trauma, vasculitis or uremia."},{"term":"Paracrine","value":"Refers to hormone signaling where the hormone synthesized in and released from endocrine cells binds to its receptor on nearby cells affecting their function."},{"term":"Paraoxonase-1 (PON1)","value":"An enzyme possessing antioxidant activity that associates with HDL and prevents oxidation of LDL. PON1 is therefore an important factor in the development of atherosclerosis and modification of serum PON1 activity may be an effective treatment of the disease."},{"term":"Pellagra","value":"A disease involving niacin deficiency. It is caused by improper diet and characterized by skin lesions, gastrointestinal disturbances and nervousness. Other symptoms include depression, dermatitis, dementia and diarrhea."},{"term":"Peripheral Blood Mononuclear Cells (PBMCs)","value":"Lymphocytes and monocytes isolated from peripheral blood by centrifugation."},{"term":"Peripheral Vascular Disease (PVD)","value":"A group of diseases of affecting blood vessels located outside the heart and brain. PVD usually refers to peripheral artery disease (peripheral arterial disease, PAD) which develops when the arteries suppling  blood to internal organs, arms and legs become completely or partially blocked as a result of atherosclerosis. \r\n"},{"term":"Peroxidation","value":"The oxidative degradation of lipids. This process proceeds with a free radical chain reaction which involves the removal of electrons from the lipids in cell membranes by free radicals resulting in cell damage.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor alpha (PPARalpha)","value":"A nuclear receptor hormone that together with PPARdelta and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARalpha isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARalpha may be effective in the treatment of type 2 diabetes, lipoprotein disorders, atherosclerosis, hypertension and Alzheimer's-type dementia.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor delta (PPARdelta)","value":"A nuclear receptor hormone that together with PPARalpha and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARdelta isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARdelta type 2 diabetes, lipoprotein disorders, obesity and atherosclerosis.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor gamma (PPARgamma)","value":"A ligand-activated transcription factor, member of the nuclear hormone receptor family, that is predominately expressed in adipose tissue and involved in adipocyte differentiation. Thus, it is important for lipid storage and utilization. Several fatty acids, eicosanoids, prostaglandins and their metabolites activate PPARgamma. Insulin-sensitizing thiazolidinediones have been shown to be PPARgamma agonists. PPARgamma agonists may be effective in the treatment of atherosclerosis and Alzheimer's disease. PPARgamma has also been implicated in tumor repression or formation and is expressed in both normal breast epithelia and breast cancer cells."},{"term":"Peroxisome Proliferator-Activated Receptors (PPARs)","value":"Ligand-activated transcription factors that are members of the nuclear receptor superfamily which also include steroid, retinoid, thyroid hormone and vitamin D receptors. Three PPARs have been identified: PPARalpha, PPARgamma and PPARdelta. They are activated by endogenous fatty acids or fatty acid derivatives. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. PPAR receptors have metabolic and immune functions that influence the development of atherosclerosis and agonists to either of the three subtypes may be effective in the treatment of atherosclerosis."},{"term":"Phase 0 Trial","value":"A phase of clinical testing that is also known as exploratory IND in the US and Microdosing in Europe. This stage of drug development is intended to facilitate the transition from animal to human studies. The trials evaluate doses determined in animal studies that are only 1/100th of those expected to be required for therapeutic effect.\r\n"},{"term":"Phase I Trial","value":"The first human study of a new drug, usually conducted in a small number of healthy individuals to evaluate the biological properties of that drug, including pharmacological activity, pharmacokinetics and tolerability (i.e., toxicity). Examination of how the drug should be administered, how often and in what dosage are also assessed."},{"term":"Phase II Trial","value":"A type of study providing preliminary information on the efficacy and safety of a new drug. Phase IIa trials are conducted in a small population of patients, while phase IIb studies incorporate larger patient cohorts and can determine a range a doses to be used in phase III clinical trials."},{"term":"Phase III Trial","value":"A full-scale clinical study conducted in order to determine the efficacy and safety of a new drug prior to seeking marketing approval. These studies usually involve large patient populations randomized to receive a new or standard therapy and/or placebo."},{"term":"Phase IV Trial","value":"A large-scale clinical trial conducted following regulatory approval of a drug. Its purpose is to expand efficacy and safety information. These trials are also referred to as marketing support trials."},{"term":"Phenotype","value":"The observable traits of an organism (e.g., weight, height, hair color) regardless of the genotype. Phenotypic traits are not necessarily genetic and may result from an interaction between the genotype and the environment."},{"term":"Phospholipase A2 (PLA2)","value":"A  member of the phospholipase (PL) family of enzymes that hydrolyze the ester bonds in phospholipids. The PL group include two types of enzymes: the aliphatic esterases that release fatty acids and include PLA1 (EC 3.1.1.32), A2 (EC 3.1.1.4) and B (EC 3.1.1.5); and the phosphodiesterases such as phospholipase C (EC 3.1.4.3) and D (EC 3.1.4.4) that release diacyl glycerol and phosphatidic acid, respectively. PLA2 is present in all mammalian tissues and has been implicated in inflammatory responses due to its action of releasing arachidonic acid (AA). Thus, inhibition of PLA2 may be effective in disorders susch as allergy, asthma and rhinitis. Mitochondrial dysfunction including loss of membrane potential and increased ROS production in astrocytes, coupled with impaired ATP production are speculated to play important roles in the pathophysiology of Alzheimer's disease (AD).\r\n"},{"term":"Phospholipases","value":"Enzymes that hydrolyze the ester bonds in phospholipids. There are two types: the aliphatic esterases that release fatty acids and include phospholipase (PL) A1 (EC 3.1.1.32), A2 (EC 3.1.1.4) and B (EC 3.1.1.5); and phosphodiesterases such as phospholipase C (EC 3.1.4.11) and D (EC 3.1.4.4) that release diacylglycerol (DAG) and phosphatidic acid, respectively. PLA2 is widely distributed in venoms and digestive secretions. PLA1, PLA2 and phosphatidylinositol-specific PLC are present in all mammalian tissues while PLD originates from plants. PLA2 releases arachidonic acid and thus is involved in inflammatory responses; inhibition of PLA2 may be an effective treatment of irritable bowel syndrome, atherosclerosis, stroke, etc. Phosphatidylinositol-specific PLC is involved in production of DAG and inositol triphosphate."},{"term":"Photoangioplasty","value":"A type of phototherapy involving activation of a photosensitive dye by light. Diseased vasculature are treated using this procedure which involves inserting a cylindrical light-emitting fiber optic catheter into the arteries to activate a previously injected photosensitive dye. It is used as a treatment for atherosclerosis."},{"term":"PIGF","value":"See Placental Growth Factor (PIGF)\r\n\r\n"},{"term":"Placebo","value":"An inactive compound used in preclinical and clinical trials as a comparison for active compounds."},{"term":"Placental Growth Factor (PIGF)","value":"A member of the platelet-derived growth factor (PDGF)/vascular endothelial growth factor (VEGF) family of growth factors that is involved in endothelial cell growth and angiogenesis. PIGF expression within human atherosclerotic lesions is associated with plaque inflammation and neovascular growth. PIGF may also  be a therapuetic target for Philadelphia chromosome positive (Ph+) leukemia since it is derived from leukemic stronmal and promotes the progression of Ph+ leukemia. \r\n"},{"term":"Plaque","value":"An abnormal patch or small differentiated area on a body surface (e.g., skin, mucosa, arterial endothelium) or a histopathologic lesion on an organ such as the brain."},{"term":"Platelet","value":"A discoid cell found in large numbers in blood that is essential for blood coagulation and for hemostasis through its ability to repair breaches in the walls of blood vessels. Platelet granules contain lysosomal enzymes, dense granules contain ADP (a platelet aggregating factor) and serotonin (a vasoactive amine). They also release platelet-derived growth factor (PDGF) which contributes to later repair processes by stimulating fibroblast proliferation."},{"term":"Platelet-Activating Factor (PAF) Acetylhydrolase","value":"See Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)"},{"term":"Pleiotropic","value":"Having multiple effects."},{"term":"Pneumonia","value":"Inflammation of the lungs with consolidation. Pneumonia is a form of acute respiratory infection that inflames the alveoli in the lungs which in healthy individuals fill with air during inhalation. When infected, these air sacs may fill with fluid or pus, leading to symptoms such cough with phlegm, fever, chills, chest pain and difficulty breathing. Pneumonia may be caused by a variety of organisms, including bacteria, viruses and fungi. Pneumonia can be classified into community-acquired pneumonia, hospital-acquired pneumonia, pneumonia in the immunocompromised and aspiration pneumonia (i.e., cause by inhaled food, drink, vomit or saliva from the mouth into the lungs and can lead to pus formation in the lung cavity). See also Consolidation"},{"term":"Polymerase","value":"A general term for any enzyme belonging to the EC class 2, transferases which catalyze polymerization. Prokaryotic DNA polymerases are divided into types I, II and III, while eukaryotic polymerase is subdivided into polymerase alpha, -beta, -gamma, -delta and -epsilon. DNA polymerases are highly accurate, entering the correct complementary base opposite a base on the template chain; there is a low incidence of mismatching. DNA polymerases remove primers after they have served their function, refilling the gaps with nucleotides until all bases are paired. However, DNA polymerase cannot link the last nucleotide added to the 5´ end of the next-to-the-last segment; a single-chain nick remains that is later closed by DNA ligase. RNA polymerase catalyzes RNA transcription (a polymerization reaction). There are three types of eukaryotic RNA polymerase and only one bacterial RNA polymerase."},{"term":"Polymerase Chain Reaction (PCR)","value":"A technique developed in 1983 by K.B. Mullis and F. Faloona which simplifies the production of multiple DNA copies from a sample taking advantage of DNA polymerase, the enzyme which catalyzes DNA replication. During the first cycle of PCR, a DNA double helix containing the nucleotide sequence of interest is unwound by heating to 90ºC. DNA polymerase and the nucleotide triphosphates (adenine, thymine, cytosine and guanine) required for replication are added to the unwound DNA mixture. Artificially synthesized, short (about 20 to 30 nucleosides in length) DNA, complementary to the ends of the unwound template chains, are also added and serve as the primers for the reaction. The mixture is cooled to 60ºC, allowing the artificial primers to wind to the ends of the template chains. Replication then occurs where DNA polymerase assembles complementary copies of the template chains starting from the artificial primers. The resulting reaction mixture now contains twice as many DNA molecules. The second cycle is initiated by heating the reaction mixture again which results in unwinding of the newly synthesized double helices. The mixture is then cooled allowing additional copies of the artificial primer chains to rewind with the ends of the template chains (as in the first cycle). DNA polymerase makes copies of the artificial chains and at the end of this cycle, the number of DNA molecules has doubled again. Each time the heating and cooling cycle is repeated, the number of DNA molecules in the sample doubles and, since cycling time is short, hundreds of billions of DNA copies can be generated in a few hours."},{"term":"Polymerization","value":"The linkage of glucose units into chains in cellulose or starch molecules. Multiple identical or nearly identical subunits called monomers are linked together in a chain to form a polymer. This process underlies the assembly of most biological macromolecules. For example, monosaccharides polymerize into polysaccharides, amino acid monomers into proteins and nucleotide monomers into nucleic acid polymers."},{"term":"Polymorphonuclear Leukocytes","value":"White blood cells with multilobed nuclei and cytoplasmic granules. They include neutrophils (granules stain with neutral dyes), eosinophils (granules stain with eosin) and basophils (granules stain with basic dyes)."},{"term":"Preclinical Studies","value":"Experimental in vitro and/or in vivo testing in animals performed prior to clinical studies to determine the biological activity and safety of an agent."},{"term":"Prevalence","value":"The number of cases of a disease or condition at a given time."},{"term":"Prognosis","value":"An assessment of the likely outcome of the disease judged from general experience of the disease and the age and condition of the individual patient."},{"term":"Programmed Cell Death (PCD)","value":"See Apoptosis"},{"term":"Proliferation","value":"Growth and reproduction of similar cells."},{"term":"Promoter","value":"A region of DNA to which RNA polymerase binds before initiating the transcription of DNA into RNA. The nucleotide at which transcription starts is +1. Subsequent nucleotides are numbered from this point with negative numbers indicating upstream nucleotides or positive numbers referring to downstream nucleotides."},{"term":"Prophylaxis","value":"The prevention of a disease or the process leading to a disease."},{"term":"Prophylaxis, Active","value":"Administration of an antigenic agent to actively stimulate an immune mechanism."},{"term":"Prophylaxis, Passive","value":"Use of antiserum from another individual or animal to provide temporary (7-10 days) protection against a specific infectious or toxic agent."},{"term":"Proprotein Convertase Subtilisin/Kexin Type 9 (PCSK9)","value":"A secreted enzyme belonging to the peptidase S8 family that is involved in cholesterol homeostasis by reducing the cellular uptake of plasma low-density lipoprotein (LDL) cholesterol. Inhibiting this protein may be effective in the treatment of lipoprotein disorders including atherosclerosis. It is also involved in the differentiation of cortical neurons and in regeneration of the liver."},{"term":"Prostacyclin","value":"An unstable prostaglandin released by mast cells and endothelium that is a potent inhibitor of platelet aggregation and also causes vasodilation and increased vascular permeability."},{"term":"Protease","value":"Proteolytic enzymes including both endopeptidases (EC 3.4.21-24 & 3.4.99) and exopeptidases (EC 3.4.11-19), which hydrolyze peptide bonds leading to degradation of a protein (i.e., proteolysis). Proteases are classified into four general types: serine, cysteine, aspartic and matrix metalloproteinases (MMPs)."},{"term":"Proteasomes","value":"Proteolytic complexes that degrade the majority of short-lived cytosolic and nuclear proteins. They are implicated in ATP-dependent ubiquitin protein complex degradation and in antigen processing in antigen presenting cells. Proteasomes are also involved in the regulation of JAK/STAT pathways, IL-2, IL-3 and erythropoietin stimulation. Proteasome inhibitors down-regulate inflammatory mediators such as NFkappaB and may be a potential treatment for stroke and myocardial infarction. Proteasome inhibitors also induce apoptotic cell death, and thus are being studied for the treatment of cancer."},{"term":"Protein Kinase B (PKB)","value":"See Akt\t\r\n"},{"term":"Proteolysis","value":"The degradation of proteins via hydrolysis of the peptide bonds resulting in the formation of smaller polypeptides. The process is catalyzed by proteolytic enzymes (e.g., protease, peptidase), acids or bases. See also Protease\r\n"}]},{"letter":"Q","Terms":[{"term":"QRS Complex","value":"A structure on the ECG that represents depolarization of the ventricles.\r\n"},{"term":"QT Interval","value":"The interval as measured in an ECG from the beginning of the QRS complex to the end of the T wave that represents the duration of ventricular action potential. Normal values for the QT interval are between 0.30 and 0.44 s. The QT interval varies based on the heart rate and it represents the total time needed for the ventricles to depolarize and repolarize. If the interval is abnormally prolonged or shortened (Long or short QT syndrome, respectively), there is a risk of developing ventricular arrhythmias."}]},{"letter":"R","Terms":[{"term":"Reactive Oxygen Species","value":"Oxygen-containing substances (both radicals and non-radicals) that are constantly formed within the body and have been shown to kill bacteria and inactivate proteins. Radical or reactive ions such as superoxide, singlet oxygen and hydroxyl radicals are the products of the respiratory burst in phagocytes and are responsible for bacterial killing as well as incidental damage to surrounding tissue. They have also been implicated in a number of diseases such as cancer."},{"term":"Recombinant","value":"Describes a cell or an individual with a new combination of genes not found together in either parent; it usually refers to linked genes. Recombinant DNA is spliced DNA formed from 2 or more different sources that have been cleaved by restriction enzymes and joined by ligases."},{"term":"Recombinant Vaccine","value":"Use of a recombinant antigen preparation in combination with an adjuvant, which may be administered prophylactically or therapeutically to induce viral neutralizing proteins and other protective immune responses."},{"term":"Refractory","value":"A disease or infection that is resistant to treatment.\r\n"},{"term":"Renin","value":"An enzyme (EC 3.4.23.15) that catalyzes the cleavage of the leucine-leucine bond in angiotensinogen to generate angiotensin I. It is synthesized as an inactive protein in the kidney and released into the blood in the active form in response to various metabolic stimuli."},{"term":"Renin-Angiotensin System","value":"A system consisting of renin, angiotensin-converting enzyme (ACE) and angiotensin II that regulates blood pressure and electrolyte and fluid balance. Renin, an enzyme produced in the kidney, acts on angiotensinogen, an alpha-2 globulin produced by the liver, resulting in formation of inactive angiotensin I. ACE in the lung acts on angiotensin I in the plasma converting it to angiotensin II. Angiotensin II is a potent pressor substance that causes contraction of the arteriolar smooth muscle, aldosterone release and renal absorption of sodium; it also has other indirect actions mediated by the adrenal cortex. This system is a target for the treatment of arterial hypertension."},{"term":"Reporter Gene","value":"A gene that encodes an easily assayable product. It is coupled to the upstream sequence of another gene and transfected into cells. It is used experimentally to observe which factors activate response elements in the upstream region of the gene of interest."},{"term":"Resistin","value":"A polypeptide hormone secreted from adipocytes believed to play a role in the mechanism linking obesity and diabetes through antagonisms of insulin action. High serum levels of the hormone are observed in both genetic and diet-induced murine obesity models with type 2 diabetes and immunoneutralization of the protein was shown to improve blood glucose levels and insulin action."},{"term":"Restenosis","value":"The renarrowing or reconstriction of an artery after a surgical procedure such as a balloon angioplasty (PTCA). The scarring that forms on the walls of blood vessels during heart surgery and angioplasty can cause the vessels to narrow again thus requiring further surgery to widen them."},{"term":"Retinoid X Receptor (RXR)","value":"Orphan nuclear receptor that can function as a heterodimeric complex with the peroxisome proliferator-activated receptor (PPAR). RXR agonists activate the PPAR:RXR heterodimer and have been proposed as potential antidiabetic and antineoplastic agents. In addition, it has been identified as a target for cholesterol-lowering compounds. RXRs regulate the expression of the reverse cholesterol transporter, ATP-binding cassette transporter-1 (ABCA1). RXR agonists may be effective in preventing and treating atherosclerosis."},{"term":"Retinoids","value":"Natural and synthetic derivatives of vitamin A (i.e., retinoic acid) that modulate cell differentiation and proliferation and exert antitumoral activities. Retinoid receptors include nuclear receptors (RAR alpha, beta, gamma, and RXR alpha, beta, gamma), and cytoplasmic receptors (CRABP I and II, CRBP I and II). RXR agonists activate the PPAR:RXR heterodimer and have been proposed to be potential antidiabetic and antineoplastic agents. When used in combination with PPAR agonists, they potentiate the glucose- and lipid-lowering activities of the latter. Retinoids are also used in the treatment of psoriasis and severe acne. See also Vitamin A"},{"term":"Ribonucleases (RNAases)","value":"A family of nucleases (EC 2.7 and EC 3.1) that catalyze the hydrolysis of internucleotide phosphodiester bonds in RNA into smaller components thus degrading it. They can be divided into endoribonucleases and exoribonucleases which include further sub-classes (i.e., EC 2.7 phosphorolytic enzymes and EC 3.1 hydrolytic enzymes).\r\n"},{"term":"Ribonucleic Acid (RNA)","value":"A macromolecule consisting of ribonucleoside residues connected by phosphate from the 3'-hydroxyl of one to the 5'-hydroxyl group of the next nucleotide. It is found in all cells in both the nuclei and cytoplasm and in viruses. RNA is divided into fractions depending on location, form or function. Messenger RNA (mRNA) reflects the exact nucleoside sequence of genetically active DNA. mRNA carries the message of the DNA coded within its sequence to the cytoplasmic areas where protein is assembled. Ribosomal RNA (rRNA) is encoded in DNA regions forming parts of the nucleolus; it is the RNA of ribosomes or polyribosomes. Transfer RNA (tRNA) refers to short-chained RNA molecules of at least 20 types (one for each of the 20 amino acids in protein synthesis). tRNA combines with amino acids during protein synthesis and interacts with mRNA codons, thus providing a link between the information coded into nucleic acids and the amino acid sequence of proteins. Small nuclear RNAs (snRNAs) are small (about 90-300 nucleotides) chains in the nucleus that are involved in processing of mRNA and rRNA. Small cytoplasmic RNA (scRNA) functions primarily in the cytoplasm and forms the signal recognition particle. scRNA participates in the process of attaching ribosomes to the endoplasmic reticulum during synthesis of membrane proteins or proteins later secreted by the cell."},{"term":"Ribonucleotide","value":"A nucleotide in which a purine or pyrimidine base is linked to a ribose molecule. It is a component of RNA. See also Nucleotide \r\n"},{"term":"Ribosome","value":"A small, sphere-shaped, cytoplasmic structures that is composed of RNA and protein and is the site of protein synthesis. Ribosomes are free in the cytoplasm and often attached to the membrane of the endoplasmic reticulum. Ribosomes exist in both eukaryotic and prokaryotic cells. Bacterial ribosomes are composed of two subunits: the smaller 30S subunit containing 21 proteins and a single 16S RNA molecule, and the larger 50S subunit containing 32 proteins and two RNA molecules (23S and 5S). 16S serves as a scaffold defining the positions of the ribosomal protein with the 3' end containing the anti-Shine-Dalgarno sequence. This sequence binds upstream to the AUG start codon on the mRNA. 16S interacts with 23S and facilitates binding of 50S and 30S. Many antibiotic agents bind to the 30S and 16S subunits of the bacterial ribosome. This action inhibits translocation of peptidyl-tRNA from the A-site to the P-site and also causes misreading of mRNA, interrupting bacterial protein synthesis necessary for survival and reproduction."},{"term":"Ribozyme","value":"A nonprotein biological catalyst consisting of specific domains of ribonucleic acid (RNA) that can recognize, bind and digest nucleic acids thus playing a key role in intron splicing events. Several cleave precursors of tRNA resulting in functional tRNA while others act on rRNA. Ribozymes induce conformational changes which involve bringing the hydroxyl groups of RNA molecules into positions where their reactivity leads to hydrolysis and breakage of RNA chains. Ribozymes have been investigated as a potential therapeutic approach for diseases such as HBV infection, since their enzymatic activity can be used to block pathogenic protein synthesis. The utility of ribozymes as biologic and therapeutic agents has been limited due to their susceptibility to chemical and enzymatic degradation and to restricted target site specificity."},{"term":"RNA","value":"See Ribonucleic Acid (RNA)"},{"term":"RNA Interference (RNAi)","value":"RNA interference (RNAi) is an endogenous process of gene silencing that is due to interruption in the cell's translation. This interruption is triggered by the cell's own mRNA in response to the presence of and consequent destruction of matching double-stranded RNA sequences. Gene expression is inhibited in a sequence-dependent manner. The process endogenously protects the cell against viruses and other insults. The process has also emerged as a powerful gene silencing technique that is useful in research and development of therapeutics. See also Small interfering RNA (siRNA)"},{"term":"RNAse","value":"See Ribonucleases (RNAases)\r\n"}]},{"letter":"S","Terms":[{"term":"Sarcoidosis","value":"A rare multisystem inflammatory disorder characterized by chronic inflammatory granulomatous lesions (i.e., granuloma) in the lymph nodes and other organs. These granulomas are made up of epithelioid cells, macrophages, giant cells, fibroblasts and CD4+ T lymphocytes and their formation occurs in response to immune response to poorly soluble antigen (e.g., mycobacteria or other pathogen) in genetic predisposed individuals. The most commonly affected sites are the lungs, lymphatic system, skin and eyes; the upper respiratory system, liver, bone marrow, spleen among other organs can also be affected."},{"term":"Scavenger Receptor Class B Type I (SR-BI)","value":"A cell surface lipoprotein receptor that is abundant in the liver and other steroidogenic tissues. It is also present in the brush border membrane of the small intestine where it mediates selective cholesteryl ester uptake from HDL. SR-BI is closely related to CD36. The receptor may be required for reverse cholesterol transport and maintenance of normal HDL cholesterol and phospholipid levels. It is a potential target for the prevention and treatment of atherosclerosis."},{"term":"Sclerosis","value":"Any pathological hardening of tissue (e.g., liver, artery walls), due to cumulative damage, mineral deposition or other causes. It particularly refers to a neuropathological condition characterized by induration of nervous and other brain structures due to hyperplasia of interstitial fibrous or glial connective tissue. Mesial temporal sclerosis in which the hippocampus is abnormally small, is a typical lesion that can cause epilepsy. Tuberous sclerosis results in formation of multisystem hamartomas causing mental retardation, epileptic seizure and facial skin nodules."},{"term":"Selective Estrogen Receptor Modulator (SERM)","value":"A compound that binds to the estrogen receptor and provides the benefits of estrogen without the associated adverse effects on reproductive organs (e.g., cell proliferation), used clinically to prevent and treat osteoporosis and other postmenopausal symptoms and menstrual disorders. SERMs may also have preventative effects against breast and endometrial cancers and may attenuate development of atherosclerosis and Alzheimer's disease."},{"term":"Sepsis","value":"Systemic inflammatory response syndrome (SIRS) accompanied by a confirmed infectious process. See also Sepsis, Severe and Septic Shock and Systemic inflammatory response syndrome (SIRS)"},{"term":"Sepsis, Severe","value":"A stage in the continuum of clinical response to infection defined as sepsis associated with organ dysfunction; sepsis associated with hypotension; or sepsis associated with hypoperfusion abnormalities. See also Sepsis and Sepsis, Severe and Systemic Inflammatory Response Syndrome (SIRS)"},{"term":"Septic Shock","value":"A condition of clinical shock caused by endotoxin in the blood and characterized by hypoperfusion, multiple organ failure and persistent hypotension in a septic patient. See also Sepsis and Sepsis, Severe"},{"term":"Single-Blind","value":"A research testing parameter in which patients do not know which of several treatments they are receiving, thus preventing personal bias from influencing their reactions and study results."},{"term":"Single-Nucleotide Polymorphism (SNP)","value":"Single-nucleotide polymorphisms are the most common type of genetic variation. Each SNP represents a difference in a single nucleotide (e.g., a SNP may replace the nucleotide cytosine (C) with the nucleotide thymine [T]). SNPs occur approximately once in every 300 nucleotides. They are frequently found in the DNA between genes. SNPs can be used as biomarkers for diseases and may predict response to drugs and environmental factors (i.e., toxins).\r\n"},{"term":"siRNA","value":"See Small interfering RNA (siRNA)\r\n\r\n"},{"term":"SIRT1","value":"Sirtuin 1 (SIRT1) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes that also includes SIRT2, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7. SIRT1 has been implicated in the aging process and shown to promote fat mobilization in white adipocytes via the repression of PPARgamma. Moreover, it deacetylates and represses activity of the forkhead transcription factor FOXO3A and other forkhead factors and its expression is associated with prolonged cell survival. In addition, SIRT1 can stimulate glucose-dependent insulin secretion from pancreatic cells and initiate insulin signaling pathways in insulin-sensitive organs. The enzyme has been implicated in the development of insulin resistance due to the role it plays in the regulation of adiponectin secretion, inflammatory responses, gluconeogenesis and reactive oxygen species levels. Moreover, SIRT1 overexpression and SIRT1 activators improve glucose homeostasis and insulin sensitivity in obese mice models. Thus, activators of this enzyme may be effective in the prevention and treatment of obesity, metabolic syndrome and type 2 diabetes. See also Sirtuins\r\n"},{"term":"SIRT2","value":"Sirtuin 2 (SIRT2) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7) that implicated in the mitotic regulation of microtubule dynamics by its association with the class II HDAC6. The enzyme is also involved in the aging process and in the effects of calorie restriction and inhibitors of SIRT2 protect against alpha-synuctein-mediated toxicity in cellular models of Parkinson disease. See also Sirtuins\r\n"},{"term":"SIRT3","value":"Sirtuin 3 (SIRT3) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT2, SIRT4, SIRT5, SIRT6 and SIRT7) that is localized to mitochondria where it deacetylates and activates acetyl-CoA synthetase 2 (AceCS2). It is implicated as playing a role in metabolism and has also been shown to be involved in apoptosis and control of cell growth. See also Sirtuins\r\n"},{"term":"SIRT4","value":"Sirtuin 4 is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT2, SIRT3, SIRT5, SIRT6 and SIRT7) that is localized in mitochondria and has been implicated in the effects of calorie restriction, the aging process and the regulation of insulin secretion. Modulators of this enzyme may be effective in the treatment of obesity, metabolic syndrome, type 2 diabetes among others. See also Sirtuins"},{"term":"Sirtuins","value":"Members of the NAD-dependent histone deacetylase family of enzymes that has been implicated in the aging process and include SIRT1, SIRT2, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7. A link between sirtuins and calorie restriction has also been suggested. Modulators of these enzymes may be effective in slowing the aging process and for the treatment of obesity, metabolic syndrome, type 2 diabetes, Parkinson's disease atherosclerosis and gout. Sirtuin activity is inhibited by binding of nicotinamide (a component of vitamin B3 also known as niacin) to a specific receptor site and by resveratrol which inhibits binding and is a putative agent for slowing down the aging process. See also SIRT1, SIRT2, SIRT3 and SIRT4."},{"term":"Sphingosine Kinase","value":"Sphingosine kinase (SphK) is a key enzyme in the sphingolipid metabolic pathway responsible for phosphorylating sphingosine into sphingosine-1-phosphate (S1P). SphK/S1P play a critical role in angiogenesis, inflammation and various pathologic conditions such as rheumatoid arthrtis, atherosclerosis, vascular inflammatory disease, cancer, allergic diseases, inflammatory bowel disease among others. See also Sphingosine kinase 1."},{"term":"Sphingosine kinase 1","value":"Sphingosine kinase 1 is an oncogenic sphingolipid-metabolizing enzyme that catalyzes the formation of sphingosine-1-phosphate (S1P), a lipid messenger with intracellular and extracellular functions. S1P can regulate proliferation and survival and has been established as a mitogenic factor. Sphingosine kinase 1 inhibitors block S1P production, leading to a decrease in proliferation and induction of apoptosis in cancer cells. Importantly, there are data showing that sphingosine kinase 1 and sphingosine kinase 2 have opposing roles in the regulation of ceramide biosynthesis and opposing effects on cancer cells (activation of sphingosine kinase 2 is proapoptotic and antiproliferative), stressing that the development of specific sphingosine kinase 1 inhibitors is critical. see also Sphingosine Kinase"},{"term":"ST Segment","value":"The segment connecting the QRS complex (i.e., ventricular depolarization) and the T wave (i.e., ventricular repolarization) in an ECG. It has a typical duration of 80 to 120 ms and represents isoelectric ventricular depolarization. It starts at the J point (junction between the QRS complex and ST segment) and ends at the beginning of the T wave. The normal ST segment has a slight upward concavity. If it is flat, downsloping or depressed, it could indicate coronary ischemia. Elevated of the ST segment can indicate myocardial infarction."},{"term":"Statins","value":"Statins are a group of compounds also known as HMG-CoA (3-Hydroxy-3-methylglutaryl coenzyme A) reductase inhibitors that are used clinically to reduce serum cholesterol levels, thereby lowering the risk of heart attack. The statins are a class of drugs that lower cholesterol levels in people with or at risk of cardiovascular disease by inhibiting the HMG-CoA reductase, the rate-limiting enzyme of the mevalonate pathway of cholesterol synthesis. Inhibition of this enzyme in the liver results in a decrease cholesterol synthesis as well as an increase in the synthesis of low-density lipoprotein (LDL) receptors. This increase in receptors augments the clearance of LDL from the bloodstream. HMG-CoA reductase inhibitors are widely used in the treatment of hypercholesterolemia, and their use has been associated with reductions in cardiovascular events and improved endothelial function. Statins also display multiple pleiotropic effects and due to their confirmed favorable safety profile, they may be effective in completely unrelated indications. For example, independently of cholesterol levels, statins are able to improve the bioavailability of nitric oxide (NO) by increasing endothelial NO synthase (eNOS) expression, primarily by stabilization of eNOS mRNA and also by acutely increasing eNOS phosphorylation. They may therefore be effective in the treatment of erectile dysfunction. Other pleiotropic effects of statins include antiinflammatory activity and effects on cell growth, proliferation and apoptosis and they are currently under investigation as chemopreventive agents. Preliminary evidence suggests that statins may also be effective in the treatment of osteoporosis, rheumatoid arthritis, COPD, multiple sclerosis, systemic sclerosis, sepsis and diabetes and in the prevention of stroke, angina, heart failure and Parkinson's disease among other indications. "},{"term":"Stent","value":"A rod, thread or catheter placed within the lumen of a tubular structure providing support during or after anastomosis or allowing patency of a contracted lumen."},{"term":"Steroids","value":"A large family of compounds derived from cholesterol which are structurally similar in that they contain the tetracyclic cyclopenta[a]phenanthrene skeleton. Examples include plant and animal hormones, body constituents and drugs."},{"term":"Stroke","value":"A condition due to the lack of oxygen to the brain which may lead to reversible or irreversible paralysis. It is caused by a blood clot or burst blood vessel which interrupts blood flow and results in damage to a group of nerve cells in the brain. A stroke can cause coma, paralysis, speech problems and dementia depending on the area of the brain that is damaged. The four predominant types of stroke are classified as either ischemic stroke (cerebral thrombosis and cerebral embolism) or hemorrhagic stroke (subarachnoid hemorrhage and intracerebral hemorrhage). Other types include transient ischemic attacks (TIAs) or mini-strokes, lacunar infarcts and recurrent stroke."},{"term":"Superoxide Dismutase (SOD)","value":"A metalloenzyme (EC 1.15.1.1) catalyzing the formation of hydrogen peroxide and oxygen from superoxide. It is a natural antioxidant within cells. Familial amyotrophic lateral sclerosis (ALS) has been linked to a defective SOD1 gene on chromosome 21. See also Dismutase"},{"term":"Systemic Inflammatory Response Syndrome (SIRS)","value":"A pattern of physiological variables including leukocytosis or severe leukopenia, hyperthermia or hypothermia, tachycardia and tachypneahas, that are seen in critically ill patients in response to a range of insults such as trauma, burns, pancreatitis and infection. These inflammatory responses have been collectively termed the SIRS. The term sepsis is reserved for SIRS when infection is suspected or proven. See also Sepsis and Sepsis, Severe"},{"term":"Systolic Blood Pressure (SBP)","value":"The pressure exerted on the walls of the arteries during contraction of the left ventricle of the heart. It varies with age, sex, size and relative condition and is considered elevated if values are consistently over 150 mmHg."}]},{"letter":"T","Terms":[{"term":"T Cell","value":"One of two major classes of lymphocytes that develop in the thymus. T cell lineage markers are the expression of two T cell antigen receptors (TCR-1gammadelta and TCR-2alphabeta). TCR-2+ cells are further classified into two nonoverlapping populations that express the CD4 marker and help or induce immune responses (Th cells) or carry the CD8 marker and are predominately cytotoxic (CTLs). In general, CD4+ and CD8+ T cells recognize specific antigens in association with MHC class II and I molecules, respectively. CD4+ T cells can be further divided into Th0, Th1, Th2 and Th3 cells based on their cytokine production profile."},{"term":"T Wave","value":"A segment on an ECG corresponding to ventricular repolarization.\r\n"},{"term":"Thrombosis","value":"Formation or the presence of a thrombus."},{"term":"Thrombosis, Arterial","value":"The formation of unwanted blood clots (i.e., thrombi) in arteries leading to partial and complete blockage of that artery. It is very common in individuals suffering from artherosclerosis. Blood clot developing in the coronary artery can lead to myocardial infarction while blood clot occurring in the brain can result in cerebrovascular injury.\r\n"},{"term":"Thrombosis, Deep Vein","value":"Formation of blood clots (i.e., thrombi) in any of the deep veins of the body (e.g., leg, pelvis, major-extremity veins). A complication is development of a pulmonary embolism.\r\n"},{"term":"Thrombosis, Venous","value":"The formation of unwanted blood clots (i.e., thrombi) within veins typically in the thigh or leg regions. Clots can dislodge and migrate towards the lungs, causing pulmonary embolism. \r\n"},{"term":"Thromboxanes","value":"A group of physiologically active substances present in many tissues that are formed from prostaglandins during eicosanoid metabolism. They have effects on platelet aggregation."},{"term":"Thrombus","value":"A clot formed within the cardiovascular system composed of blood constituents. It may be occlusive or attached to vessels or the heart wall. If it obstructs a vessel it can cause infarction of the tissue supplied by that vessel."},{"term":"Thyroid","value":"A ductless gland composed of spheroidal follicles located over and on either side of the trachea. It synthesizes and secretes thyroid hormone and calcitonin."},{"term":"Thyroid Hormone (TH)","value":"A glycoprotein produced by the anterior lobe of the pituitary which stimulates growth and function of the thyroid gland. Also known as thyrotropin."},{"term":"Tolerance","value":"The ability to endure unusually large doses of a drug or toxin. An acquired drug tolerance is a decreasing response to repeated constant doses of a drug or the need for increasing doses to maintain a constant response.\r\n"},{"term":"Tomography","value":"The imaging of anatomical information from a cross-sectional plane of the body. Each image is generated by computer synthesis of X-ray transmissions obtained in many directions in a given plane. Positron emission tomography (PET) produces images constructed from computer analysis of detected photons resulting from annihilation of positrons emitted by radionuclides incorporated into biological substances. It can show the uptake and distribution of substances within a tissue, thus providing information about localization of metabolic and physiological function. PET is used in the diagnosis of Parkinson's disease, indicating impaired fluorodopa uptake in the caudate nucleus and putamen. Single photon emission computed tomography (SPECT) produces images constructed from computer analysis of a single photon emitted by radionuclides incorporated in biological substances administered to subjects. It gives information about metabolic and physiological function. Computed axial tomography (CT or CAT scan) uses a computer to assimilate multiple X-ray images into a two dimensional cross-sectional image. It can reveal many soft tissue structures not shown by conventional radiography. CT scans can also track dynamic movement of a dye. The CT apparatus rotates 180 degrees around the patient's body emitting thin X-ray beams at 160 different points. Crystals positioned at the opposite points of the beam pick up and record the absorption rates of the varying thicknesses of tissue and bone. This technique uses the same dosage of radiation as that of conventional X-ray machines but enables the viewing of an entire slice of the body with about 100 times more clarity."},{"term":"Transcription","value":"The process by which genes are copied into RNA, resulting in three major RNA types that interact in protein synthesis: messenger RNA (mRNA), ribosomal RNA (rRNA) and transfer RNA (tRNA). See also Ribonucleic Acid (RNA)"},{"term":"Transcription Factors","value":"Endogenous substances (usually proteins) that bind to the promoter regions of genes and regulate the start, stimulation or termination of the genetic transcription process. Examples include NFkappaB, nuclear factor of activated T cells (NF-AT), activator protein-1 (AP-1), CREB and signal transduction-activated transcription fators (STAT)."},{"term":"Transforming Growth Factor alpha (TGF-alpha)","value":"A 50 amino acid polypeptide originally isolated from viral transformed rodent cells and later from a variety of tissues including epithelium and maternal decidua. It is closely related to epidermal growth factor (EGF). It contains an EGF-like domain and binds to the EGF receptor. It stimulates growth of microvascular endothelial cells, is angiogenic and acts synergistically with TGF-beta to induce phenotypic transformation. Its true physiological role is unknown. See also Growth Factors\r\n"},{"term":"Transforming Growth Factor-beta (TGF-beta)","value":"Members of a large family of pleiotropic homodimer cytokines which includes the TGF-beta1, TGF-beta2 and TGF-beta3 isoforms. They are secreted by many different cell types including B and T cells, macrophages, platelets, neurons and glial cells and signaling is mediated via a high affinity transmembrane receptor complex consisting of TGF-beta type I receptor activin-like kinase 5 (ALK5) and TGF-beta type II receptor (TbetaRII) serine/threonine kinase receptor subunits. In addition to activities such as suppression of  immune responses (via downregulation of antigen presenting cells [APCs] and inhibition of B and T cell proliferation), enhancement of extracellular matrix protein production, and mediation of cell growth, differentiation and embryonic development, TGF-betas also act synergistically with neurotrophins to exert neuroprotective effects. In AD, TGF-beta levels are increased in human brain tissue although brain TbetaRII expression and serum TGF-beta levels are reduced and evidence suggests that TGF-betas have both beneficial and detrimental effects in this disease. See also Growth Factors"},{"term":"Transforming Growth Factors (TGFs)","value":"Proteins secreted by transformed cells that can stimulate growth of normal cells. The transforming growth factor family includes many of the bone morphogenetic proteins. See Transforming Growth Factor alpha (TGF-alpha), Transforming Growth Factor beta (TGF-beta) and Transforming Growth Factor beta1 (TGF-beta1)\r\n"},{"term":"Transgenic","value":"Refers to an organism in which gene(s) or DNA from another organism were incorporated via injection into the nucleus of the ovum. The resulting transgenic animal expresses the protein(s) that the new gene(s) encodes."},{"term":"Translation","value":"Protein synthesis resulting from the interaction of mRNA, rRNA and tRNA transcribed in the nucleus. The genetic code or sequence of nucleotides in mRNA is translated into a sequence of amino acids during polypeptide assembly. During translation, ribosomes read along the mRNA molecule, gradually assembling a corresponding amino acid sequence. Nucleotides are read three at a time as codons."},{"term":"Triglycerides","value":"Storage fats in adipose tissue that are mainly the glycerol esters of saturated fatty acids. They are an important energy supply for heart muscle and are also components of cell membranes. Normal blood levels are between 10-150 mg/dl. Elevations in plasma triglycerides (e.g., in association with elevated cholesterol) are correlated with the development of atherosclerosis."},{"term":"Tumor Necrosis Factor-alpha (TNF-alpha)","value":"TNF-alpha is a proinflammatory cytokine (also known as cachectin) and member of the TNF family of cytokines that is released by activated macrophages and lymphocytes. It acts via receptors belonging to the TNF family of receptors, among which TNF receptor 1 and 2 (TNFR-1, TNFR-2) trigger several signal transduction pathways, resulting in the activation of transcription factors such as NF-kappaB and cFos/cJun. TNFR-1 (also known as CD120a; p55/60) is expressed in most tissues and is fully activated by both the membrane-bound and soluble trimeric forms of TNF. TNFR-2 (also known as CD120b; p75/80), however, is found only in cells of the immune system and is activated by the membrane-bound form of the TNF homotrimer. Activated factors induce the transcription of antiapoptotic, proliferative, immunomodulatory and inflammatory genes. NF-kappaB is the major survival factor in preventing TNF-alpha-induced apoptosis and inhibition of this transcription factor may improve the efficacy of apoptosis-inducing cancer therapies; TNF-alpha-targeted therapies are also being tested in the regional treatment of locally advanced soft tissue sarcomas and metastatic melanomas. In addition, TNF-alpha-induced insulin resistance is believed to be a major contributor to the development of type 2 diabetes in obesity and elevated brain levels of TNF-alpha have been observed in Alzheimer's Disease (AD)  and ischemic stroke patients. TNF-alpha is also a crucial cytokine in the establishment and maintenance of inflammation in multiple autoimmune diseases. Studies have reported elevated TNF levels at the site of active MS lesions in postmortem brain samples from patients with MS and CSF and serum TNF levels in individuals with MS are elevated compared to unaffected individuals with TNF levels correlating to the severity of the lesions. In addition, peripheral blood mononuclear cells from MS patients just prior to symptom exacerbation display increased TNF secretion after stimulation as compared to cells from the same patients during remission and inhibition of the TNF-alpha signaling pathway (e.g., TNF-alpha blockers, blockers of  p38, JNK and/or ERK kinases, antagonists of transcription factor NF-kappaB activation) is a viable therapeutic strategy for the treatment of Crohn's disease, psoriasis, psoriatic arthritis, uveitis, sarcoidosis, Behcet's syndrome, graft versus host disease and ankylosing spondylitis."}]},{"letter":"U","Terms":[{"term":"Ulcer","value":"A local lesion on the skin or the mucosa of an organ or tissue. It is due to the sloughing of inflammatory necrotic tissue. See also Ulcer, Gastric; Ulcer, Peptic; and Ulcer, Decubitus"},{"term":"Ulcer, Decubitus","value":"A chronic ulcer that appears in pressure areas in debilitated or immobilized patients. It occurs due to a reduction in circulation from enhanced pressure on tissue."},{"term":"Ulcer, Gastric","value":"A lesion in the mucosal lining of the stomach that results from gastric inflammation. It can be caused by use of alcohol, aspirin or NSAIDs. Symptoms include recurrent abdominal pains (which are alleviated with antacids), nausea, vomiting, weight loss and fatigue. Complications include GI bleeding, obstruction, perforation and ulcer penetration into surrounding tissues."},{"term":"Ulcer, Peptic","value":"An ulcer in the wall of the stomach or duodenum resulting from the digestive action of gastric juice on the mucous membrane."},{"term":"Upstream","value":"The nucleotide sequences in DNA or RNA that precede the codons specifying the mRNA for transcription or the protein coding sequences for translation. It is also used to describe events that occur early on within sequential reactions. See also Downstream"}]},{"letter":"V","Terms":[{"term":"VCAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. Induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, VCAM-1 bind to integrins mediating adhesion and migration.  It has been implicated in the initiation and progression of atherosclerosis."},{"term":"Vector","value":"An organism that carries an infectious microorganism (e.g., a virus or parasite) from one host to another, generally without becoming infected itself. Alternatively, a virus or a small piece of DNA (i.e., plasmid) that carries a modified or foreign gene. In gene therapy, the vector delivers the desired gene to a target cell. See also Plasmid"},{"term":"Very-Low-Density Lipoprotein (VLDL)","value":"A lipoprotein carrier which transports cholesterol and fats (particularly triglycerides) in the bloodstream. Elevations in blood VLDL levels are associated with an increased risk of atherosclerosis and coronary artery disease."},{"term":"Virus","value":"A small infectious particle between 10 and 300 nm in diameter, not visible with a light microscope. Viruses have no cell structure and thus differ from other infectious agents or cells. They have no wall and the genetic material is contained in either DNA or RNA encased within a protein shell or capsid. Some viruses may also have an outer membrane composed of lipoprotein. They are obligate parasites and need to enter a plant or animal cell in order to reproduce. Their RNA or DNA encodes for various proteins which are made by the host cell."},{"term":"Vitamin","value":"A member of a group of organic substances essential for normal metabolism. They are present in small amounts in food."},{"term":"Vitamin A","value":"Any beta-ionone derivative with biological activity similar to retinol (the first identified vitamin A, known as vitamin A1). Activity includes involvement in the vision cycle and growth and differentiation. A deficiency in these vitamins (e.g., A aldehyde, A1, A1 alcohol, A1 acid, A2, A2 aldehyde) alters synthesis and resynthesis of rhodopsin, causing night blindness. In addition, keratinizing metaplasia of epithelial cells may occur resulting in xerophthalmia, keratosis, increased susceptibility to infections and a retardation of growth. Analogues may be effective in the treatment of psoriasis. See also Retinoids"},{"term":"Vitamin B","value":"A group of water-soluble compounds including vitamin B1 (thiamin), B2 (riboflavin), B3 (pantothenic acid), B4, B5, B6 (pyridoxine, pyridoxal and pyridoxamine) and B12. Vitamin B complex is a term referring to drugs containing a mixture of vitamin Bs."},{"term":"Vitamin B6","value":"Includes pyridoxine, pyridoxal and pyridoxamine that are involved in utilization of unsaturated fatty acids. Deficiencies result in irritability, convulsions (i.e., epilepsy) and peripheral neuritis. Pyridoxine is found in vegetables."},{"term":"Vomiting","value":"See Emesis"}]},{"letter":"W","Terms":[{"term":"Wild-type","value":"The normal, nonmutated version of a gene. Also the parent strain of a virus, bacteria, mouse, or other laboratory organism that are found in the wild."}]},{"letter":"X","Terms":[]},{"letter":"Y","Terms":[{"term":"YLD","value":"Acronym for \"Years Lost due to Disability\" which is calculated by the number of years lived in a condition multiplied by a disability weight for that condition assigned on a scale from 0 (perfect health) to 1 (death). YLD = number of incident cases in reference period x disability weight x average duration of condition.\r\n"},{"term":"YLL","value":"Acronym for \"Years of Life Lost\" which is calculated by the number of deaths multiplied by the standard life expectancy at the age at which death occurs. YLL = number of deaths + standard life expectancy minus age of death.\r\n"},{"term":"YPLL","value":"An acronym for \"Years of potential life lost\" which is also known as potential years of life lost (PYLL). YPLL is a statistic that is a measure of premature mortality. It is an estimate of the average years a person would have lived if he or she had not died prematurely and therefore can it indicate the impact of various diseases and other lethal factors on a population."}]},{"letter":"Z","Terms":[]},{"letter":"0-9","Terms":[{"term":"17beta-Estradiol","value":"The most potent, naturally occurring estrogen produced by the ovary, testis, placenta and adrenal cortex. Its actions include stimulation of secondary sex characteristics, growth and maturation of long bones and control of the menstrual cycle."},{"term":"5-Lipoxygenase","value":"The enzyme (EC 1.13.11.34) that catalyzes the first oxidation step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes (LTs) which primarily act as mediators of inflammatory and allergic reactions. The enzyme's activity is regulated in a complex manner and involves different signaling pathways. It can be activated by an increase in intracellular Ca2+ concentration, diacylglycerols, phosphorylation by MAPKAP kinase-2 and ERK, while protein kinase A and glutathione peroxidase have been found to suppress its function. Several inflammatory diseases including COPD, asthma, arthritis and inflammatory bowel disease (IBD) are associated with elevated levels of LTB(4); eicosanoids generated through the 5-LOX pathway may also be primary mediators of allergic rhinitis, idiopathic pulmonary fibrosis, atherosclerosis, atopic dermatitis, acne and ischemia-related organ injury. Modulation of LTB(4) synthesis could be achieved via inhibition of 5-LOX which would block the synthesis of hydroperoxide acid, 5-HPETE, and subsequent synthesis of eicosanoids (e.g., cysteinyl LTs, LTB[4]) that are instrumental in the promotion of the pulmonary inflammatory response and bronchospasm. Thus, these agents may be effective in the management of COPD and asthma."}]}],"MediaFiles":[{"title":"ApoA-I/ABCA1 Cholesterol Transport Pathway","sectionImageId":"937","sectionId":"1404"},{"title":"APOB Expression Inhibition","sectionImageId":"3832","sectionId":"1395"},{"title":"Atheroprogression: Plaque Rupture & Progression","sectionImageId":"337","sectionId":"1373"},{"title":"Atherosclerosis Targetscape","sectionImageId":"3425","sectionId":"4583"},{"title":"Atherosclerosis: Multifactorial Theory of Origin","sectionImageId":"2002","sectionId":"1375"},{"title":"Atherosclerosis: Potential Factors Leading to Disease Development -- The Inflammatory Disease Theory","sectionImageId":"4106","sectionId":"5403"},{"title":"Atherosclerotic Plaque Formation and Thrombosis","sectionImageId":"1506","sectionId":"1366"},{"title":"Cannabinoids: Physiological Neuronal Signaling Mediated by Endo- and Phytocannabinoids","sectionImageId":"2005","sectionId":"2921"},{"title":"Chemokines - Their Sources and Actions","sectionImageId":"2017","sectionId":"2932"},{"title":"Cholesterol Absorption, Transport and Metabolism","sectionImageId":"2986","sectionId":"1397"},{"title":"Coagulation Cascade Events Triggered after Atherosclerotic Plaque Rupture","sectionImageId":"1353","sectionId":"1373"},{"title":"Cytokine Receptor Signaling Pathways","sectionImageId":"1600","sectionId":"1405"},{"title":"Deaths Attributable to Cigarette Smoking","sectionImageId":"1427","sectionId":"1375"},{"title":"Dyslipidemia Targetscape","sectionImageId":"3426","sectionId":"4583"},{"title":"Endothelin-1 Receptor Signaling Pathways","sectionImageId":"1410","sectionId":"1413"},{"title":"Endothelins: Chemical Structures","sectionImageId":"348","sectionId":"1413"},{"title":"Foam Cell Formation","sectionImageId":"4170","sectionId":"5403"},{"title":"Helicobacter pylori: EM Image","sectionImageId":"1403","sectionId":"1375"},{"title":"Inducible Nitric Oxide Synthase Homodimerization","sectionImageId":"1023","sectionId":"1415"},{"title":"Liver Anatomy","sectionImageId":"1803","sectionId":"1374"},{"title":"Microsomal Triglyceride Transfer Protein (MTTP) Inhibition","sectionImageId":"3667","sectionId":"1392"},{"title":"PCSK9 Inhibitors in Atherosclerosis","sectionImageId":"3996","sectionId":"4726"},{"title":"PPAR/RXR Nuclear Receptor Signaling Pathway","sectionImageId":"1487","sectionId":"1387"},{"title":"PPARgamma: 3-Dimensional Structure","sectionImageId":"347","sectionId":"1412"},{"title":"Renin-Angiotensin-Aldosterone System: Regulation of Blood Pressure","sectionImageId":"1637","sectionId":"1415"},{"title":"Reverse Cholesterol Transport","sectionImageId":"341","sectionId":"1397"},{"title":"Statins: Mechanisms of Action for Cholesterol Reduction and Pleiotropic Effects","sectionImageId":"3289","sectionId":"1389"},{"title":"Vascular Inflammation in Atherosclerosis","sectionImageId":"1156","sectionId":"1405"}],"SuggestedReading":[{"section":"Websites","Links":[{"title":"American Heart Association","url":"www.heart.org"},{"title":"European Atherosclerosis Society","url":"www.eas-society.org"},{"title":"European Society of Cardiology","url":"www.escardio.org"},{"title":"International Atherosclerosis Society","url":"www.athero.org"},{"title":"International Society of Cardiovascular Pharmacotherapy","url":"www.iscpcardio.org"},{"title":"Japan Atherosclerosis Society","url":"http://jas.umin.ac.jp/en/"},{"title":"National Heart, Lung, and Blood Institute<BR>National Institutes of Health","url":"www.nhlbi.nih.gov"}]},{"section":"Publications","Links":[{"title":"Heart disease and stroke statistics - 2017 update (American Heart Association, 2017)","url":"http://circ.ahajournals.org/content/circulationaha/early/2017/01/25/CIR.0000000000000485.full.pdf"},{"title":"Heart disease and stroke statistics - 2018 update (American Heart Association, 2018)","url":"http://circ.ahajournals.org/content/137/12/e67"},{"title":"Heart disease and stroke statistics - 2019 update (American Heart Association, 2019)","url":"www.ahajournals.org/doi/pdf/10.1161/CIR.0000000000000659"}]},{"section":"Guidelines","Links":[{"title":"2012 update of the Canadian Cardiovascular Society guidelines for the diagnosis and treatment of dyslipidemia for the prevention of cardiovascular disease in the adult (Canadian Cardiovascular Society, November 2012)","url":"http://www.onlinecjc.ca/article/S0828-282X(12)01510-3/abstract"},{"title":"2016 ESC/EAS guidelines for the management of dyslipidaemias (European Society of Cardiology/European Atherosclerosis Society, August 2016)","url":"http://eurheartj.oxfordjournals.org/content/37/39/2999"},{"title":"2017 Focused update of the 2016 ACC expert consensus decision pathway on the role of non-statin therapies for LDL-cholesterol lowering in the management of atherosclerotic cardiovascular disease risk (American College of Cardiology, September 2017)","url":"www.onlinejacc.org/content/early/2017/08/30/j.jacc.2017.07.745"},{"title":"2018 AHA/ACC/AACVPR/AAPA/ABC/ACPM/ADA/AGS/APhA/ASPC/NLA/PCNA Guideline on the management of blood cholesterol (American Heart Association/American College of Cardiology, November 2018)","url":"http://www.onlinejacc.org/content/early/2018/11/02/j.jacc.2018.11.003"},{"title":"American Association of Clinical Endocrinologists' guidelines for management of dyslipidemia and prevention of atherosclerosis (American Association of Clinical Endocrinologists, 2012)","url":"www.aace.com/files/lipid-guidelines.pdf"},{"title":"An International Atherosclerosis Society position paper: Global recommendations for the management of dyslipidemia (International Atherosclerosis Society, 2013)","url":"http://www.athero.org/download/IASPPGuidelines_FullReport_20131011.pdf"},{"title":"Cardiovascular disease: Risk assessment and reduction, including lipid modification (National Institute for Health and Care Excellence, updated September 2016)","url":"http://www.nice.org.uk/guidance/CG181"},{"title":"ESC guidelines on the diagnosis and treatment of peripheral artery diseases (European Society of Cardiology, 2011)","url":"http://eurheartj.oxfordjournals.org/content/32/22/2851"},{"title":"European guidelines on cardiovascular disease prevention in clinical practice (version 2012) (European Society of Cardiology, 2012)","url":"http://eurheartj.oxfordjournals.org/content/33/13/1635"},{"title":"European Society of Cardiology/European Atherosclerosis Society Task Force consensus statement on proprotein convertase subtilisin/kexin type 9 inhibitors: Practical guidance (ESC/EAS, August 2017)","url":"academic.oup.com/eurheartj/article/38/29/2245/2418178"},{"title":"Familial hypercholesterolaemia is underdiagnosed and undertreated in the general population: Guidance for clinicians to prevent coronary heart disease: Consensus statement of the European Atherosclerosis Society (August 2013)","url":"http://eurheartj.oxfordjournals.org/content/34/45/3478.long"},{"title":"Guidelines for the management of familial hypercholesterolemia (Japanese Ministry of Health, Labour, and Welfare/Cardiovascular Research Foundation, 2012)","url":"www.jstage.jst.go.jp/article/jat/19/12/19_14621/_article"},{"title":"Homozygous familial hypercholesterolaemia: New insights and guidance for clinicians to improve detection and clinical management (European Atherosclerosis Society, July 2014) ","url":"http://eurheartj.oxfordjournals.org/content/35/32/2146.full"},{"title":"Integrated guidelines for cardiovascular health and risk reduction in children and adolescents (National Heart Lung and Blood Institute, December 2011)","url":"http://www.nhlbi.nih.gov/guidelines/cvd_ped/index.htm"},{"title":"National Lipid Association recommendations for patient-centered management of dyslipidemia: Part 1 - Executive summary (National Lipid Association, September 2014)","url":"http://www.lipidjournal.com/article/S1933-2874(14)00274-8/abstract"},{"title":"Pediatric addendum to CHMP guideline on clinical investigation of medicinal products in the treatment of lipid disorders (Committee for Medicinal Products for Human Use [CHMP], September 2012)","url":"http://www.ema.europa.eu/docs/en_GB/document_library/Scientific_guideline/2012/10/WC500133180.pdf"},{"title":"Screening for lipid disorders in children and adolescents: US Preventive Services Task Force recommendation statement (US Preventive Services Task Force, August 2016) ","url":"http://jamanetwork.com/journals/jama/fullarticle/2542642"},{"title":"Secondary prevention of atherosclerotic cardiovascular disease in older adults: A scientific statement from the American Heart Association (October 2013)","url":"http://circ.ahajournals.org/content/early/2013/10/28/01.cir.0000436752.99896.22"},{"title":"Statin use for the primary prevention of cardiovascular disease in adults: US Preventive Services Task Force recommendation statement (US Preventive Services Task Force, November 2016)","url":"http://jamanetwork.com/journals/jama/fullarticle/2584058"},{"title":"VA/DaD Clinical practice guideline for the management of dyslipidemia for cardiovascular risk reduction (Department of Veterans Affairs/Department of Defense, 2014)","url":"http://www.healthquality.va.gov/guidelines/CD/lipids/VADoDDyslipidemiaCPG.pdf"}]}]}]}"},{"mime":"TXT","content":"{"List":[{"id":"10","RelatedNews":["165095","164578","164078","163253","161089","160950","160709","157727","157386","156509","155526","155187","155186","155035","153861","153844","152325","152265","150891","150581","150542","149647","148049","147956","147827","147601","147541","147217","146990","146453","146255","145511","145487","144975","144110","144082","142677","142398","142225","142221","142062","141627","141433","141196","141067","140956","140957","140889","140785","140581","140448","139902","139687","139627","139353","139357","139282","139249","139218","138999","139068","138864","138774","138060","138074","138025","137773","137305","136977","136822","136767","136907","136533","136460","136381","136342","135639","135506","135316","135182","134778","134798","134490","134416","134290","134105","133478","133413","133398","133281","133210","132721","132703","132678","132642","132625","132623","132620","132531","132393","132414","132083","131837","131583","131570","131082","130819","130809","130699","130693","130585","130559","130492","130387","130272","129979","129955","129924","129936","129915","129899","129752","129419","129080","128546","128486","128383","128366","128311","128237","128242","127992","127890","127841","127885","127559","127415","127408","127389","127237","127200","127155","126961","126514","126565","126561","126411","126093","125976","125843","125741","125686","125674","125638","125481","125393","125384","125224","125143","125096","125024","124883","124690","124482","124374","124367","124350","124275","124100","124049","123921","123670","123639","123590","123552","123502","123348","123345","123042","122853","122728","122705","122638","122503","122366","121984","121768","121602","121543","121493","121192","121188","121163","121121","121004","120999","120982","120761","120728","120566","120464","120384","120394","120266","120263","120249","120211","120162","120127","120121","120031","120028","119987","119976","119982","119954","119943","119909","119641","119615","119530","119505","119309","119298","119255","119251","119062","118881","118754","118743","118738","118735","118667","118607","118508","118484","118307","118250","118144","118001","117789","117461","117032","117031","116977","116762","116733","116632","116543","116558","116453","116460","116408","116387","116326","116286","116252","116119","116127","116103","116068","116069","116090","116073","115904","116029","116027","115977","115892","115890","115891","115893","115889","115915","115839","115780","115764","115715","115511","115434","115416","115392","115353","115332","115309","115288","115148","115063","115028","115021","114969","114888","114808","114670","114516","114460","114414","114315","114146","114050","113998","113983","113993","113995","113976","113940","113905","113814","113802","113735","113752","113775","113732","113724","113713","113675","113684","113601","113573","113416","113401","113361","113340","113299","113239","113209","113208","113186","113136","113104","112903","112860","112773","112770","112705","112600","112589","112557","112568","112534","112459","112373","112381","112273","112249","112213","112116","112079","112078","111938","111757","111625","111599","110641","110643","110538","110473","110418","110239","110002","109874","109783","109736","109663","109538","109349","109302","109329","109267","109244","109209","109198","109165","108831","108840","108817","108608","108603","108390","108354","108337","107999","107964","107981","107945","107709","107686","107660","107506","107356","107348","107259","106933","106808","106777","106583","106325","105449","105255","105071","104899","104866","104757","104613","104565","104549","104376","104044","103938","103412","103306","103187","103279","103190","103184","103169","103005","102894","102838","102781","102542","102355","102456","102346","102389","102401","102365","102309","102265","102225","102224","102245","102236","101888","102173","102164","101936","101890","101874","101813","101854","101700","101579","101540","101534","101474","101491","101395","101336","101334","101268","101200","101144","101152","101151","101143","101134","101069","101019","100815","100706","100637","100600","100598","100522","100343","100335","100246","100135","100116","99994","100036","99991","99938","99912","99825","99775","99756","99747","99505","99496","99468","99455","99390","99351","99239","99240","99241","99209","99046","98545","98542","98525","98498","98495","98426","98408","98295","98232","98203","98149","98144","97692","97600","97642","97464","97205","97165","97088","96872","96670","96631","96430","96443","96383","96381","96018","95897","95896","95905","95889","95878","95743","95801","95740","95757","95688","95485","95473","95336","95337","95310","95226","95256","95239","95200","94919","94868","94608","94522","94531","94379","94344","94319","94317","94088","94046","94040","94037","93796","93694","93693","93697","93347","93311","93225","93129","92897","92780","92727","92664","92603","92473","92320","92274","92245","92175","92226","92148","92050","91963","91962","91901","91923","91793","91779","91666","91373","91482","91407","91187","91186","91097","91096","91053","90845","90638","90636","90563","90502","90443","90277","90225","90246","90204","90177","90096","89899","89805","89616","89584","89545","89555","89492","89459","89483","89441","89436","89390","89356","89306","89013","88984","88895","88841","88730","88476","88431","88409","88354","88332","88356","88177","88176","88136","88120","87845","87816","87773","87614","87564","87454","87508","87494","87388","87353","87145","87195","87192","87171","86994","87149","87011","87076","87060","86977","86934","86757","86698","86634","86673","86632","86607","86611","86579","86420","86444","86405","86353","86347","86274","86184","86181","86053","86048","86008","85939","85909","85598","85578","85573","85496","85125","85085","85079","85011","85025","84985","84984","84811","84816","84779","84726","84698","84692","84713","84681","84564","84623","84375","84180","84151","84071","84051","83957","83954","83953","83946","83929","83900","83840","83778","83795","83718","83671","83648","83631","83590","83588","83607","83548","83542","83493","83418","83409","83302","83266","82855","83165","83070","83056","83023","82979","82968","82907","82859","82806","82868","82864","82829","82790","82127","82651","82665","82518","82529","82486","82472","82392","82222","82053","82079","81917","81990","81837","81843","81668","81618","81440","81280","81186","81078","81109","80937","80898","80753","80720","80719","80712","80705","80599","80520","80399","80474","80472","80450","80443","80459","80403","80431","80424","80384","80293","80261","80109","80119","79962","79829","79831","79836","79646","79670","79589","79557","79510","79490","79365","79228","79093","79039","79022","78970","78914","78900","78888","78878","78874","78618","78570","78568","78608","78590","78501","78473","78432","78225","78201","78069","78062","77986","77964","77916","77859","77799","77851","77797","77772","77813","77709","77678","77392","77350","77136","77324","77283","77164","77158","77052","76981","76904","76905","76874","76873","76836","76796","76806","76780","76757","76671","76708","76655","76651","76574","76462","76352","76275","76309","76330","76313","76226","76130","76103","76060","75940","75835","75881","75891","75794","75786","75735","75635","75592","75598","75555","75561","75525","75489","75487","75481","75479","75456","75447","75319","75284","75206","75167","75126","75000","75032","74998","74990","74968","74899","74940","74891","74762","74742","74690","74644","74578","74549","74496","74442","74480","74472","74358","74253","74194","74166","74109","73852","73768","73708","73591","73574","73572","73518","73533","73546","73538","73527","73426","73408","73407","73383","73329","73355","73292","73211","73190","73168","73124","73091","73063","72970","72901","72879","72837","72820","72739","72719","72709","72592","72449","72398","72361","72339","72335","72230","72081","72066","72062","72057","71974","71866","71781","71757","71726","71696","71510","71541","71472","71439","71434","71437","71395","71403","71348","71334","71272","71246","71192","71194","71167","71169","71137","71049","71109","71122","71113","71110","71088","71072","71016","71046","70984","70943","70797","70707","70719","70673","70647","70620","70601","70562","70521","70516","70426","70403","70394","70281","70141","70106","70125","70084","70062","70024","70013","69985","69856","69880","69855","69713","69678","69690","69686","69685","69527","69605","69539","69534","69533","69535","69345","69342","69279","69254","69200","69192","69191","69073","69098","69037","69057","68909","68849","68896","68865","68778","68777","68763","68465","68368","68377","68294","68327","68250","68165","68108","68107","67850","67856","67783","67796","67713","67668","67655","67534","67618","67434","67194","67497","67431","67435","67425","67384","67377","67351","67324","67318","67190","67201","67200","67165","67095","66873","66696","66681","66639","66582","66554","66471","66456","66446","66367","66376","66375","66357","66288","66299","66298","66269","66204","66150","66137","66132","66108","66087","66063","66062","66038","66028","65948","65895","65857","65706","65721","65688","65653","65651","65647","65416","65297","65231","65162","65160","65116","65040","65034","65028","64953","64800","64790","64720","64684","64541","64659","64533","64517","64334","64295","64224","64093","64082","64089","64028","63987","64019","64018","63931","63972","63975","63974","63973","63828","63801","63824","63799","63717","63707","63636","63544","63541","63476","63459","63305","63281","63262","63256","63118","63154","63105","63051","63019","62961","62854","62916","62870","62769","62602","62502","62431","62395","62334","62319","62296","62085","61973","61833","61773","61552","61541","61487","61488","61482","61386","61311","61308","61240","61166","61127","60898","61023","61045","61074","61072","60994","60978","60969","60892","60812","60686","60612","60624","60564","60563","60561","60573","60550","60266","60521","60507","60366","60393","60423","60421","60317","60335","60227","60177","60252","60046","60054","60051","59993","60010","59828","59967","59856","59915","59906","59869","59814","59694","59732","59672","59658","59586","59535","59493","59492","59488","59353","59397","59440","59343","59371","59222","59160","59089","58923","58879","58929","58918","58917","58889","58792","58771","58741","58558","58440","58380","58239","58229","57691","57676","58090","57675","58113","58099","57958","57959","57956","57955","57916","57912","57911","57905","57869","57777","57702","57683","57611","57600","57598","57481","57510","57465","57450","57369","57311","57283","57282","57230","57210","57204","57070","57017","56870","56833","56779","56745","56704","56668","56603","56491","56488","56486","56291","56218","56217","53836","56110","56077","56045","56041","55951","55949","55900","55899","55817","55698","55522","55493","55499","55389","55367","55344","55340","55321","55239","55107","54876","54805","54806","54608","54530","54514","54381","54312","54270","54186","54185","54138","54095","54023","53980","53869","53866","53835","53807","53800","53722","53628","53706","53661","53643","53669","53640","53631","53465","53606","53427","53408","53326","53284","53272","53157","53124","53069","53080","53039","53032","52998","52956","52872","52893","52734","52632","52508","52454","52367","52341","52218","52152","52150","52130","52028","51922","51717","51671","51443","51216","51215","51210","51207","51203","51200","51180","51108","50859","50656","50477","50465","50200","50212","50134","50060","50045","49987","49961","49947","49896","49842","49839","49817","49824","49797","49796","49674","49669","49556","49435","49325","49308","49250","49036","49245","49030","49142","49054","49052","48958","48934","48863","48878","48809","48808","48820","48695","48713","48666","48660","48635","48627","48521","48492","48467","48333","48256","48181","48122","48065","48004","47949","47878","47664","47634","47574","47549","47540","47513","47372","47389","47456","47349","47365","47188","47162","47160","47078","47008","46932","46894","46862","46860","46841","46825","46802","46798","46779","46735","46592","46568","46558","46535","46448","46429","46371","46369","46341","46219","46220","46218","46217","46195","46170","46085","46130","46121","46039","46004","45908","45905","45902","45954","45903","45882","45906","45808","45708","45489","45476","45436","45395","45369","45358","45327","45273","45283","45182","45105","45061","45054","45036","44916","44749","44706","44743","44568","44581","44580","44488","44408","44445","44429","44423","44371","44340","44319","44256","44247","44219","44172","44171","44124","44114","44076","44088","44084","44018","44059","43841","44055","44054","44015","43928","43803","43784","43742","43719","43716","43674","43646","43604","43611","43589","43587","43579","43515","43512","43394","43391","43356","43264","43156","43135","43071","42956","42889","42865","42735","42719","42687","42645","42638","42630","42627","42625","42600","42595","42575","42476","42474","42338","42390","42364","42221","42216","42127","42000","41982","41948","41864","41849","41679","41638","41616","41612","41558","41513","41412","41041","41019","40843","40730","40677","40597","40582","40540","40472","40506","40462","40406","40368","40310","40221","40176","40083","40007","39837","39648","39622","39607","39399","39425","39446","39350","39310","39277","39275","39256","39280","39260","39220","39243","39160","39210","39182","39178","39174","39170","39086","39144","39141","39123","38987","38921","38954","38969","38830","38684","38676","38556","38621","38364","38540","38492","38321","38448","38403","38281","38182","38167","38044","38021","37998","37988","37965","37860","37836","37773","37700","37729","37657","37627","37596","37566","37561","37544","37514","37347","37321","37219","37196","37211","37184","37181","37028","36944","36854","36763","36829","36762","36751","36755","36744","36706","36684","36623","36574","36570","36561","36553","36551","36548","36528","36522","36448","36469","36405","36219","36212","36032","35950","35924","35912","35664","35633","35517","35508","35399","35355","35245","35244","35275","35180","35151","34956","35068","35018","34999","34998","34906","34896","34919","34889","34888","34843","34867","34720","34858","34812","34665","34548","34412","34169","34363","34324","34216","34231","34182","34053","33992","33942","33798","33858","33714","33705","33635","33542","33586","33466","33570","33505","33473","33410","33298","33165","32936","32984","32781","32829","32764","32657","32615","32565","32496","32403","32435","32326","32301","32300","32076","32113","32097","32004","32088","31942","31867","31823","31680","31719","31715","31672","31520","31606","31584","31556","31425","31443","31389","31432","31429","31408","31405","31401","31365","31370","31279","31316","31338","31301","31293","31290","31236","31139","31120","31174","31080","31033","31050","31052","31035","31049","30981","30977","30975","30871","30820","30850","30758","30738","30730","30713","30616","30588","30501","30417","30208","30283","30250","30313","30142","30196","30100","30068","30123","30075","30108","30066","30012","29916","29862","29816","29668","29665","29662","29625","29495","29574","29525","29468","29501","29447","29399","29195","29313","29142","29296","29292","29257","29137","29124","29086","28953","28870","28795","28776","28800","28796","28765","28736","28719","28706","28697","28662","28576","28508","28528","28487","28460","28193","28136","28092","28126","28106","27738","28037","27992","27903","27668","27715","27663","27651","27655","27614","27578","27448","27483","27388","27274","27209","27174","27115","27171","27169","27119","27097","27085","27019","26920","26911","26908","26755","26811","26752","26613","26523","26588","26335","26219","26093","26023","26022","25889","25885","25750","25674","25821","25716","25815","25705","25664","25621","25494","25386","25442","25425","25458","25342","25255","24866","24691","25035","24889","24793","24805","24817","24603","24670","24585","24432","24277","24250","24243","24206","24214","24125","24104","24000","23982","23954","23903","23921","23917","23874","23859","23891","23776","23813","23507","23420","23461","23175","23251","23289","23314","23312","23305","23226","23212","23194","23189","23104","23146","23115","23113","23105","23103","23099","23109","23065","23050","23048","23041","22987","22881","22740","22550","22629","22645","22643","22596","22503","22449","22465","22408","22405","22353","22229","22220","22213","22128","22087","22067","22062","22006","21878","21895","21877","21791","21802","21771","21653","21639","21638","21604","21520","21479","21478","21429","21359","21363","21235","21310","21288","21242","21218","21142","21193","21042","20925","20985","20810","20853","20608","20675","20747","20670","20700","20567","20558","20508","20481","20387","20318","20274","20293","20277","20242","20059","20052","19997","19922","19861","19779","19783","19668","19666","19630","19507","19424","19180","19175","19164","19193","19132","19172","19162","19184","19052","18779","18858","18849","18762","18727","18552","18425","18505","18465","18171","18170","18039","17867","17804","17680","17618","17536","17498","17494","17490","17333","17377","17364","17357","17354","17325","17351","17249","17352","17347","17339","17323","17228","17107","17047","17006","16801","16918","16719","16642","16668","16680","16581","16574","16661","16566","16636","16537","16471","16318","16295","16364","16286","16242","16231","16087","16062","16060","16046","16026","15945","15976","15850","15734","15633","15490","15514","15463","15394","15355","15353","15435","15363","15362","15325","15282","15201","15233","15219","15205","15204","15026","15106","14777","15001","14902","14859","14784","14743","14742","14799","14747","14781","14734","14701","14602","14645","14623","14614","14577","14572","14561","14539","14538","14509","14390","14441","14414","14344","14262","14278","14203","14201","14157","14133","14123","14009","13879","13878","13625","13763","13233","13568","13572","13569","13518","13302","13463","13484","13116","13231","13095","13093","13039","12992","12925","12858","12856","12791","12755","12745","12725","12691","12614","12561","12518","12488","12436","12433","12352","12334","12256","12278","12260","12258","12160","12127","12049","12046","11907","11806","11775","11759","11750","11752","11721","11711","11706","11653","11595","11456","11562","11552","11547","11545","11544","11543","11534","11513","11510","11529","11509","11508","11494","11496","11475","11477","11485","11482","11416","11348","11362","11293","11253","11236","11209","11150","11042","11068","11065","11057","10898","10869","10695","10631","10436","10527","10468","10495","10444","10439","10441","10446","10435","10408","10307","10306","10305","9295","9226","9173","8905","8891","8741","8732","8697","8684","8598","8599","8552","8550","8525","8516","8492","8416","8386","8378","8369","8123","8085","8045","8019","7957","7920","7764","7527","7512","7476","7449","7422","7395","7390","7287","7280","7158","7134","7131","7128","7092","7030","6942","6892","6836","6716","6683","6661","6568","6447","6408","6371","6352","6098","6079","6030","6052","5953","5952","5909","5803","5676","5584","5558","5477","5449","5247","5233","5193","5089","5108","5110","4916","4796","4288","4289","4128","4129","4131","4130","4096","4095","4070","4068","4097","3898","3770","3769","3774","3625","3627","3626","3490","3491","3487","3497","3364","3365","3366","3245","3117","740","741","607","606","605","497","1657","1655","1656","1541","1383","1384","2197","1979","1872","1873","3026","3027","2904","2683","2682","2681","2587","2585","384","385","383","388","386","382","92","98","93","100","99","96","97","2482"],"DiseaseBriefingName":"Atherosclerosis","TableOfContents":[{"id":"1366","name":"Facts about Atherosclerosis","level":"1"},{"id":"1373","name":"Pathophysiology","level":"2"},{"id":"1374","name":"Hypercholesterolemia: The Primary Risk Factor","level":"2"},{"id":"5403","name":"The Role of Inflammation and the Immune System","level":"2"},{"id":"1375","name":"Other Risk Factors","level":"2"},{"id":"3748","name":"Genetics","level":"3"},{"id":"1376","name":"Epidemiology","level":"2"},{"id":"1377","name":"Morbidity and Mortality","level":"2"},{"id":"2582","name":"Cost","level":"2"},{"id":"1367","name":"Diagnosis","level":"1"},{"id":"1378","name":"Diagnostic Imaging","level":"2"},{"id":"1368","name":"Prevention","level":"1"},{"id":"4226","name":"Lifestyle Modification","level":"2"},{"id":"1381","name":"Hormone Replacement Therapy","level":"2"},{"id":"1369","name":"Treatment","level":"1"},{"id":"1384","name":"LDL Cholesterol-Lowering Drug Therapy","level":"2"},{"id":"1385","name":"Bile Acid Sequestrants","level":"3"},{"id":"1387","name":"Fibric Acid Derivatives","level":"3"},{"id":"1388","name":"Nicotinic Acid and Derivatives","level":"3"},{"id":"1389","name":"HMG-CoA Reductase Inhibitors","level":"3"},{"id":"1390","name":"ACAT Inhibitors","level":"3"},{"id":"1391","name":"Cholesterol Absorption Inhibitors","level":"3"},{"id":"1392","name":"MTTP Inhibitors","level":"3"},{"id":"4726","name":"PCSK9 Inhibitors","level":"3"},{"id":"1395","name":"APOB Expression Inhibitors","level":"3"},{"id":"2920","name":"Thyroid Hormone Receptor Agonists","level":"3"},{"id":"1397","name":"HDL-Targeted Therapies","level":"2"},{"id":"1398","name":"Apolipoprotein A-I-Directed Therapies","level":"3"},{"id":"1400","name":"Cholesteryl Ester Transfer Protein Inhibitors","level":"3"},{"id":"1402","name":"The Role of Scavenger Receptors","level":"3"},{"id":"1403","name":"Paraoxonase as a Target","level":"3"},{"id":"1404","name":"ABCA1 Expression Enhancers","level":"3"},{"id":"1414","name":"Drugs Targeting Nuclear Hormone Receptors","level":"3"},{"id":"1405","name":"Antiinflammatory Strategies","level":"2"},{"id":"1406","name":"Statins","level":"3"},{"id":"1409","name":"Antioxidants","level":"3"},{"id":"2932","name":"Chemokine-Targeting Compounds","level":"3"},{"id":"1410","name":"Phospholipase A2 Inhibitors","level":"3"},{"id":"1411","name":"Novel Targets for Atherosclerosis","level":"2"},{"id":"1412","name":"PPAR Receptors","level":"3"},{"id":"1415","name":"Endothelial Dysfunction","level":"3"},{"id":"1413","name":"Endothelin Receptors","level":"4"},{"id":"2921","name":"Endocannabinoid System","level":"3"},{"id":"3189","name":"Combination Therapy","level":"2"},{"id":"1419","name":"Gene Therapy","level":"2"},{"id":"5402","name":"Antisense Therapy","level":"3"},{"id":"1420","name":"Natural Products and Herbal Remedies","level":"2"},{"id":"1417","name":"Current Atherosclerosis Pipeline","level":"2"},{"id":"1422","name":"Surgical Treatment","level":"2"},{"id":"4583","name":"Targets for Therapeutic Intervention","level":"1"}],"Glossary":[{"letter":"A","Terms":[{"term":"ABC Transporters","value":"See ATP-Binding Cassette (ABC) Transporters"},{"term":"ABCA","value":"See ATP-Binding Cassette Transporter-1 (ABCA1)\r\n"},{"term":"ABCA1","value":"A gene (also known as CERP, HDLDT1 and TGD) involved in cholesterol metabolism. It expresses ABCA1, an ATP-binding cassette transporter that is a 2261 amino acid integral cell membrane protein regulating secretion of excess cholesterol from macrophages into the metabolic lipoprotein HDL pathway. It has been found to be mutated in patients with Tangier disease. Mutations in this gene are also associated with familial high-density lipoprotein deficiency and atherosclerosis. It is a promising new drug target for controlling cholesterol levels in cardiovascular disease. See also ATP-Binding Cassette Transporter-1 (ABCA1)"},{"term":"Acetylcholine (ACh)","value":"Neurotransmitter at cholinergic synapses; acetic acid ester of choline."},{"term":"Acetylcholinesterase","value":"One (EC 3.1.1.7) of a family of enzymes that catalyze the hydrolysis of acetylcholine. Also known as cholinesterase."},{"term":"Acute","value":"Referring to a health-related state or exposure that indicates brief (short-term) duration and strong intensity."},{"term":"Acyl-Coenzyme A:Cholesterol O-Acyltransferase (ACAT)","value":"The major enzyme (EC 2.3.1.26) involved in the esterification of cholesterol. It is located in the endoplasmic reticulum and is involved in cholesterol absorption in the intestine, accumulation of cholesterol in macrophages in the arterial wall and assembly and secretion of VLDL in the liver."},{"term":"Adenosine 5'-Monophosphate (AMP)-Activated Protein Kinase (AMPK)","value":"A metabolite-sensing heterotrimeric enzyme complex composed of alpha, beta and gamma subunits, that is activated by AMP. The alpha subunit contains a typical serine/threonine kinase domain and a carboxy-terminal regulatory domain. The beta subunit acts as a scaffold for binding of the other two subunits and contains a glycogen-binding domain. The gamma subunit contains four cystathionine-beta-synthase (CBS) domains that play a role in AMP and ATP binding (i.e., the allosteric effectors of the kinase). AMPK is involved in the regulation of intracellular energy and is activated following myocardial ischemia. It is thought that activation of AMPK may be an endogenous cardioprotective signaling mechanism. Increased activation of AMPK increases ATP synthesis and decreases ATP utilization thus maintaining normal cellular energy stores during ischemia. Activated AMPK stimulates fatty acid oxidation, glucose transport, glycolysis and increases phosphorylation and activity of endothelial nitric oxide synthase (eNOS; expressed in cardiac myocytes); activation of AMPK also inhibits triglyceride and protein synthesis. Chronic activation of AMPK also phosphorylates transcription factors altering gene expression and modulates muscle mitochondrial biogenesis. Chronic activation of AMPK increases phosphorylation eNOS and consequent production of NO has been shown to improve vascular tone and therefore cardiac function and survival in experimental models. Thus, AMPK improves myocardial glucose and lipid metabolism and prevents ventricular contractile dysfunction in the ischemic heart. Activation of the AMPK could play a possible role in vasodilation of the cardiac cells making it an important therapeutic target in myocardial infarction. AMPK is also being investigated as a possible target for the treatment of metabolic syndrome."},{"term":"Adenovirus","value":"A DNA-containing virus that causes respiratory tract and eye infections. In gene therapy, adenoviruses are genetically modified to carry a specific gene effective against diseases such as certain types of cancer, cystic fibrosis and others."},{"term":"Adhesion","value":"The interaction of one cell with another, thereby controlling the position of a cell in lymphoid tissue or the migration of cells into tissues. It is also a prerequisite for antigen presentation and other immune effector functions."},{"term":"Adhesion Molecules","value":"Membrane-bound proteins that enable one cell to interact with another during leukocyte migration. These proteins often traverse the membrane and are linked to the cytoskeleton so that the cell may use them to gain traction on other cells or on the extracellular matrix as they migrate. These molecules are subdivided into several structural groups: selectins, immunoglobulin (Ig) supergene family and integrins. Some of these molecules are constitutively expressed by cells (e.g., CR3 on mononuclear cells), while others are induced by cytokines or cellular activation. Some must be synthesized (e.g., ICAM-1 in endothelium), while others are stored intracellularly and may be mobilized to the cell surface (LFA-1 in neutrophils)."},{"term":"Adipocyte","value":"A fat cell present in connective tissue that is enlarged with one or more fat globules. The cytoplasm is compressed into a thin envelope while the nucleus occurs at the periphery. Adipocytes have been shown to secrete various proteins including leptin and angiotensinogen."},{"term":"Adipocytokine","value":"A biologically active substance produced and secreted by an adipocyte that is involved in glucose and fatty acid metabolism. Examples include TNF-alpha, IL-6, leptin, plasminogen activator inhibitor-1 (PAI-1), C-reactive protein (CRP), angiotensinogen, adiponectin and resistin. Disruption of regulation of these cytokines could be responsible in part for the development of obesity-related disorders."},{"term":"Adipokine","value":"See Adipocytokine"},{"term":"Adiponectin","value":"An secreted protein (30 kD; also known as adipocyte complement-related protein or Acrp30) expressed exclusively in differentiated adipocytes that exhibits antiinflammatory and antiatherogenic effects and has been shown to contribute to the pathology of obesity and type 2 diabetes. Levels of this adipocytokine are abundant in plasma and it increases insulin sensitivity via stimulation of fatty oxidation, reductions in triglycerides and improvements in glucose metabolism. Adiponectin levels are inversely related to the degree of adiposity and reduced titers have been observed in insulin-resistant states. In addition, adiponectin has been shown to inhibit expression of extracellular matrix adhesive proteins in endothelial cells and atherogenic cytokines."},{"term":"Adipose Tissue","value":"A type of connective tissue composed mainly of adipocytes surrounded by reticular fibers and arranged in lobular groups or along small blood vessels. Also known as fat tissue. There are two types of adipose tissue: brown and white. Brown fat is a type of adipose tissue that is energy-dissipating or thermogenic tissue. It is composed of brown adipocytes containing multilocular lipid droplets and many well developed mitochondria. It is found in hibernating animals, pigs, rodents and newborn humans and it may play an antiobesity role in overfed animals. White fat is energy-storing adipose tissue composed of white adipocytes which contain unilocular droplets and only a few poorly developed mitochondria."},{"term":"AIDS ","value":"See Acquired Immune Deficiency Syndrome\r\n"},{"term":"Akt","value":"An enzyme also known as protein kinase B (PKB) that is involved in the phosphoinositide 3-kinase (PI3K) signal transduction pathway. Its possesses numerous modulatory affects including activation of glycogen synthesis, glycolysis and platelet activation and mediation of antiapoptotic and cell survival signaling. It has been implicated as a major factor in many types of cancer due to effects on cell growth and proliferation.\r\n"},{"term":"Aldosterone","value":"A steroid hormone (mineralocorticoid) produced by the adrenal cortex that controls salt and water balance in the kidney. Abnormally high levels of this hormone cause sodium retention, hypertension, heart rhythm irregularities and, possibly, paralysis."},{"term":"Allergenic","value":"See Antigenic"},{"term":"alphaIIb/beta3  Integrin","value":"See Integrin alphaIIb/beta3 (Fibrinogen gpIIb/IIIa) Receptor"},{"term":"AMPK","value":"See Adenosine 5'-Monophosphate (AMP)-Activated Protein Kinase"},{"term":"Amylases","value":"A group of amylolytic enzymes (EC 3.2.1.- ) produced in the pancreas and salivary glands that cleave starch, glycogen and related alpha-1,4-glucans. "},{"term":"Amylin","value":"An endogenous peptide neuroendocrine hormone synthesized in pancreatic beta cells and released together with insulin in response to hyperglycemia to control postprandial glucose levels. The hormone inhibits the release of glucagon and also delays gastric emptying. Pancreatic beta-cells can be damaged or destroyed in patients with type 1 or 2 diabetes  which can result in reduced postprandial secretion of both insulin and amylin. Amylin replacement therapy in addition to insulin replacement may result in more complete restoration of normal glucose control."},{"term":"Analgesia","value":"An insensitivity to pain."},{"term":"Angina Pectoris","value":"Paroxysmal thoracic pain commonly due to anoxia of the myocardium. Frequently it ia a symptom of coronary artery disease that can be aggravated by physical exertion, emotional stress, extreme heat or cold, heavy meals, alcohol and cigarette smoking. The two most common forms of angina pectoris are stable angina and unstable angina."},{"term":"Angiogenesis","value":"The development of new blood vessels from existing ones. Persistent upregulation of this process has been implicated in the pathogenesis of solid tumors, hematologic malignanacies, ischemic heart disease, atherosclerosis, psoriasis, rheumatoid arthritis, diabetic retinopathy and age-related macular degeneration. The inhibition of angiogenesis is an attractive antitumor therapeutic strategy that may also be effective in the treatment of rheumatoid arthritis. The induction of therapeutic angiogenesis has been proposed as a method of treating stroke and angina pectoris."},{"term":"Angiography","value":"A radiographic technique in which a radio-opaque contrast material is injected into a blood vessel in order to see its structure on X-ray. It is used to image arteries in the brain, heart, kidneys, gastrointestinal tract, aorta, neck (carotids), chest, limbs and the pulmonary circuit. Fluorescein angiopathy is used on the eyes in combination with fluorescein electroretinography to detect diabetic retinopathy. It is also a widely used for imaging atherosclerosis. The procedure is also included in balloon angioplasty used to repair blood vessels."},{"term":"Angiopathy","value":"A disease of the blood vessels (arteries, veins, and capillaries) that occurs when in individuals with chronic diabetes. Two types of angiopathy exist: macroangiopathy and microangiopathy. Macroangiopathy involves the build up of fat and blood clots in large blood vessels that stick to the vessel walls causing occlusion. Microangiopathy is a disease of smaller vessels in which vessel walls become so thick and weak that they bleed, leak protein and slow blood flow. The result is that cells such as those in the center of the eye as in the case of retinopathy do not receive an adequate blood supply and may therefore be damaged."},{"term":"Angioplasty","value":"The technique of mechanically widening a narrowed or obstructed blood vessel due to, for example, atherosclerosis. It involves passing ttightly folded balloons into the narrowed vessels and then inflating them using water pressures some 75 to 500 times normal blood pressure (6 to 20 atmospheres).\r\n"},{"term":"Angiotensin Converting Enzyme (ACE)","value":"An enzyme (EC 3.4.15.1) that cleaves the biologically inactive decapeptide angiotensin I to the active angiotensin II. High levels of ACE (normal values = 18-67 U/ml for individuals over age 20) are seen in sarcoidosis, histoplasmosis, alcoholic cirrhosis, asbestosis, berylliosis, diabetes, Hodgkin's disease, hyperthyroidism, amyloidosis, primary biliary cirrhosis, idiopathic pulmonary fibrosis, pulmonary embolism, scleroderma, silicosis, tuberculosis, Gaucher's disease and leprosy. See also Renin-Angiotensin System"},{"term":"Angiotensin I","value":"A biologically inactive decapeptide hormone that is formed in the circulation from the cleavage of angiotensinogen by renin. Angiotensin I is cleaved by angiotensin converting enzyme (ACE) resulting in the biologically active angiotensin II. See also Renin-Angiotensin System"},{"term":"Angiotensin II","value":"The active form of angiotensin that is an octapeptide synthesized from angiotensin I and rapidly destroyed. It induces marked vasoconstriction resulting in an increase in blood pressure. It has other effects including stimulation of aldosterone release and renal absorption of sodium. See also Renin-Angiotensin System"},{"term":"Angiotensin II Receptors (AT1, AT2)","value":"Receptor subtypes identified as AT1 and AT2. The G-protein-coupled AT1 receptor is responsible for the major physiological effects of angiotensin II. Agents targeting the AT1 receptor may be effective in the treatment of hypertension, heart failure and diabetic retinopathy. AT2 receptors have been localized in the rat brain, female reproductive organs and in neuronal tumor cells."},{"term":"Angiotensinogen (AGT)","value":"A polypeptide hormone (60 kD) that is an alpha-2 globulin and the substrate for renin. It is released from the liver and cleaved in the circulation by renin to form the biologically inactive decapeptide angiotensin I. Angiotensin I is then cleaved to the active angiotensin II by angiotensin converting enzyme (ACE). Angiotensin is broken down by angiotensinase. See also Renin-Angiotensin System"},{"term":"Antibody","value":"A protein synthesized by B lymphocytes in response to an antigen that has the ability to specifically bind with said antigen. Antibodies are the soluble form of the B cell's specific antigen receptors and are collectively referred to as immunoglobulins (Igs). Igs are produced in many different forms, each with different amino acid sequences and antigen binding sites. Through recruiting the complement system and various white blood cells, they protect the body by inactivating viruses and bacterial toxins and by killing invading microorganisms and larger parasites."},{"term":"Antigenic","value":"Having the properties of an antigen. Synonyms include immunogenic and allergenic."},{"term":"Antioxidant","value":"Any substance that reduces oxidative damage such as that caused by free radicals. Examples include vitamin E and beta carotene which are thought to counteract the damaging effects of oxidation."},{"term":"Antisense","value":"Refers to the complementary strand of a coding sequence of DNA (antisense DNA) or mRNA (antisense RNA). These nucleotide sequences are not templates for synthesis but interact with complementary sequences in other molecules thereby affecting their function. Antisense therapy uses a DNA or RNA sequence that has the reverse orientation (i.e., opposite \"sense\"; antisense oligonucleotide) of the DNA or RNA sequence present in a specific disease-causing target gene and when administered, it will bind to the target gene and inhibit its expression.  See also Antisense Oligonucleotide"},{"term":"Antisense Oligonucleotide","value":"Complementary strands of small segments of mRNA that bind to specific mRNA sequences encoding for disease-causing proteins. Pairing of mRNA with antisense fragments blocks initiation of protein synthesis by reducing the availability of mRNA to ribosomes. Antisense oligonucleotides have been used to inhibit viral infections and to treat cancer and other diseases."},{"term":"Apical Sodium-Dependent Bile Acid Transporter (ASBT)","value":"A protein with eight to nine transmembrane segments that is expressed in high levels in the distal half of the ileum and in the kidney. It is also known as the ileal bile acid transporter (IBAT). ASBT transports bile acid and sodium, efficiently removing bile acid from the lumen of the small intestine. It is a potential target for cholesterol-lowering agents."},{"term":"Apolipoprotein A (ApoA)","value":"The major protein component of HDL and chylomicrons that is involved in promoting the efflux of cholesterol from extrahepatic tissue to the liver where it is metabolized and excreted from the body. It is the activator of lecithin-cholesterol acyltransferase (LCAT) which forms cholesteryl esters in HDL. They consist of several different polypeptides of which the most important are apolipoprotein A-I and A-II. ApoA-I accounts for about 70% of the total HDL protein; it is also found in chylomicrons. An inverse relationship has been shown between ApoA-I/HDL cholesterol levels and the risk of atherosclerosis. Apo A-II is found in HDL and chylomicrons."},{"term":"Apolipoprotein A-I Milano (ApoA-I Milano or AIM)","value":"A mutant gene discovered in family members from a small town in Italy who are almost immune to cholesterol-related heart problems and strokes. The protein expressed by this gene prevents plaque build up in arterial walls by removing harmful cholesterol."},{"term":"Apolipoprotein B (ApoB)","value":"The major structural protein component of LDL, VLDL and IDL that is important in the secretion and transport of these lipoproteins. Atherosclerotic patients have high plasma ApoB levels while they are undetectable in individuals with abetalipoproteinaemia."},{"term":"Apolipoprotein B-100 (ApoB-100)","value":"A type of ApoB that is the major protein component of LDL, VLDL and IDL; it is not present in chylomicrons. It is a ligand for the LDL receptor. Levels are elevated in individuals with familial combined hyperlipidemia and acquired hyperlipidemia and are absent in those suffering from abetalipoproteinemia."},{"term":"Apolipoprotein E (ApoE) Epsilon4 Allele","value":"The presence of this allele on chromosome 19 is associated with an increase in neurofibrillary pathology and is a risk factor for late-onset Alzheimer's disease and stroke. Risk is increased according to the number of copies of the allele present. However, the allele is neither required nor sufficient for development of the disease. In addition, patients with multiple sclerosis who carry ApoE were found to be disabled more quickly by MS-associated symptoms. ApoE gene polymorphism may also play a role in age-related macular degeneration."},{"term":"Apoptosis","value":"An active form of cell death in which intrinsic cellular genetic programs are activated, leading to cellular suicide. Also known as programmed cell death."},{"term":"Arrhythmia","value":"Any variation from the normal rhythm of the heart beat. The two major subtypes of arrhythmia are bradycardia, or abnormally slow heart rate, and tachycardia, or abnormally high heart rate. Other types include sinus arrhythmia, premature beat, heart block, atrial fibrillation, atrial flutter, pulsus alternans and paroxysmal tachycardia."},{"term":"Arteriosclerosis","value":"A group of diseases charaterized by hardening of the walls of arteries. In one type of arteriosclerosis (atherosclerosis), fat builds up in the arterial walls and slows the flow of blood. See also Atherosclerosis."},{"term":"Atherosclerosis","value":"A type of arteriosclerosis characterized by the retention of atherogenic lipoproteins by arterial wall proteoglycans in large- and medium-sized arteries resulting in fibrosis and calcification. This buildup may slow or completely block the flow of blood. See also Arteriosclerosis"},{"term":"ATP-Binding Cassette (ABC) Transporter-1 (ABCA1)","value":"A reverse cholesterol transporter that is regulated by liver X receptors (LXRs) and retinoid X receptors (RXRs). It is a 2261 amino acid integral cell membrane protein that regulates secretion of excess cholesterol from macrophages into the metabolic lipoprotein HDL pathway. It is thought that ABCA1 transports excess free cholesterol generated by cholesteryl esters, from the inner leaflet of the plasma membrane to the cell surface, where it is solubilized into HDL particles by surface-bound apolipoprotein A-I (apoA-I) and effluxed from the cell. A mutation in the ABCA1 protein can interfere with normal transport and processing of cholesterol and has been associated with an increased risk for heart disease. See also ABCA1 gene"},{"term":"ATP-Binding Cassette (ABC) Transporters","value":"A family of highly specific cell membrane proteins that translocate substances across membranes. ABCA1, ABCG1, ABCG5, and ABCG8 act as transporters modulating cholesterol and lipoprotein metabolism. Over expression of ABCA1 in the liver and macrophages of transgenic mice has been shown to increase plasma HDL cholesterol levels and reduce diet-induced atherosclerosis. Overexpression of ABCG1 in the liver decreases plasma HDL levels suggesting a role for ABCG1 in reverse cholesterol transport. ABCG5 and ABCG8 are thought to be involved in the regulation of intestinal cholesterol absorption. Modulation of these transporters is a novel strategy for modulating cholesterol levels. ABCA4 or ABCR is a retina-specific ABC transporter expressed in rod photoreceptor cells that translocates retinyl-derivatives. Mutations in ABCA4 contribute to age-related macular degeneration. Polymorphisms in the sulfonylurea receptor gene, ABCC8 (SUR1), are associated with type 2 diabetes mellitus. Expression of ABCB1 (MDR, P-glycoprotein) increases with age in CD4+ and CD8+ T lymphocytes and may be responsible fro the hyporesponsiveness and reduction in immunoresponses observed with age. Hereditary cases of infant respiratory distress syndrome (IRDS) can be caused by mutations in the ATP-binding cassette transporter A3 (ABCA3) gene. See also ATP-Binding Cassette Transporter-1 (ABCA1)"},{"term":"Attenuate","value":"A gradual reduction."},{"term":"Autosomal Dominant","value":"A genetic trait that is expressed when it is present as a single allele. Thus, only one affected parent is needed to pass it to offspring. \r\n"},{"term":"Autosomal Recessive","value":"A genetic trait that is only expressed when it is present on both alleles of a gene. Thus,  two chromosomes bearing the gene anomaly are required, one from each parent. The risk of transmitting an autosomal recessive disease is 1/4 (25%) at each pregnancy.\r\n\r\n"},{"term":"Autosome","value":"A chromosome not involved in sex determination. The diploid human genome consists of 46 chromosomes: 22 pairs of autosomes in both males and females and 1 pair of sex chromosomes (XX in females and XY in males).\r\n"},{"term":"Axon","value":"A single process (0.25 to more than 10 microns in diameter) of a neuron that conducts impulses away from the cell body and dendrites of that neuron. In contrast to dendrites, which are usually 1.5 mm in length, axons can reach up to 50 cm in length. Those axons that are 0.5 microns in diameter are usually encased in a myelin sheath. In the brain and spinal cord (CNS), oligodendroglia cells are responsible for the sheath, while Schwann cells make up the sheath in the peripheral nervous system. In general, axons transmit impulses to other nerve or effector cells via synaptic terminals."}]},{"letter":"B","Terms":[{"term":"Beta-Adrenoceptors (Beta-Adrenergic Receptors)","value":"G protein-coupled receptors present in effector tissues that can be subdivided into beta1, beta2 and beta3. While beta1 and beta2 receptors are widely distributed, distribution of beta3 receptors is predominantly in adipocytes. Activation of beta1 receptors results in increases in cardiac rate and force of contraction, while activation of beta2 receptors causes relaxation of bronchial and vascular smooth muscle. Beta3 receptors may regulate adipocyte lipolysis in white and brown adipose tissue. Beta3 receptor agonists have been shown to inhibit hunger, increase energy expenditure, lipolysis and fat oxidation, and may be effective therapies for the treatment of diabetes and obesity; they may also be useful as a treatment of depression and discrete social anxiety disorder. Beta2-adrenoceptor antagonists are also known as beta-blockers. These agents block beta2-adrenergic effects, generally resulting in hypotensive effects. Topical beta-blockers are used as a treatment for glaucoma. See Also Beta2 Adrenoceptor (Beta2 Adrenergic Receptor)"},{"term":"Bile","value":"A greenish-yellow fluid containing cholesterol, biliary acids and salts and waste products such as bilirubin that secreted by the liver and stored in the gallbladder. It is involved in the intestinal absorption of fats and is released from the gallbladder in response to a fat-containing meal. Bile salts and acids aid in the digestion of fats. See also Biliary Acids\r\n"},{"term":"Biliary Acids","value":"Primary and secondary steroid acids (e.g., bile acid 7alpha-dehydratase, bile acid 7 alpha-dehydroxylase, bile acid-CoA ligase) present in bile. The primary bile acids are derived from cholesterol in the liver and usually conjugated with glycine or taurine that are further modified to secondary bile acids by bacteria in the intestine. They play an important role in the digestion and absorption of fat and are used in the treatment of gallstones. See also Bile\r\n"},{"term":"Bioavailability","value":"The proportion of an administered drug absorbed into the bloodstream, indicating the physiological concentration of that drug."},{"term":"Biomarker","value":"Characteristic that is objectively measured and evaluated as an indicator of normal biological processess, pathogenic processess or pharmacologic responses to a therapeutic intervention."},{"term":"Blind Trial, Single- or Double-","value":"See Single-Blind and Double-Blind"}]},{"letter":"C","Terms":[{"term":"C-Reactive Protein (CRP)","value":"A member of the pentraxin family and complement system that is produced by hepatocytes in response to prostaglandin E1 or parogen during periods of inflammation. It is detectable in serum in various disease conditions (e.g., rheumatoid arthritis, lupus, pneumococcal pneumonia, rheumatic fever, cancer, tuberculosis and myocardial infarction) and particularly during the acute phase of immune response; C-reactive protein should normally be negative in the bloodstream. It consists of five polypeptide subunits (total molecular weight = 105 kD) and binds to polysaccharides present in  bacterial and fungal cell walls or surfaces in addition to lecithin, phosphoryl or choline containing molecules. See also Pentraxins and Complement System"},{"term":"Calcium Channels","value":"Pore-forming proteins present in cell membranes that control the flow of ions thereby establishing the small voltage gradient that exists across the membrane of cells. These voltage-gated channels (L-, N-, P/Q-, R- and T-type) are formed as a complex of several different subunits and are prominent throughout the nervous system where they are responsible for triggering the release of neurotransmitter. Calcium channel dysfunction has been implicated in several disorders, particular cardiovascular diseases. It has also been suggested that modulation of intracellular calcium levels by voltage-gated calcium channels may be involved in neuronal death and cognitive deficits associated with Alzheimer's disease (AD) and L-type calcium channel modulators have been shown to enhance cognition in AD patients."},{"term":"cAMP (cyclic 3´,5´-Adenosine Monophosphate)","value":"The 3', 5' cyclic ester of adenosine monophosphate (AMP) which acts as a second messenger in signal transduction pathways. cAMP is generated from adenosine 5'-triphosphate (ATP) by the action of adenylate cyclase which is coupled to hormone receptors by G proteins. cAMP activates a specific protein kinase and is inactivated by phosphodiesterase forming 5' AMP. cAMP is responsible for smooth muscle relaxation during bronchodilation, increased ciliary beat frequency and decreased mucus viscosity."},{"term":"Cancer","value":"The abnormal, rapid, unorganized and uncontrolled proliferation of new tissue. The malignant tissue develops from a single cell that has undergone mutations in its DNA. This cell does not mature noramlly and eventually die but it divides prolifically. There are approximately 200 different types of cancers. Cancers arising from epithelial cells are called carcinomas and those arising from mesenchymal tissues are called sarcomas. Leukemias are also classified as malignant growths. Cancer cells can invade nearby tissues (i.e., metastasis) and can spread through the bloodstream and lymphatic system to other parts of the body."},{"term":"Cannabinoid Receptors (CB1, CB2)","value":"A class of G protein-coupled seven-transmembrane-spanning receptor proteins. Two central cannabinoid receptors, CB1 and CB2, have been identified: CB1 is preferentially expressed in brain and mediates the psychoactivity of cannabinoids. Antagonists at CB1 have an antiparkinsonian effect, suggesting a role of overactive cannabinoid receptor transmission in generating parkinsonian symptoms. Antagonism of CB1 may also be a treatment for obesity, multiple sclerosis, Alzheimer's disease, etc. CB2 is almost exclusively expressed in immune cells (e.g. B cells, NK cell, monocytes, microglial cells, neutrophils, T cells, dendritic cells, mast cells). Although their biological function is still unclear, CB2 receptors appear to be responsible for the antiinflammatory and possibly other therapeutic effects of cannabis. CB2 selective agonists, inverse agonists and  antagonists have been shown preclinically to suppress inflammation. CB2 selective agonists have also been shown to alleviate inflammatory and neuropathic pain and emesis. Moreover, results from preclinical studies suggest that peripheral CB2 receptors may play a protective role in thepathology of multiple sclerosis (MS). CB2 appears to mediate myeloid progenitor cell trafficking toward the inflamed spinal cord and its contribution to microglial activation and administration of CB2 agonists to an animal model of MS reduced disease severity. This supports the potential use of non-psychoactive CB2 agonists in the treatment of MS and other neuroinflammatory disorders."},{"term":"Cathepsin S","value":"A cysteine protease (EC 3.4.22.27) involved in the regulation of intracellular trafficking of MHC class II molecules (i.e., regulates degradation of the invariant chain [li] of class II-Ii complexes) to the cell surface in antigen presenting cells therefore affecting immune responses. Inhibitors of this enzyme are potentially useful in the treatment of several inflammatory diseases such as asthma, COPD, emphysema, chronic bronchitis and ARDS. The enzyme has also been found to be localized at sites of vascular matrix remodeling. Cytokine-stimulated vascular intimal smooth muscle cells and macrophages that have migrated into and accumulated within developing intimal plaques can use this enzyme to degrade extracellular elastin. This suggests that cathepsin S plays a role in vessel wall remodeling and may be a potential therapeutic target for regulating plaque stability in atherosclerosis. It is also a potential target for the treatment of COPD."},{"term":"CCR2","value":"See Chemokine (C-C motif) receptor 2 (CCR2)"},{"term":"CD System","value":"Organization of cell surface molecules (markers) that are unique to different subsets of lymphocytes and other cell types (i.e., Natural Killer [NK] cells, monocyte/macrophages, granulocytes, follicular dendritic cells [DCs], thymocytes, interdigitating DCs, endothelium, epithelium). CD markers, of which more than 200 have been identified, are found on the cell surface and can be specific for a population of cells, stage of differentiation or activation. For example, CD2 and CD3 are markers for T cells; CD4 and CD8 are markers for T cell subsets; CD25 is a marker for activated T cells; and CD19 and CD20 are markers for B cells. Accurate identification of a cell population is often achieved by assessing the expression of several, rather than one, CD molecule."},{"term":"CD3 (T Cell Receptor Complex)","value":"The CD3 antigen is a protein complex composed of four distinct chains: CD3gamma chain, CD3delta chain and two CD3epsilon chains. These chains are highly homologous cell surface proteins that are members of the immunoglobulin superfamily and contain a single extracellular immunoglobulin domain. The transmembrane region of these CD3 chains is negatively charged allowing them to associate with the positively charged T cell antigen receptor (TCR) chains (TCRalpha and TCRbeta). The intracellular tails of the CD3 chains contain a single conserved motif known as an immunoreceptor tyrosine-based activation motif (ITAM) which is essential for the signaling capacity of the TCR. Association of the CD3 chains with TCR and the zeta-chain (accessory molecules of TCR) generates an activation signal in T lymphocytes. Thus, the TCR complex is composed of the TCR, zeta-chain and CD3 molecules. CD3+ T cells are increased in patients with Crohn's disease. Therefore modulation of the CD3 complex on T cells may be beneficial in the treatment of the disease."},{"term":"CD36","value":"A scavenger membrane adhesion receptor that is expressed on platelets, monocytes and endothelial cells and is involved in platelet adhesion and in the recognition and phagocytosis of apoptosed cells. It is also known as GPIIIb. CD36 has been implicated in the pathogenesis of atherosclerosis. It is found on endothelial cells in the arterial cell wall that eventually take up excess LDL and become foam cells. CD36 recognizes modified forms of LDL. Antagonism of CD36 may prevent macrophages in blood vessel walls from taking up LDL cholesterol and therefore may be effective strategy in treating atherosclerosis. See also Adhesion Molecules and CD System."},{"term":"CD4","value":"CD4 (cluster of differentiation 4) is a transmembrane glycoprotein and member of the immunoglobulin (Ig) superfamily of receptors that is expressed on the surface of T helper (Th) cells, regulatory T cells, monocytes, macrophages and dendritic cells. It is a coreceptorthat together with the T cell receptor (TCR) activates the T cell following interaction with MHC class II molecules present on the surface of antigen presenting cells. CD4 amplifies the signal generated by the TCR by recruiting the tyrosine kinase lck. It has four Ig domains (D1-D4) exposed on the extracellular surface of the cell and uses the D1 domain to interact with the beta2-domain of MHC class II molecules. T cells expressing CD4 molecules (not CD8) on their surface are MHC class II-restricted, specific for antigens presented by MHC II and not by MHC class I. CD4 is a primary receptor used by HIV-1 to gain entry into host T cells. In multiple sclerosis (MS), myelin antigen-specific CD4+ T cells become activated in the peripheral immune compartment and cross the blood-brain barrier to trigger the disease. Commitment of T cells to proinflammatory effector T helper cell lineages (e.g., IL-17-producing CD4+ T cells or Th17 cells) appears to be an important inducer of organ-specific autoimmunity and studies suggest that Th17 cells are the dominant pathogenic cellular component in MS and other autoimmune inflammatory diseases. Decreasing myelin-specific CD4+ T cell responses with an anti-CD4 antibody, for example, could reduce demyelination and decrease immune cell infiltration into the CNS and thus, reduce subsequent initiation and progression of the autoimmune response. See also CD4+ T Cells"},{"term":"CD4+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta; TCR-2) and the CD4 marker. The TCR recognizes the antigen associated with major histocompatibility complex (MHC) on the surface of the antigen presenting cell (APC), while the CD4 molecule recognizes the class II MHC molecule only. Therefore, CD4 determines that a given T cell be class II- rather than class I-restricted. CD4 also contributes to T cell activation by providing biochemical signals to the T cell at the time of antigen presentation. CD4+ cells can be subdivided into Th0, Th1, Th2 or Th3 populations, depending upon the cytokine profile they secrete. CD4+ cells have been implicated in the development and progression of rheumatoid arthritis. See also CD4"},{"term":"CD8+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta dimer; TCR-2) and the CD8 marker. The TCR recognizes the antigen associated to MHC molecules on the surface of the antigen presenting cell (APC), while the CD8 molecule recognizes the class I molecule only. Therefore, CD8 determines that a given T cell be class I- rather than class II-restricted. The CD8 marker is predominately expressed on cytotoxic lymphocytes (CTLs) capable of killing cellular targets by secreting cytotoxic cytokines and perforins."},{"term":"cDNA","value":"See Complementary DNA (cDNA)\r\n"},{"term":"Central Nervous System (CNS)","value":"The portion of the nervous system encompassing the brain and spinal cord."},{"term":"Chemokine (C-C motif) receptor 2 (CCR2)","value":"CCR2 is a 7-transmembrane, GPCR expressed on monocytes and mast cells as well as B cells, T cells, megakaryocytes, basophils, eosinophils, fibroblasts, astrocytes, dendritic cells, chondrocytes, colonocytes, endothelial cells, enterocytes, Langerhans cells, epithelium cells, smooth muscle cells and synoviocytes. Two isoforms have been identified (CCR2A and CCR2B) which bind monocyte chemoattractant protein-1 (MCP-1); agonist-induced activation of the receptors results in calcium mobilization and inhibition of adenylyl cyclase. MCP-1/CCR2 interactions are responsible for mediation of monocyte recruitment to sites of inflammation such as that seen in MS. Antagonism of the receptor may be effective for the treatment of rheumatoid arthritis and multiple sclerosis. "},{"term":"Chemokine CXCR2 Receptor","value":"See Interleukin 8 (IL-8) beta Receptor"},{"term":"Chemokines","value":"A large group of small polypeptide cytokines (e.g., IL-8, PF4, MCP-1, MIP-1alpha, RANTES) with proinflammatory activities synthesized by several cell types (e.g., monocytes, macrophages, T cells, mast cells, fibroblasts, endothelial cells, platelets, epithelium, microglial cells, keratinocytes). These molecules display a certain degree of selectivity for various immune cell types and are involved in activation of leukocytes during transendothelial migration and chemotaxis in tissues. The chemokine family is composed of two main subgroups: CC chemokines which contain two adjacent cysteine residues and CXC chemokines in which the two cysteine residues are separated by another amino acid. CXC chemokines are further subdivided into ELR+ or ELR- chemokines, where ELR indicates the amino acids (Glu-Leu-Arg) preceding the first cysteine residue. ELR+ chemokines are chemotactic for neutrophils and ELR- chemokines are chemotactic for lymphocytes."},{"term":"Chlamydia","value":"A genus of prokaryotes that replicate in cytoplasmic vacuoles within susceptible eukaryotic cells. <I>Chlamydia trachomatis</I> causes trachoma in man. Other species of <I>Chlamydia</I> can cause a variety of infections including urethritis, epididymitis and proctitis in men, cervicitis, salpingitis and acute urethral syndrome in women and conjunctivitis and pneumonia in newborn infants."},{"term":"Chlamydia pneumoniae","value":"A bacteria belonging to the Chlamydiaceae family that causes pneumonia and diseases of the upper and lower respiratory tract (e.g., pharyngitis, bronchitis and pneumonia). It has recently been associated with coronary heart disease and Alzheimer's disease (AD).  The bacterium was detected in AD brains and related to tau-associated neurofibrillary pathology. Persistent Chlamydia pneumoniae infections are thought to instigate or complicate the inflammatory response leading to atherosclerosis and/or angina pectoris."},{"term":"Cholesterol","value":"Cholesterol (5-cholesten-3beta-ol) is the most abundant steroid in mammals. It is a precursor for other steroid hormones (e.g., estrogens, androgens, progestins). Excessively high serum cholesterol levels are involved in the pathogenesis of atheroma formation in arteries and increase the risk of heart disease."},{"term":"Cholesterol Ester Transfer Protein (CETP)","value":"A protein involved in HDL metabolism that regulates the exchange of cholesterol and triglycerides between plasma lipoproteins (i.e., transfer of cholesteryl ester from HDL). The result  is uptake of cholesterol by hepatocytes via receptor-mediated endocytosis. CETP promotes the atherogenicity of VLDL and LDL by increasing their cholesteryl ester content. CETP may be proatherogenic in individuals with hypercholesterolemia or combined hyperlipidemia and antiatherogenic in individuals with hypertriglyceridemia or hyperalpha- and  hypobetalipoproteinemia. Inhibitors of CETP may be effective in enhancing the beneficial activity of HDL."},{"term":"Choline","value":"(2-Hydroxyethyl)-trimethylammonium ion found in most tissues alone or in combination with lecithin (phosphatidylcholine), acetate (acetylcholine) or cytidine diphosphate (cytidine diphosphocholine). It is essential for synaptic transmission."},{"term":"Choline O-Acetyltransferase (ChAT)","value":"An enzyme (EC 2.3.1.6) responsible for the production of acetylcholine that is reduced in the brains of patients with Alzheimer's disease."},{"term":"Cholinergic","value":"Refers to nerve cells or fibers that use acetylcholine as a neurotransmitter."},{"term":"Cholinesterase","value":"See Acetylcholinesterase."},{"term":"Chronic","value":"A term referring to a health-related state or exposure that signifies prolonged (long-term) duration. In some instances, it can indicate low intensity."},{"term":"Chylomicrons","value":"A class of lipoproteins that transport dietary cholesterol and triglycerides from the small intestine to tissues after meals. They are synthesized in the intestinal mucosa and transported to the blood stream by the intestinal lacteals and lymphatic system. Chylomicrons are degraded to chylomicron remnants in the capillaries of muscle and adipose tissue through endothelial lipoprotein lipase-mediated cleavage of most of their triglycerides; the remnants are then rapidly cleared by the liver via receptor-mediated endocytosis."},{"term":"Chymase","value":"A chymotrypsin-like serine protease that is one of several granule-associated proteases (e.g., tryptase, peroxidase, arylsulfatase B) released from mast cells during an immunological response. It stimulates bronchial mucus secretion and is also capable of degrading vasoactive intestinal peptide (VIP), a mediator of bronchial relaxation. It may also be involved in the localized production of angiotensin II and in tissue remodeling of the cardiovascular system. Because chymase is localized in mast cells, it is thought to be play a role in chronic inflammatory disorders such as arthritis. Chymase inhibitors may be effective as a treatment or in the prevention of atherosclerosis and atopic dermatitis."},{"term":"Complement System","value":"A group of serum molecules that mediate inflammation and opsonization of antigens and microorganisms in addition to controlling lysis of pathogens or cells sensitized with antibody. These serum molecules may be activated via the classical pathway involving activation by immune complexes binding to C1q subcomponent of C1, which has six Fc binding sites, or by an alternative pathway that can involve activation in the presence of suitable surface molecules, such as microbial products. Complement components interact with each other, so that a small stimulus can result in a cascade of activity."},{"term":"Complementary DNA (cDNA)","value":"Deoxyribonucleic Acid (DNA) synthesized a mature (i.e., fully spliced) mRNA template in a reaction catalyzed by reverse transcriptase (RT). RT acts on a single strand of mRNA yielding a sequence of DNA that complements the mRNA template; this strand of DNA is cDNA and can be used to clone eukaryotic genes in prokaryotes. RT generates its cDNA based on the pairing of RNA base pairs (A, U, G and C) to their DNA complements (T, A, C and G respectively).\r\n"},{"term":"Computerized Axial Tomography (CT or CAT Scan)","value":"See Tomography"},{"term":"Connective Tissue","value":"The supporting framework of tissues of the body. It is fibrous and composed of ground substance with numerous cell types present. Types of connective tissue include: areolar or loose; adipose; dense, regular or irregular; white fibrous; elastic; and mucous. Lymphoid tissue, cartilage and bone are also considered connective tissue, in addition to blood and lymph, which have a liquid ground substance."},{"term":"Consolidation","value":"The solidification into a firm dense mass as in inflammatory induration of a normally aerated lung due to the presence of cellular exudate in the pulmonary alveoli.\r\n"},{"term":"Constipation","value":"A reduction in the frequency or ease of stool passage. Symptoms and features of constipation include infrequent bowel movements, hard stools, straining, incomplete evacuation, bloating and abdominal discomfort. The condition may be acute or chronic, as well as primary or secondary in nature. Chronic constipation is a functional bowel disorder characterized by neural dysfunction leading to altered motility and abnormal visceral perception. It is not caused by structural changes or neurochemical abnormalities. \r\n"},{"term":"Coronary Artery Disease (CAD)","value":"The condition also known as atherosclerosis in which the coronary arteries become narrowed or completely occluded due to plaque deposits. It is underlying cause of a heart attack."},{"term":"Creatine Kinase","value":"A dimeric enzyme (82 kD; EC 2.7.3.2) that catalyzes the formation of ATP from ADP and creatine phosphate in muscle."},{"term":"Crossover Trial","value":"A clinical study in which subjects receive two or more drugs separated by drug-free periods."},{"term":"Cyclooxygenase (COX)","value":"An enzyme also known as prostaglandin endoperoxide synthase (EC 1.14.99.1) that catalyzes the two steps in prostaglandin (PG) synthesis forming PG2 and PGH2 from arachidonic acid. The two major forms of the enzyme are COX-1 and COX-2. COX-1 is constitutive and present in endothelium, stomach and kidney. It is involved in maintenance of platelet and kidney function and considered a housekeeper enzyme, maintaining homeostasis. COX-2 is not present at baseline but is inducible during inflammation by cytokines and endotoxins. It has been shown to play a role in propagation of inflammatory cascades leading to disorders such as Alzheimer's disease, rheumatoid arthritis and osteoarthritis, cancer, kidney disease and osteoporosis.  Recently, COX-3, a distinct COX-1 variant,  and two smaller COX-1-derived proteins (partial COX-1 or PCOX-1 proteins) have been cloned and found to be expressed in canine cerebral cortex and in other tissues; COX-3 was predominantly expressed in canine cerebral cortex and heart. Canine COX-3 was shown to be selectively inhibited by NSAIDs and therefore COX-3 may be involved in pain and fever."},{"term":"Cytochrome P450 Enzymes","value":"Key multifunctional isoenzymes (monooxygenases) that are involved in many physiological systems such as steroid hydroxylation in the adrenal cortex and liver and hepatic detoxification of foreign substances. They are also responsible for the biotransformation of many foreign compounds to mutagens and carcinogens."},{"term":"Cytokines","value":"Soluble proteins produced by one of several cell types (i.e., T cells, B cells, fibroblasts, macrophages, epithelial cells, astrocytes, endothelium, monocytes) that are involved in signaling between cells of the immune system. Cytokines include interleukins, tumor necrosis factors (TNFs) and colony-stimulating factors (CSFs)."},{"term":"Cytomegalovirus (CMV)","value":"A member of the group of large herpes-like viruses belonging to the Herpesviridae group, subfamily Betaherpesvirinae. The virus is named for the enlarged inclusion body-bearing cells that occur with infection. Infection with this virus is extremely common and 80% of all healthy adults bear antibodies to the virus (i.e., CMV IgG positive). Infection with CMV can induce an immune-deficient state or acute illness (e.g., pneumonia) in those individual with underlying immune deficiency due to chronic illness."}]},{"letter":"D","Terms":[{"term":"DALYs","value":"Acronym for \"Disability Adjusted Life Years\" which is the sum of years of life lost due to premature death and the years lost due to living with disability. DALYs are used to assess the magnitude of disease, health risks, and premature death. DALYs for a disease or health condition are calculated as the sum of the Years of Life Lost (YLL) due to premature mortality in the population and the Years Lost due to Disability (YLD) for people living with the health condition or its consequences. DALY = YLL + YLD.\r\n\r\n"},{"term":"Dendritic Cell (DC)","value":"An antigen presenting cell (APC) that recognizes and captures foreign antigens and then migrates to the lymph nodes and spleen, where it presents the processed antigens to T cells, thereby initiating specific T cell responses. DCs are important in the generation of antiviral responses since they produce IL-12, a crucial factor in the development of Th1 and cytotoxic responses. In addition, DCs orchestrate these responses by virtue of their simultaneous expression of both class II and class I MHC molecules, which enables activation of both virus-specific CD4+ T cells and CTLs. Interdigitating cells are DCs located in lymph nodes in areas where T cells are present. In contrast to other APCs, these DCs can provide a full activation stimulus to virgin CD4+ T cells. Follicular DCs are closely surrounded by lymphocytes in the spleen and lymph node follicles and present antigen predominantly to B cells."},{"term":"Deoxyribonucleic Acid (DNA)","value":"A nucleic acid which contains deoxyribose as the sugar component loosely bound to protein. It stores the hereditary information required for cell growth and reproduction. It is a linear macromolecular chain of deoxyribose molecules esterified with phosphate groups between 3' and 5' hydroxyl groups. Purines (i.e., adenosine [A] and guanine [G]) and pyrimidines (cytosine [C] and thymine [T]) are linked to this structure. DNA is found in the nuclei (chromatin, chromosomes) and mitochondria of organisms. DNA is the autoreproducing component of viruses and contains all hereditary information. It may be open-ended or circular (e.g., mitochondrial DNA) and single- or double-stranded (e.g., chromosomes)."},{"term":"Diabetes Mellitus","value":"A group of metabolic diseases characterized by chronic hyperglycemia with disturbances in carbohydrate, fat and protein metabolism resulting from defects in insulin secretion, insulin action or both. See also Diabetes Mellitus, Type 1 and Diabetes Mellitus, Type 2"},{"term":"Diacylglycerol (DAG)","value":"A glycerol substituted on the 1 and 2 hydroxyl groups with long chain fatty acyl residues. It is a normal intermediate in the biosynthesis of phosphatidyl phospholipids and is released by phospholipase C (PLC). DAG is involved in signal transduction. Increased DAG levels in membranes activate protein kinase C (PKC). The high levels of glucose seen in diabetes increase the synthesis of DAG and PKC in vascular tissue. This can result in structural and functional abnormalities including changes in vascular permeability and gene expression in the retina (i.e., retinopathy) and kidney (i.e., nephropathy)."},{"term":"Diarrhea","value":"A symptom characterized by loose or unformed stools, frequently accompanied by other gastrointestinal symptoms. It is nearly always a symptom of another disease or condition, rather than a disease in its own right. It is considered acute when it lasts for less than 4 weeks (typically associated with a bacterial or viral infection) and chronic when it persists for more than four weeks. Diarrhea is broadly classified as secretory, osmotic or exudative. Secretory diarrhea is caused by an increase in active secretion or an inhibition of absorption. Osmotic diarrhea occurs when too much water is drawn into the bowels. This can be the result of maldigestion (e.g., pancreatic disease or celiac disease), in which the nutrients are left in the lumen to pull in water, lactose or fructose intolerance, or use of osmotic laxatives, among other causes. Exudative diarrhea is characterized by the presence of blood and/or pus in the stool. This typically occurs with inflammatory bowel disease (Crohn's disease or ulcerative colitis) and severe infections.\r\n"},{"term":"Diastolic Blood Pressure (DBP)","value":"The pressure exerted on the walls of the arteries when the heart is in the relaxation phase (diastole). It is considered abnormally elevated if values are consistently over 90 mmHg."},{"term":"DNA","value":"See Deoxyribonucleic Acid (DNA)"},{"term":"Double-Blind","value":"A research testing method characteristic of a controlled experiment/trial in which neither the participants nor the person administering the treatment know which treatment any particular subject is receiving. Usually the comparison is between an experimental drug and a placebo or a standard comparison agent."},{"term":"Double-Dummy","value":"A research testing method in which patients in all treatment groups receive medication of the same appearance, one of which is inactive (placebo) and the other active. For example, all patients would receive a topical cream and capsules. Those receiving the active cream received dummy capsules and vice versa."},{"term":"Downstream","value":"Segments of nucleotide sequences of DNA or RNA that are remote from the initiation sites (i.e., codons) and are transcribed or translated later. It is also used to decribe events that occur late within sequential reactions. See also Upstream"},{"term":"Dyslipidemia","value":"The presence of abnormally high levels of lipoproteins in the blood. Dyslipidemia is classified into the following different types based on electrophoretic analysis of serum: Type I (elevations in chylomicrons and triglycerides due a deficiency in lipoprotein lipase or apo C-II); Type IIA (elevations in LDL cholesterol only due to genetic causes); Type IIB (elevations in both LDL cholesterol and triglycerides due to genetic causes); Type III (elevations in cholesterol and triglycerides due to a defect in VLDL remnant clearance); Type IV (elevated triglycerides due to multiple-genetic causes, diabetes, nephrosis or medications); and Type V (elevations in chylomicrons and triglycerides due to defective lipolysis and overproduction of VLDL)."}]},{"letter":"E","Terms":[{"term":"E-Selectin","value":"A cellular adhesion molecule (CAM) and CD antigen (CD62E) expressed only on endothelial cells and activated by cytokines. It plays a crucial role in inflammation mediating leukocyte recruitment to the sites of injury or, more specifically, neutrophil, monocyte and memory T cell adhesion to cytokine-activated endothelial cells. E-selectin recognizes sialylated carbohydrate groups present on the surface proteins of certain leukocytes; these carbohydrates include members of the Lewis X or Lewis A family expressed monocytes, granulocytes and T lymphocytes. Neutrophilic inflammation is a pathogenic feature of COPD and inhibition of  E-selectin may an effective therapy for the treatment of this airway disease. E-selectin may play a role in the pathophysiology of stroke."},{"term":"Effectiveness","value":"The therapeutic effect of an intervention as demonstrated or observed in the real-world setting. See also Efficacy"},{"term":"Efficacy","value":"The therapeutic effect of an intervention as demonstrated or observed in a controlled setting, such as a clinical trial. See also Effectiveness"},{"term":"Electrocardiogram (ECG)","value":"A recording of the electrical activity produced by the heart over time. It is a noninvasive procedure that uses skin electrodes. See also P Wave; QRS Complex; QT Interval, ST Segment; T Wave"},{"term":"Emesis","value":"Emesis is the complex reflex consisting of ejecting the contents of the stomach through the mouth. Also known as vomiting, this reflex can be triggered by various endogenous or exogenous factors."},{"term":"Endocrine","value":"A term referring to internal, ductless, secretion (i.e., into the systemic circulation) or to the glands or the hormones which secrete or are secreted, respectively, in this manner."},{"term":"Endocytosis","value":"A general term for an active mechanism by which cells internalize extracellular substances. This process involves the reorganization of plasma membrane-associated proteins which results in the formation of an endocytic vesicle in the cell cytoplasm. There are two forms of endocytosis: the fluid phase or pinocytosis, which involves engulfing liquids; and the receptor-mediated phase. In some cell types, soluble antigen may be captured in small cell membrane-derived vesicles by pinocytosis, which does not involve recognition of the antigen by a receptor. In others cell types such as B cells, endocytosis is triggered following antigen binding to a surface Ig. Endocytosis of large particulate antigens such as bacteria is usually referred to as phagocytosis and occurs mainly in macrophages."},{"term":"Endogenous","value":"Originating from within an organism, tissue or cell. "},{"term":"Endothelin Receptors","value":"Endothelins exert their biological effects through activation of two families of G-protein-coupled receptors: ETA and ETB. ETA receptors have strong affinity for endothelin-1 and ETB receptors have affinity for all three endothelin isoforms (ET-1, ET-2 and ET-3)."},{"term":"Endothelin-1 (ET-1)","value":"A vasoactive peptide (21 amino acids) produced by endothelial and inflammatory cells in pulmonary and systemic circulations. It is produced by the action of endothelin-converting enzyme (ECE) which converts big ET-1 to ET-1. Once released, ET-1 may bind to either type A receptors (ETA receptor), located mainly on vascular smooth muscle cells or type B receptors (ETB receptor), found on endothelial cells. ETA receptors are usually considered mediators of vasoconstriction, while ETB receptors lead to vasodilatation through the release of NO."},{"term":"Endothelins","value":"A family of potent 21-amino acid vasoactive peptides found in at least three distinct isoforms: endothelin-1 (ET-1), endothelin-2 (ET-2) and endothelin-3 (ET-3). A fourth form, ET-4, has recently been described."},{"term":"Endothelium","value":"A layer of flat squamous cells lining blood and lymphatic vessels and other structures such as the heart and posterior surface of the cornea."},{"term":"Enzyme-Linked Immunosorbent Assay (ELISA)","value":"A laboratory test used to detect antibodies or antigens. It is similar to an radioimmunoassay (RIA) except that it substitutes an enzyme for the radioactive isotope. In this assay, the antigen is absorbed to a solid phase followed by addition of the test antibody. The test antibody is later detected using enzyme-labeled protein G (binds IgG) and colorimetry. ELISAs are also used to measure other low- to high-molecular-weight compounds (e.g., peptides, steroids, prostaglandins, enzymes, etc.) from tissue or plasma extracts."},{"term":"Estrogen","value":"A general term used to refer to any naturally occurring or synthetic substance that has activity (i.e., estrogenic) similar to those of the most potent naturally occurring estrogen, 17beta-estradiol. Estrogens are produced by the ovary, testis, placenta, adrenal cortex and by certain plants. Actions of these agents include stimulation of secondary sex characteristics, growth and maturation of long bones and control of the menstrual cycle. They are used clinically as replacement therapies for menstrual disorders and menopausal symptoms."},{"term":"Etiology","value":"The cause or origin of a disease."},{"term":"Exacerbation","value":"An increase in the severity of a disease or in any of its symptoms."},{"term":"Exogenous","value":"Originating from outside an organism, tissue or cell."},{"term":"Exon","value":"A sequence of DNA that encodes information for protein synthesis that is transcribed to messenger RNA.\r\n"}]},{"letter":"F","Terms":[{"term":"Familial","value":"An inherited disorder or trait."},{"term":"Farnesoid X Receptor (FXR)","value":"An orphan nuclear hormone receptor that suppresses expression of cholesterol 7-hydrolase thus decreasing bile acid synthesis and cholesterol absorption. It has been identified as a target for cholesterol-lowering compounds. These receptors along with liver X receptors (LXRs) are heterodimeric partners with the retinoid X receptor (RXR). FXR antagonists may be effective in preventing and treating atherosclerosis."},{"term":"Fat","value":"A greasy soft-solid substance composed of glycerolesters found in animal tissues and plants. Also known as adipose tissue. See also Adipose Tissue"},{"term":"Fibrin","value":"An insoluble protein formed from fibrinogen by the proteolytic action of thrombin during normal clotting of blood. The major portion of the blood clot is composed of fibrin."},{"term":"Fibrinogen","value":"A soluble plasma protein (340 kD) composed of six peptide chains. Normal plasma levels are approximately 2-3 mg/ml."},{"term":"Fibroblast","value":"A spindle-shaped cell with cytoplasmic processes that is present in connective tissue and forms collagen fibers."},{"term":"Foam Cells","value":"Lipid-loaded macrophages originating from monocytes or smooth muscle cells."},{"term":"Folic Acid","value":"A general term referring to pteroylglutamic acids and their oligoglutamic acid conjugates. Pteroylmonoglutamic acid (N-[p-[[(2-amino-4-hydroxypteridin-6-yl)methyl]amino]benzoyl]-L(+)glutamic acid) is a member of the vitamin B complex and is required for normal production of red blood cells. It is found in liver, green vegetables and yeast. Deficiencies in folic acid can trigger epileptic seizure in some individuals. See also Vitamin B"},{"term":"Free Radical","value":"A chemically active atom or molecular fragment which contains a charge due to an excess or deficient number of electrons. These highly reactive atoms or fragments receive or release electrons to achieve a more stable configuration. This process can damage large molecules within cells. Free radicals have been implicated in more than 50 diseases including stroke, asthma, cancer, Crohn's disease and Parkinson's disease."}]},{"letter":"G","Terms":[{"term":"G-Protein","value":"One of several mediators of activated cell surface receptors and their enzymes and ion channels. They are responsible for the signal transduction pathways which alter the concentration of intracellular second messengers (e.g.,  cAMP, cGMP, Ca2+). These second messengers in turn regulate the behavior of other intracellular target proteins, leading to the desired cellular response."},{"term":"G-Protein-Coupled Receptor","value":"Cell surface receptors that are coupled to G proteins (i.e., GTP binding protein). They have seven membrane spanning domains and have been divided into two subclasses: those in which the binding site is in the extracellular domain (e.g., receptors for glycoprotein hormones such as TSH and FSH) and those in which the ligand binding site is in the plane of the seven transmembrane domains (e.g., rhodopsin, receptors for small neurotransmitters and hormones such as the muscarinic acetylcholine receptor). Also called 7TM receptors."},{"term":"Gangrene","value":"Death of a large area of tissue generally associated with loss of vascular supply and followed by bacterial invasion and putrefaction."},{"term":"Gene Therapy","value":"Treatment of pathophysiologic states based on the transfer of genetic material, including complementary DNA (cDNA), full-length genes, RNA or oligonucleotides."},{"term":"Genome","value":"The entire collection of genes and other functional and nonfunctional DNA sequences in the nucleus of an organism. It includes those genes that encode mRNAs, rRNAs, tRNAs and sn/scRNA and the functional sequences that occur as regulatory elements or as sites where replication begins. Much of the nonfunctional DNA consists of sequence elements repeated thousands or millions of times. Arrangement of functional and nonfunctional DNA within the genome is not fixed and existing sequences may be internally rearranged, moving from one location to another."},{"term":"Genotype","value":"The genetic constitution of an organism or cell."},{"term":"Glucose","value":"A simple monosaccharide found in the blood that is derived from transport or glycogenolysis; it is the body's main source of energy."},{"term":"Growth Factors","value":"Protein substances involved in cell differentiation and growth. They mediate fetal development, are involved in maintenance and repair of tissues, stimulate blood cell production and are also involved in cancer growth. Examples include epidermal growth factor (EGF), insulin-like growth factors (IGFs), nerve growth factor (NGF), platelet-derived growth factor (PDGF) and transforming growth factor alpha and beta (TGF-alpha, TGF-beta)."}]},{"letter":"H","Terms":[{"term":"Half-life","value":"The time required for one-half of an amount of a substance to be lost through biological processes."},{"term":"Heart Failure","value":"A clinical syndrome characterized by an abnormality of cardiac function that results in the progressive inability of the heart to pump enough blood. Symptoms of heart failure include dyspnea and exercise intolerance (the most characteristic symptoms), as well as fatigue (very common) and fluid retention. See also Heart Failure, Systolic and Heart Failure, Diastolic"},{"term":"Helicobacter","value":"A genus of Gram-negative, spiral-shaped pathogenic bacteria isolated from the intestinal tract of humans and mammals."},{"term":"Helicobacter pylori","value":"An S-shaped or curved Gram-negative, non-spore forming bacteria that can be flagellate. When present on the gastric epithelium under the mucus layer of the stomach and duodenum, it is responsible for development of some gastric ulcers, gastric inflammation (chronic gastritis) and gastric cancer. Persistent Helicobacter pylori infections are thought to instigate or complicate the inflammatory response leading to atherosclerosis and are positively associated with the risk of ischemic stroke."},{"term":"Hepatitis","value":"An inflammatory liver disease. See also Hepatitis A, Hepatitis B, Hepatitis C, Hepatitis E and Hepatitis D."},{"term":"Hepatocyte","value":"Parenchymal liver cell."},{"term":"Herpes Simplex Virus (HSV)","value":"Viruses belonging to the family Herpesviridae that cause a variety of infections. HSV type 1 infections are generally characterized by eruptions of one or more vesicles on the lips or external nares while HSV type 2-induced eruptions commonly occur on the genitalia. Both types are recrudescent. HSV type 6 is found in some lymphoproliferative disorders but is also highly prevalent in individuals suffering from Alzheimer's disease."},{"term":"High-Density Lipoprotein (HDL)","value":"A lipoprotein that removes cholesterol from the bloodstream by transporting it away from tissues to the liver. Approximately 25-33% of blood cholesterol is transported by HDL. It is thought to have a protective effect on the heart and vasculature since elevated HDL levels have been associated with a lower risk for heart disease. While HDL levels less than 35 mg/dl are considered a positive risk factor for coronary artery disease, levels above 60 mg/dl are considered a negative risk factor."},{"term":"Histamine","value":"A vasoactive amine involved in immune and inflammatory responses that is derived from histidine and stored in mast cell granules. It acts via 4 G-protein-coupled receptors (H1, H2, H3, H4) and has been shown to stimulate gastric secretion and constrict bronchial smooth muscle. It also acts as a vasodilator of capillaries and arterioles, causing a reduction in blood pressure and may mediate signal transduction of painful stimuli (e.g., tissue damage) and cognition. Histamine dihydrochloride has shown antitumor efficacy and may be a potential treatment for hepatitis C."},{"term":"Histamine Receptors","value":"There are four identified histamine receptor subtypes (H1, H2, H3 and H4) which are all G-protein-coupled receptors. H1 signals through coupling to Gq and consequently activates phospholipase C, inositol phosphate and calcium mobilization. H2 activates Galphas resulting in an increase in cAMP formation. H3 receptors couple to Galphai/o proteins resulting in inhibition of cAMP formation and consequent enhancement of calcium mobilization and activation of MAPKs and ion channels. H4 appears to couple mainly with PTX-sensitive Galphai/o proteins in primary cells which increases intracellular calcium. However, in transfected cells, H4 has been shown to inhibit cAMP formation and activate MAPKs and the transcription factor AP-1. H1 receptors are expressed on several cells types (e.g., endothelial cells, smooth muscle cells) where they mediate vasodilation, bronchoconstriction and possibly sleep-wake cycles. H1 antagonists have been shown to be effective for the treatment of many inflammatory responses. H2 receptors are also expressed on several cell types and one of their primary functions is to stimulate gastric acid release; antagonists of this subtype may be effective in the treatment of gastric acid disorders. The H3 receptor is expressed primarily in the nervous system and can act as a presynaptic autoreceptor and control histamine turnover or as a heteroreceptor in dopamine-, serotonin-, norepinephrine-, GABA- and ACh-containing neurons. Activation of H3 depresses adrenergic neurotransmission in the mesenteric artery and attenuates spinal cord- or medulla oblongata-stimulated pressor and tachycardic responses. H3 modulation may be effective in the treatment of narcolepsy. H3 receptors may also play a role in memory formation and pharmacological blockage of central H3 receptors has been shown to enhance cognition suggesting a potential efficacy for these agents in the treatment of cognitive dysfunction in Alzheimer's disease (AD). Agents targeting H4 have little affinity for the H1 and H2 and expression of the H4 receptors is generally limited to cells of hematopoietic origin (e.g., dendritic cells, mast cells, eosinophils, monocytes, basophils and T cells). H4 is implicated in chemotaxis of these cells and may be involved in immune and inflammatory responses."},{"term":"HIV","value":"See Human Immunodeficiency Virus (HIV)"},{"term":"HMG-CoA Reductase","value":"A key enzyme (hydroxymethylglutaryl-CoA reductase; 3-hydroxy-3-methylglutaryl-coenzyme A reductase; EC 1.1.1.88) that catalyzes the rate-limiting step in the biosynthetic pathway leading from mevalonate to cholesterol and isoprenoids such as farnesyl pyrophosphate and geranylgeranyl pyrophosphate which plays a role in protein prenylation, a curcial step in multiple cellular processes. Protein prenylation (i.e., farnesylation and geranylgeranylation) is a posttranslational modification of proteins involving the addition of isoprenoids. Geranylgeranylation allows the activation of small GTP-binding proteins Rho and Rac. Activated Rho regulates the activity of nuclear transcription factors such as NF-kappaB, controls the actin cytoskeleton and induces stress fiber formation. This affects intracellular transport, migration, membrane trafficking, messenger RNA stability and gene transcription. Farnesylation allows the activation of Ras protein. Activated Ras stimulates cytoplasmic signaling pathways such as the mitogen-activated protein kinase (MAPK) pathway that regulates gene transcription and thus growth, proliferation, differentiation and survival of cells. Because of these important cell processes bound to the mevalonate pathway, HMG-CoA reductase is an important target in the treatment of many types of cancer. There is evidence that tangle-bearing cells in Alzheimer's disease (AD) have high levels of free cholesterol as compared to adjacent tangle-free nerve cells. In addition, cellular cholesterol homeostasis has been shown to be involved in several pathological events occurring in the brain of patients with AD. Studies have demonstrated that processing of the APP and tau phosphorylation can be modulated by pronounced alterations in cellular cholesterol levels. Moreover, studies have shown that statins which inhibit HMG-CoA reductase are effective in experimental autoimmune encephalomyelitis (EAE), a preclinical of multiple sclerosis (MS) model, and are promising candidates for future MS medication. Inhibition of this enzyme offers neuroprotection and decreases disease severity via attenuation of inflammation, axonal loss and demyelination. However, statins also exert pleiotropic effects which are independent of cholesterol lowering actions. These include effects on endothelial function, cell proliferation, inflammatory response, immunological reactions, platelet function and lipid oxidation which appear to be beneficial in the context of brain injury. The mechanisms of statin actions underlying the neuroprotective effects may statins may involve heat shock proteins (Hsps) and the survival-related PI-3K/Akt pathway."},{"term":"Hormone Replacement Therapy (HRT)","value":"In women, it is used to relieve and/or prevent the complications (e.g., hot flashes, osteoporosis, increased risk of heart disease) associated with menopause. HRT restores estrogen and progesterone in women entering or already experiencing menopause. Treatment may consist of treatment with estrogen alone (Estrogen Replacement Therapy or ERT; tablet, patch or gel form of pure estrogen, its derivatives or conjugated equine estrogen extracted from pregnant mare urine) or in combination with progestogen (a synthetic form of progesterone). HRT may also be an effective treatment of sexual dysfunction in women. Topical forms of ERT have been shown to improve clitoral sensitivity, increase libido, relieve vaginal dryness and atrophy and reduce pain associated with sexual activity. In addition, HRT including methyltestosterone may be effective against sexual dysfunction in postmenopausal individuals with abnormally low testosterone levels; treatment may improve sexual arousal, responsiveness and dyspareunia. Similarly in men, HRT consists of a testosterone gel and is indicated for individuals with primary hypogonadism or hypogonadotropic hypogonadism due to insufficient secretion of testosterone."},{"term":"Human Immunodeficiency Virus (HIV)","value":"A type of retrovirus first identified in 1983 that belongs to the Retroviridae family and genus lentivirus. HIV causes acquired immunodeficiency syndrome (AIDS) which involves a gradual deterioration of the immune system resulting in opportunistic infections and eventual death. The virus is spread via sexual contact with an infected individual, exposure to contaminated blood (i.e., shared needles/syringes, infusions) and during pregnancy, delivery and/or through breast milk. Two HIV strains have been identified: HIV-1 the retrovirus that causes AIDS and is found worldwide and HIV-2, a virus closely related to HIV-1 that is less virulent, most common in West Africa and also causes immune system suppression. The two viruses differ in protein composition. For example, HIV-2 contains an additional accessory protein Vpx while lacking others. See also AIDS (Acquired Immune Deficiency Syndrome)"},{"term":"Hyaline","value":"Refers to something that is clear, transparent, colorless and granule-free. Examples are hyaline cartilage and hyaline hyphae present in fungus such as Aspergillosis spp."},{"term":"Hypercholesterolemia","value":"A condition characterized by abnormally high cholesterol levels in the cells and plasma of circulating blood."},{"term":"Hyperlipidemia","value":"The presence of excess lipids in the blood.\r\n"},{"term":"Hypertension","value":"A condition characterized by high blood pressure. The cause of this disease is predominately multifactorial. It is referred to as essential or idiopathic hypertension when it is a primary disease and as secondary hypertension when it is caused by other diseases. See also Hypertension, Arterial and Hypertension, Pulmonary"},{"term":"Hypertension, Arterial","value":"A chronic condition in which blood pressure in the arteries is higher than normal. It is a significant risk factor for a variety of serious cardiovascular and renal conditions. See also Hypertension"},{"term":"Hypertensive","value":"A term referring to increased blood pressure or causing an increase in blood pressure."}]},{"letter":"I","Terms":[{"term":"ICAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. It is induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, and binds to integrins mediating adhesion and migration. ICAM-1 may be involved in the pathogenesis of rheumatoid arthritis since high levels of the molecule are found in the rheumatoid synovium."},{"term":"IkappaB Kinase beta (IKKbeta)","value":"A protein serine/threonine kinase (EC 2.7.11.10) that phosphorylates IkappaB, a cytoplasmic inhibitor, at specific residues, targeting it for proteasomal degradation via the ubiquitination pathway and allowing the nuclear translocation of IkappaB. Subsequent degradation of the IkappaB complex (IKK) activates nuclear factor kappaB (NF-kappaB), a translation factor that plays an important role in inflammation, immunity, cell proliferation and apoptosis. If the serine residues are replaced by threonine residues, the activity of the enzyme is decreased considerably. It is composed of alpha, beta and gamma subunits, the latter not having kinase activity but presumed to play a regulatory role. IKKbeta regulates several inflammatory genes such as TNF-alpha, interleukin (IL-1) and cell adhesion molecules and two proinflammatory mediators NF-kappaB and activator protein-1 (AP-1) appear to be activated in airway diseases and inflammatory disease such as MS. Inhibitors of IKKbeta block the NF-kappaB activation cascade thus attenuating inflammatory responses. IKKbeta inhibitors may be effective in the treatment of inflammatory airway diseases such as COPD, asthma and cystic fibrosis. IKKbeta is activated by TNF-alpha and hyperglycemia and its inhibition can reverse insulin resistance. Therefore, this mediator may be a new target for the development of insulin sensitizers and antidiabetic therapies. NF-kappaB is inhibited by binding to IkappaB and polymorphisms of the NFKB and NFKBI genes and an imbalance in NF-kappaB and IkappaB and has been associated with development of many inflammatory diseases, including MS, ulcerative colitis, Crohn's disease, rheumatoid arthritis, systemic lupus erythematosus, psoriatic arthritis, giant cell arthritis, type 1 diabetes, celiac disease, and Parkinson's disease, as well as susceptibility of several cancers."},{"term":"IkappaB Kinase Complex (IKK)","value":"A 900 kDa protein serine/threonine kinase composed of alpha, beta and gamma (IKKalpha, IKKbeta and IKKgamma) subunits that targets the IkappaB protein. IkappaB is the inhibitory of subunit of the transcription factor nuclear factor kappa B (NFkappaB). NFkappaB is activated via sequential phosphorylation, ubiquitination and degradation of IkappaB. IKK phosphorylates IkappaB thus allowing for subsequent proteasomal degradation, nuclear translocation and activation of NFkappaB. The IKKgamma does not appear to have kinase activity but rather plays a regulatory role. IKKalpha is a nuclear factor-inducing kinase (NIK) interacting protein. Direct interaction with NIK results in its phosphorylation and activation. IKKbeta is 50% identical to IKKalpha and contains a kinase domain. Both IKKalpha and IKKbeta can undergo homotypic interactions and can interact with each other. The catalytic activities of both IKKalpha and IKKbeta are essential for proper IkappaB phosphorylation and NF-kappaB activation. See also IkappaB Kinase beta (IKKbeta)"},{"term":"Immunization","value":"The means to produce a protective immune response in susceptible individuals by administration of a living modified agent (e.g., yellow fever vaccine), a suspension of killed organisms (e.g., pertussis vaccine) or an inactivated toxin (e.g., tetanus). Immunization can be passive or active."},{"term":"Immunization, Active","value":"The means by which antibody production or cell-mediated immunity is stimulated by giving the antigen in the form of a vaccine or through exposure to naturally occurring antigens such as bacteria, viruses or fungi."},{"term":"Immunogenic","value":"See Antigenic"},{"term":"Immunoglobulin (Ig)","value":"A subgroup of globulins that are classified as alpha, beta and gamma according to lipid or carbohydrate content and physiological function. Antibodies are Igs and all Igs may function as antibodies. Serum Igs belong to the gamma group and constitute a family of glycoproteins that bind antigens. Serum Igs can be precipitated from plasma or serum and can be normal or specific. Serum Igs are classified into 5 groups: IgG, IgD, IgE, IgA and IgM."},{"term":"Immunoglobulin A (IgA)","value":"Major class of immunoglobulins found in mammalian serum, body fluids (i.e., tears and saliva) and in the respiratory, reproductive, urinary and gastrointestinal tracts. It protects the body's mucosal surfaces from infection. It is present in human colostrum but cannot be transferred across the placenta."},{"term":"Immunoglobulin E (IgE)","value":"IgE is a class of immunoglobulins or \"antibodies\" that attach to mast cells in the respiratory and intestinal tracts, triggering release of inflammatory modulators and resulting in manifestation of symptoms associated with allergic reactions. Of the five types of Igs (IgM, IgG, IgA, IgE and IgD) in the body, only IgE has been shown to be involved in allergic reactions. It is responsible for the symptoms seen in patients with allergic rhinitis, asthma and eczema. IgE elicits an immune response by binding to one of two Fc receptors. The high affinity receptor FcepisilonRI is expressed only on mast cells and/or basophils.  Aggregation of antigens and binding of IgE to the mast cell Fcepisilon results in degranulation and the release of mediators from the cells; binding to FcepisilonRII on basophils causes release of type 2 cytokines (e.g., IL-4, IL-13) and other inflammatory mediators. The low affinity receptor Fcepisilon RII is constitutively expressed on B cells and inducibly expressed by IL-4 on macrophages, eosinophils, platelets and T cells."},{"term":"Immunoglobulin G (IgG)","value":"An immunoglobulin composed of two Fab and one Fc fragment.  The Fabs include the antigen combining sites while the Fc region consists of the remaining constant sequence domains of the heavy chains and contains cell binding and complement binding sites. IgGs act on pathogens via agglutination, opsonization, activation of complement-mediated reactions against cellular pathogens and/or neutralization. Unlike other Igs, IgG can cross the placenta to the fetus as maternal antibodies. There are four known IgG subclasses. IgG2 differs from the rest in that it cannot be transferred across the placenta and IgG4 does not fix complement. IgG is present in serum at a concentration of 8-16 mg/ml."},{"term":"In situ","value":"A Latin phrase that literally means \"in the place.\"  It is used to refer to examination of a phenomenon in exactly the place where it occurs (e.g., organ perfusions). In oncology, in situ refers to malignant cells present as a tumor. They have not metastasized beyond the original site where the tumor was discovered.\r\n"},{"term":"In vitro","value":"A Latin phrase that literally means \"in glass.\" It is used to refer to a process or reaction (or experiment) occurring in an artificial environment (i.e., test tube, culture medium, etc.)."},{"term":"In vivo","value":"A Latin phrase that literally means \"in a living being.\"  It is used to refer to a process or reaction (or experiment) occurring in a living body."},{"term":"Indolent","value":"Slowly progressing, low-grade; causing little or no pain."},{"term":"Infarct","value":"The area of necrosis in tissue resulting from a local lack of oxygen (i.e., ischemia). See also Infarction"},{"term":"Infarction","value":"Sudden lack of sufficient arterial or venous blood supply due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The organs most commonly affected are the heart, brain, spleen, kidney, intestine, lung and testes. See also Infarct"},{"term":"Inflammation","value":"The response of the immune system to an injury caused by irritation, infection, physical damage or chemically-induced cell stress. Local reactions at the site of injury cause immune cells to be recruited into the area, leading to the destruction and removal of the affected tissues and to wound repair. The five symptoms of inflammation are redness, heat, swelling, pain and dysfunction of the affected area, although not all five need be present at any one time."},{"term":"Insulin","value":"A polypeptide hormone secreted by pancreatic beta cells that promotes the uptake and metabolism of glucose by cells; prevents release of glucose by the liver; promotes uptake of amino acids by muscle cells (i.e., protein synthesis); and inhibits breakdown and release of fats. Insulin release is triggered by growth hormone (somatotropin), glucagon and by glucose."},{"term":"Integrin alphaIIb/beta3 (Fibrinogen gpIIb/IIIa) Receptor","value":"An integrin that functions as a receptor for fibrinogen, fibronectin, plasminogen, prothrombin, thrombospondin and vitronectin and mediates platelet aggregation."},{"term":"Interleukin (IL)","value":"A member of a class of cytokines (IL-1 through IL-29) produced by several cell types (i.e., lymphocytes, macrophages, monocytes, fibroblasts, astrocytes, endothelium, etc) with very diverse actions. Some of these actions include effects on stem cell division (IL-11); development and differentiation of B cells (IL-5) and Th1 cells (IL-12); T cell growth and activation (IL-2); lymphocyte growth (IL-6), etc."},{"term":"Interleukin 1 (IL-1)","value":"A soluble protein cytokine that is a member of the IL-1 superfamily which includes IL-1alpha, IL-1beta and the IL-1 receptor antagonist (IL-1RA). IL-1alpha and  IL-beta are proinflammatory cytokines that are involved in inflammatory and immune responses while IL-1RA competes for receptor binding with these tow isotypes thus blocking inflammatory and/ or immune activation. Both isotypes are secreted by monocytes, macrophages and/or accessory cells early during an immune response and they activate T and B cells, stimulate T cell proliferation and enhance T and B cell responses to antigens. Overproduction of IL-1 has been implicated in several diseases including COPD, rheumatoid arthritis, type 1 diabetes, Alzheimer's disease and inflammatory bowel disease (IBD) and inhibitors of this cytokine may be effective treatment options for these disorders."},{"term":"Interleukin 1 Receptor (IL-1R)","value":"The cytokine receptor that binds members of the IL-1 superfamily IL-1alpha, IL-1beta and IL-1 receptor, type I(IL-1R1/IL-1RA). There are two identified subtypes: type I (CD121a) and type II (CD121b) which are involved in cytokine-induced immune and inflammatory responses. Antagonism of these receptor subtypes may be effective in the treatment of inflammatory diseases such as COPD."},{"term":"Interleukin 10 (IL-10)","value":"A cytokine released by Th2 cells that can inhibit cytokine release from Th1 cells. In addition, during late-phase inflammatory reactions, IL-10 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells that are involved in recruitment of inflammatory cells from the circulation. IL-10 has been implicated in the pathogenesis of systemic lupus erythematosus. It inhibits the synthesis and release of proinflammatory cytokines produced by stimulated monocytes and macrophages and is under development for rheumatoid arthritis. Psoriatic lesions show significantly low levels of IL-10 and studies suggest that this cytokine may be an effective treatment for psoriasis."},{"term":"Interleukin 11 (IL-11)","value":"A pleiotropic antiinflammatory cytokine that modulates antigen-specific antibody responses, potentiates megakaryocytes and regulates bone marrow adipogenesis. IL-11 has been shown to act synergistically with IL-10 to inhibit proinflammatory cytokine production and it decreases TNF-alpha, IL-1 and IL-12 production due to inhibition of NFkappaB. IL-11 may be effective as a treatment for psoriasis."},{"term":"Interleukin 12 (IL-12)","value":"A heterodimeric cytokine that promotes cell-mediated immunity by facilitating type 1 helper T lymphocyte responses, including the production of IFN-gamma by both T cells and natural killer cells, potentiating the lytic activity of natural killer cells and boosting specific cytolytic T lymphocyte responses. IL-12 has shown potent therapeutic effects in various cancers and infectious diseases, including some viral infections. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis, psoriasis and multiple sclerosis."},{"term":"Interleukin 13 (IL-13)","value":"Immune regulatory cytokine, predominantly produced by activated Th2 cells and mast cells, that inhibits the production of inflammatory cytokines in monocytes. IL-13 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-13 ( in addition to IL-4, IL-5 and GM-CSF) selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa."},{"term":"Interleukin 15 (IL-15)","value":"A cytokine expressed by monocytes, macrophages, dendritic cells (DC), keratinocytes, fibroblasts and nerve cells. It binds to and signals through a complex composed of the IL-2/IL-15 receptor beta chain (CD122) and the common gamma chain (gamma-C, CD132). It is expressed by T cells, monocytes and keratinocytes in psoriatic epidermis that affects T, B and NK cell division, neutrophil and monocyte activation. It also inhibits lymphocyte apoptosis. Keratinocyte-derived IL-15 has been shown to inhibit keratinocyte and lymphocyte apoptosis and it may play a role in the survival of infiltrating lymphocytes and abnormal keratinocytes features in psoriasis. This cytokine has been implicated as playing a role in rheumatoid arthritis and is overexpressed in psoriasis and pulmonary inflammatory diseases. IL-15 accumulates within synovial lesions and induces the overproduction of IL-17 within rheumatic joints. In addition, IL-15 neutralization has been shown to be beneficial in preclinical models of psoriasis, diabetes and celiac disease. IL-15 is normally not secreted. However, viral infection can cause its secretion."},{"term":"Interleukin 17 (IL-17)","value":"IL-17 is a family of cytokines whose members include IL-17A, IL-17B, IL-17C, IL-17D, IL-17E (also known as IL-25) and IL-17F. These cytokines are associated with many immune regulatory effects and are associated with mediation of proinflammatory and allergic responses. IL-17 induces cytokine (e.g., IL-6, G-CSF, GM-CSF, IL-1beta, TGF-beta, TNF-alpha), chemokine (e.g., IL-8, GRO-alpha and MCP-1) and prostaglandin (e.g. PGE2) production from several cell types (e.g., fibroblasts, endothelial cells, epithelial cells, keratinocytes, monocytes and macrophages). IL-17 is secreted by the novel T helper cell subset Th17 which induces autoimmune inflammation and IL-17 receptor signaling may play a role in the development of chronic destructive arthritis from acute synovitis; IL-17 contributes both directly and indirectly to the bone and cartilage destruction occurring in rheumatoid arthritis. IL-17 may also be involved in the stimulation of osteoclastogenesis. The IL-17 family has been linked to other immune/autoimmune related diseases including asthma (i.e., plays a role in airway remodeling), lupus, allograft rejection, ankylosing spondylitis and antitumor immunity."},{"term":"Interleukin 18 (IL-18)","value":"A proinflammatory cytokine structurally and functionally related to the IL-1 family of proteins that is a strong inducer of IFN-gamma production by T lymphocytes and NK cells. It is the only cytokine that can induce T helper 1 (Th1) and T helper 2 (Th2) cell polarization depending on immunologic context. It is implicated in several immune-mediated diseases. It is invovled in both innate and acquired immunity and its inflammation-promoting role is IFN-gamma-independent. It  also plays a role in the local inflammation seen in rheumatoid arthritis. It is currently under investigation as an immunotherapeutic cancer agent and as an angiogenic factor."},{"term":"Interleukin 18 Binding Protein (IL-18BP)","value":"A constitutively secreted glycoprotein protein that exerts antiinflammatory and immunosuppressive effects. By preventing interleukin 18 (IL-18) receptor binding, it inhibits IL-18 and interferon (IFN)gamma production. Four human splice variants have been identified (IL-18BPa, IL-18BPb, IL-18BPc, IL-18BPd) of which IL-18BPa is the predominant form exhibiting the highest affinity for IL-18. While IL-18Pc also neutralizes IL-18, . IL-18BPb and IL-18BPd cannot bind to or neutralize cytokine. Inhibition of IL-18BP would be effective in suppressing high circulating levels IL-18 observed in many autoimmune diseases such as psoriasis, rheumatoid arthritis, inflammatory bowel disease psoriatic arthritis and in sepsis."},{"term":"Interleukin 1beta (IL-1beta)","value":"A cytokine released by mast cells following allergen-IgE binding that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. It is also released by epithelial cells and astrocytes. An upregulation of IL-1beta production by the microvasculture has been observed in Alzheimer's disease and in response to ischemic insult. See also Interleukin 1 (IL-1)"},{"term":"Interleukin 2 (IL-2)","value":"IL-2 is a cytokine produced by CD4+ T lymphocytes upon activation by antigens and costimulators. It promotes T cell clonal expansion in the adaptative immune response and can activate B lymphocytes, monocytes and NK cells. Binding of IL2 to its receptor activates the JAK/STAT, PI3-kinase and RAS signaling pathways. Alpha chain monomers (CD25) conform a low affinity IL2 receptor. High affinity and intermediate affinity IL2 receptors are conformed by alpha/beta heterodimers and beta chain monomers, respectively, associated to a gamma chain. It plays a role in both proliferative and activation-induced cell death (AICD) signaling of T cells. MS is in part genetically determined and the gene encoding the alpha-chain of the IL-2 receptor, IL2RA, harbors alleles associated with risk to MS and other autoimmune diseases such as GVHD. In addition, IL2RA genetic variants correlate with the levels of a soluble form of the IL-2 receptor in subjects with type 1 diabetes and multiple sclerosis (MS). IL-2 is produced by activated T cells in the synovium during the early stages of rheumatoid arthritis and in psoriatic lesions."},{"term":"Interleukin 20 (IL-20)","value":"A new member of the IL-10 family (including IL-19, IL-22, IL-24 and IL-26) of cytokines which signals through the IL-20R1/IL-20R2 heterodimer. Together with IL-19, it is synthesized by a distinct population of keratinocytes. IL-20 induces keratin proliferation and Stat-3 signal transduction pathway and may be implicated in the pathogenesis of psoriasis."},{"term":"Interleukin 23 (IL-23)","value":"A heterodimeric cytokine composed of a unique p19 subunit and the p40 subunit component of IL-12. It is secreted by activated dendritic cells (DCs) and macrophages and binds to memory T cells, NK cells, macrophages and DCs. In particular, this cytokine is suspected to be involved in the activation and maintenance of the Th17 subset of inflammatory T cells. It has been hypothesized that the autoimmune actions of IL-12 are attributable to IL-23 since mice lacking IL-23p19 (only IL-23 absent) and mice lacking IL-12p40 (both IL-12 and IL-23 absent) were protected from autoimmune encephalomyelitis (EAE) and collagen-induced arthritis (CIA). On the other hand, mice lacking IL-12p35 (only IL-12 absent) developed more severe disease.  Overexpression of IL-23 and/or IL-12 or defect in their receptors may be involved in conditions such as rheumatoid arthritis, psoriatic arthritis, psoriasis, multiple sclerosis, Crohn's disease and ankylosing spondylitis. Patients with Crohn's disease have been shown to have a significantly increased number of intestinal CD14+ macrophages as compared with normal control subjects and these cells produce larger amounts of IL-23 and TNF-alpha as compared to normal controls or patients with ulcerative colitis. Moreover, genomic studies conducted in patients with Crohn's disease have identified the IL-23 pathway as playing a predominant role in this disorder. Monoclonal antibodies directed against both IL-12 and IL-23 may be effective treatment options for these diseases.\r\n"},{"term":"Interleukin 3 (IL-3)","value":"A multilineage cell growth inducing cytokine (hemopoietic colony stimulating factor) secreted by lymphocytes, epithelial cells and astrocytes which stimulates clonal proliferation and differentiation of various types of blood and tissue cells."},{"term":"Interleukin 4 (IL-4)","value":"Pleiotropic, immune regulatory cytokine released by Th2 and mast cells that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-4 (in addition to IL-5, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. Eosinophil infiltration of airway submucosa and mucosa is characteristic allergic diseases. Like IL-12, this cytokine has been found to inhibit HIV-1 replication in primary blood-derived human macrophages. Antagonizing the effects of IL-4 is a potential new approach for the treatment of for asthma, allergic rhinitis and rheumatoid arthritis. IL-4 receptors are overabundant in several tumor types therefore IL-4 fusion toxins may be an effective treatment for some forms of cancer (i.e., breast cancer)."},{"term":"Interleukin 5 (IL-5)","value":"A proinflammatory cytokine released by Th2 and mast cells that is involved in the development and differentiation of eosinophils and B cells; it also upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-5 (in addition to IL-4, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. IL-5 is essential for eosinophilic inflammation which leads to airway hyperresponsivenes. Antagonizing the effects of IL-5 or inhibiting its production are potential new approaches for the treatment of allergic disease such as asthma and allergic rhinitis."},{"term":"Interleukin 6 (IL-6)","value":"A member of a subfamily of related hematopoietic, proinflammatory cytokines, including leukemia inhibitory factor, ciliary neurotrophic factor, oncostatin M, cardiotrophin-1 and IL-11. The expression of IL-6 in the brain has been found to be increased in neurological disorders such as Alzheimer's disease, Parkinson's disease, trauma, stroke and meningitis. IL-6 is also present in abnormally high levels in obesity and type 2 diabetes, and has been implicated in inflammatory bowel disease. IL-6 is upregulated in epithelial cells infected with rhinoviruses and overexpression of IL-6 have been observed in the synovium in the early stages of rheumatoid arthritis, at systemic and cutaneous levels in psoriasis and in human systemic lupus erythematosus. IL-6 in the presence of sex steroids is required for osteoclastogenesis to occur."},{"term":"Interleukin 8 (IL-8)","value":"An ELR+ (Glu-Leu-Arg) CXC chemokine suggested to be an important mediator of angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Overproduction of IL-8 may also be involved in airway inflammation characteristic of cystic fibrosis, asthma, the common cold and rheumatoid arthritis; IL-8 may also play a role in the inflammatory processes involved in psoriasis. Ischemia has been shown to increase the production of IL-8 in the brain. see Also Interleukin 8 beta  Receptor (IL-8betaR)"},{"term":"Interleukin 8 (IL-8) beta Receptor","value":"One of two G-protein-coupled receptor subtypes (alpha and beta) for interleukin 8 (IL-8), an ELR+ (Glu-Leu-Arg) CXC chemokine (chemokine CXCR2) produced by monocytes, fibroblasts and endothelial cells that mediates activation and chemotaxis of T cells, monocytes and neutrophils. Overexpression of IL-8 appears to be involved in airway inflammation characteristic of COPD as well as cystic fibrosis, asthma, the common cold and rheumatoid arthritis. Antagonism of this receptor could prevent recruitment of pathogenic cells into inflamed lungs thus preventing development of COPD. Antagonism of this receptor may also be effective in the treatment of psoriasis and atherosclerosis since IL-8 may also play a role in the inflammatory processes involved in psoriasis and angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Ischemia has also been shown to increase the production of IL-8 in the brain."},{"term":"Interleukin 9 (IL-9)","value":"A cytokine secreted from CD4+ T cells that affects T cell and mast cell division/development. It may also be involved in the pathogenesis of asthma by enhancing the effects of other cytokines and inflammatory mediators. The normal nonasthmatic state is suggested to be associated with downregulation of IL-9."},{"term":"Intermediate-Density Lipoprotein (IDL)","value":"A lipoprotein of intermediate density."},{"term":"Intermittency","value":"Marked intermissions or interruptions during the course of a disease. In BPH, intermittency is a LUTS characterized by dribbling or leakage of urine."},{"term":"Intron","value":"A noncoding sequence of DNA within a gene that is transcribed into mRNA but later removed by RNA splicing in the nucleus leaving a mature mRNA that is then translated in the cytoplasm"},{"term":"iRNA","value":"See RNA Interference (RNAi)"},{"term":"Ischemia","value":"Insufficient blood supply to an organ or tissue which may result in organ damage."}]},{"letter":"J","Terms":[]},{"letter":"K","Terms":[{"term":"Knockin","value":"A gentically modfied mutant organism (e.g., mouse, yeast) that carries a particular gene that is not normally present. The effect of including this gene can be provide information about a specific disease or condition."},{"term":"Knockout","value":"Experimental inactivation of specific genes in laboratory organisms (e.g., mice, yeast) in order to study a specific disease or condition."}]},{"letter":"L","Terms":[{"term":"L-Type Calcium Channels","value":"A large transmembrane ion channel with selective permeability for calcium ions. They are essential for neuronal signal transmission and intracellular signal transduction and are structurally related to T-type calcium channels, exhibit sustained conductance, are slow inactivating and are regulated by cAMP-dependent protein kinase (e.g., phosphorylation enhances the probability of channel opening). They are found on skeletal, cardiac and smooth muscle cells and within the nervous system where they are expressed on neurons and neuroendocrine cells. In the cardiovascular system they are responsible for the plateau phase (i.e., slow inward current) of the action potential and they may trigger the release of internal Ca2+. It has been suggested that modulation of intracellular calcium levels by voltage-gated calcium channels may be involved in neuronal death associated with Alzheimer's disease (AD) and L-type calcium channel modulators have been shown to enhance cognition in AD patients. Moreover, in bipolar disorder, administration of antidepressant medications, behavioral sensitization processes, and neuronal calcium dysregulation can all lead to apoptosis of critical brain circuitry that regulates emotion. Thus, targeting dysregulation in calcium levels in the central nervous system by administering L-type calcium channel blockers may have the potential for altering the cyclical course or progression of bipolar disorder."},{"term":"Lesion","value":"Pathological or traumatic discontinuity of a tissue or loss of function of organ or other body part.\r\n"},{"term":"Lipase","value":"Enzymes (EC class 3.1.1) that catalyze the hydrolysis of fat (lipolysis). Lipases are carboxylesterases."},{"term":"Lipoprotein Lipase (LPL)","value":"An enzyme (EC 3.1.1.34) synthesized in adipocytes and skeletal and cardiac myocytes afterwhich it is transported to the surface of capillary endothelium where where it hydrolyzes triacylglycerols in chylomicrons, VLDL, LDL and diacylglycerols. Genetic deficiency of the enzyme causes familial hyperlipoproteinemia type I. Mutations in the LPL gene have been linked to low HDL cholesterol levels and an increased risk of cardiovascular disease. Activation of this enzyme appears to be a promising mechanism for increasing HDL levels and decreasing atherosclerosis."},{"term":"Lipoprotein(a)","value":"A family of lipoprotein particles that are a genetic variant of LDL cholesterol and triglycerides that vary in density and size according to their protein-lipid ratio. High plasma levels of apolipoprotein(a) are associated with an increased risk of atherosclerotic cardiovascular disease."},{"term":"Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)","value":"A member (EC 3.1.1.47) of the A2 phospholipase family of enzymes that hydrolyze phospholipids at the sn2 position to generate lysophospholipids and fatty acids. The enzyme is also known as 2-acetyl-1-alkylglycerophosphocholine esterase and platelet-activating factor acetylhydrolase (PAF-AH) and appears to be an independent predictor of coronary heart disease. The enzyme circulates bound to LDL and its expression is modulated by mediators of inflammation. It is speculated that this enzyme could either promote atherogenesis if it releases products from LDL phospholipids that are injurious to the artery wall or it could exert protective effects if it decreases inflammation and thrombotic events via hydrolysis of PAF. 5-lipoxygenase-mediated oxygenation of membrane phospholipids and its interaction with phospholipase A(2)s may play a crucial role in the pathogenesis of diseases such as bronchial asthma and atherosclerosis."},{"term":"Lipoproteins","value":"Compounds or complexes containing both lipid and protein. The majority of lipids in plasma are lipoproteins. Examples include: VLDL (very low density lipoproteins), LDL (low density lipoproteins) and HDL (high density lipoproteins)."},{"term":"Lipoxygenase","value":"An enzyme catalyzing the oxidation of unsaturated fatty acids with O2 producing hydroperoxides of the fatty acids. 5-Lipoxygenase (EC 1.13.11.34) catalyzes the first step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes. 5-lipoxygenase inhibitors which block the synthesis of hydroperoxide acid, 5-HPETE and subsequent synthesis of leukotrienes may be effective in the management of COPD or rheumatoid arthritis. 15-Lipoxygenase (EC 1.13.11.33) is an atherogenic enzyme which plays a role in the oxidation of LDL leading to the formation of foam cells. Inhibition of this enzyme may be a potential treatment for atherosclerosis."},{"term":"Liver Receptor Homolog-1 (LRH-1)","value":"A member of the orphan nuclear receptor family that is the mammalian homolog of the Drosophila transcription factor, fushi tarazu F1 receptor (FTZ-F1, NR5A3). LRH-1 is expressed in organs derived from endoderm such as the intestine, liver, pancreas, ovary and exocrine pancreas and has been shown to play an important role in development, bile-acid homeostasis, steroidogenesis and progression of some carcinomas (e.g., breast, colon). It has also been shown to be involved in reverse cholesterol transport (RCT). Studies have demonstrated that its effect on apoA-1 gene transcription is to specifically regulate the expression of CETP and SR-BI thus implicating LRH-1 in HDL remodeling and cholesterol transport and validating it as a potentially effective target for the treatment of atherosclerosis. Targeting of LRH-1 to increase apoA-1 levels may also be effective in the treatment of other conditions caused by reduced plasma apoA-1 levels such as dyslipidemia, peripheral vascular disease, stroke, hypercholesterolemia, cardiovascular disorders and hypertension."},{"term":"Liver X Receptor (LXR)","value":"An orphan nuclear hormone receptor originally isolated from liver that has been identified as a target for cholesterol-lowering compounds. LXRs act as sterol sensors in the mevalonate pathway and regulate the expression of the reverse cholesterol transporter, ATP-binding cassette transporter-1 (ABCA1). LXR agonists or antagonists may be effective in preventing and treating atherosclerosis."},{"term":"Low-Density Lipoprotein (LDL)","value":"A lipoprotein which transports via the circulation cholesterol and fats from the liver to the rest of the body in the bloodstream. It is the major cholesterol carrier which transports 60-80% of the body's cholesterol. Blood levels of less than 130 mg/dl are considered normal while 130-59 mg/dl is borderline high and greater than 160 mg/dl is high. High LDL levels are a positive risk factor for the development of coronary artery disease. High levels of LDL cholesterol can build up on arterial walls (i.e., plaque)."},{"term":"LRH-1","value":"See Liver Receptor Homolog-1 (LRH-1)"},{"term":"Lymphocyte","value":"A type of white blood cell formed in lymphocytic tissue (i.e., lymph nodes, spleen, thymus, tonsils, Peyer's patches, bone marrow) that is responsible for specific immune recognition of pathogens and the initiation of adaptive immune responses."},{"term":"Lymphocytosis","value":"An increased number of circulating lymphocytes. Pathologic lymphocytosis occurs in chronic inflammation, recovery from acute infection, lymphocytic leukemia and hypoadrenocorticism and indicates a strong immune stimulus of chronic duration from a bacterial infection, viremia or immune-mediated disease. Absolute lymphocytosis is the presence of more than 15,000 lymphocytes/mm3 blood.\r\n"}]},{"letter":"M","Terms":[{"term":"Macrophage","value":"An immune cell that is capable of phagocytosis, and that may also be capable of antigen processing and presentation (APCs). These cell have different names depending upon the tissue in which they are located (e.g., Kupffer cells in the liver, alveolar macrophages in lung, histiocytes in connective tissue). Macrophages process the phagocytosed antigen and present it in association with class II molecules to CD4+ T cells. If the CD4+ T cell is Th0, antigen presentation by macrophages often results in differentiation of these Th0 cells into Th1 cells. Phagocytosis and/or cytokines induce macrophage activation, and activated macrophages secrete IL-1 and upregulate expression of costimulatory molecules (e.g., B7 and ICAM-1) on their surface."},{"term":"Magnetic Resonance Imaging (MRI)","value":"A noninvasive diagnostic procedure that produces computerized images of internal tissues. It is used to detect active lesions responsible for epilepsy, multiple sclerosis, coronary artery disease and other disorders. It is also used to diagnose and predict the risk of stroke and may be effective in detecting variant Creutzfeldt-Jakob disease."},{"term":"Major Histocompatibility Complex (MHC)","value":"The genetic loci (class I, II and III regions) found in all mammals encoding a specialized group of highly polymorphic cell surface proteins responsible for antigen recognition. Class I and II MHC gene products are involved in signaling between lymphocytes and cells expressing antigen. Class III molecules are structurally and functionally different from the gene products of class I and II MHC and are commonly referred to as the complement system."},{"term":"MAP Kinase","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)\r\n"},{"term":"MAPK","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)"},{"term":"MEK","value":"See Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)"},{"term":"Metabolic Syndrome","value":"A group or clustering of metabolic conditions that includes impaired glucose tolerance, obesity, dyslipidemia, hypertension and increased prothrombin and fibrinolytic factors. These conditions can occur together promotig the development of type 2 diabetes and cardiovascular disease. Excess cardiovascular morbidity and cardiac dysfunction (from left ventricular hypertrophy and cardiac ischemia) and an increased risk of atherosclerotic disease are also recognized features of of this syndrome. Also known as Insulin Resistance Syndrome and Syndrome X."},{"term":"Microsomal Triglyceride Transfer Protein (MTP)","value":"A heterodimeric transfer protein which limits the production of atherogenic apolipoprotein B (apoB)-containing lipoproteins. It plays a crucial role in the assembly of VLDL. Inhibition of MTP has been shown to reduce plasma LDL and VLDL levels and thus may be a potential target for the treatment of dyslipidemia and prevention of atherosclerosis."},{"term":"Missense Mutation","value":"A mutation that converts a codon coding for one amino acid to a codon coding for another amino acid. \r\n"},{"term":"Mitochondria","value":"A class of tubular-shaped organelles that reside within eukaryotic cells, converting oxygen and nutrients into adenosine triphosphate (ATP), which is required by cells for energy. Mitochondrial dysfunction has been hypothesized to contribute to the pathogenesis of Huntington's disease, Parkinson's disease, schizophrenia, and a wide range of other disorders."},{"term":"Mitogen-Activated Protein (MAP) Kinase (MAPK)","value":"A family of serine/threonine kinases that are activated when quiescent cells are exposed to mitogens and therefore potentially transmit a signal for entry into the cell cycle. One target is transcription factor p62TCF. MAPK can be phosphorylated by MAP kinase kinase (MAPKK) which is controlled by RAF1. C-Jun N-terminal kinases (JNK) are members of the MAPK family of enzymes. MAPK has been implicated in cerebral spasm and inhibitors of this kinase may be useful in the treatment of vasospasm following subarachnoid hemorrhage. See also p38 Mitogen-Activated Protein Kinases (MAPKs)"},{"term":"Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)","value":"A kinase enzyme (EC 2.7.12.2) and member of MAPK signal transduction cascade where it is lies upstream of MAPK and stimulates the enzymatic activity of MAPK. MAPKs, also known as extracellular signal-regulated kinases (ERKs), are activated by a wide variety of extracellular signals and thus serve as an integration point for multiple biochemical pathways. They are activated via rapid phosphorylation on threonine and tyrosine residues. The MAPK signaling cascade is initiated by extracellular signaling which activates (i.e., phosphorylates) MAP kinase kinase kinase (MKKK; MAP3K). Activated MAP3K phosphorylates MEK which then activates MAPK. MEK/ERK inhibitors inhibit mucin secretion which would be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders such asthma and cystic fibrosis. MEK inhibitors have also been shown to inhibit muscarinic receptor-induced human lung fibroblast proliferation which contributes to the pathology of COPD. In Crohn's disease, macroscopically noninflamed colon contributes to diarrhea via impaired epithelial sodium channel-mediated sodium absorption and studies have shown that therapeutic inhibition of MEK1/2 restores electrogenic sodium absorption. Thus, inhibition of MEK could be an effective strategy for the treatment of the chronic inflammation and diarrhea seen in Crohn's disease."},{"term":"Monoclonal Antibody (MAb)","value":"An antibody of a defined specificity that recognizes only a single epitope of an antigen. MAbs are produced by a single clone of B lymphocytes. Production of MAbs for therapeutic use is usually carried out by fusion of the relevant B cell clone with an immortalized cell line. This results in a population of hybrid cells (i.e., hybridoma) that secretes a large amount of the MAb of interest. Therapeutic MAbs can be murine, chimeric or humanized. Murine MAbs are developed in mice and can result in marked human antimouse responses (i.e., immunogenicity) in humans following administration. Thus, chimeric antibodies were developed which are composed of the murine variable region grafted onto a human MAb (two-thirds human). Humanized MAbs are less immunogenic since only the complementary determining regions of the murine antibody (only 5%) are grafted onto a human MAb."},{"term":"Monocyte Chemoattractant Proteins (MCP-1, MCP-2, MCP-3, MCP-4)","value":"MCP-1 through MCP-4 are CC chemokines secreted by monocytes, macrophages, fibroblasts and keratinocytes. They stimulate macrophage activation and basophil histamine release and promote Th2 immunity. MCP-1 targets T cells, monocytes and basophils via CCR2 and CCR9 receptors; MCP-2 targets T cells, monocytes, eosinophils and basophils via CCR2 and CCR9 ; and MCP-3 and MCP-4 target T cells, monocytes, eosinophils, basophils and dendritic cells via CCR2, CCR3 and CCR9 receptors. MCP-1 has been implicated in the pathogenesis of rheumatoid arthritis and atherosclerosis and has been shown to be increase in the brain in response to ischemia."},{"term":"Mutation","value":"Damage or change in a gene or chromosome so that transcription is altered.\r\n"},{"term":"Myalgia","value":"Pain in a muscle or muscles."},{"term":"Myeloperoxidase (MPO)","value":"A member of the heme peroxidase-cyclooxygenase (EC 1.11.1.7) superfamily that is highly expressed in neutrophil granulocytes and also in lower levels in monocytes and certain macrophages. This lysosomal enzyme requires heme as a cofactor and produces hypochlorous acid (HOCl) from hydrogen peroxide (H2O2) and chloride anion (Cl-) during the respiratory burst of the neutrophil and oxidizes tyrosine to tyrosyl radical using H2O2 as an oxidizing agent. Hypochlorous acid and tyrosyl radical are cytotoxic and used by neutrophils to kill bacteria and other pathogens. Circulating levels of this enzyme are used to predict risks for adverse cardiac events. In atherosclerosis oxidized low-density lipoprotein (oxLDL) binds to CD36 (the receptor that recognizes modified forms of LDL) and aids in the formation of lipid-laden foam cells that accumulate in blood vessel walls and form the fatty streaks typical of the disease. Inhibitors of MPO could block modification of LDL thereby preventing CD36 from recognizing it."},{"term":"Myocardial Infarction (MI) ","value":"A sudden lack of sufficient arterial or venous blood supply to the heart due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The resulting necrosis of the cardiac muscle is consistent with prolonged myocardial ischemia. It is common in individuals with coronary artery disease (CAD). See also Infarction and Infarct."},{"term":"Myocyte","value":"Any muscle cell."},{"term":"Myopathy","value":"Any disease of the muscle involving a progressive degeneration and weakening.\r\n"}]},{"letter":"N","Terms":[{"term":"NAD","value":"Coenzymes (nicotinamide adenine dinucleotides) that binds to proteins and acts as electron and hydrogen carriers in some oxidation-reduction reactions (i.e., respiratory metabolism. The oxidized form is NAD+ and NADPH (nicotinamide adenine dinucleotide phosphate) is the reduced form."},{"term":"NADPH Oxidase","value":"A plasma membrane-associated enzyme complex that catalyzes the univalent reduction of oxygen using NADPH as an electron donor. The resulting superoxide acts as an oxidant in phagocytes. Genetic defects in this system result in chronic granulomatous disease. Inhibitors of this enzyme have been shown to decrease systolic blood pressure and inhibit peroxide anion production in mice and may be effective in the treatment of hypertension."},{"term":"Nausea","value":"The unpleasant sensation of queasiness or stomach upset that often precedes or accompanies the act of vomiting. Some common causes include motion, early pregnancy, intense pain, emotional stress, gallbladder disease, food poisoning, enteroviruses among others. It is also be an adverse effect of several chemotherapeutic agents.\r\n"},{"term":"Necrosis","value":"Death of one or more cells of a tissue or organ. Early damage includes irreversible mitochondrial (e.g., swelling, granular calcium deposits) and nuclear (e.g., pyknosis, karyolysis, karyorrhexis) changes. Later, affected cells merge forming a focus of granular, amorphous or hyaline material."},{"term":"Neuron","value":"The cell of the nervous system which is composed of a cell body, dendrites and a single axon."},{"term":"Neutrophil","value":"See Polymorphonuclear Leukocytes."},{"term":"NHANES","value":"Acronym for the National Health and Nutrition Examination Survey. NHANES is a program of studies created and implemented to assess the health and nutritional status of adults and children in the United States."},{"term":"Niacin","value":"See Nicotinic Acids"},{"term":"Nicotinamide","value":"The active amide of nicotinic acid that is also known as niacinamide and nicotinic acid amide. It is used in the treatment of pellagra."},{"term":"Nicotinic Acids","value":"2-, 3- or 4-Pyridinecarboxylic acids of which the 3-carboxy derivative is active as a vitamin (i.e., niacin). Niacin is a water soluble member of the B vitamin group that is used in the production of fatty acids, steroids and cholesterol. It has cholesterol-lowering and vasodilating properties."},{"term":"Nicotinic Cholinergic Receptors","value":"A class of acetylcholine (ACh) receptors that are activated by acetylcholine and the alkaloid nicotine (which imitates the effects of ACh) and thus distinguishes this class of ACh receptors from an unrelated group known as muscarinic ACh receptors (which respond to alkaloid muscarine but not nicotine). The receptors are linked to ion channels in the cell membrane and are divided into two subclasses: the ganglionic nicotinic neuronal receptor and the neuromuscular nicotinic muscular receptor. Activation of the receptor through ligand binding can result in depression or stimulation of autonomic ganglia and neuromuscular junctions."},{"term":"Niemann-Pick C1 Like 1 Protein (NPC1L1)","value":"A protein involved in absorption of intestinal cholesterol that has approximately 50% homology to NPC1, a gene defective in the cholesterol storage disease, Niemann-Pick type C disease. Abundant expression of the protein is observed in the small intestine and in the brush border of enterocytes and it may be a target for the action of the cholesterol absorption inhibitor ezetimibe. See also Niemann-Pick Disease"},{"term":"Niemann-Pick Disease","value":"A group of diseases caused by specific genetic mutations affecting metabolism. The three most commonly recognized forms of the disease are Types A, B and C. Types A and B Niemann-Pick are both caused by the deficiency of the activity of acid sphingomyelinase, an enzyme found in lysosomes and required for sphingomyelin metabolism. Malfunctioning of acid sphingomyelinase results in accumulation of sphingomyelin within the cell eventually causing cell death and the malfunction of major organ systems. Type C Niemann-Pick is different from types A and B at the biochemical and genetic level. Type C has been associated with defects in the NPC1 gene and patients with this type cannot properly metabolize cholesterol and other lipids within the cell. Thus, excessive amounts of cholesterol accumulate within the liver and spleen and excessive amounts of other lipids accumulate in the brain. See also Niemann-Pick C1 like 1 Protein (NPC1L1)"},{"term":"Nitric Oxide (NO), Endogenous","value":"A biologically signaling gas synthesized from L-arginine in endothelium, macrophages, neutrophils, platelets and other tissues. It is formed in bone, brain, granulocytes, pancreatic B cells and peripheral nerves by a calcium-calmodulin-dependent constitutive nitric oxide synthase (cNOS) and, in hepatocytes, macrophages and smooth muscles by a calcium-calmodulin-independent inducible NOS (iNOS). It is involved in many important biological events such as neurotransmission, immune regulation, vascular smooth muscle relaxation (i.e., mechanisms of penile erection), inhibition of platelet aggregation and memory. NO production has been implicated as defective in diabetic peripheral vascular studies. Blockade of NOS, especially the endothelial NOS (eNOS) isoform, can induce insulin resistance which suggests that NO plays an important role in modulating insulin sensitivity and carbohydrate metabolism. Endothelium-derived NO (also known as endothelium-derived relaxing factor or EDRF) refers to the isoform of NO secreted by endothelial cells that is responsible for maintaining systemic blood pressure, vascular remodeling and angiogenesis. Studies have demonstrated that shortages or inactivation of this NO may contribute to high blood pressure and formation of atherosclerotic plaque and excess production is toxic to brain cells. NO has also been implicated in the pathogenesis of ischemic brain injury."},{"term":"Nitric Oxide (NO), Endothelium-derived","value":"See Nitric Oxide (NO), Endogenous"},{"term":"Nitric Oxide Synthase (NOS)","value":"The enzyme (EC 1.14.13.39) that catalyzes the production of NO from L-arginine. Three isoforms of this enzyme have been described: an inducible form (iNOS) and two constitutive forms, neuronal (nNOS) and endothelial (eNOS)."},{"term":"Nonsteroidal Antiinflammatory Drugs (NSAIDs)","value":"A large group of medications, some of which are related to aspirin. They are used to treat conditions associated with inflammation and pain."},{"term":"NPC1L1","value":"See Niemann-Pick C1 like 1 Protein (NPC1L1)"},{"term":"Nuclear Factor kappa B (NF-kappaB)","value":"A protein transcription factor and intracellular mediator of the inflammatory cascade involved in generation of certain adhesion molecules (ICAM-1, VCAM-1), iNO synthase, COX-2, cytokines (e.g., IL-1beta, IL-2, TNF-alpha, IL-6, IFN-gamma) and chemokines (e.g., IL-8). Other genes which are regulated by NFkappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. Recent findings suggest that NF-kappaB provides a mechanistic link between inflammation and cancer, controlling the ability of preneoplastic and malignant cells to resist apoptosis-based tumor surveillance mechanism and regulating tumor angiogenesis and invasiveness. NF-kappaB activity is closely associated with IkappaB Kinase Complex (IKK), and aberrant or constitutive NF-kappaB activation has been detected in many human malignancies including solid tumors and hematological cancers such as acute myeloid leukemia and chronic myelogenous leukemia. It has also been reported that constitutive activation of the receptor tyrosine kinase Flt3 is responsible for IKK activation. Also, TNF activation results in NF-kappaB activation and plays a role in inflammation-driven tumor progression. In addition, NF-kappaB signaling in microglia is essential for the Abeta-induced neuronal death that causes Alzheimer's disease. Therapeutic inhibitors of the NF-kappaB activation may be a useful option for treating cancer, including breast, lung, colorectal and prostate cancer and acute myeloid leukemia, musculoskeletal and connective tissue disorders  including ankylosing spondylitis and rheumatoid arthritis, respiratory disorders including asthma, neurological disorders including multiple sclerosis (MS), and also psychiatric, cardiovascular, renal, gastrointestinal, dermatological, endocrine, infections, metabolic, hematological and immunological diseases. NF-kappaB activation and plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease, depression and inflammatory bowel disease (IBD), atherosclerosis, asthma, arthritis, cachexia, cancer, diabetes, euthyroid sick syndrome, the common cold, AIDS, sepsis and stroke. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Other genes which are regulated by NF-kappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. NF-kappaB activation plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease and depression. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Moreover, enhanced NF-kappaB activity is involved in the pathology of both forms of IBD, Crohn's disease and ulcerative colitis and studies have demonstrated enhanced processing of the NF-kappaB precursor p105 and degradation of inhibitor of NF-kappaB, IkappaBalpha, by immunoproteasomes isolated from the mucosa of Crohn's disease patients. NF-kappaB has been identified as an important target for therapeutic intervention in IBD since it plays a central role in regulating inflammatory responses in these patients. NF-kappaB activation inhibitors may be effective for suppressing inflammation seen in Th17-mediated diseases such as rheumatoid arthritis, psoriasis and Crohn's disease."},{"term":"Nucleoside","value":"The building block of DNA and RNA which is a purine or pyrimidine base linked glycosidically to ribose or deoxyribose. It lacks the phosphate residues that would make it a nucleotide.  The ribonucleosides are adenosine, guanosine, cytidine and uridine and the deoxyribosides are deoxyadenosine, deoxyguanosine, deoxycytidine and deoxythymidine."},{"term":"Nucleotide","value":"The phosphate ester of a nucleoside that is the basic constituent of DNA and RNA. Other structures (e.g., cAMP, cGMP) and molecules with two or three phosphates are also called nucleotides."}]},{"letter":"O","Terms":[{"term":"Obesity","value":"A multifactorial condition (also known as adiposity or corpulence) manifested as excessive amounts of fat accumulated in subcutaneous connective tissue. It is associated with behavioral, endocrinological and metabolic changes. Obesity is classified according to two patterns of fat distribution: apple shaped, characterized by visceral (central or android) fat deposition predominately over the abdomen; and pear shaped, characterized by peripheral (or gynoid) fat deposition in subcutaneous tissue (e.g., hips, thighs, buttocks)."},{"term":"Occlusion","value":"Closure or blockage as in the case of a blood vessel.\r\n"},{"term":"Open-Label Trial","value":"A clinical study in which all participants (i.e., patient and investigator) know the identity of the administered drug."},{"term":"Orphan Drug","value":"A status granted by the FDA to unpatentable medications developed for rare diseases. Rare or orphan diseases are defined affecting fewer than 200,000 people in the US or are associated with a low prevalence of less than 5 per 10,000 in the community. This staus gives the manufacturer a seven-year right to exclusively market the compound. By increasing profitability of these agents, their production is encouraged."}]},{"letter":"P","Terms":[{"term":"P Wave","value":"A wave on an ECG corresponding to sinoatrial node (SA) and atrial depolarization.\r\n\r\n"},{"term":"P-Selectin","value":"A cellular adhesion molecule (CAM) involved in acute inflammation and hemostasis. It is expressed by platelets and endothelium and mediates adhesion. The majority of P-selectin binding lymphocytes are memory cells. P-selectin is stored in intracellular granules and expression can be rapidly upregulated by several mediators such as histamine, thrombin and LTC4. P-selectin binds P-selectin glycoprotein-1 (PSGL-1) which is expressed on most leukocytes and also recognizes sialylated carbohydrate groups related to the Lewis X or Lewis A family."},{"term":"P2Y12 Receptor","value":"A G protein-coupled purinergic chemoreceptor for adenosine diphosphate (ADP) that is expressed on the surface of platelet cells. It is involved in the regulation of platelet aggregation and clotting. It is a target for the therapeutic treatment of thromboembolisms and other clotting disorders.\r\n"},{"term":"p38 MAP Kinase","value":"See p38 Mitogen-Activated Protein Kinases (MAPK)\r\n"},{"term":"p38 Mitogen-Activated Protein Kinases (MAPKs)","value":"A class of MAPKs composed of four isoforms: p38 MAPK-alpha (MAPK14), p38 MAPK-beta (MAPK11), p38 MAPK-gamma (MAPK12) and p38 MAPK-delta (MAPK13 or SAPK4) which are activated by a variety of cellular stresses including osmotic shock, inflammatory cytokines, lipopolysaccharides (LPS), ultraviolet light and growth factors. They are activated via MAP3K and MEK by phosphorylation at Thr180 and Tyr182, Activated p38 MAPKs have been shown to phosphorylate and activate mitogen-activated protein kinase-activated protein kinase 2 (MAPKAPK2) and the transcription factors ATF-2, Mac and MEF2. p38 MAPKs may also be involved in mucin secretion and inhibiotrs of this kinase could be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders and may also inhibit lung fibroblast proliferation which contributes to the pathology of COPD."},{"term":"Palliative","value":"A treatment directed toward the control of symptoms rather than the curing of the disease."},{"term":"Pancreatitis","value":"Acute or chronic inflammation of the pancreas due to autodigestion of pancreatic tissue by its own enzymes. It is frequently caused by alcoholism or biliary tract disease but is also associated with hyperlipemia, hyperparathyroidism, abdominal trauma, vasculitis or uremia."},{"term":"Paracrine","value":"Refers to hormone signaling where the hormone synthesized in and released from endocrine cells binds to its receptor on nearby cells affecting their function."},{"term":"Paraoxonase-1 (PON1)","value":"An enzyme possessing antioxidant activity that associates with HDL and prevents oxidation of LDL. PON1 is therefore an important factor in the development of atherosclerosis and modification of serum PON1 activity may be an effective treatment of the disease."},{"term":"Pellagra","value":"A disease involving niacin deficiency. It is caused by improper diet and characterized by skin lesions, gastrointestinal disturbances and nervousness. Other symptoms include depression, dermatitis, dementia and diarrhea."},{"term":"Peripheral Blood Mononuclear Cells (PBMCs)","value":"Lymphocytes and monocytes isolated from peripheral blood by centrifugation."},{"term":"Peripheral Vascular Disease (PVD)","value":"A group of diseases of affecting blood vessels located outside the heart and brain. PVD usually refers to peripheral artery disease (peripheral arterial disease, PAD) which develops when the arteries suppling  blood to internal organs, arms and legs become completely or partially blocked as a result of atherosclerosis. \r\n"},{"term":"Peroxidation","value":"The oxidative degradation of lipids. This process proceeds with a free radical chain reaction which involves the removal of electrons from the lipids in cell membranes by free radicals resulting in cell damage.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor alpha (PPARalpha)","value":"A nuclear receptor hormone that together with PPARdelta and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARalpha isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARalpha may be effective in the treatment of type 2 diabetes, lipoprotein disorders, atherosclerosis, hypertension and Alzheimer's-type dementia.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor delta (PPARdelta)","value":"A nuclear receptor hormone that together with PPARalpha and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARdelta isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARdelta type 2 diabetes, lipoprotein disorders, obesity and atherosclerosis.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor gamma (PPARgamma)","value":"A ligand-activated transcription factor, member of the nuclear hormone receptor family, that is predominately expressed in adipose tissue and involved in adipocyte differentiation. Thus, it is important for lipid storage and utilization. Several fatty acids, eicosanoids, prostaglandins and their metabolites activate PPARgamma. Insulin-sensitizing thiazolidinediones have been shown to be PPARgamma agonists. PPARgamma agonists may be effective in the treatment of atherosclerosis and Alzheimer's disease. PPARgamma has also been implicated in tumor repression or formation and is expressed in both normal breast epithelia and breast cancer cells."},{"term":"Peroxisome Proliferator-Activated Receptors (PPARs)","value":"Ligand-activated transcription factors that are members of the nuclear receptor superfamily which also include steroid, retinoid, thyroid hormone and vitamin D receptors. Three PPARs have been identified: PPARalpha, PPARgamma and PPARdelta. They are activated by endogenous fatty acids or fatty acid derivatives. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. PPAR receptors have metabolic and immune functions that influence the development of atherosclerosis and agonists to either of the three subtypes may be effective in the treatment of atherosclerosis."},{"term":"Phase 0 Trial","value":"A phase of clinical testing that is also known as exploratory IND in the US and Microdosing in Europe. This stage of drug development is intended to facilitate the transition from animal to human studies. The trials evaluate doses determined in animal studies that are only 1/100th of those expected to be required for therapeutic effect.\r\n"},{"term":"Phase I Trial","value":"The first human study of a new drug, usually conducted in a small number of healthy individuals to evaluate the biological properties of that drug, including pharmacological activity, pharmacokinetics and tolerability (i.e., toxicity). Examination of how the drug should be administered, how often and in what dosage are also assessed."},{"term":"Phase II Trial","value":"A type of study providing preliminary information on the efficacy and safety of a new drug. Phase IIa trials are conducted in a small population of patients, while phase IIb studies incorporate larger patient cohorts and can determine a range a doses to be used in phase III clinical trials."},{"term":"Phase III Trial","value":"A full-scale clinical study conducted in order to determine the efficacy and safety of a new drug prior to seeking marketing approval. These studies usually involve large patient populations randomized to receive a new or standard therapy and/or placebo."},{"term":"Phase IV Trial","value":"A large-scale clinical trial conducted following regulatory approval of a drug. Its purpose is to expand efficacy and safety information. These trials are also referred to as marketing support trials."},{"term":"Phenotype","value":"The observable traits of an organism (e.g., weight, height, hair color) regardless of the genotype. Phenotypic traits are not necessarily genetic and may result from an interaction between the genotype and the environment."},{"term":"Phospholipase A2 (PLA2)","value":"A  member of the phospholipase (PL) family of enzymes that hydrolyze the ester bonds in phospholipids. The PL group include two types of enzymes: the aliphatic esterases that release fatty acids and include PLA1 (EC 3.1.1.32), A2 (EC 3.1.1.4) and B (EC 3.1.1.5); and the phosphodiesterases such as phospholipase C (EC 3.1.4.3) and D (EC 3.1.4.4) that release diacyl glycerol and phosphatidic acid, respectively. PLA2 is present in all mammalian tissues and has been implicated in inflammatory responses due to its action of releasing arachidonic acid (AA). Thus, inhibition of PLA2 may be effective in disorders susch as allergy, asthma and rhinitis. Mitochondrial dysfunction including loss of membrane potential and increased ROS production in astrocytes, coupled with impaired ATP production are speculated to play important roles in the pathophysiology of Alzheimer's disease (AD).\r\n"},{"term":"Phospholipases","value":"Enzymes that hydrolyze the ester bonds in phospholipids. There are two types: the aliphatic esterases that release fatty acids and include phospholipase (PL) A1 (EC 3.1.1.32), A2 (EC 3.1.1.4) and B (EC 3.1.1.5); and phosphodiesterases such as phospholipase C (EC 3.1.4.11) and D (EC 3.1.4.4) that release diacylglycerol (DAG) and phosphatidic acid, respectively. PLA2 is widely distributed in venoms and digestive secretions. PLA1, PLA2 and phosphatidylinositol-specific PLC are present in all mammalian tissues while PLD originates from plants. PLA2 releases arachidonic acid and thus is involved in inflammatory responses; inhibition of PLA2 may be an effective treatment of irritable bowel syndrome, atherosclerosis, stroke, etc. Phosphatidylinositol-specific PLC is involved in production of DAG and inositol triphosphate."},{"term":"Photoangioplasty","value":"A type of phototherapy involving activation of a photosensitive dye by light. Diseased vasculature are treated using this procedure which involves inserting a cylindrical light-emitting fiber optic catheter into the arteries to activate a previously injected photosensitive dye. It is used as a treatment for atherosclerosis."},{"term":"PIGF","value":"See Placental Growth Factor (PIGF)\r\n\r\n"},{"term":"Placebo","value":"An inactive compound used in preclinical and clinical trials as a comparison for active compounds."},{"term":"Placental Growth Factor (PIGF)","value":"A member of the platelet-derived growth factor (PDGF)/vascular endothelial growth factor (VEGF) family of growth factors that is involved in endothelial cell growth and angiogenesis. PIGF expression within human atherosclerotic lesions is associated with plaque inflammation and neovascular growth. PIGF may also  be a therapuetic target for Philadelphia chromosome positive (Ph+) leukemia since it is derived from leukemic stronmal and promotes the progression of Ph+ leukemia. \r\n"},{"term":"Plaque","value":"An abnormal patch or small differentiated area on a body surface (e.g., skin, mucosa, arterial endothelium) or a histopathologic lesion on an organ such as the brain."},{"term":"Platelet","value":"A discoid cell found in large numbers in blood that is essential for blood coagulation and for hemostasis through its ability to repair breaches in the walls of blood vessels. Platelet granules contain lysosomal enzymes, dense granules contain ADP (a platelet aggregating factor) and serotonin (a vasoactive amine). They also release platelet-derived growth factor (PDGF) which contributes to later repair processes by stimulating fibroblast proliferation."},{"term":"Platelet-Activating Factor (PAF) Acetylhydrolase","value":"See Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)"},{"term":"Pleiotropic","value":"Having multiple effects."},{"term":"Pneumonia","value":"Inflammation of the lungs with consolidation. Pneumonia is a form of acute respiratory infection that inflames the alveoli in the lungs which in healthy individuals fill with air during inhalation. When infected, these air sacs may fill with fluid or pus, leading to symptoms such cough with phlegm, fever, chills, chest pain and difficulty breathing. Pneumonia may be caused by a variety of organisms, including bacteria, viruses and fungi. Pneumonia can be classified into community-acquired pneumonia, hospital-acquired pneumonia, pneumonia in the immunocompromised and aspiration pneumonia (i.e., cause by inhaled food, drink, vomit or saliva from the mouth into the lungs and can lead to pus formation in the lung cavity). See also Consolidation"},{"term":"Polymerase","value":"A general term for any enzyme belonging to the EC class 2, transferases which catalyze polymerization. Prokaryotic DNA polymerases are divided into types I, II and III, while eukaryotic polymerase is subdivided into polymerase alpha, -beta, -gamma, -delta and -epsilon. DNA polymerases are highly accurate, entering the correct complementary base opposite a base on the template chain; there is a low incidence of mismatching. DNA polymerases remove primers after they have served their function, refilling the gaps with nucleotides until all bases are paired. However, DNA polymerase cannot link the last nucleotide added to the 5´ end of the next-to-the-last segment; a single-chain nick remains that is later closed by DNA ligase. RNA polymerase catalyzes RNA transcription (a polymerization reaction). There are three types of eukaryotic RNA polymerase and only one bacterial RNA polymerase."},{"term":"Polymerase Chain Reaction (PCR)","value":"A technique developed in 1983 by K.B. Mullis and F. Faloona which simplifies the production of multiple DNA copies from a sample taking advantage of DNA polymerase, the enzyme which catalyzes DNA replication. During the first cycle of PCR, a DNA double helix containing the nucleotide sequence of interest is unwound by heating to 90ºC. DNA polymerase and the nucleotide triphosphates (adenine, thymine, cytosine and guanine) required for replication are added to the unwound DNA mixture. Artificially synthesized, short (about 20 to 30 nucleosides in length) DNA, complementary to the ends of the unwound template chains, are also added and serve as the primers for the reaction. The mixture is cooled to 60ºC, allowing the artificial primers to wind to the ends of the template chains. Replication then occurs where DNA polymerase assembles complementary copies of the template chains starting from the artificial primers. The resulting reaction mixture now contains twice as many DNA molecules. The second cycle is initiated by heating the reaction mixture again which results in unwinding of the newly synthesized double helices. The mixture is then cooled allowing additional copies of the artificial primer chains to rewind with the ends of the template chains (as in the first cycle). DNA polymerase makes copies of the artificial chains and at the end of this cycle, the number of DNA molecules has doubled again. Each time the heating and cooling cycle is repeated, the number of DNA molecules in the sample doubles and, since cycling time is short, hundreds of billions of DNA copies can be generated in a few hours."},{"term":"Polymerization","value":"The linkage of glucose units into chains in cellulose or starch molecules. Multiple identical or nearly identical subunits called monomers are linked together in a chain to form a polymer. This process underlies the assembly of most biological macromolecules. For example, monosaccharides polymerize into polysaccharides, amino acid monomers into proteins and nucleotide monomers into nucleic acid polymers."},{"term":"Polymorphonuclear Leukocytes","value":"White blood cells with multilobed nuclei and cytoplasmic granules. They include neutrophils (granules stain with neutral dyes), eosinophils (granules stain with eosin) and basophils (granules stain with basic dyes)."},{"term":"Preclinical Studies","value":"Experimental in vitro and/or in vivo testing in animals performed prior to clinical studies to determine the biological activity and safety of an agent."},{"term":"Prevalence","value":"The number of cases of a disease or condition at a given time."},{"term":"Prognosis","value":"An assessment of the likely outcome of the disease judged from general experience of the disease and the age and condition of the individual patient."},{"term":"Programmed Cell Death (PCD)","value":"See Apoptosis"},{"term":"Proliferation","value":"Growth and reproduction of similar cells."},{"term":"Promoter","value":"A region of DNA to which RNA polymerase binds before initiating the transcription of DNA into RNA. The nucleotide at which transcription starts is +1. Subsequent nucleotides are numbered from this point with negative numbers indicating upstream nucleotides or positive numbers referring to downstream nucleotides."},{"term":"Prophylaxis","value":"The prevention of a disease or the process leading to a disease."},{"term":"Prophylaxis, Active","value":"Administration of an antigenic agent to actively stimulate an immune mechanism."},{"term":"Prophylaxis, Passive","value":"Use of antiserum from another individual or animal to provide temporary (7-10 days) protection against a specific infectious or toxic agent."},{"term":"Proprotein Convertase Subtilisin/Kexin Type 9 (PCSK9)","value":"A secreted enzyme belonging to the peptidase S8 family that is involved in cholesterol homeostasis by reducing the cellular uptake of plasma low-density lipoprotein (LDL) cholesterol. Inhibiting this protein may be effective in the treatment of lipoprotein disorders including atherosclerosis. It is also involved in the differentiation of cortical neurons and in regeneration of the liver."},{"term":"Prostacyclin","value":"An unstable prostaglandin released by mast cells and endothelium that is a potent inhibitor of platelet aggregation and also causes vasodilation and increased vascular permeability."},{"term":"Protease","value":"Proteolytic enzymes including both endopeptidases (EC 3.4.21-24 & 3.4.99) and exopeptidases (EC 3.4.11-19), which hydrolyze peptide bonds leading to degradation of a protein (i.e., proteolysis). Proteases are classified into four general types: serine, cysteine, aspartic and matrix metalloproteinases (MMPs)."},{"term":"Proteasomes","value":"Proteolytic complexes that degrade the majority of short-lived cytosolic and nuclear proteins. They are implicated in ATP-dependent ubiquitin protein complex degradation and in antigen processing in antigen presenting cells. Proteasomes are also involved in the regulation of JAK/STAT pathways, IL-2, IL-3 and erythropoietin stimulation. Proteasome inhibitors down-regulate inflammatory mediators such as NFkappaB and may be a potential treatment for stroke and myocardial infarction. Proteasome inhibitors also induce apoptotic cell death, and thus are being studied for the treatment of cancer."},{"term":"Protein Kinase B (PKB)","value":"See Akt\t\r\n"},{"term":"Proteolysis","value":"The degradation of proteins via hydrolysis of the peptide bonds resulting in the formation of smaller polypeptides. The process is catalyzed by proteolytic enzymes (e.g., protease, peptidase), acids or bases. See also Protease\r\n"}]},{"letter":"Q","Terms":[{"term":"QRS Complex","value":"A structure on the ECG that represents depolarization of the ventricles.\r\n"},{"term":"QT Interval","value":"The interval as measured in an ECG from the beginning of the QRS complex to the end of the T wave that represents the duration of ventricular action potential. Normal values for the QT interval are between 0.30 and 0.44 s. The QT interval varies based on the heart rate and it represents the total time needed for the ventricles to depolarize and repolarize. If the interval is abnormally prolonged or shortened (Long or short QT syndrome, respectively), there is a risk of developing ventricular arrhythmias."}]},{"letter":"R","Terms":[{"term":"Reactive Oxygen Species","value":"Oxygen-containing substances (both radicals and non-radicals) that are constantly formed within the body and have been shown to kill bacteria and inactivate proteins. Radical or reactive ions such as superoxide, singlet oxygen and hydroxyl radicals are the products of the respiratory burst in phagocytes and are responsible for bacterial killing as well as incidental damage to surrounding tissue. They have also been implicated in a number of diseases such as cancer."},{"term":"Recombinant","value":"Describes a cell or an individual with a new combination of genes not found together in either parent; it usually refers to linked genes. Recombinant DNA is spliced DNA formed from 2 or more different sources that have been cleaved by restriction enzymes and joined by ligases."},{"term":"Recombinant Vaccine","value":"Use of a recombinant antigen preparation in combination with an adjuvant, which may be administered prophylactically or therapeutically to induce viral neutralizing proteins and other protective immune responses."},{"term":"Refractory","value":"A disease or infection that is resistant to treatment.\r\n"},{"term":"Renin","value":"An enzyme (EC 3.4.23.15) that catalyzes the cleavage of the leucine-leucine bond in angiotensinogen to generate angiotensin I. It is synthesized as an inactive protein in the kidney and released into the blood in the active form in response to various metabolic stimuli."},{"term":"Renin-Angiotensin System","value":"A system consisting of renin, angiotensin-converting enzyme (ACE) and angiotensin II that regulates blood pressure and electrolyte and fluid balance. Renin, an enzyme produced in the kidney, acts on angiotensinogen, an alpha-2 globulin produced by the liver, resulting in formation of inactive angiotensin I. ACE in the lung acts on angiotensin I in the plasma converting it to angiotensin II. Angiotensin II is a potent pressor substance that causes contraction of the arteriolar smooth muscle, aldosterone release and renal absorption of sodium; it also has other indirect actions mediated by the adrenal cortex. This system is a target for the treatment of arterial hypertension."},{"term":"Reporter Gene","value":"A gene that encodes an easily assayable product. It is coupled to the upstream sequence of another gene and transfected into cells. It is used experimentally to observe which factors activate response elements in the upstream region of the gene of interest."},{"term":"Resistin","value":"A polypeptide hormone secreted from adipocytes believed to play a role in the mechanism linking obesity and diabetes through antagonisms of insulin action. High serum levels of the hormone are observed in both genetic and diet-induced murine obesity models with type 2 diabetes and immunoneutralization of the protein was shown to improve blood glucose levels and insulin action."},{"term":"Restenosis","value":"The renarrowing or reconstriction of an artery after a surgical procedure such as a balloon angioplasty (PTCA). The scarring that forms on the walls of blood vessels during heart surgery and angioplasty can cause the vessels to narrow again thus requiring further surgery to widen them."},{"term":"Retinoid X Receptor (RXR)","value":"Orphan nuclear receptor that can function as a heterodimeric complex with the peroxisome proliferator-activated receptor (PPAR). RXR agonists activate the PPAR:RXR heterodimer and have been proposed as potential antidiabetic and antineoplastic agents. In addition, it has been identified as a target for cholesterol-lowering compounds. RXRs regulate the expression of the reverse cholesterol transporter, ATP-binding cassette transporter-1 (ABCA1). RXR agonists may be effective in preventing and treating atherosclerosis."},{"term":"Retinoids","value":"Natural and synthetic derivatives of vitamin A (i.e., retinoic acid) that modulate cell differentiation and proliferation and exert antitumoral activities. Retinoid receptors include nuclear receptors (RAR alpha, beta, gamma, and RXR alpha, beta, gamma), and cytoplasmic receptors (CRABP I and II, CRBP I and II). RXR agonists activate the PPAR:RXR heterodimer and have been proposed to be potential antidiabetic and antineoplastic agents. When used in combination with PPAR agonists, they potentiate the glucose- and lipid-lowering activities of the latter. Retinoids are also used in the treatment of psoriasis and severe acne. See also Vitamin A"},{"term":"Ribonucleases (RNAases)","value":"A family of nucleases (EC 2.7 and EC 3.1) that catalyze the hydrolysis of internucleotide phosphodiester bonds in RNA into smaller components thus degrading it. They can be divided into endoribonucleases and exoribonucleases which include further sub-classes (i.e., EC 2.7 phosphorolytic enzymes and EC 3.1 hydrolytic enzymes).\r\n"},{"term":"Ribonucleic Acid (RNA)","value":"A macromolecule consisting of ribonucleoside residues connected by phosphate from the 3'-hydroxyl of one to the 5'-hydroxyl group of the next nucleotide. It is found in all cells in both the nuclei and cytoplasm and in viruses. RNA is divided into fractions depending on location, form or function. Messenger RNA (mRNA) reflects the exact nucleoside sequence of genetically active DNA. mRNA carries the message of the DNA coded within its sequence to the cytoplasmic areas where protein is assembled. Ribosomal RNA (rRNA) is encoded in DNA regions forming parts of the nucleolus; it is the RNA of ribosomes or polyribosomes. Transfer RNA (tRNA) refers to short-chained RNA molecules of at least 20 types (one for each of the 20 amino acids in protein synthesis). tRNA combines with amino acids during protein synthesis and interacts with mRNA codons, thus providing a link between the information coded into nucleic acids and the amino acid sequence of proteins. Small nuclear RNAs (snRNAs) are small (about 90-300 nucleotides) chains in the nucleus that are involved in processing of mRNA and rRNA. Small cytoplasmic RNA (scRNA) functions primarily in the cytoplasm and forms the signal recognition particle. scRNA participates in the process of attaching ribosomes to the endoplasmic reticulum during synthesis of membrane proteins or proteins later secreted by the cell."},{"term":"Ribonucleotide","value":"A nucleotide in which a purine or pyrimidine base is linked to a ribose molecule. It is a component of RNA. See also Nucleotide \r\n"},{"term":"Ribosome","value":"A small, sphere-shaped, cytoplasmic structures that is composed of RNA and protein and is the site of protein synthesis. Ribosomes are free in the cytoplasm and often attached to the membrane of the endoplasmic reticulum. Ribosomes exist in both eukaryotic and prokaryotic cells. Bacterial ribosomes are composed of two subunits: the smaller 30S subunit containing 21 proteins and a single 16S RNA molecule, and the larger 50S subunit containing 32 proteins and two RNA molecules (23S and 5S). 16S serves as a scaffold defining the positions of the ribosomal protein with the 3' end containing the anti-Shine-Dalgarno sequence. This sequence binds upstream to the AUG start codon on the mRNA. 16S interacts with 23S and facilitates binding of 50S and 30S. Many antibiotic agents bind to the 30S and 16S subunits of the bacterial ribosome. This action inhibits translocation of peptidyl-tRNA from the A-site to the P-site and also causes misreading of mRNA, interrupting bacterial protein synthesis necessary for survival and reproduction."},{"term":"Ribozyme","value":"A nonprotein biological catalyst consisting of specific domains of ribonucleic acid (RNA) that can recognize, bind and digest nucleic acids thus playing a key role in intron splicing events. Several cleave precursors of tRNA resulting in functional tRNA while others act on rRNA. Ribozymes induce conformational changes which involve bringing the hydroxyl groups of RNA molecules into positions where their reactivity leads to hydrolysis and breakage of RNA chains. Ribozymes have been investigated as a potential therapeutic approach for diseases such as HBV infection, since their enzymatic activity can be used to block pathogenic protein synthesis. The utility of ribozymes as biologic and therapeutic agents has been limited due to their susceptibility to chemical and enzymatic degradation and to restricted target site specificity."},{"term":"RNA","value":"See Ribonucleic Acid (RNA)"},{"term":"RNA Interference (RNAi)","value":"RNA interference (RNAi) is an endogenous process of gene silencing that is due to interruption in the cell's translation. This interruption is triggered by the cell's own mRNA in response to the presence of and consequent destruction of matching double-stranded RNA sequences. Gene expression is inhibited in a sequence-dependent manner. The process endogenously protects the cell against viruses and other insults. The process has also emerged as a powerful gene silencing technique that is useful in research and development of therapeutics. See also Small interfering RNA (siRNA)"},{"term":"RNAse","value":"See Ribonucleases (RNAases)\r\n"}]},{"letter":"S","Terms":[{"term":"Sarcoidosis","value":"A rare multisystem inflammatory disorder characterized by chronic inflammatory granulomatous lesions (i.e., granuloma) in the lymph nodes and other organs. These granulomas are made up of epithelioid cells, macrophages, giant cells, fibroblasts and CD4+ T lymphocytes and their formation occurs in response to immune response to poorly soluble antigen (e.g., mycobacteria or other pathogen) in genetic predisposed individuals. The most commonly affected sites are the lungs, lymphatic system, skin and eyes; the upper respiratory system, liver, bone marrow, spleen among other organs can also be affected."},{"term":"Scavenger Receptor Class B Type I (SR-BI)","value":"A cell surface lipoprotein receptor that is abundant in the liver and other steroidogenic tissues. It is also present in the brush border membrane of the small intestine where it mediates selective cholesteryl ester uptake from HDL. SR-BI is closely related to CD36. The receptor may be required for reverse cholesterol transport and maintenance of normal HDL cholesterol and phospholipid levels. It is a potential target for the prevention and treatment of atherosclerosis."},{"term":"Sclerosis","value":"Any pathological hardening of tissue (e.g., liver, artery walls), due to cumulative damage, mineral deposition or other causes. It particularly refers to a neuropathological condition characterized by induration of nervous and other brain structures due to hyperplasia of interstitial fibrous or glial connective tissue. Mesial temporal sclerosis in which the hippocampus is abnormally small, is a typical lesion that can cause epilepsy. Tuberous sclerosis results in formation of multisystem hamartomas causing mental retardation, epileptic seizure and facial skin nodules."},{"term":"Selective Estrogen Receptor Modulator (SERM)","value":"A compound that binds to the estrogen receptor and provides the benefits of estrogen without the associated adverse effects on reproductive organs (e.g., cell proliferation), used clinically to prevent and treat osteoporosis and other postmenopausal symptoms and menstrual disorders. SERMs may also have preventative effects against breast and endometrial cancers and may attenuate development of atherosclerosis and Alzheimer's disease."},{"term":"Sepsis","value":"Systemic inflammatory response syndrome (SIRS) accompanied by a confirmed infectious process. See also Sepsis, Severe and Septic Shock and Systemic inflammatory response syndrome (SIRS)"},{"term":"Sepsis, Severe","value":"A stage in the continuum of clinical response to infection defined as sepsis associated with organ dysfunction; sepsis associated with hypotension; or sepsis associated with hypoperfusion abnormalities. See also Sepsis and Sepsis, Severe and Systemic Inflammatory Response Syndrome (SIRS)"},{"term":"Septic Shock","value":"A condition of clinical shock caused by endotoxin in the blood and characterized by hypoperfusion, multiple organ failure and persistent hypotension in a septic patient. See also Sepsis and Sepsis, Severe"},{"term":"Single-Blind","value":"A research testing parameter in which patients do not know which of several treatments they are receiving, thus preventing personal bias from influencing their reactions and study results."},{"term":"Single-Nucleotide Polymorphism (SNP)","value":"Single-nucleotide polymorphisms are the most common type of genetic variation. Each SNP represents a difference in a single nucleotide (e.g., a SNP may replace the nucleotide cytosine (C) with the nucleotide thymine [T]). SNPs occur approximately once in every 300 nucleotides. They are frequently found in the DNA between genes. SNPs can be used as biomarkers for diseases and may predict response to drugs and environmental factors (i.e., toxins).\r\n"},{"term":"siRNA","value":"See Small interfering RNA (siRNA)\r\n\r\n"},{"term":"SIRT1","value":"Sirtuin 1 (SIRT1) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes that also includes SIRT2, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7. SIRT1 has been implicated in the aging process and shown to promote fat mobilization in white adipocytes via the repression of PPARgamma. Moreover, it deacetylates and represses activity of the forkhead transcription factor FOXO3A and other forkhead factors and its expression is associated with prolonged cell survival. In addition, SIRT1 can stimulate glucose-dependent insulin secretion from pancreatic cells and initiate insulin signaling pathways in insulin-sensitive organs. The enzyme has been implicated in the development of insulin resistance due to the role it plays in the regulation of adiponectin secretion, inflammatory responses, gluconeogenesis and reactive oxygen species levels. Moreover, SIRT1 overexpression and SIRT1 activators improve glucose homeostasis and insulin sensitivity in obese mice models. Thus, activators of this enzyme may be effective in the prevention and treatment of obesity, metabolic syndrome and type 2 diabetes. See also Sirtuins\r\n"},{"term":"SIRT2","value":"Sirtuin 2 (SIRT2) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7) that implicated in the mitotic regulation of microtubule dynamics by its association with the class II HDAC6. The enzyme is also involved in the aging process and in the effects of calorie restriction and inhibitors of SIRT2 protect against alpha-synuctein-mediated toxicity in cellular models of Parkinson disease. See also Sirtuins\r\n"},{"term":"SIRT3","value":"Sirtuin 3 (SIRT3) is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT2, SIRT4, SIRT5, SIRT6 and SIRT7) that is localized to mitochondria where it deacetylates and activates acetyl-CoA synthetase 2 (AceCS2). It is implicated as playing a role in metabolism and has also been shown to be involved in apoptosis and control of cell growth. See also Sirtuins\r\n"},{"term":"SIRT4","value":"Sirtuin 4 is a member of the NAD-dependent histone deacetylase (HDAC) family of enzymes (also includes SIRT1, SIRT2, SIRT3, SIRT5, SIRT6 and SIRT7) that is localized in mitochondria and has been implicated in the effects of calorie restriction, the aging process and the regulation of insulin secretion. Modulators of this enzyme may be effective in the treatment of obesity, metabolic syndrome, type 2 diabetes among others. See also Sirtuins"},{"term":"Sirtuins","value":"Members of the NAD-dependent histone deacetylase family of enzymes that has been implicated in the aging process and include SIRT1, SIRT2, SIRT3, SIRT4, SIRT5, SIRT6 and SIRT7. A link between sirtuins and calorie restriction has also been suggested. Modulators of these enzymes may be effective in slowing the aging process and for the treatment of obesity, metabolic syndrome, type 2 diabetes, Parkinson's disease atherosclerosis and gout. Sirtuin activity is inhibited by binding of nicotinamide (a component of vitamin B3 also known as niacin) to a specific receptor site and by resveratrol which inhibits binding and is a putative agent for slowing down the aging process. See also SIRT1, SIRT2, SIRT3 and SIRT4."},{"term":"Sphingosine Kinase","value":"Sphingosine kinase (SphK) is a key enzyme in the sphingolipid metabolic pathway responsible for phosphorylating sphingosine into sphingosine-1-phosphate (S1P). SphK/S1P play a critical role in angiogenesis, inflammation and various pathologic conditions such as rheumatoid arthrtis, atherosclerosis, vascular inflammatory disease, cancer, allergic diseases, inflammatory bowel disease among others. See also Sphingosine kinase 1."},{"term":"Sphingosine kinase 1","value":"Sphingosine kinase 1 is an oncogenic sphingolipid-metabolizing enzyme that catalyzes the formation of sphingosine-1-phosphate (S1P), a lipid messenger with intracellular and extracellular functions. S1P can regulate proliferation and survival and has been established as a mitogenic factor. Sphingosine kinase 1 inhibitors block S1P production, leading to a decrease in proliferation and induction of apoptosis in cancer cells. Importantly, there are data showing that sphingosine kinase 1 and sphingosine kinase 2 have opposing roles in the regulation of ceramide biosynthesis and opposing effects on cancer cells (activation of sphingosine kinase 2 is proapoptotic and antiproliferative), stressing that the development of specific sphingosine kinase 1 inhibitors is critical. see also Sphingosine Kinase"},{"term":"ST Segment","value":"The segment connecting the QRS complex (i.e., ventricular depolarization) and the T wave (i.e., ventricular repolarization) in an ECG. It has a typical duration of 80 to 120 ms and represents isoelectric ventricular depolarization. It starts at the J point (junction between the QRS complex and ST segment) and ends at the beginning of the T wave. The normal ST segment has a slight upward concavity. If it is flat, downsloping or depressed, it could indicate coronary ischemia. Elevated of the ST segment can indicate myocardial infarction."},{"term":"Statins","value":"Statins are a group of compounds also known as HMG-CoA (3-Hydroxy-3-methylglutaryl coenzyme A) reductase inhibitors that are used clinically to reduce serum cholesterol levels, thereby lowering the risk of heart attack. The statins are a class of drugs that lower cholesterol levels in people with or at risk of cardiovascular disease by inhibiting the HMG-CoA reductase, the rate-limiting enzyme of the mevalonate pathway of cholesterol synthesis. Inhibition of this enzyme in the liver results in a decrease cholesterol synthesis as well as an increase in the synthesis of low-density lipoprotein (LDL) receptors. This increase in receptors augments the clearance of LDL from the bloodstream. HMG-CoA reductase inhibitors are widely used in the treatment of hypercholesterolemia, and their use has been associated with reductions in cardiovascular events and improved endothelial function. Statins also display multiple pleiotropic effects and due to their confirmed favorable safety profile, they may be effective in completely unrelated indications. For example, independently of cholesterol levels, statins are able to improve the bioavailability of nitric oxide (NO) by increasing endothelial NO synthase (eNOS) expression, primarily by stabilization of eNOS mRNA and also by acutely increasing eNOS phosphorylation. They may therefore be effective in the treatment of erectile dysfunction. Other pleiotropic effects of statins include antiinflammatory activity and effects on cell growth, proliferation and apoptosis and they are currently under investigation as chemopreventive agents. Preliminary evidence suggests that statins may also be effective in the treatment of osteoporosis, rheumatoid arthritis, COPD, multiple sclerosis, systemic sclerosis, sepsis and diabetes and in the prevention of stroke, angina, heart failure and Parkinson's disease among other indications. "},{"term":"Stent","value":"A rod, thread or catheter placed within the lumen of a tubular structure providing support during or after anastomosis or allowing patency of a contracted lumen."},{"term":"Steroids","value":"A large family of compounds derived from cholesterol which are structurally similar in that they contain the tetracyclic cyclopenta[a]phenanthrene skeleton. Examples include plant and animal hormones, body constituents and drugs."},{"term":"Stroke","value":"A condition due to the lack of oxygen to the brain which may lead to reversible or irreversible paralysis. It is caused by a blood clot or burst blood vessel which interrupts blood flow and results in damage to a group of nerve cells in the brain. A stroke can cause coma, paralysis, speech problems and dementia depending on the area of the brain that is damaged. The four predominant types of stroke are classified as either ischemic stroke (cerebral thrombosis and cerebral embolism) or hemorrhagic stroke (subarachnoid hemorrhage and intracerebral hemorrhage). Other types include transient ischemic attacks (TIAs) or mini-strokes, lacunar infarcts and recurrent stroke."},{"term":"Superoxide Dismutase (SOD)","value":"A metalloenzyme (EC 1.15.1.1) catalyzing the formation of hydrogen peroxide and oxygen from superoxide. It is a natural antioxidant within cells. Familial amyotrophic lateral sclerosis (ALS) has been linked to a defective SOD1 gene on chromosome 21. See also Dismutase"},{"term":"Systemic Inflammatory Response Syndrome (SIRS)","value":"A pattern of physiological variables including leukocytosis or severe leukopenia, hyperthermia or hypothermia, tachycardia and tachypneahas, that are seen in critically ill patients in response to a range of insults such as trauma, burns, pancreatitis and infection. These inflammatory responses have been collectively termed the SIRS. The term sepsis is reserved for SIRS when infection is suspected or proven. See also Sepsis and Sepsis, Severe"},{"term":"Systolic Blood Pressure (SBP)","value":"The pressure exerted on the walls of the arteries during contraction of the left ventricle of the heart. It varies with age, sex, size and relative condition and is considered elevated if values are consistently over 150 mmHg."}]},{"letter":"T","Terms":[{"term":"T Cell","value":"One of two major classes of lymphocytes that develop in the thymus. T cell lineage markers are the expression of two T cell antigen receptors (TCR-1gammadelta and TCR-2alphabeta). TCR-2+ cells are further classified into two nonoverlapping populations that express the CD4 marker and help or induce immune responses (Th cells) or carry the CD8 marker and are predominately cytotoxic (CTLs). In general, CD4+ and CD8+ T cells recognize specific antigens in association with MHC class II and I molecules, respectively. CD4+ T cells can be further divided into Th0, Th1, Th2 and Th3 cells based on their cytokine production profile."},{"term":"T Wave","value":"A segment on an ECG corresponding to ventricular repolarization.\r\n"},{"term":"Thrombosis","value":"Formation or the presence of a thrombus."},{"term":"Thrombosis, Arterial","value":"The formation of unwanted blood clots (i.e., thrombi) in arteries leading to partial and complete blockage of that artery. It is very common in individuals suffering from artherosclerosis. Blood clot developing in the coronary artery can lead to myocardial infarction while blood clot occurring in the brain can result in cerebrovascular injury.\r\n"},{"term":"Thrombosis, Deep Vein","value":"Formation of blood clots (i.e., thrombi) in any of the deep veins of the body (e.g., leg, pelvis, major-extremity veins). A complication is development of a pulmonary embolism.\r\n"},{"term":"Thrombosis, Venous","value":"The formation of unwanted blood clots (i.e., thrombi) within veins typically in the thigh or leg regions. Clots can dislodge and migrate towards the lungs, causing pulmonary embolism. \r\n"},{"term":"Thromboxanes","value":"A group of physiologically active substances present in many tissues that are formed from prostaglandins during eicosanoid metabolism. They have effects on platelet aggregation."},{"term":"Thrombus","value":"A clot formed within the cardiovascular system composed of blood constituents. It may be occlusive or attached to vessels or the heart wall. If it obstructs a vessel it can cause infarction of the tissue supplied by that vessel."},{"term":"Thyroid","value":"A ductless gland composed of spheroidal follicles located over and on either side of the trachea. It synthesizes and secretes thyroid hormone and calcitonin."},{"term":"Thyroid Hormone (TH)","value":"A glycoprotein produced by the anterior lobe of the pituitary which stimulates growth and function of the thyroid gland. Also known as thyrotropin."},{"term":"Tolerance","value":"The ability to endure unusually large doses of a drug or toxin. An acquired drug tolerance is a decreasing response to repeated constant doses of a drug or the need for increasing doses to maintain a constant response.\r\n"},{"term":"Tomography","value":"The imaging of anatomical information from a cross-sectional plane of the body. Each image is generated by computer synthesis of X-ray transmissions obtained in many directions in a given plane. Positron emission tomography (PET) produces images constructed from computer analysis of detected photons resulting from annihilation of positrons emitted by radionuclides incorporated into biological substances. It can show the uptake and distribution of substances within a tissue, thus providing information about localization of metabolic and physiological function. PET is used in the diagnosis of Parkinson's disease, indicating impaired fluorodopa uptake in the caudate nucleus and putamen. Single photon emission computed tomography (SPECT) produces images constructed from computer analysis of a single photon emitted by radionuclides incorporated in biological substances administered to subjects. It gives information about metabolic and physiological function. Computed axial tomography (CT or CAT scan) uses a computer to assimilate multiple X-ray images into a two dimensional cross-sectional image. It can reveal many soft tissue structures not shown by conventional radiography. CT scans can also track dynamic movement of a dye. The CT apparatus rotates 180 degrees around the patient's body emitting thin X-ray beams at 160 different points. Crystals positioned at the opposite points of the beam pick up and record the absorption rates of the varying thicknesses of tissue and bone. This technique uses the same dosage of radiation as that of conventional X-ray machines but enables the viewing of an entire slice of the body with about 100 times more clarity."},{"term":"Transcription","value":"The process by which genes are copied into RNA, resulting in three major RNA types that interact in protein synthesis: messenger RNA (mRNA), ribosomal RNA (rRNA) and transfer RNA (tRNA). See also Ribonucleic Acid (RNA)"},{"term":"Transcription Factors","value":"Endogenous substances (usually proteins) that bind to the promoter regions of genes and regulate the start, stimulation or termination of the genetic transcription process. Examples include NFkappaB, nuclear factor of activated T cells (NF-AT), activator protein-1 (AP-1), CREB and signal transduction-activated transcription fators (STAT)."},{"term":"Transforming Growth Factor alpha (TGF-alpha)","value":"A 50 amino acid polypeptide originally isolated from viral transformed rodent cells and later from a variety of tissues including epithelium and maternal decidua. It is closely related to epidermal growth factor (EGF). It contains an EGF-like domain and binds to the EGF receptor. It stimulates growth of microvascular endothelial cells, is angiogenic and acts synergistically with TGF-beta to induce phenotypic transformation. Its true physiological role is unknown. See also Growth Factors\r\n"},{"term":"Transforming Growth Factor-beta (TGF-beta)","value":"Members of a large family of pleiotropic homodimer cytokines which includes the TGF-beta1, TGF-beta2 and TGF-beta3 isoforms. They are secreted by many different cell types including B and T cells, macrophages, platelets, neurons and glial cells and signaling is mediated via a high affinity transmembrane receptor complex consisting of TGF-beta type I receptor activin-like kinase 5 (ALK5) and TGF-beta type II receptor (TbetaRII) serine/threonine kinase receptor subunits. In addition to activities such as suppression of  immune responses (via downregulation of antigen presenting cells [APCs] and inhibition of B and T cell proliferation), enhancement of extracellular matrix protein production, and mediation of cell growth, differentiation and embryonic development, TGF-betas also act synergistically with neurotrophins to exert neuroprotective effects. In AD, TGF-beta levels are increased in human brain tissue although brain TbetaRII expression and serum TGF-beta levels are reduced and evidence suggests that TGF-betas have both beneficial and detrimental effects in this disease. See also Growth Factors"},{"term":"Transforming Growth Factors (TGFs)","value":"Proteins secreted by transformed cells that can stimulate growth of normal cells. The transforming growth factor family includes many of the bone morphogenetic proteins. See Transforming Growth Factor alpha (TGF-alpha), Transforming Growth Factor beta (TGF-beta) and Transforming Growth Factor beta1 (TGF-beta1)\r\n"},{"term":"Transgenic","value":"Refers to an organism in which gene(s) or DNA from another organism were incorporated via injection into the nucleus of the ovum. The resulting transgenic animal expresses the protein(s) that the new gene(s) encodes."},{"term":"Translation","value":"Protein synthesis resulting from the interaction of mRNA, rRNA and tRNA transcribed in the nucleus. The genetic code or sequence of nucleotides in mRNA is translated into a sequence of amino acids during polypeptide assembly. During translation, ribosomes read along the mRNA molecule, gradually assembling a corresponding amino acid sequence. Nucleotides are read three at a time as codons."},{"term":"Triglycerides","value":"Storage fats in adipose tissue that are mainly the glycerol esters of saturated fatty acids. They are an important energy supply for heart muscle and are also components of cell membranes. Normal blood levels are between 10-150 mg/dl. Elevations in plasma triglycerides (e.g., in association with elevated cholesterol) are correlated with the development of atherosclerosis."},{"term":"Tumor Necrosis Factor-alpha (TNF-alpha)","value":"TNF-alpha is a proinflammatory cytokine (also known as cachectin) and member of the TNF family of cytokines that is released by activated macrophages and lymphocytes. It acts via receptors belonging to the TNF family of receptors, among which TNF receptor 1 and 2 (TNFR-1, TNFR-2) trigger several signal transduction pathways, resulting in the activation of transcription factors such as NF-kappaB and cFos/cJun. TNFR-1 (also known as CD120a; p55/60) is expressed in most tissues and is fully activated by both the membrane-bound and soluble trimeric forms of TNF. TNFR-2 (also known as CD120b; p75/80), however, is found only in cells of the immune system and is activated by the membrane-bound form of the TNF homotrimer. Activated factors induce the transcription of antiapoptotic, proliferative, immunomodulatory and inflammatory genes. NF-kappaB is the major survival factor in preventing TNF-alpha-induced apoptosis and inhibition of this transcription factor may improve the efficacy of apoptosis-inducing cancer therapies; TNF-alpha-targeted therapies are also being tested in the regional treatment of locally advanced soft tissue sarcomas and metastatic melanomas. In addition, TNF-alpha-induced insulin resistance is believed to be a major contributor to the development of type 2 diabetes in obesity and elevated brain levels of TNF-alpha have been observed in Alzheimer's Disease (AD)  and ischemic stroke patients. TNF-alpha is also a crucial cytokine in the establishment and maintenance of inflammation in multiple autoimmune diseases. Studies have reported elevated TNF levels at the site of active MS lesions in postmortem brain samples from patients with MS and CSF and serum TNF levels in individuals with MS are elevated compared to unaffected individuals with TNF levels correlating to the severity of the lesions. In addition, peripheral blood mononuclear cells from MS patients just prior to symptom exacerbation display increased TNF secretion after stimulation as compared to cells from the same patients during remission and inhibition of the TNF-alpha signaling pathway (e.g., TNF-alpha blockers, blockers of  p38, JNK and/or ERK kinases, antagonists of transcription factor NF-kappaB activation) is a viable therapeutic strategy for the treatment of Crohn's disease, psoriasis, psoriatic arthritis, uveitis, sarcoidosis, Behcet's syndrome, graft versus host disease and ankylosing spondylitis."}]},{"letter":"U","Terms":[{"term":"Ulcer","value":"A local lesion on the skin or the mucosa of an organ or tissue. It is due to the sloughing of inflammatory necrotic tissue. See also Ulcer, Gastric; Ulcer, Peptic; and Ulcer, Decubitus"},{"term":"Ulcer, Decubitus","value":"A chronic ulcer that appears in pressure areas in debilitated or immobilized patients. It occurs due to a reduction in circulation from enhanced pressure on tissue."},{"term":"Ulcer, Gastric","value":"A lesion in the mucosal lining of the stomach that results from gastric inflammation. It can be caused by use of alcohol, aspirin or NSAIDs. Symptoms include recurrent abdominal pains (which are alleviated with antacids), nausea, vomiting, weight loss and fatigue. Complications include GI bleeding, obstruction, perforation and ulcer penetration into surrounding tissues."},{"term":"Ulcer, Peptic","value":"An ulcer in the wall of the stomach or duodenum resulting from the digestive action of gastric juice on the mucous membrane."},{"term":"Upstream","value":"The nucleotide sequences in DNA or RNA that precede the codons specifying the mRNA for transcription or the protein coding sequences for translation. It is also used to describe events that occur early on within sequential reactions. See also Downstream"}]},{"letter":"V","Terms":[{"term":"VCAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. Induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, VCAM-1 bind to integrins mediating adhesion and migration.  It has been implicated in the initiation and progression of atherosclerosis."},{"term":"Vector","value":"An organism that carries an infectious microorganism (e.g., a virus or parasite) from one host to another, generally without becoming infected itself. Alternatively, a virus or a small piece of DNA (i.e., plasmid) that carries a modified or foreign gene. In gene therapy, the vector delivers the desired gene to a target cell. See also Plasmid"},{"term":"Very-Low-Density Lipoprotein (VLDL)","value":"A lipoprotein carrier which transports cholesterol and fats (particularly triglycerides) in the bloodstream. Elevations in blood VLDL levels are associated with an increased risk of atherosclerosis and coronary artery disease."},{"term":"Virus","value":"A small infectious particle between 10 and 300 nm in diameter, not visible with a light microscope. Viruses have no cell structure and thus differ from other infectious agents or cells. They have no wall and the genetic material is contained in either DNA or RNA encased within a protein shell or capsid. Some viruses may also have an outer membrane composed of lipoprotein. They are obligate parasites and need to enter a plant or animal cell in order to reproduce. Their RNA or DNA encodes for various proteins which are made by the host cell."},{"term":"Vitamin","value":"A member of a group of organic substances essential for normal metabolism. They are present in small amounts in food."},{"term":"Vitamin A","value":"Any beta-ionone derivative with biological activity similar to retinol (the first identified vitamin A, known as vitamin A1). Activity includes involvement in the vision cycle and growth and differentiation. A deficiency in these vitamins (e.g., A aldehyde, A1, A1 alcohol, A1 acid, A2, A2 aldehyde) alters synthesis and resynthesis of rhodopsin, causing night blindness. In addition, keratinizing metaplasia of epithelial cells may occur resulting in xerophthalmia, keratosis, increased susceptibility to infections and a retardation of growth. Analogues may be effective in the treatment of psoriasis. See also Retinoids"},{"term":"Vitamin B","value":"A group of water-soluble compounds including vitamin B1 (thiamin), B2 (riboflavin), B3 (pantothenic acid), B4, B5, B6 (pyridoxine, pyridoxal and pyridoxamine) and B12. Vitamin B complex is a term referring to drugs containing a mixture of vitamin Bs."},{"term":"Vitamin B6","value":"Includes pyridoxine, pyridoxal and pyridoxamine that are involved in utilization of unsaturated fatty acids. Deficiencies result in irritability, convulsions (i.e., epilepsy) and peripheral neuritis. Pyridoxine is found in vegetables."},{"term":"Vomiting","value":"See Emesis"}]},{"letter":"W","Terms":[{"term":"Wild-type","value":"The normal, nonmutated version of a gene. Also the parent strain of a virus, bacteria, mouse, or other laboratory organism that are found in the wild."}]},{"letter":"X","Terms":[]},{"letter":"Y","Terms":[{"term":"YLD","value":"Acronym for \"Years Lost due to Disability\" which is calculated by the number of years lived in a condition multiplied by a disability weight for that condition assigned on a scale from 0 (perfect health) to 1 (death). YLD = number of incident cases in reference period x disability weight x average duration of condition.\r\n"},{"term":"YLL","value":"Acronym for \"Years of Life Lost\" which is calculated by the number of deaths multiplied by the standard life expectancy at the age at which death occurs. YLL = number of deaths + standard life expectancy minus age of death.\r\n"},{"term":"YPLL","value":"An acronym for \"Years of potential life lost\" which is also known as potential years of life lost (PYLL). YPLL is a statistic that is a measure of premature mortality. It is an estimate of the average years a person would have lived if he or she had not died prematurely and therefore can it indicate the impact of various diseases and other lethal factors on a population."}]},{"letter":"Z","Terms":[]},{"letter":"0-9","Terms":[{"term":"17beta-Estradiol","value":"The most potent, naturally occurring estrogen produced by the ovary, testis, placenta and adrenal cortex. Its actions include stimulation of secondary sex characteristics, growth and maturation of long bones and control of the menstrual cycle."},{"term":"5-Lipoxygenase","value":"The enzyme (EC 1.13.11.34) that catalyzes the first oxidation step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes (LTs) which primarily act as mediators of inflammatory and allergic reactions. The enzyme's activity is regulated in a complex manner and involves different signaling pathways. It can be activated by an increase in intracellular Ca2+ concentration, diacylglycerols, phosphorylation by MAPKAP kinase-2 and ERK, while protein kinase A and glutathione peroxidase have been found to suppress its function. Several inflammatory diseases including COPD, asthma, arthritis and inflammatory bowel disease (IBD) are associated with elevated levels of LTB(4); eicosanoids generated through the 5-LOX pathway may also be primary mediators of allergic rhinitis, idiopathic pulmonary fibrosis, atherosclerosis, atopic dermatitis, acne and ischemia-related organ injury. Modulation of LTB(4) synthesis could be achieved via inhibition of 5-LOX which would block the synthesis of hydroperoxide acid, 5-HPETE, and subsequent synthesis of eicosanoids (e.g., cysteinyl LTs, LTB[4]) that are instrumental in the promotion of the pulmonary inflammatory response and bronchospasm. Thus, these agents may be effective in the management of COPD and asthma."}]}],"MediaFiles":[{"title":"ApoA-I/ABCA1 Cholesterol Transport Pathway","sectionImageId":"937","sectionId":"1404"},{"title":"APOB Expression Inhibition","sectionImageId":"3832","sectionId":"1395"},{"title":"Atheroprogression: Plaque Rupture & Progression","sectionImageId":"337","sectionId":"1373"},{"title":"Atherosclerosis Targetscape","sectionImageId":"3425","sectionId":"4583"},{"title":"Atherosclerosis: Multifactorial Theory of Origin","sectionImageId":"2002","sectionId":"1375"},{"title":"Atherosclerosis: Potential Factors Leading to Disease Development -- The Inflammatory Disease Theory","sectionImageId":"4106","sectionId":"5403"},{"title":"Atherosclerotic Plaque Formation and Thrombosis","sectionImageId":"1506","sectionId":"1366"},{"title":"Cannabinoids: Physiological Neuronal Signaling Mediated by Endo- and Phytocannabinoids","sectionImageId":"2005","sectionId":"2921"},{"title":"Chemokines - Their Sources and Actions","sectionImageId":"2017","sectionId":"2932"},{"title":"Cholesterol Absorption, Transport and Metabolism","sectionImageId":"2986","sectionId":"1397"},{"title":"Coagulation Cascade Events Triggered after Atherosclerotic Plaque Rupture","sectionImageId":"1353","sectionId":"1373"},{"title":"Cytokine Receptor Signaling Pathways","sectionImageId":"1600","sectionId":"1405"},{"title":"Deaths Attributable to Cigarette Smoking","sectionImageId":"1427","sectionId":"1375"},{"title":"Dyslipidemia Targetscape","sectionImageId":"3426","sectionId":"4583"},{"title":"Endothelin-1 Receptor Signaling Pathways","sectionImageId":"1410","sectionId":"1413"},{"title":"Endothelins: Chemical Structures","sectionImageId":"348","sectionId":"1413"},{"title":"Foam Cell Formation","sectionImageId":"4170","sectionId":"5403"},{"title":"Helicobacter pylori: EM Image","sectionImageId":"1403","sectionId":"1375"},{"title":"Inducible Nitric Oxide Synthase Homodimerization","sectionImageId":"1023","sectionId":"1415"},{"title":"Liver Anatomy","sectionImageId":"1803","sectionId":"1374"},{"title":"Microsomal Triglyceride Transfer Protein (MTTP) Inhibition","sectionImageId":"3667","sectionId":"1392"},{"title":"PCSK9 Inhibitors in Atherosclerosis","sectionImageId":"3996","sectionId":"4726"},{"title":"PPAR/RXR Nuclear Receptor Signaling Pathway","sectionImageId":"1487","sectionId":"1387"},{"title":"PPARgamma: 3-Dimensional Structure","sectionImageId":"347","sectionId":"1412"},{"title":"Renin-Angiotensin-Aldosterone System: Regulation of Blood Pressure","sectionImageId":"1637","sectionId":"1415"},{"title":"Reverse Cholesterol Transport","sectionImageId":"341","sectionId":"1397"},{"title":"Statins: Mechanisms of Action for Cholesterol Reduction and Pleiotropic Effects","sectionImageId":"3289","sectionId":"1389"},{"title":"Vascular Inflammation in Atherosclerosis","sectionImageId":"1156","sectionId":"1405"}],"SuggestedReading":[{"section":"Websites","Links":[{"title":"American Heart Association","url":"www.heart.org"},{"title":"European Atherosclerosis Society","url":"www.eas-society.org"},{"title":"European Society of Cardiology","url":"www.escardio.org"},{"title":"International Atherosclerosis Society","url":"www.athero.org"},{"title":"International Society of Cardiovascular Pharmacotherapy","url":"www.iscpcardio.org"},{"title":"Japan Atherosclerosis Society","url":"http://jas.umin.ac.jp/en/"},{"title":"National Heart, Lung, and Blood Institute<BR>National Institutes of Health","url":"www.nhlbi.nih.gov"}]},{"section":"Publications","Links":[{"title":"Heart disease and stroke statistics - 2017 update (American Heart Association, 2017)","url":"http://circ.ahajournals.org/content/circulationaha/early/2017/01/25/CIR.0000000000000485.full.pdf"},{"title":"Heart disease and stroke statistics - 2018 update (American Heart Association, 2018)","url":"http://circ.ahajournals.org/content/137/12/e67"},{"title":"Heart disease and stroke statistics - 2019 update (American Heart Association, 2019)","url":"www.ahajournals.org/doi/pdf/10.1161/CIR.0000000000000659"}]},{"section":"Guidelines","Links":[{"title":"2012 update of the Canadian Cardiovascular Society guidelines for the diagnosis and treatment of dyslipidemia for the prevention of cardiovascular disease in the adult (Canadian Cardiovascular Society, November 2012)","url":"http://www.onlinecjc.ca/article/S0828-282X(12)01510-3/abstract"},{"title":"2016 ESC/EAS guidelines for the management of dyslipidaemias (European Society of Cardiology/European Atherosclerosis Society, August 2016)","url":"http://eurheartj.oxfordjournals.org/content/37/39/2999"},{"title":"2017 Focused update of the 2016 ACC expert consensus decision pathway on the role of non-statin therapies for LDL-cholesterol lowering in the management of atherosclerotic cardiovascular disease risk (American College of Cardiology, September 2017)","url":"www.onlinejacc.org/content/early/2017/08/30/j.jacc.2017.07.745"},{"title":"2018 AHA/ACC/AACVPR/AAPA/ABC/ACPM/ADA/AGS/APhA/ASPC/NLA/PCNA Guideline on the management of blood cholesterol (American Heart Association/American College of Cardiology, November 2018)","url":"http://www.onlinejacc.org/content/early/2018/11/02/j.jacc.2018.11.003"},{"title":"American Association of Clinical Endocrinologists' guidelines for management of dyslipidemia and prevention of atherosclerosis (American Association of Clinical Endocrinologists, 2012)","url":"www.aace.com/files/lipid-guidelines.pdf"},{"title":"An International Atherosclerosis Society position paper: Global recommendations for the management of dyslipidemia (International Atherosclerosis Society, 2013)","url":"http://www.athero.org/download/IASPPGuidelines_FullReport_20131011.pdf"},{"title":"Cardiovascular disease: Risk assessment and reduction, including lipid modification (National Institute for Health and Care Excellence, updated September 2016)","url":"http://www.nice.org.uk/guidance/CG181"},{"title":"ESC guidelines on the diagnosis and treatment of peripheral artery diseases (European Society of Cardiology, 2011)","url":"http://eurheartj.oxfordjournals.org/content/32/22/2851"},{"title":"European guidelines on cardiovascular disease prevention in clinical practice (version 2012) (European Society of Cardiology, 2012)","url":"http://eurheartj.oxfordjournals.org/content/33/13/1635"},{"title":"European Society of Cardiology/European Atherosclerosis Society Task Force consensus statement on proprotein convertase subtilisin/kexin type 9 inhibitors: Practical guidance (ESC/EAS, August 2017)","url":"academic.oup.com/eurheartj/article/38/29/2245/2418178"},{"title":"Familial hypercholesterolaemia is underdiagnosed and undertreated in the general population: Guidance for clinicians to prevent coronary heart disease: Consensus statement of the European Atherosclerosis Society (August 2013)","url":"http://eurheartj.oxfordjournals.org/content/34/45/3478.long"},{"title":"Guidelines for the management of familial hypercholesterolemia (Japanese Ministry of Health, Labour, and Welfare/Cardiovascular Research Foundation, 2012)","url":"www.jstage.jst.go.jp/article/jat/19/12/19_14621/_article"},{"title":"Homozygous familial hypercholesterolaemia: New insights and guidance for clinicians to improve detection and clinical management (European Atherosclerosis Society, July 2014) ","url":"http://eurheartj.oxfordjournals.org/content/35/32/2146.full"},{"title":"Integrated guidelines for cardiovascular health and risk reduction in children and adolescents (National Heart Lung and Blood Institute, December 2011)","url":"http://www.nhlbi.nih.gov/guidelines/cvd_ped/index.htm"},{"title":"National Lipid Association recommendations for patient-centered management of dyslipidemia: Part 1 - Executive summary (National Lipid Association, September 2014)","url":"http://www.lipidjournal.com/article/S1933-2874(14)00274-8/abstract"},{"title":"Pediatric addendum to CHMP guideline on clinical investigation of medicinal products in the treatment of lipid disorders (Committee for Medicinal Products for Human Use [CHMP], September 2012)","url":"http://www.ema.europa.eu/docs/en_GB/document_library/Scientific_guideline/2012/10/WC500133180.pdf"},{"title":"Screening for lipid disorders in children and adolescents: US Preventive Services Task Force recommendation statement (US Preventive Services Task Force, August 2016) ","url":"http://jamanetwork.com/journals/jama/fullarticle/2542642"},{"title":"Secondary prevention of atherosclerotic cardiovascular disease in older adults: A scientific statement from the American Heart Association (October 2013)","url":"http://circ.ahajournals.org/content/early/2013/10/28/01.cir.0000436752.99896.22"},{"title":"Statin use for the primary prevention of cardiovascular disease in adults: US Preventive Services Task Force recommendation statement (US Preventive Services Task Force, November 2016)","url":"http://jamanetwork.com/journals/jama/fullarticle/2584058"},{"title":"VA/DaD Clinical practice guideline for the management of dyslipidemia for cardiovascular risk reduction (Department of Veterans Affairs/Department of Defense, 2014)","url":"http://www.healthquality.va.gov/guidelines/CD/lipids/VADoDDyslipidemiaCPG.pdf"}]}]}]}"}],"title":"I pass a &quot;operation = siDiseaseBriefings and idList = 10 and fieldList = relatedNews,diseaseBriefingName,tableOfContents,glossary,mediaFiles,suggestedReading&quot; as parameter to &quot;RetrieveSIServiceREST&quot; operation","status":"passed"},{"date":"2019-06-15 01:14:17","title":"response contains &quot;List.RelatedNews&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:14:17","title":"response contains &quot;List.DiseaseBriefingName&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"DiseaseBriefings_10\")","time":"2019-06-15 01:14:18","title":"Check for the presence of mentioned tags in the response","steps":[{"date":"2019-06-15 01:14:18","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 01:14:18","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb24ubHMuc29hLnN0YWNrLnNvYXNlcnZpY2VzLnNlcnZpY2Uuc29hcC52MS5yZXRyaWV2ZS5SZXRyaWV2ZVNJSW5wdXQgeG1sbnM6bnMyPSJsb2NhbCI+PGFwcGxpY2F0aW9uSUQ+bmdhcGkjMTc1NjwvYXBwbGljYXRpb25JRD48dXNlcklEPkFQSTwvdXNlcklEPjxpZExpc3Q+PGlkPjEwPC9pZD48L2lkTGlzdD48ZmllbGRMaXN0PjxmaWVsZD5yZWxhdGVkTmV3czwvZmllbGQ+PGZpZWxkPmRpc2Vhc2VCcmllZmluZ05hbWU8L2ZpZWxkPjxmaWVsZD50YWJsZU9mQ29udGVudHM8L2ZpZWxkPjxmaWVsZD5nbG9zc2FyeTwvZmllbGQ+PGZpZWxkPm1lZGlhRmlsZXM8L2ZpZWxkPjxmaWVsZD5zdWdnZXN0ZWRSZWFkaW5nPC9maWVsZD48L2ZpZWxkTGlzdD48L25zMjpjb20udGhvbXNvbi5scy5zb2Euc3RhY2suc29hc2VydmljZXMuc2VydmljZS5zb2FwLnYxLnJldHJpZXZlLlJldHJpZXZlU0lJbnB1dD4="}],"title":"I pass a &quot;applicationID = ngapi#1756 and userID = API and idList = 10 and fieldList = relatedNews,diseaseBriefingName,tableOfContents,glossary,mediaFiles,suggestedReading&quot; as parameter to &quot;DiseaseBriefings_Soap&quot; operation","status":"passed"},{"date":"2019-06-15 01:14:18","title":"response contains &quot;glossary.letter&quot; in fields.","status":"passed"},{"date":"2019-06-15 01:14:18","title":"response contains &quot;suggestedReading.links.link.title&quot; in fields.","status":"passed"},{"date":"2019-06-15 01:14:18","title":"response contains &quot;suggestedReading.links.link.url&quot; in fields.","status":"passed"},{"date":"2019-06-15 01:14:18","title":"response contains &quot;suggestedReading.section&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_RetrieveSIDiseaseBriefings","time":"2019-06-15 01:14:17","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]