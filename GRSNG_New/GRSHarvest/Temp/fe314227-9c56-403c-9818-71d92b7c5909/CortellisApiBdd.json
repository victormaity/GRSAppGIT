[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"DiseaseBriefingsGlossary_07\")","time":"2019-06-15 01:14:19","title":"Check that all the tags are returned in the response","steps":[{"date":"2019-06-15 01:14:19","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-06-15 01:14:19","StepAttachment":[{"mime":"TXT","content":"aHR0cDovL213Yi5ldS13ZXN0LTEucHJvZGV1LnByb2QuY29ydGVsbGlzLmludC5jbGFyaXZhdGUuY29tOjgzNDcvbXIvUmV0cmlldmVTSVNlcnZpY2UvcmVzdC92MS9yZXRyaWV2ZS9zaURpc2Vhc2VCcmllZmluZ3MvZ2xvc3Nhcnk/ZGlzZWFzZUJyaWVmaW5nSWQ9NTU="},{"mime":"TXT","content":"{"List":[{"letter":"A","Terms":[{"term":"Acupuncture","value":"A technique used in China for over 3000 years and introduced in the U.S. and Canada in the 1970s to treat pain or disease. It is based upon qi (vital energy) which runs through pathways within the body called meridians. Fine needles are inserted just under the skin at specific points along the meridians to stimulate, disperse and balance the flow or energy, relieve pain and treat a variety of chronic, acute and degenerative conditions. \r\n\r\n"},{"term":"Acute","value":"Referring to a health-related state or exposure that indicates brief (short-term) duration and strong intensity."},{"term":"Adenoma","value":"A benign epithelial tumor of glandular origin.\r\n"},{"term":"Adenosine","value":"A naturally occurring purine nucleoside consisting of the nitrogenous base adenine linked to the sugar ribose that is an intermediate product of adenosine triphosphate (ATP) metabolism. It reduces systemic vascular resistance. Adenosine antagonists may be effective in the treatment of depression while adenosine A2A receptor agonists may be potential candidates for the treatment for inflammatory diseases such as asthma. Adenosine A1 and A3 receptor agonists are potential neuroprotective agents against the development of stroke."},{"term":"Adenosine Kinase","value":"The enzyme (EC 2.7.1.20) that catalyzes the phosphorylation of ribofurnosyl-containing nucleoside analogues at the 5'-hydroxyl using ATP or GTP as the phosphate donor and catalyzes the conversion of adenosine to AMP. Inhibition of this enzyme is a potential target for the treatment of chronic inflammatory bowel disease, rheumatoid arthritis and chronic pain."},{"term":"Adenovirus","value":"A DNA-containing virus that causes respiratory tract and eye infections. In gene therapy, adenoviruses are genetically modified to carry a specific gene effective against diseases such as certain types of cancer, cystic fibrosis and others."},{"term":"Adhesion","value":"The interaction of one cell with another, thereby controlling the position of a cell in lymphoid tissue or the migration of cells into tissues. It is also a prerequisite for antigen presentation and other immune effector functions."},{"term":"Adhesion Molecules","value":"Membrane-bound proteins that enable one cell to interact with another during leukocyte migration. These proteins often traverse the membrane and are linked to the cytoskeleton so that the cell may use them to gain traction on other cells or on the extracellular matrix as they migrate. These molecules are subdivided into several structural groups: selectins, immunoglobulin (Ig) supergene family and integrins. Some of these molecules are constitutively expressed by cells (e.g., CR3 on mononuclear cells), while others are induced by cytokines or cellular activation. Some must be synthesized (e.g., ICAM-1 in endothelium), while others are stored intracellularly and may be mobilized to the cell surface (LFA-1 in neutrophils)."},{"term":"Adjuvant Therapy","value":"A modality that is added to a primary therapy. It can involve the addition of a drug(s) or a procedure (i.e., surgical resection of cancer)."},{"term":"Akt","value":"An enzyme also known as protein kinase B (PKB) that is involved in the phosphoinositide 3-kinase (PI3K) signal transduction pathway. Its possesses numerous modulatory affects including activation of glycogen synthesis, glycolysis and platelet activation and mediation of antiapoptotic and cell survival signaling. It has been implicated as a major factor in many types of cancer due to effects on cell growth and proliferation.\r\n"},{"term":"Allele","value":"One of a series of different genes that occupy the same locus on a specific chromosome."},{"term":"Allergenic","value":"See Antigenic"},{"term":"Amyloidosis","value":"A diverse class of disorders characterized by the tissular accumulation of extracellular beta-sheet fibrils composed of amyloid A which leads to the displacement of normal structures and cellular dysfunction. Amyloid accumulation occurs in the brains of patients with Alzheimer's disease, in the pancreata of patients with type 2 diabetes and systemically in inflammatory diseases such as rheumatoid arthritis."},{"term":"Analgesia","value":"An insensitivity to pain."},{"term":"Anemia","value":"A condition characterized by too few circulating red blood cells resulting in insufficient oxygen to tissues and organs."},{"term":"Anemia, Iron Deficiency","value":"Iron deficiency anemia is one of the most common nutritional disorders and is due to excessive loss, deficient intake or poor absorption of iron. It is also known as nutritional hypochromic anemia. Iron is required for hemoglobin synthesis, which is responsible for the transport of oxygen in red blood cells. Red cells appear abnormal and are small (microcytic) and pale (hypochromic) in iron deficiency anemia.\r\n"},{"term":"Anergy","value":"Reduced or complete lack of normal immunological generalized or antigen-specific responses (i.e., induction of immune tolerance)."},{"term":"Angiogenesis","value":"The development of new blood vessels from existing ones. Persistent upregulation of this process has been implicated in the pathogenesis of solid tumors, hematologic malignanacies, ischemic heart disease, atherosclerosis, psoriasis, rheumatoid arthritis, diabetic retinopathy and age-related macular degeneration. The inhibition of angiogenesis is an attractive antitumor therapeutic strategy that may also be effective in the treatment of rheumatoid arthritis. The induction of therapeutic angiogenesis has been proposed as a method of treating stroke and angina pectoris."},{"term":"Angiopoietin-1 (ANGPT1)","value":"A modulator of angiogenesis. ANGPT1 binds to the TIE-2 receptor tyrosine kinase and is involved in vascular endothelial growth. See also Angiopoietin-2 (ANGPT2)"},{"term":"Angiopoietin-2 (ANGPT2)","value":"A modulator of angiogenesis that functions as an antagonist for angiopoietin 1  (ANGPT1) by binding to the TIE-2 receptor. It is expressed in remodeling vascular sites. ANGPT2 is abundant in growing blood vessels and promotes angiogenesis driven by vascular endothelial growth factor (VEGF). In combination with VEGF, it may facilitate endothelial cell migration and proliferation, thus leading to a wide variety of malignancies. Antagonism of ANGPT2 may be effective in the treatment of various cancers including colorectal cancer and hepatocellular carcinoma. See also Angiopoietin-1 (ANGPT1)\r\n\r\n"},{"term":"Ankylosing Spondylitis","value":"A chronic, painful, autoimmune, progressive inflammatory type of arthritis (also known as Bechterew's disease/syndrome, Marie Strümpell disease, spondylarthritis, spondyloarthritis) that primarily affects the lower vertebrae and sacroiliac joints and can eventually cause fusion of these areas. The disease may spread to higher vertebra causing the entire spine to become rigid with the loss of normal curvature and movement. Pain and stiffness can spread to the rib cage, causing difficulties with chest expansion. Other joints may be involved, including the hip, knee, elbows, hands and ankles. The accompanying inflammation may also affect the gastrointestinal tract and eyes and, in rare cases, the lungs and heart. Although the cause is unknown, genetic components appear to play a major role. Individuals with HLA-B gene variants, particularly HLA-B27, have an increased risk for developing the disease."},{"term":"Anti-RA33 Antibody","value":"A serum marker used in the diagnosis of rheumatoid arthritis that is directed against a specific ribonuclear protein complex (i.e., autoantigen RA33). Autoantibodies against RA33 are detected in the sera of 30% of RA patients, but only occasionally in sera from patients with other connective tissue diseases. Recent evidence suggests that RA33 may be the same protein as A2 of the heterogeneous nuclear ribonucleoprotein (hnRNP) complex."},{"term":"Antibody","value":"A protein synthesized by B lymphocytes in response to an antigen that has the ability to specifically bind with said antigen. Antibodies are the soluble form of the B cell's specific antigen receptors and are collectively referred to as immunoglobulins (Igs). Igs are produced in many different forms, each with different amino acid sequences and antigen binding sites. Through recruiting the complement system and various white blood cells, they protect the body by inactivating viruses and bacterial toxins and by killing invading microorganisms and larger parasites."},{"term":"Antigen","value":"Any molecule specifically recognized by B and/or T cells that can induce the formation of a specific antibody. For vaccines, the term antigen refers to a vaccine component that induces protection against a single disease."},{"term":"Antigenic","value":"Having the properties of an antigen. Synonyms include immunogenic and allergenic."},{"term":"Antikeratin Antibody (AKA)","value":"An autoantibody directed against human filaggrin and (pro) filaggrin-related proteins of buccal epithelial cells that when detected in serum can be an indication of rheumatoid arthritis. This marker is not as specific as rheumatoid factor (RF). Recent evidence suggests that AKA and antiperinuclear factor (APF) are the same autoantibody and that it recognizes citrulline-containing epitopes in antibodies present early in the pathogenesis of RA, before other disease manifestations occur."},{"term":"Antiperinuclear Factor (APF)","value":"An autoantibody directed against human filaggrin and (pro) filaggrin-related proteins of buccal epithelial cells that when detected in serum can be an indication of rheumatoid arthritis. Recent evidence suggests that APF and Antikeratin Antibody (AKA) are the same autoantibody and that it recognizes citrulline-containing epitopes in antibodies present early in the pathogenesis of RA, even before other disease manifestations occur."},{"term":"Antisense","value":"Refers to the complementary strand of a coding sequence of DNA (antisense DNA) or mRNA (antisense RNA). These nucleotide sequences are not templates for synthesis but interact with complementary sequences in other molecules thereby affecting their function. Antisense therapy uses a DNA or RNA sequence that has the reverse orientation (i.e., opposite \"sense\"; antisense oligonucleotide) of the DNA or RNA sequence present in a specific disease-causing target gene and when administered, it will bind to the target gene and inhibit its expression.  See also Antisense Oligonucleotide"},{"term":"Antisense Oligonucleotide","value":"Complementary strands of small segments of mRNA that bind to specific mRNA sequences encoding for disease-causing proteins. Pairing of mRNA with antisense fragments blocks initiation of protein synthesis by reducing the availability of mRNA to ribosomes. Antisense oligonucleotides have been used to inhibit viral infections and to treat cancer and other diseases."},{"term":"Apoptosis","value":"An active form of cell death in which intrinsic cellular genetic programs are activated, leading to cellular suicide. Also known as programmed cell death."},{"term":"Arachidonic Acid (AA)","value":"A polyunsaturated essential fatty acid (5,8,11,14-eicosatetraenoic acid) present in cell membranes that is an intracellular second messenger in biological systems. It is the precursor of eicosanoids, thromboxanes and hydroxyeicosatetraenoic acid derivatives including leukotrienes (via cyclooxygenase or lipoxygenase metabolism). See also Polyunsaturated Fatty Acids (PUFAs)"},{"term":"Arthritis","value":" A group of disorders involving inflammation of the joints that includes more than 100 different conditions (e.g., rheumatoid arthritis, osteoarthritis, ankylosing spondylitis, carpal tunnel syndrome, gout, polymyalgia rheumatica, childhood arthritis, etc.) "},{"term":"Arthritis, Psoriatic","value":"See Psoriatic Arthritis"},{"term":"Attenuate","value":"A gradual reduction."},{"term":"Autoimmune Disease","value":"A disorder in which the body's immune system starts a defensive attack directed against its own tissues."},{"term":"Autosomal Dominant","value":"A genetic trait that is expressed when it is present as a single allele. Thus, only one affected parent is needed to pass it to offspring. \r\n"},{"term":"Autosomal Recessive","value":"A genetic trait that is only expressed when it is present on both alleles of a gene. Thus,  two chromosomes bearing the gene anomaly are required, one from each parent. The risk of transmitting an autosomal recessive disease is 1/4 (25%) at each pregnancy.\r\n\r\n"},{"term":"Autosome","value":"A chromosome not involved in sex determination. The diploid human genome consists of 46 chromosomes: 22 pairs of autosomes in both males and females and 1 pair of sex chromosomes (XX in females and XY in males).\r\n"},{"term":"Axon","value":"A single process (0.25 to more than 10 microns in diameter) of a neuron that conducts impulses away from the cell body and dendrites of that neuron. In contrast to dendrites, which are usually 1.5 mm in length, axons can reach up to 50 cm in length. Those axons that are 0.5 microns in diameter are usually encased in a myelin sheath. In the brain and spinal cord (CNS), oligodendroglia cells are responsible for the sheath, while Schwann cells make up the sheath in the peripheral nervous system. In general, axons transmit impulses to other nerve or effector cells via synaptic terminals."}]},{"letter":"B","Terms":[{"term":"B Cell","value":"One of two major classes of lymphocytes that develop in adult bone marrow and in the fetal liver of mammals. B cells express surface immunoglobulins (Igs), which act as specific antigen receptors. Naive B cells (i.e., B cells that have never been activated) express variable levels of both IgM and IgD isotypes. With a few exceptions, B cell activation is dependent on both recognition of a specific antigen and T cell help. Activated B cells divide and differentiate into either memory cells or plasma cells. Memory B cells are long-lived and express antigen receptors other than IgM or IgD; they have undergone rearrangements in their Ig genes that result in increased affinity for that particular antigen. Plasma cells are short-lived and secrete large amounts of Igs (i.e., the soluble form of the antigen receptor)."},{"term":"B Cell Activating Factor (BAFF)","value":"B cell activating factor (BAFF) is also known as tumor necrosis factor ligand superfamily member 13B (TNFLSF13B), B lymphocyte stimulator (BLyS), TNF- and APOL-related leukocyte expressed ligand (TALL-1) and the dendritic cell-derived TNF-like molecule (CD257 antigen; cluster of differentiation 257). It is a 285 amino acid transmembrane glycoprotein expressed on several cell types including monocytes, dendritic cells and bone marrow stromal cells; there is also a soluble protein fragment resulting from the cleavage of the transmembrane form from the membrane. BAFF binds to three TNF receptors: BAFF-R expressed on mature B lymphocytes; TACI expressed on mature B lymphocytes and a subset of T cells; and BCMA expressed on mature B lymphocytes and plasma cells. Signaling through BAFF-R and BCMA stimulates B lymphocyte proliferation. BAFF has been implicated in the pathogenesis of autoimmune diseases such as multiple sclerosis, myasthenia gravis, rheumatoid arthritis, Sjogren's syndrome and systemic lupus erythematosus through the role it plays in promoting survival and maturation of autoreactive B cells."},{"term":"B Lymphocyte Stimulator (BLyS)","value":"See B Cell Activating Factor (BAFF)"},{"term":"B7-1 (CD80 Antigen)","value":"CD80 antigen is a protein expressed on the surface of antigen presenting cells. It is a member of the B7 costimulatory family. It binds to CD28 present on T lymphocytes and is involved in costimulation and proliferation. Targeting could be effective in the treatment of autoimmune diseases such as GVHD. In addition, upregulation of the CD80 antigen is associated with non-Hodgkin lymphoma (NHL), where it enhances the proliferation and the survival of malignant B and T cells. Thus, antibodies against CD80 antigen may be an effective treatment against NHL."},{"term":"B7-2 (CD86 Antigen)","value":"CD86 antigen is a membrane protein of the B7 costimulatory family that stimulates T cell activation by binding the CD28 antigen. However, it inhibits T cell activation when it binds to CTLA-4. Targeting could be effective in the treatment of autoimmune diseases such as GVHD\r\n"},{"term":"BAFF","value":"See B Cell Activating Factor (BAFF)"},{"term":"Bioavailability","value":"The proportion of an administered drug absorbed into the bloodstream, indicating the physiological concentration of that drug."},{"term":"Biomarker","value":"Characteristic that is objectively measured and evaluated as an indicator of normal biological processess, pathogenic processess or pharmacologic responses to a therapeutic intervention."},{"term":"Bisphosphonates","value":"A class of compounds that are synthetic analogues of pyrophosphate, an endogenous inhibitor of mineral deposition. These compounds prevent bone resorption and increase bone mineral density and are used clinically in the management of Paget's disease, tumor-induced hypercalcemia and osteolysis and osteoporosis. They are thought to act through inhibition of osteoclast activity."},{"term":"Blind Trial, Single- or Double-","value":"See Single-Blind and Double-Blind"},{"term":"BLyS","value":"See B Cell Activating Factor (BAFF)"},{"term":"BMP-2","value":"See Bone Morphogenetic Protein-2 (BMP-2)"},{"term":"Bone","value":"A hard connective tissue consisting of cells embedded in a matrix of mineralized ground substance and collagen fibers impregnated with a form of calcium phosphate, carbonate, citrate sodium and magnesium. Bone is composed of a dense outer layer of compact and cortical bone covered by the periosteum and an inner loose, spongy cancellous bone portion. The center of the bone is filled with marrow. Bone forms a part of the skeleton with about 200 distinct ossa evident. Also known as os (plural, ossa)."},{"term":"Bone Morphogenetic Protein-2 (BMP-2)","value":"A member of the TGF-beta family of cytokines that promotes osteoblastic cell differentiation and osteogenesis."},{"term":"Bone Spur","value":"See Osteophyte\r\n"},{"term":"Bone, Cancellous","value":"Bone in which the trabeculae form a latticework (cancellous) in which the interstices are filled with marrow. Also known as substantia spongiosa, trabecularis, trabecular bone and spongy bone."},{"term":"Bone, Compact","value":"The compact and noncancellous portion of bone that is composed of concentric lamellar osteons and interstitial lamellae."},{"term":"Bone, Cortical","value":"The outer, thin layer of compact bone."},{"term":"Bone, Lamellar","value":"Normal adult mammalian bone composed of parallel lamellae in the cancellous bone and concentric lamellae in compact bone."}]},{"letter":"C","Terms":[{"term":"C-Jun N-terminal Kinases (JNK)","value":"JNK, also known as stress-activated protein kinases or SAPK, belongs to the mitogen-activated protein kinase (MAPK) family and represents a group of enzymes that modulate the expression of genes controlling immune responses, proliferation and cell death. It is activated by exposure of cells to cytokines and environmental stress. Genetic deletion of JNK1 or JNK2 results in disruption of the regulation of CD4+ cell differentiation to Th1 or Th2 subsets and may represent a new therapeutic approach for modulating Th1 and Th2 diseases. The JNK signaling pathway also has been implicated in neuronal death. Small-molecule inhibitors of this pathway may promote neuronal survival and be potentially useful for the treatment of Parkinson's disease. In addition, JNK inhibitors have been shown to suppress joint destruction in animal models of rheumatoid arthritis."},{"term":"C-Reactive Protein (CRP)","value":"A member of the pentraxin family and complement system that is produced by hepatocytes in response to prostaglandin E1 or parogen during periods of inflammation. It is detectable in serum in various disease conditions (e.g., rheumatoid arthritis, lupus, pneumococcal pneumonia, rheumatic fever, cancer, tuberculosis and myocardial infarction) and particularly during the acute phase of immune response; C-reactive protein should normally be negative in the bloodstream. It consists of five polypeptide subunits (total molecular weight = 105 kD) and binds to polysaccharides present in  bacterial and fungal cell walls or surfaces in addition to lecithin, phosphoryl or choline containing molecules. See also Pentraxins and Complement System"},{"term":"Cachexia","value":"Weight loss and wasting which accompany chronic disease or emotional disturbances. Tumor necrosis factor (TNF), which mobilizes fat, may be involved in cachexia."},{"term":"cAMP (cyclic 3´,5´-Adenosine Monophosphate)","value":"The 3', 5' cyclic ester of adenosine monophosphate (AMP) which acts as a second messenger in signal transduction pathways. cAMP is generated from adenosine 5'-triphosphate (ATP) by the action of adenylate cyclase which is coupled to hormone receptors by G proteins. cAMP activates a specific protein kinase and is inactivated by phosphodiesterase forming 5' AMP. cAMP is responsible for smooth muscle relaxation during bronchodilation, increased ciliary beat frequency and decreased mucus viscosity."},{"term":"Cancer","value":"The abnormal, rapid, unorganized and uncontrolled proliferation of new tissue. The malignant tissue develops from a single cell that has undergone mutations in its DNA. This cell does not mature noramlly and eventually die but it divides prolifically. There are approximately 200 different types of cancers. Cancers arising from epithelial cells are called carcinomas and those arising from mesenchymal tissues are called sarcomas. Leukemias are also classified as malignant growths. Cancer cells can invade nearby tissues (i.e., metastasis) and can spread through the bloodstream and lymphatic system to other parts of the body."},{"term":"Cartilage","value":"A nonvascular, firm connective tissue composed of chondrocytes and an interstitial matrix of collagen fibers and ground substance. There are three types of cartilage: hyaline, elastic and fibrocartilage. It is resilient and flexible and found in joints, thorax walls and tubular structures (i.e., larynx, air passages, ears). It makes up the skeleton in the early fetus, and is later replaced by bone."},{"term":"Cartilage, Articular","value":"The cartilage that covers the articular surfaces of bones in a synovial joint."},{"term":"Cathepsin S","value":"A cysteine protease (EC 3.4.22.27) involved in the regulation of intracellular trafficking of MHC class II molecules (i.e., regulates degradation of the invariant chain [li] of class II-Ii complexes) to the cell surface in antigen presenting cells therefore affecting immune responses. Inhibitors of this enzyme are potentially useful in the treatment of several inflammatory diseases such as asthma, COPD, emphysema, chronic bronchitis and ARDS. The enzyme has also been found to be localized at sites of vascular matrix remodeling. Cytokine-stimulated vascular intimal smooth muscle cells and macrophages that have migrated into and accumulated within developing intimal plaques can use this enzyme to degrade extracellular elastin. This suggests that cathepsin S plays a role in vessel wall remodeling and may be a potential therapeutic target for regulating plaque stability in atherosclerosis. It is also a potential target for the treatment of COPD."},{"term":"CCR1","value":"See Chemokine (C-C motif) receptor 1 (CCR1)"},{"term":"CCR2","value":"See Chemokine (C-C motif) receptor 2 (CCR2)"},{"term":"CD System","value":"Organization of cell surface molecules (markers) that are unique to different subsets of lymphocytes and other cell types (i.e., Natural Killer [NK] cells, monocyte/macrophages, granulocytes, follicular dendritic cells [DCs], thymocytes, interdigitating DCs, endothelium, epithelium). CD markers, of which more than 200 have been identified, are found on the cell surface and can be specific for a population of cells, stage of differentiation or activation. For example, CD2 and CD3 are markers for T cells; CD4 and CD8 are markers for T cell subsets; CD25 is a marker for activated T cells; and CD19 and CD20 are markers for B cells. Accurate identification of a cell population is often achieved by assessing the expression of several, rather than one, CD molecule."},{"term":"CD154","value":"See CD40 ligand (CD40L; CD154)"},{"term":"CD19","value":"A transmembrane glycoprotein that belongs to the immunoglobulin superfamily and is ubiquitously expressed on cells of B lymphocyte lineage. Its expression is induced when a hematopoietic stem cell makes a commitment to differentiate along B cell lineage, expression is continued throughout differentiation and is, finally, downregulated when a B lymphocyte becomes a plasma cell. It is a critical player in activation of naïve B-cells since binding of an antigen to B-cell receptor does not create a signal of sufficient strength for activation of a naïve B-cell. CD19 forms part of a B-cell co-receptor complex, which also includes CD21, CD81 and CD225, and participates in cross-linking with B-cell receptor. The cross-linking event brings into proximity Lyn kinase and leads to phosphorylation of the CD19 cytoplasmic tail. Subsequently, phosphorylated cytoplasmic tail of CD19 serves as a platform to bind and activate signaling molecules responsible for propagation of the initial stimuli, increasing the signal intensity by 1,000-10,000-fold. Mutations in the CD19 gene have been found to cause a specific type of hypogammaglobulinemia in which the response of mature B cells to antigenic stimulation is defective. In cancer, since CD19 expression is preserved on B-cells that have undergone malignant transformation, its application as a marker and as a target for anticancer antibodies has been widely studied in non-Hodgkin's lymphoma (NHL) and acute lymphocytic leukemia (ALL). Monoclonal antibodies against CD19 coupled to toxins have shown promising results both in preclinical and clinical studies."},{"term":"CD20","value":"A 33- to 37-kDa transmembrane glycoprotein of the immunoglobulin superfamily that is expressed on the surface of normal and malignant B cells, residing within lipid rafts of the phospholipids membrane where it functions as a store-operated calcium channel following the ligation of the B cell receptor with antigen. No natural ligands of CD20 have been identified. However, CD20 has been shown to participate in antibody-dependent cellular cytotoxicity (ADCC), complement-dependent cellular cytotoxicity (CDCC) and cell growth. Immunohistological studies of specimens from patients with ankylosing spondylitis (AS) removed during spinal surgery have shown significantly increased numbers of CD20 + B cells within joints exhibiting persistent inflammatory lesions. Antibodies directed against CD20 may be effective in the treatment of AS as well as chronic lymphocytic leukemia (CLL) and autoimmune conditions such as rheumatoid arthritis, systemic lupus erythematosus and multiple sclerosis."},{"term":"CD28","value":"CD28 is a type I membrane protein member of the immunoglobulin superfamily involved in T-cell costimulation that regulate immunity through enhancement and inhibition of T-cell responses. Naïve T cells require two signals for proper activation and acquisition of effector function. One signal derives from the T-cell receptor (TCR) recognizing its cognate peptide in the context of self-MHC and the second one is triggered by costimulatory molecules. Costimulation via CD28 is recognized as the most important for costimulating naïve T cells inducing cell proliferation and cytokine production and targeting of this protein may be effective in the treatment of various autoimmune diseases. It has been observed that CD28-mediated costimulation is essential for differentiation of functional tumor-specific CD8+ T-effector cells. Moreover, recent results demonstrate significantly enhanced activity of tumor-specific T cells after administration of anti-CD28 antibodies. In melanoma therapy, CD28 and the melanoma associated proteoglycan CSPG4 (MCSP) antigen are being targeted.\r\n"},{"term":"CD3 (T Cell Receptor Complex)","value":"The CD3 antigen is a protein complex composed of four distinct chains: CD3gamma chain, CD3delta chain and two CD3epsilon chains. These chains are highly homologous cell surface proteins that are members of the immunoglobulin superfamily and contain a single extracellular immunoglobulin domain. The transmembrane region of these CD3 chains is negatively charged allowing them to associate with the positively charged T cell antigen receptor (TCR) chains (TCRalpha and TCRbeta). The intracellular tails of the CD3 chains contain a single conserved motif known as an immunoreceptor tyrosine-based activation motif (ITAM) which is essential for the signaling capacity of the TCR. Association of the CD3 chains with TCR and the zeta-chain (accessory molecules of TCR) generates an activation signal in T lymphocytes. Thus, the TCR complex is composed of the TCR, zeta-chain and CD3 molecules. CD3+ T cells are increased in patients with Crohn's disease. Therefore modulation of the CD3 complex on T cells may be beneficial in the treatment of the disease."},{"term":"CD4","value":"CD4 (cluster of differentiation 4) is a transmembrane glycoprotein and member of the immunoglobulin (Ig) superfamily of receptors that is expressed on the surface of T helper (Th) cells, regulatory T cells, monocytes, macrophages and dendritic cells. It is a coreceptorthat together with the T cell receptor (TCR) activates the T cell following interaction with MHC class II molecules present on the surface of antigen presenting cells. CD4 amplifies the signal generated by the TCR by recruiting the tyrosine kinase lck. It has four Ig domains (D1-D4) exposed on the extracellular surface of the cell and uses the D1 domain to interact with the beta2-domain of MHC class II molecules. T cells expressing CD4 molecules (not CD8) on their surface are MHC class II-restricted, specific for antigens presented by MHC II and not by MHC class I. CD4 is a primary receptor used by HIV-1 to gain entry into host T cells. In multiple sclerosis (MS), myelin antigen-specific CD4+ T cells become activated in the peripheral immune compartment and cross the blood-brain barrier to trigger the disease. Commitment of T cells to proinflammatory effector T helper cell lineages (e.g., IL-17-producing CD4+ T cells or Th17 cells) appears to be an important inducer of organ-specific autoimmunity and studies suggest that Th17 cells are the dominant pathogenic cellular component in MS and other autoimmune inflammatory diseases. Decreasing myelin-specific CD4+ T cell responses with an anti-CD4 antibody, for example, could reduce demyelination and decrease immune cell infiltration into the CNS and thus, reduce subsequent initiation and progression of the autoimmune response. See also CD4+ T Cells"},{"term":"CD4+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta; TCR-2) and the CD4 marker. The TCR recognizes the antigen associated with major histocompatibility complex (MHC) on the surface of the antigen presenting cell (APC), while the CD4 molecule recognizes the class II MHC molecule only. Therefore, CD4 determines that a given T cell be class II- rather than class I-restricted. CD4 also contributes to T cell activation by providing biochemical signals to the T cell at the time of antigen presentation. CD4+ cells can be subdivided into Th0, Th1, Th2 or Th3 populations, depending upon the cytokine profile they secrete. CD4+ cells have been implicated in the development and progression of rheumatoid arthritis. See also CD4"},{"term":"CD40","value":"A member (also known as tumor necrosis factor receptor type 5; TNFR5) of the TNF receptor (TNF) superfamily that is expressed by a number of different cell types including immune, hematopoietic, vascular and epithelial, as well as tumor cells. It is a receptor for CD154, however CD40 itself lacks intrinsic kinase activity and employs adapter molecules to mediate its effects on such processes as proliferation, survival and, most importantly, immune response. It has been shown that CD154-CD40 ligation activates NF-kappaB and JNK signaling, and CD40 engagement induces tumor regression via an indirect effect of immune activation and a direct cytotoxic effect on the tumor. Various anti-CD40 antibodies have reached clinical evaluation in patients with chronic lymphocytic leukemia and other hematologic malignancies. Moreover, studies have shown that the number of CD40+ macrophages was significantly elevated in both histologically inflamed and noninflamed colon and ileum of IBD children. Antagonism of CD40 may control the inflammation observed in Crohn's disease. "},{"term":"CD40 ligand (CD40L; CD154)","value":"A costimulatory molecule primarily expressed on activated CD4+ T lymphocytes that is a member of the TNF family of molecules (also known as Tumor Necrosis Factor Ligand Superfamily Member 5; TNFSF5). It is also found in a soluble form (sCD40L). It binds to CD40 on antigen-presenting cells (APC) to induce activation of APC in association with T cell receptor stimulation by MHC molecules on the APC. CD40L-CD40 ligation regulates B cell function and activates NF-kappaB and JNK signaling. It also induces tumor regression via an indirect effect of immune activation and a direct cytotoxic effect on the tumor. Soluble CD40L (sCD40L) has been shown to be directly involved in the development of vascular damage  and circulating levels are enhanced in patients with Alzheimer's disease (AD) suggesting a possible role in the pathogenesis in this disease. sCD40L may also be contribute to inflammation which affects neuronal survival in HIV type 1 dementia. significantly higher sCD40L levels were detected in cerebrospinal fluid and plasma from HIV-infected patients with cognitive impairment as compared with their nonimpaired HIV-infected controls."},{"term":"cDNA","value":"See Complementary DNA (cDNA)\r\n"},{"term":"Central Nervous System (CNS)","value":"The portion of the nervous system encompassing the brain and spinal cord."},{"term":"Chemokine (C-C motif) receptor 1 (CCR1)","value":"A G-protein-coupled receptor of the beta chemokine receptor subfamily that signals through increases in intracellular calcium levels. It acts as a receptor for macrophage inflammatory protein 1 alpha (MIP-1 alpha), regulated on activation normal T expressed and secreted protein (RANTES), monocyte chemoattractant protein 3 (MCP-3) and myeloid progenitor inhibitory factor-1 (MPIF-1). CCR1 is essential for recruitment of effector immune cells to a site of inflammation. Monocyte infiltration is implicated in a variety of diseases including multiple myeloma, rheumatoid arthritis and multiple sclerosis (MS) and CCR1 activation results in meditation of monocyte trafficking to sites of inflammation. Antagonism of CCR1 may therefore be effective in the treatment of MS.\r\n"},{"term":"Chemokine (C-C motif) receptor 2 (CCR2)","value":"CCR2 is a 7-transmembrane, GPCR expressed on monocytes and mast cells as well as B cells, T cells, megakaryocytes, basophils, eosinophils, fibroblasts, astrocytes, dendritic cells, chondrocytes, colonocytes, endothelial cells, enterocytes, Langerhans cells, epithelium cells, smooth muscle cells and synoviocytes. Two isoforms have been identified (CCR2A and CCR2B) which bind monocyte chemoattractant protein-1 (MCP-1); agonist-induced activation of the receptors results in calcium mobilization and inhibition of adenylyl cyclase. MCP-1/CCR2 interactions are responsible for mediation of monocyte recruitment to sites of inflammation such as that seen in MS. Antagonism of the receptor may be effective for the treatment of rheumatoid arthritis and multiple sclerosis. "},{"term":"Chemokine CXC receptor 3 (CXCR3)","value":"CXCR3, also known as GPR9 and CD183, is a GPCR (Galphai) and member of the CXC chemokine receptor family.  There are two variants: CXCR3-A which binds to the CXC chemokines CXCL9 (MIG), CXCL10 and CXCL11 (IP-10, I-TAC) and CXCR3-B which binds CXCL4 in addition to CXCL9, CXCL10, and CXCL11. It induces cellular responses involved in leukocyte trafficking and is involved in inflammatory diseases such as rheumatoid arthritis and multiple sclerosis (MS). While CXCR3 expression has been shown to be reduced in noninflammatory (silent) MS lesions, its expression is upregulated in the inflammatory form of the disease. Antagonism of this receptor may interfere with activation of T lymphocytes and their migration to the CNS and therefore be beneficial in the treatment of inflammation associated with MS.\r\n"},{"term":"Chemokine CXCR2 Receptor","value":"See Interleukin 8 (IL-8) beta Receptor"},{"term":"Chemokine CXCR4 Receptor","value":"CXCR4, also known as fusin, is an alpha-chemokine, 7-transmembrane G-protein-coupled receptor that specifically binds stromal cell-secreted CXCL12 (also called stromal cell-derived factor-1; SDF-1) and transduces a signal by increasing intracellular calcium ion levels. CXCR4 displays potent lymphocytic chemotactic activity and plays a role in hematopoiesis, neuronal and cardiovascular development, the spread and progression of tumors and organization of the immune system. CXCR4 is found on the surface of both hematopoietic and nonhematopoietic tumor cells. Interaction between this receptor and its ligand CXCL12 regulates hematopoietic stem cell quiescence and homing. Antagonism of CXCR4 releases and mobilizes hematopoietic stem cells into the bloodstream which is a crucial step in stem cell transplantation. CXCR4 is also implicated in cancer cell migration and metastasis, since it promotes tumor spread to organs where CXCL12 is expressed (e.g., bone marrow). CXCL12 itself can stimulate survival and growth of neoplastic cells in a paracrine fashion and can promote tumor angiogenesis by attracting endothelial cells to the tumor microenvironment. CXCR4 has been demonstrated to be involved in several diseases, including cancer cell metastasis, leukemia cell progression, rheumatoid arthritis (RA) and pulmonary fibrosis and CXCR4 is used by human immunodeficiency virus (HIV) to enter host cells. CXCR4 antagonism therefore is a potential therapeutic target to treat HIV infection, inflammatory diseases, cardiovascular diseases and cancer, including breast, lung and prostate cancer and hematologic cancers such as multiple myeloma, acute myeloid leukemia (AML) and non-Hodgkins lymphomas (NHL)."},{"term":"Chemokine Receptors","value":"G-protein-linked, 7-transmembrane (i.e., serpentine) receptors that bind chemokines and are used as coreceptors for the binding of immunodeficiency viruses (HIV, SIV, FIV) to leukocytes. Individuals deficient in particular CCRs seem to be resistant to HIV-1 infection. CXCR4 is a coreceptor for T-tropic viruses. CCR5 is the receptor for MIP-1alpha, MIP-1beta and RANTES and a primary coreceptor with CR4 for cell entry of macrophage-tropic HIV-1 strains. CCR5 is also implicated in asthma, rheumatoid arthritis and multiple sclerosis. Antagonists to the CCR1 (binds MIP-1alpha, RANTES, MIP-5/HCC-2), CCR2 (binds MCP-1, MCP-3, MCP-4) and CCR3 (binds, RANTES, MCP-2, MCP-3, MCP-4, eotaxin, MIP-5/HCC-2) receptors are under development for treatment of rheumatoid arthritis."},{"term":"Chemokines","value":"A large group of small polypeptide cytokines (e.g., IL-8, PF4, MCP-1, MIP-1alpha, RANTES) with proinflammatory activities synthesized by several cell types (e.g., monocytes, macrophages, T cells, mast cells, fibroblasts, endothelial cells, platelets, epithelium, microglial cells, keratinocytes). These molecules display a certain degree of selectivity for various immune cell types and are involved in activation of leukocytes during transendothelial migration and chemotaxis in tissues. The chemokine family is composed of two main subgroups: CC chemokines which contain two adjacent cysteine residues and CXC chemokines in which the two cysteine residues are separated by another amino acid. CXC chemokines are further subdivided into ELR+ or ELR- chemokines, where ELR indicates the amino acids (Glu-Leu-Arg) preceding the first cysteine residue. ELR+ chemokines are chemotactic for neutrophils and ELR- chemokines are chemotactic for lymphocytes."},{"term":"Chimera","value":"An organism made up of two genetically distinct cell types. It is created by fusing two early blastula stage embryos, by reconstituting bone marrow in an irradiated recipient or by somatic segregation."},{"term":"Chondrogenesis","value":"The formation of new cartilage from chondroprogenitor cells. Chondrogenic growth factors such as IGF-I and TGF-beta stimulate this process.\r\n"},{"term":"Chronic","value":"A term referring to a health-related state or exposure that signifies prolonged (long-term) duration. In some instances, it can indicate low intensity."},{"term":"Ciclosporin","value":"See Cyclosporine"},{"term":"CL (Total Body Clearance)","value":"A pharmacokinetic parameter that refers to total body clearance or the volume of plasma completely cleared of drug per unit time. Units include ml/min or l/h (i.e., volume/time). Clearance can also refer to elimination of a compound from the body only via the kidneys. This form of clearance is designated CLr."},{"term":"Collagen","value":"The major water-insoluble protein that forms the white fibers of connective tissue, cartilage and bone. The protein is high in glycerine, L-alanine, L-proline and L-4-hydroxyproline but does not contain L-tryptophan and only low amounts of sulfur. Several types (about 11) of collagen have been identified including type I, II, III and IV."},{"term":"Collagenase-1 (MMP-1)","value":"A member (EC 3.4.24.7) of the matrix metalloprotease (MMP) family of enzymes that is a key factor in tissue and joint destruction in chronic inflammatory conditions such as periodontitis and rheumatoid arthritis. See also Matrix Metalloproteinases (MMPs)"},{"term":"Complement System","value":"A group of serum molecules that mediate inflammation and opsonization of antigens and microorganisms in addition to controlling lysis of pathogens or cells sensitized with antibody. These serum molecules may be activated via the classical pathway involving activation by immune complexes binding to C1q subcomponent of C1, which has six Fc binding sites, or by an alternative pathway that can involve activation in the presence of suitable surface molecules, such as microbial products. Complement components interact with each other, so that a small stimulus can result in a cascade of activity."},{"term":"Complementary DNA (cDNA)","value":"Deoxyribonucleic Acid (DNA) synthesized a mature (i.e., fully spliced) mRNA template in a reaction catalyzed by reverse transcriptase (RT). RT acts on a single strand of mRNA yielding a sequence of DNA that complements the mRNA template; this strand of DNA is cDNA and can be used to clone eukaryotic genes in prokaryotes. RT generates its cDNA based on the pairing of RNA base pairs (A, U, G and C) to their DNA complements (T, A, C and G respectively).\r\n"},{"term":"Corticosteroids","value":"A class of steroid hormones that are produced in the adrenal cortex and are involved in many physiologic processes including among others stress responses, immune responses, inflammation, carbohydrate metabolism, protein catabolism, electrolyte homeostasis and behavior. The class includes both glucocorticoids and mineralocorticoids although corticosteroid is often used synonymously for glucocorticoid. Corticosterone, cortisone and aldosterone are common endogenous corticosteroids. Corticosteroids have been shown to be effective for a number of indications including cancer, asthma, allergic rhinitis, rheumatoid arthritis, nausea, COPD and inflammatory bowel disease."},{"term":"Costimulation","value":"Costimulation is a process that is essential for initiation of effective immune responses. Costimulation is required for the proliferation, differentiation and survival of T and B cells. T cell costimulation involves antigen-specific signal via T cell receptor (TCR) interaction with MHC molecules on the membrane of antigen presenting cells (APC). This is followed by an antigen nonspecific costimulatory signal resulting from the interaction between costimulatory molecules (e.g., CD28, ICOS) expressed on the membrane of APC and the T cell. B cell costimulation involves the binding of antigens to the B cell membrane-bound B cell receptor (BCR) and consequent intracellular signalling. This leads to phagocytosis of the antigen and its processing and presentation on MHC II molecules. Presentation results in recognition by antigen-specific Th2 cells and, in turn, activation of the B cell through binding of TCR to the MHC-antigen complex.\r\n"},{"term":"Crossover Trial","value":"A clinical study in which subjects receive two or more drugs separated by drug-free periods."},{"term":"Cyclooxygenase (COX)","value":"An enzyme also known as prostaglandin endoperoxide synthase (EC 1.14.99.1) that catalyzes the two steps in prostaglandin (PG) synthesis forming PG2 and PGH2 from arachidonic acid. The two major forms of the enzyme are COX-1 and COX-2. COX-1 is constitutive and present in endothelium, stomach and kidney. It is involved in maintenance of platelet and kidney function and considered a housekeeper enzyme, maintaining homeostasis. COX-2 is not present at baseline but is inducible during inflammation by cytokines and endotoxins. It has been shown to play a role in propagation of inflammatory cascades leading to disorders such as Alzheimer's disease, rheumatoid arthritis and osteoarthritis, cancer, kidney disease and osteoporosis.  Recently, COX-3, a distinct COX-1 variant,  and two smaller COX-1-derived proteins (partial COX-1 or PCOX-1 proteins) have been cloned and found to be expressed in canine cerebral cortex and in other tissues; COX-3 was predominantly expressed in canine cerebral cortex and heart. Canine COX-3 was shown to be selectively inhibited by NSAIDs and therefore COX-3 may be involved in pain and fever."},{"term":"Cyclosporine","value":"An immunosuppressant oligonucleotide synthesized by the fungus Tolypocladium inflatum Gams and used clinically in the prevention of organ rejection following transplant. Also known as ciclosporin."},{"term":"Cytokines","value":"Soluble proteins produced by one of several cell types (i.e., T cells, B cells, fibroblasts, macrophages, epithelial cells, astrocytes, endothelium, monocytes) that are involved in signaling between cells of the immune system. Cytokines include interleukins, tumor necrosis factors (TNFs) and colony-stimulating factors (CSFs)."}]},{"letter":"D","Terms":[{"term":"Dendritic Cell (DC)","value":"An antigen presenting cell (APC) that recognizes and captures foreign antigens and then migrates to the lymph nodes and spleen, where it presents the processed antigens to T cells, thereby initiating specific T cell responses. DCs are important in the generation of antiviral responses since they produce IL-12, a crucial factor in the development of Th1 and cytotoxic responses. In addition, DCs orchestrate these responses by virtue of their simultaneous expression of both class II and class I MHC molecules, which enables activation of both virus-specific CD4+ T cells and CTLs. Interdigitating cells are DCs located in lymph nodes in areas where T cells are present. In contrast to other APCs, these DCs can provide a full activation stimulus to virgin CD4+ T cells. Follicular DCs are closely surrounded by lymphocytes in the spleen and lymph node follicles and present antigen predominantly to B cells."},{"term":"Deoxyribonucleic Acid (DNA)","value":"A nucleic acid which contains deoxyribose as the sugar component loosely bound to protein. It stores the hereditary information required for cell growth and reproduction. It is a linear macromolecular chain of deoxyribose molecules esterified with phosphate groups between 3' and 5' hydroxyl groups. Purines (i.e., adenosine [A] and guanine [G]) and pyrimidines (cytosine [C] and thymine [T]) are linked to this structure. DNA is found in the nuclei (chromatin, chromosomes) and mitochondria of organisms. DNA is the autoreproducing component of viruses and contains all hereditary information. It may be open-ended or circular (e.g., mitochondrial DNA) and single- or double-stranded (e.g., chromosomes)."},{"term":"Diacylglycerol (DAG)","value":"A glycerol substituted on the 1 and 2 hydroxyl groups with long chain fatty acyl residues. It is a normal intermediate in the biosynthesis of phosphatidyl phospholipids and is released by phospholipase C (PLC). DAG is involved in signal transduction. Increased DAG levels in membranes activate protein kinase C (PKC). The high levels of glucose seen in diabetes increase the synthesis of DAG and PKC in vascular tissue. This can result in structural and functional abnormalities including changes in vascular permeability and gene expression in the retina (i.e., retinopathy) and kidney (i.e., nephropathy)."},{"term":"Diarrhea","value":"A symptom characterized by loose or unformed stools, frequently accompanied by other gastrointestinal symptoms. It is nearly always a symptom of another disease or condition, rather than a disease in its own right. It is considered acute when it lasts for less than 4 weeks (typically associated with a bacterial or viral infection) and chronic when it persists for more than four weeks. Diarrhea is broadly classified as secretory, osmotic or exudative. Secretory diarrhea is caused by an increase in active secretion or an inhibition of absorption. Osmotic diarrhea occurs when too much water is drawn into the bowels. This can be the result of maldigestion (e.g., pancreatic disease or celiac disease), in which the nutrients are left in the lumen to pull in water, lactose or fructose intolerance, or use of osmotic laxatives, among other causes. Exudative diarrhea is characterized by the presence of blood and/or pus in the stool. This typically occurs with inflammatory bowel disease (Crohn's disease or ulcerative colitis) and severe infections.\r\n"},{"term":"Dihydroorotate Dehydrogenase","value":"Dihydroorotate dehydrogenase (EC 1.3.3.1) is a mitochondrial enzyme that catalyzes the fourth step in the de novo biosynthesis of pyrimidine-containing ribonucleotides; it catalyzes the ubiquinone-mediated oxidation of dihydroorotate to orotate. As rapidly proliferating human T cells have an exceptional requirement for de novo pyrimidine biosynthesis, small molecule DHODH inhibitors constitute an attractive therapeutic approach to autoimmune diseases, immunosuppression and cancer. Inhibition of this enzyme would prevent T and B cell proliferation and may be effective in the treatment of multiple sclerosis, Crohn's disease and rheumatoid arthritis among others."},{"term":"DMARDS","value":"The abbreviation for disease-modifying antirheumatic drugs."},{"term":"DNA","value":"See Deoxyribonucleic Acid (DNA)"},{"term":"Docosahexaenoic Acid (DHA)","value":"A polyunsaturated essential fatty acid (an omega-3 fatty acid; n-docosanoic acid; also known as behenic acid) present in cell membranes. See also PUFAs (Polyunsaturated Fatty Acids)"},{"term":"Double-Blind","value":"A research testing method characteristic of a controlled experiment/trial in which neither the participants nor the person administering the treatment know which treatment any particular subject is receiving. Usually the comparison is between an experimental drug and a placebo or a standard comparison agent."},{"term":"Double-Dummy","value":"A research testing method in which patients in all treatment groups receive medication of the same appearance, one of which is inactive (placebo) and the other active. For example, all patients would receive a topical cream and capsules. Those receiving the active cream received dummy capsules and vice versa."},{"term":"Downstream","value":"Segments of nucleotide sequences of DNA or RNA that are remote from the initiation sites (i.e., codons) and are transcribed or translated later. It is also used to decribe events that occur late within sequential reactions. See also Upstream"},{"term":"Dual Energy X-Ray Absorptiometry (DXA)","value":"A method used to measure bone mineral density to aid in the diagnosis of osteoporosis. It is also used for estimating fat and lean tissue density and body fat distribution."}]},{"letter":"E","Terms":[{"term":"E-Selectin","value":"A cellular adhesion molecule (CAM) and CD antigen (CD62E) expressed only on endothelial cells and activated by cytokines. It plays a crucial role in inflammation mediating leukocyte recruitment to the sites of injury or, more specifically, neutrophil, monocyte and memory T cell adhesion to cytokine-activated endothelial cells. E-selectin recognizes sialylated carbohydrate groups present on the surface proteins of certain leukocytes; these carbohydrates include members of the Lewis X or Lewis A family expressed monocytes, granulocytes and T lymphocytes. Neutrophilic inflammation is a pathogenic feature of COPD and inhibition of  E-selectin may an effective therapy for the treatment of this airway disease. E-selectin may play a role in the pathophysiology of stroke."},{"term":"Edema","value":"The abnormal accumulation of fluid in cells, tissues or serous cavities."},{"term":"Effectiveness","value":"The therapeutic effect of an intervention as demonstrated or observed in the real-world setting. See also Efficacy"},{"term":"Efficacy","value":"The therapeutic effect of an intervention as demonstrated or observed in a controlled setting, such as a clinical trial. See also Effectiveness"},{"term":"Eicosanoids","value":"Physiologically active substances derived from cyclooxygenase- or lipoxygenase-catalyzed arachidonic acid metabolism. They include prostaglandins, leukotrienes and thromboxanes."},{"term":"Elastase","value":"A serine protease that hydrolyzes elastin. Neutrophil elastase (EC 3.4.21.37) is a major component of lung elastolytic activity and a stimulant of mucus secretion. It also induces release of IL-8 from epithelial cells and therefore may prolong inflammation. Macrophage elastase or MMP-12 (EC 3.4.24.65) hydrolyzes soluble and insoluble elastin and specifically cleaves 14-Ala- | -Leu-15 and 16-Tyr- | -Leu-17 in the insulin B chain. It is a potential target for the treatment of COPD, ARDS and cystic fibrosis. See also Matrix Metalloproteinase-12 (MMP-12)"},{"term":"Emesis","value":"Emesis is the complex reflex consisting of ejecting the contents of the stomach through the mouth. Also known as vomiting, this reflex can be triggered by various endogenous or exogenous factors."},{"term":"Endocarditis","value":"A disease characterized by exudative and proliferative inflammatory alterations of the endocardium. Vegetations may be present on the surface of the endocardium or in the endocardium itself and commonly involve a heart valve; the inner lining of the ventricular or atrial chambers may also be affected. It may occur as a primary disorder or as a complication of or in association with another disease and it mimics rheumatoid arthritis."},{"term":"Endocrine","value":"A term referring to internal, ductless, secretion (i.e., into the systemic circulation) or to the glands or the hormones which secrete or are secreted, respectively, in this manner."},{"term":"Endogenous","value":"Originating from within an organism, tissue or cell. "},{"term":"Endothelium","value":"A layer of flat squamous cells lining blood and lymphatic vessels and other structures such as the heart and posterior surface of the cornea."},{"term":"Enzyme-Linked Immunosorbent Assay (ELISA)","value":"A laboratory test used to detect antibodies or antigens. It is similar to an radioimmunoassay (RIA) except that it substitutes an enzyme for the radioactive isotope. In this assay, the antigen is absorbed to a solid phase followed by addition of the test antibody. The test antibody is later detected using enzyme-labeled protein G (binds IgG) and colorimetry. ELISAs are also used to measure other low- to high-molecular-weight compounds (e.g., peptides, steroids, prostaglandins, enzymes, etc.) from tissue or plasma extracts."},{"term":"Epitope","value":"A single antigenic determinant which is the portion of the antigen that combines with the antibody paratope. Any given antigen can have several different epitopes or repeated epitopes. Antibodies are specific for the epitope and not the entire antigen molecule."},{"term":"Erythrocyte","value":"A cell in the blood of vertebrates that transports oxygen and carbon dioxide to and from tissue. In mammals, they are anucleated, biconcave and disk-shaped cells and they contain hemoglobin. Also known as red blood cells (RBCs)"},{"term":"Etiology","value":"The cause or origin of a disease."},{"term":"Exacerbation","value":"An increase in the severity of a disease or in any of its symptoms."},{"term":"Exogenous","value":"Originating from outside an organism, tissue or cell."},{"term":"Exon","value":"A sequence of DNA that encodes information for protein synthesis that is transcribed to messenger RNA.\r\n"}]},{"letter":"F","Terms":[{"term":"Familial","value":"An inherited disorder or trait."},{"term":"Familial Adenomatous Polyposis (FAP)","value":"An inherited disorder syndrome characterized by numerous precancerous polyps in the colon and rectum. Patients with FAP have nearly a 100% chance of developing colorectal cancer. Mutations in the APC gene cause both classic and attenuated FPA and mutations in the MUTYH gene cause autosomal recessive FAP. Individuals with classic FAP develop multiple benign polyps in the colon as early as their teenage years. If not removed, these polyps  become malignant. Autosomal recessive FAP is a milder form with patients presenting with fewer polyps as compared the classic type. Both forms are associated with a high risk of gastric cancer.\r\n"},{"term":"FAS","value":"See Tumor Necrosis Factor Receptor Type 6 (FASL Receptor; Fas)"},{"term":"FAS Ligand","value":"See Tumor Necrosis Factor Ligand Superfamily Member 6 (FASLG; FAS ligand; FasL).\r\n"},{"term":"Fibroblast","value":"A spindle-shaped cell with cytoplasmic processes that is present in connective tissue and forms collagen fibers."},{"term":"Fibromyalgia Syndrome (FMS)","value":"A chronic disorder of unknown cause characterized by widespread musculoskeletal pain and altered pain processing which manifests as multiple tender joints. It may also be associated with fatigue, sleep disturbances, cognitive difficulties and psychological distress.\r\n"},{"term":"Fibromylagia","value":"A disorder characterized by musculoskeletal tenderness, stiffness and fatigue. It mimics rheumatoid arthritis The cause is unknown and remission is rare. See Also Fibromyalgia Syndrome (FMS)"},{"term":"Fusion Gene","value":"A hybrid gene created by joining portions of two different genes (to produce a new protein) or by joining a gene to a different promoter (to alter gene transcription)."}]},{"letter":"G","Terms":[{"term":"G-Protein","value":"One of several mediators of activated cell surface receptors and their enzymes and ion channels. They are responsible for the signal transduction pathways which alter the concentration of intracellular second messengers (e.g.,  cAMP, cGMP, Ca2+). These second messengers in turn regulate the behavior of other intracellular target proteins, leading to the desired cellular response."},{"term":"G-Protein-Coupled Receptor","value":"Cell surface receptors that are coupled to G proteins (i.e., GTP binding protein). They have seven membrane spanning domains and have been divided into two subclasses: those in which the binding site is in the extracellular domain (e.g., receptors for glycoprotein hormones such as TSH and FSH) and those in which the ligand binding site is in the plane of the seven transmembrane domains (e.g., rhodopsin, receptors for small neurotransmitters and hormones such as the muscarinic acetylcholine receptor). Also called 7TM receptors."},{"term":"Gene Therapy","value":"Treatment of pathophysiologic states based on the transfer of genetic material, including complementary DNA (cDNA), full-length genes, RNA or oligonucleotides."},{"term":"Genome","value":"The entire collection of genes and other functional and nonfunctional DNA sequences in the nucleus of an organism. It includes those genes that encode mRNAs, rRNAs, tRNAs and sn/scRNA and the functional sequences that occur as regulatory elements or as sites where replication begins. Much of the nonfunctional DNA consists of sequence elements repeated thousands or millions of times. Arrangement of functional and nonfunctional DNA within the genome is not fixed and existing sequences may be internally rearranged, moving from one location to another."},{"term":"Genotype","value":"The genetic constitution of an organism or cell."},{"term":"Glucocorticoid Receptor (GR)","value":"A nuclear receptor of the NR3 class also known as type II glucocorticoid receptor (GR), which exists as a dimer coupled with chaperone molecules (e.g., HSP90, HSP65). Chaperone molecules are shed subsequent to ligand binding. GR binds cortisol and corticosterone and also aldosterone and deoxycortisone but with less affinity. The activated receptor then binds nuclear hormone response elements and also affects transcription via protein-protein interactions with other transcription factors such as activator protein- 1 (AP-1) and nuclear factor kappaB (NF-kappaB). Activation can result in potent anti-inflammatory activity as well as regulation of several cardiovascular, metabolic, immunologic and homeostatic responses. Synthetic glucocorticoid receptor ligands may be effective as a treatment for arthritis, dermatitis, allergic reactions, allergic rhinitis, atopic dermatitis, asthma, COPD, hepatitis, lupus erythematosus, inflammatory bowel disease, sarcoidosis, Alzheimer's-type dementia, and for glucocorticoid replacement in Addison's disease or other forms of adrenal insufficiency. On the other hand, GR antagonists may be effective in the treatment for disorders involving pathological exposure to glucocorticoids such as Cushing's syndrome. These agents would reduce the effects of excess cortisol.\r\n"},{"term":"Glucocorticoids","value":"A family of steroid hormones generally synthesized and secreted by the adrenal medulla which affect intermediary metabolism such as hepatic glycogen deposition. Glucocorticoids also have potent antiinflammatory activity. Glucocorticoid receptors are found in the cells of almost all vertebrate tissues.\r\nCortisol (also known as hydrocortisone) is the most potent naturally occurring hormone in this class. It regulates several cardiovascular, metabolic, immunologic and homeostatic responses. Synthetic glucocorticoids have been show to be effective as a treatment for arthritis, dermatitis, allergic reactions, asthma, hepatitis, lupus erythematosus, inflammatory bowel disease, sarcoidosis and for glucocorticoid replacement in Addison's disease or other forms of adrenal insufficiency."},{"term":"Glucose","value":"A simple monosaccharide found in the blood that is derived from transport or glycogenolysis; it is the body's main source of energy."},{"term":"Glycoprotein","value":"A protein conjugated with a carbohydrate (e.g., sugar molecule)."},{"term":"GM-CSF","value":"See Granulocyte-Macrophage Colony Stimulating Factor (GM-CSF)"},{"term":"Graft-versus-Host Disease (GVHD)","value":"GVHD is a pathophysiological condition in which cells from the transplanted tissue/organ of a donor initiate an immunologic attack on the cells and tissue of the recipient and constitutes both the immunologic assault itself and the consequent rejection of the tissue/organ. GVHD is most frequent in hematopoietic stem cell transplantation although it also can occur in recipients of solid organs transplants and blood transfusions (including maternal-fetal transfusions). It can be acute (developing within 100 days or less of transplantation) or chronic (emerging at day 100 posttransplantation or later). Acute GVHD is characterized by increased inflammatory and immune responses initiated by donor  lymphocytes against the host; manifestations include dermatitis, enteritis and hepatitis. Chronic GVHD is more complex involving thymus atrophy or dysfunction which leads to decreased peripheral tolerance and an increase in the population of autoreactive T lymphocytes. It manifests as an autoimmune syndrome directed towards multiple organs. See also Transplant Rejection\r\n\r\n"},{"term":"Granulocyte-Macrophage Colony Stimulating Factor (GM-CSF)","value":"A cytokine produced in response to inflammatory mediators secreted by mesenchymal cells present in hemopoietic environment and at peripheral sites of inflammation. GM-CSF stimulates production of neutrophilic granulocytes, macrophages and mixed granulocyte-macrophage colonies from bone marrow cells and the formation of eosinophil colonies from fetal liver progenitor cells. It may also mediate mature granulocytes and macrophages. GM-CSF is used clinically to promote the recovery of the white blood cells following chemotherapy. Patients suffering from COPD have increase levels of this proinflammatory cytokine. Neutralization of this CSF would prevent activation of inflammatory cells and thus attenuate the release of airway neutrophilic and remodelling mediators.  Inhibiting GM-CSF may be effective in the treatment of COPD in reducing lung inflammation."},{"term":"Growth Factors","value":"Protein substances involved in cell differentiation and growth. They mediate fetal development, are involved in maintenance and repair of tissues, stimulate blood cell production and are also involved in cancer growth. Examples include epidermal growth factor (EGF), insulin-like growth factors (IGFs), nerve growth factor (NGF), platelet-derived growth factor (PDGF) and transforming growth factor alpha and beta (TGF-alpha, TGF-beta)."}]},{"letter":"H","Terms":[{"term":"Half-life","value":"The time required for one-half of an amount of a substance to be lost through biological processes."},{"term":"Hepatitis","value":"An inflammatory liver disease. See also Hepatitis A, Hepatitis B, Hepatitis C, Hepatitis E and Hepatitis D."},{"term":"Hepatitis A","value":"A form of viral hepatitis that is known as infectious hepatitis because it can spread through contact with oral secretions or stool or through sexual contact. See also Hepatitis A Virus\r\n"},{"term":"Hepatitis A Virus (HAV)","value":"A small (27 nm diameter) single stranded RNA virus with some resemblance to enteroviruses (e.g., poliovirus) that is a member of the Picornaviridae family. It replicates in hepatocytes and is transmitted via the oral-fecal route. It can also be sexually transmitted."},{"term":"Hepatitis B","value":"An inflammatory process in the liver caused by the hepatitis B virus (HBV) that is characterized by patchy hepatocellular necrosis affecting all acini. Liver disease caused by chronic hepatitis B can be fatal due to the development of cirrhosis leading to liver failure and an increased risk of hepatocellular liver cancer."},{"term":"Hepatitis B Surface Antigen (HBsAg)","value":"HBV surface antigen (HBsAg) is associated with the viral surface coat and several subtypes have been identified. Detection of HBsAg in serum usually provides initial evidence of acute HBV infection. In general, HBsAg appears during the incubation period, 1 to 6 weeks prior to development of clinical or biochemical illness and disappears during convalescence. Corresponding antibody (anti-HBVs) appears weeks or months later after clinical recovery and usually persists for life. Occasionally, HBsAg persists after infection and anti-HBs do not develop. These patients usually develop chronic hepatitis or become asymptomatic carriers of the virus."},{"term":"Herpes Simplex Virus (HSV)","value":"Viruses belonging to the family Herpesviridae that cause a variety of infections. HSV type 1 infections are generally characterized by eruptions of one or more vesicles on the lips or external nares while HSV type 2-induced eruptions commonly occur on the genitalia. Both types are recrudescent. HSV type 6 is found in some lymphoproliferative disorders but is also highly prevalent in individuals suffering from Alzheimer's disease."},{"term":"HLA","value":"See Human Leukocyte Antigen (HLA)"},{"term":"HMGB1","value":"High mobility group box protein 1 (HMGB1; also known as amphoterin, p30, sulphoglucuronyl carbohydrate binding protein [SBP-1] and differentiation enhancing factor [DEF]) is a ubiquitous nonhistone 30 kDa chromosomal protein that acts as a transcription factor, growth factor and an architectural chromatin-binding factor. It is also expressed as a membrane protein on the surface of some neurons where it is essential for extension of neuritis. In addition, HMGB1 is also an extracellular secreted cytokine released by activated monocytes, macrophages, neutrophils and platelets to mediate inflammation and cell motility. HMGB1 can be actively released from inflammatory cells in response to exogenous bacterial endotoxin (e.g., lipopolysaccharide [LPS]) or endogenous proinflammatory cytokines including tumor necrosis factor (TNF), interleukin (IL)-1beta and interferon (IFN)-gamma. It can also be passively released by necrotic cells. HMGB1 has been identified as playing an important extracellular role in local and systemic inflammation in arthritis and sepsis."},{"term":"Human Leukocyte Antigen (HLA)","value":"The human major histocompatibility complex (MHC) locus which is divided into eight regions: DP, DM, DQ, DR, class III, B, C and A. HLA-A, -B and -C loci encode class I MHC molecules, while HLA-DP, HLA-DQ and HLA-DR loci encode class II MHC molecules. HLA-DM encodes class II molecule DM, which is involved in loading peptides onto class II molecules. The HLA class III region encodes C2, factor B, TNF-alpha and TNF-beta in addition to several heat shock proteins. The HLA-DR1 and HLA-DR4 genes have been associated with an increase in susceptibility to rheumatoid arthritis."},{"term":"Hyaline","value":"Refers to something that is clear, transparent, colorless and granule-free. Examples are hyaline cartilage and hyaline hyphae present in fungus such as Aspergillosis spp."},{"term":"Hypercalcemia","value":"A condition in which abnormally high concentrations of calcium compounds are found in the serum (normal blood calcium = 8.5-10.5 mg/dl). The condition may occur in association with hyperparathyroidism, multiple myeloma, excessive vitamin D intake and some cancers. It may also be a drug side effect."},{"term":"Hyperplasia","value":"An increase in the number of cells in a tissue or organ resulting in increased volume of that structure. The term excludes tumor formation."},{"term":"Hypothyroidism","value":"A condition characterized by reduced production of thyroid hormone. The resulting thyroid insufficiency manifests as low metabolic rate and symptoms can include weight gain, somnolence and myxedema."}]},{"letter":"I","Terms":[{"term":"ICAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. It is induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, and binds to integrins mediating adhesion and migration. ICAM-1 may be involved in the pathogenesis of rheumatoid arthritis since high levels of the molecule are found in the rheumatoid synovium."},{"term":"IGF1","value":"A gene (also known as HGNC:5464, IGFI) located on chromosome 12 (12q22-q23) that encodes insulin-like growth factor 1 (IGF-1; somatomedin C) in humans. It has been implicated in the pathogenesis of osteoarthritis. \r\n"},{"term":"IkappaB Kinase beta (IKKbeta)","value":"A protein serine/threonine kinase (EC 2.7.11.10) that phosphorylates IkappaB, a cytoplasmic inhibitor, at specific residues, targeting it for proteasomal degradation via the ubiquitination pathway and allowing the nuclear translocation of IkappaB. Subsequent degradation of the IkappaB complex (IKK) activates nuclear factor kappaB (NF-kappaB), a translation factor that plays an important role in inflammation, immunity, cell proliferation and apoptosis. If the serine residues are replaced by threonine residues, the activity of the enzyme is decreased considerably. It is composed of alpha, beta and gamma subunits, the latter not having kinase activity but presumed to play a regulatory role. IKKbeta regulates several inflammatory genes such as TNF-alpha, interleukin (IL-1) and cell adhesion molecules and two proinflammatory mediators NF-kappaB and activator protein-1 (AP-1) appear to be activated in airway diseases and inflammatory disease such as MS. Inhibitors of IKKbeta block the NF-kappaB activation cascade thus attenuating inflammatory responses. IKKbeta inhibitors may be effective in the treatment of inflammatory airway diseases such as COPD, asthma and cystic fibrosis. IKKbeta is activated by TNF-alpha and hyperglycemia and its inhibition can reverse insulin resistance. Therefore, this mediator may be a new target for the development of insulin sensitizers and antidiabetic therapies. NF-kappaB is inhibited by binding to IkappaB and polymorphisms of the NFKB and NFKBI genes and an imbalance in NF-kappaB and IkappaB and has been associated with development of many inflammatory diseases, including MS, ulcerative colitis, Crohn's disease, rheumatoid arthritis, systemic lupus erythematosus, psoriatic arthritis, giant cell arthritis, type 1 diabetes, celiac disease, and Parkinson's disease, as well as susceptibility of several cancers."},{"term":"IkappaB Kinase Complex (IKK)","value":"A 900 kDa protein serine/threonine kinase composed of alpha, beta and gamma (IKKalpha, IKKbeta and IKKgamma) subunits that targets the IkappaB protein. IkappaB is the inhibitory of subunit of the transcription factor nuclear factor kappa B (NFkappaB). NFkappaB is activated via sequential phosphorylation, ubiquitination and degradation of IkappaB. IKK phosphorylates IkappaB thus allowing for subsequent proteasomal degradation, nuclear translocation and activation of NFkappaB. The IKKgamma does not appear to have kinase activity but rather plays a regulatory role. IKKalpha is a nuclear factor-inducing kinase (NIK) interacting protein. Direct interaction with NIK results in its phosphorylation and activation. IKKbeta is 50% identical to IKKalpha and contains a kinase domain. Both IKKalpha and IKKbeta can undergo homotypic interactions and can interact with each other. The catalytic activities of both IKKalpha and IKKbeta are essential for proper IkappaB phosphorylation and NF-kappaB activation. See also IkappaB Kinase beta (IKKbeta)"},{"term":"Immune System","value":"An integrated group of various cell types and the soluble molecules they secrete (i.e., antibodies, cytokines) responsible for immunity."},{"term":"Immunogenic","value":"See Antigenic"},{"term":"Immunoglobulin (Ig)","value":"A subgroup of globulins that are classified as alpha, beta and gamma according to lipid or carbohydrate content and physiological function. Antibodies are Igs and all Igs may function as antibodies. Serum Igs belong to the gamma group and constitute a family of glycoproteins that bind antigens. Serum Igs can be precipitated from plasma or serum and can be normal or specific. Serum Igs are classified into 5 groups: IgG, IgD, IgE, IgA and IgM."},{"term":"Immunoglobulin A (IgA)","value":"Major class of immunoglobulins found in mammalian serum, body fluids (i.e., tears and saliva) and in the respiratory, reproductive, urinary and gastrointestinal tracts. It protects the body's mucosal surfaces from infection. It is present in human colostrum but cannot be transferred across the placenta."},{"term":"Immunoglobulin E (IgE)","value":"IgE is a class of immunoglobulins or \"antibodies\" that attach to mast cells in the respiratory and intestinal tracts, triggering release of inflammatory modulators and resulting in manifestation of symptoms associated with allergic reactions. Of the five types of Igs (IgM, IgG, IgA, IgE and IgD) in the body, only IgE has been shown to be involved in allergic reactions. It is responsible for the symptoms seen in patients with allergic rhinitis, asthma and eczema. IgE elicits an immune response by binding to one of two Fc receptors. The high affinity receptor FcepisilonRI is expressed only on mast cells and/or basophils.  Aggregation of antigens and binding of IgE to the mast cell Fcepisilon results in degranulation and the release of mediators from the cells; binding to FcepisilonRII on basophils causes release of type 2 cytokines (e.g., IL-4, IL-13) and other inflammatory mediators. The low affinity receptor Fcepisilon RII is constitutively expressed on B cells and inducibly expressed by IL-4 on macrophages, eosinophils, platelets and T cells."},{"term":"Immunoglobulin G (IgG)","value":"An immunoglobulin composed of two Fab and one Fc fragment.  The Fabs include the antigen combining sites while the Fc region consists of the remaining constant sequence domains of the heavy chains and contains cell binding and complement binding sites. IgGs act on pathogens via agglutination, opsonization, activation of complement-mediated reactions against cellular pathogens and/or neutralization. Unlike other Igs, IgG can cross the placenta to the fetus as maternal antibodies. There are four known IgG subclasses. IgG2 differs from the rest in that it cannot be transferred across the placenta and IgG4 does not fix complement. IgG is present in serum at a concentration of 8-16 mg/ml."},{"term":"In situ","value":"A Latin phrase that literally means \"in the place.\"  It is used to refer to examination of a phenomenon in exactly the place where it occurs (e.g., organ perfusions). In oncology, in situ refers to malignant cells present as a tumor. They have not metastasized beyond the original site where the tumor was discovered.\r\n"},{"term":"In vitro","value":"A Latin phrase that literally means \"in glass.\" It is used to refer to a process or reaction (or experiment) occurring in an artificial environment (i.e., test tube, culture medium, etc.)."},{"term":"In vivo","value":"A Latin phrase that literally means \"in a living being.\"  It is used to refer to a process or reaction (or experiment) occurring in a living body."},{"term":"Indolent","value":"Slowly progressing, low-grade; causing little or no pain."},{"term":"Infarct","value":"The area of necrosis in tissue resulting from a local lack of oxygen (i.e., ischemia). See also Infarction"},{"term":"Infarction","value":"Sudden lack of sufficient arterial or venous blood supply due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The organs most commonly affected are the heart, brain, spleen, kidney, intestine, lung and testes. See also Infarct"},{"term":"Inflammation","value":"The response of the immune system to an injury caused by irritation, infection, physical damage or chemically-induced cell stress. Local reactions at the site of injury cause immune cells to be recruited into the area, leading to the destruction and removal of the affected tissues and to wound repair. The five symptoms of inflammation are redness, heat, swelling, pain and dysfunction of the affected area, although not all five need be present at any one time."},{"term":"Inflammatory Bowel Disease (IBD)","value":"A serious disorder of the gastrointestinal tract in which tissue damage and inflammation lead to bowel impairment. The two major forms are ulcerative colitis and Crohn's disease."},{"term":"Insulin-like Growth Factor-1 (IGF-1)","value":"A peptide formed in response to growth hormone (GH) stimulation that is responsible for the peripheral effects of GH. It is highly homologous to human insulin (70%) and is involved in the development of diabetic retinopathy and in retinal neovascularization. IGF-1 has also been shown to promote the synthesis of new cartilage."},{"term":"Insulin-like Growth Factor-1 (IGF-1) Receptor (IGFR-1)","value":"A transmembrane tyrosine kinase receptor that binds and mediates the effects of IGF-I; the receptor also binds the related IGF-II. IGF-I is a member of a group of growth factor peptides (m.w. about 4,000) synthesized in the liver and kidney with high homology to human insulin (about 70%). It is formed in response to growth hormone (GH) stimulation that is responsible for the peripheral effects of GH. It exerts weak insulin activity via the IGF-I receptor which enhances the effects of insulin.\r\n"},{"term":"Integrin alphavbeta3 (vitronectin) Receptor","value":"Integrin alphavbeta3  is a member of a large family of transmembrane receptors for ECM and plasma proteins and is composed of two noncovalently linked subunits (alphav and beta3) that span the plasma membrane. Integrin alphavbeta3 interacts with various ECM proteins, including fibronectin, osteoponin, tenascin and vitronectin. Upon ligand binding, these subunits interact with the actin cytoskeleton and FAK complex through their cytoplasmic domains. It is known that endogenous insulin-like growth factor-I (IGF-I) regulates intestinal smooth muscle growth by concomitantly stimulating proliferation and inhibiting apoptosis and IGF-I-stimulated growth is augmented by the integrin alphavbeta3 ligands vitronectin and fibronectin. IGF-I expression in smooth muscle is increased in both experimental colitis and Crohn's disease. Thus, the smooth muscle hyperplasia and stricture formation observed in the chronically inflamed intestine may be in part due to upregulation of endogenous IGF-I and ligands of integrin alphavbeta3 that mediate the increase in smooth muscle cell proliferation and decrease in apoptosis. Integrin alphavbeta3 has also been established as a proangiogenic factor that facilitates endothelial cell motility and migration. Thus, antagonist of alphavbeta3 may be effective in the treatment of Crohn's disease."},{"term":"Interferon gamma (IFN-gamma)","value":"A type II interferon produced by T lymphocytes which shows marked immunoregulatory activity although its antiviral activity is less potent as compared to type I interferons. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis and multiple sclerosis."},{"term":"Interleukin (IL)","value":"A member of a class of cytokines (IL-1 through IL-29) produced by several cell types (i.e., lymphocytes, macrophages, monocytes, fibroblasts, astrocytes, endothelium, etc) with very diverse actions. Some of these actions include effects on stem cell division (IL-11); development and differentiation of B cells (IL-5) and Th1 cells (IL-12); T cell growth and activation (IL-2); lymphocyte growth (IL-6), etc."},{"term":"Interleukin 1 (IL-1)","value":"A soluble protein cytokine that is a member of the IL-1 superfamily which includes IL-1alpha, IL-1beta and the IL-1 receptor antagonist (IL-1RA). IL-1alpha and  IL-beta are proinflammatory cytokines that are involved in inflammatory and immune responses while IL-1RA competes for receptor binding with these tow isotypes thus blocking inflammatory and/ or immune activation. Both isotypes are secreted by monocytes, macrophages and/or accessory cells early during an immune response and they activate T and B cells, stimulate T cell proliferation and enhance T and B cell responses to antigens. Overproduction of IL-1 has been implicated in several diseases including COPD, rheumatoid arthritis, type 1 diabetes, Alzheimer's disease and inflammatory bowel disease (IBD) and inhibitors of this cytokine may be effective treatment options for these disorders."},{"term":"Interleukin 1 Receptor (IL-1R)","value":"The cytokine receptor that binds members of the IL-1 superfamily IL-1alpha, IL-1beta and IL-1 receptor, type I(IL-1R1/IL-1RA). There are two identified subtypes: type I (CD121a) and type II (CD121b) which are involved in cytokine-induced immune and inflammatory responses. Antagonism of these receptor subtypes may be effective in the treatment of inflammatory diseases such as COPD."},{"term":"Interleukin 10 (IL-10)","value":"A cytokine released by Th2 cells that can inhibit cytokine release from Th1 cells. In addition, during late-phase inflammatory reactions, IL-10 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells that are involved in recruitment of inflammatory cells from the circulation. IL-10 has been implicated in the pathogenesis of systemic lupus erythematosus. It inhibits the synthesis and release of proinflammatory cytokines produced by stimulated monocytes and macrophages and is under development for rheumatoid arthritis. Psoriatic lesions show significantly low levels of IL-10 and studies suggest that this cytokine may be an effective treatment for psoriasis."},{"term":"Interleukin 11 (IL-11)","value":"A pleiotropic antiinflammatory cytokine that modulates antigen-specific antibody responses, potentiates megakaryocytes and regulates bone marrow adipogenesis. IL-11 has been shown to act synergistically with IL-10 to inhibit proinflammatory cytokine production and it decreases TNF-alpha, IL-1 and IL-12 production due to inhibition of NFkappaB. IL-11 may be effective as a treatment for psoriasis."},{"term":"Interleukin 12 (IL-12)","value":"A heterodimeric cytokine that promotes cell-mediated immunity by facilitating type 1 helper T lymphocyte responses, including the production of IFN-gamma by both T cells and natural killer cells, potentiating the lytic activity of natural killer cells and boosting specific cytolytic T lymphocyte responses. IL-12 has shown potent therapeutic effects in various cancers and infectious diseases, including some viral infections. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis, psoriasis and multiple sclerosis."},{"term":"Interleukin 13 (IL-13)","value":"Immune regulatory cytokine, predominantly produced by activated Th2 cells and mast cells, that inhibits the production of inflammatory cytokines in monocytes. IL-13 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-13 ( in addition to IL-4, IL-5 and GM-CSF) selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa."},{"term":"Interleukin 15 (IL-15)","value":"A cytokine expressed by monocytes, macrophages, dendritic cells (DC), keratinocytes, fibroblasts and nerve cells. It binds to and signals through a complex composed of the IL-2/IL-15 receptor beta chain (CD122) and the common gamma chain (gamma-C, CD132). It is expressed by T cells, monocytes and keratinocytes in psoriatic epidermis that affects T, B and NK cell division, neutrophil and monocyte activation. It also inhibits lymphocyte apoptosis. Keratinocyte-derived IL-15 has been shown to inhibit keratinocyte and lymphocyte apoptosis and it may play a role in the survival of infiltrating lymphocytes and abnormal keratinocytes features in psoriasis. This cytokine has been implicated as playing a role in rheumatoid arthritis and is overexpressed in psoriasis and pulmonary inflammatory diseases. IL-15 accumulates within synovial lesions and induces the overproduction of IL-17 within rheumatic joints. In addition, IL-15 neutralization has been shown to be beneficial in preclinical models of psoriasis, diabetes and celiac disease. IL-15 is normally not secreted. However, viral infection can cause its secretion."},{"term":"Interleukin 17 (IL-17)","value":"IL-17 is a family of cytokines whose members include IL-17A, IL-17B, IL-17C, IL-17D, IL-17E (also known as IL-25) and IL-17F. These cytokines are associated with many immune regulatory effects and are associated with mediation of proinflammatory and allergic responses. IL-17 induces cytokine (e.g., IL-6, G-CSF, GM-CSF, IL-1beta, TGF-beta, TNF-alpha), chemokine (e.g., IL-8, GRO-alpha and MCP-1) and prostaglandin (e.g. PGE2) production from several cell types (e.g., fibroblasts, endothelial cells, epithelial cells, keratinocytes, monocytes and macrophages). IL-17 is secreted by the novel T helper cell subset Th17 which induces autoimmune inflammation and IL-17 receptor signaling may play a role in the development of chronic destructive arthritis from acute synovitis; IL-17 contributes both directly and indirectly to the bone and cartilage destruction occurring in rheumatoid arthritis. IL-17 may also be involved in the stimulation of osteoclastogenesis. The IL-17 family has been linked to other immune/autoimmune related diseases including asthma (i.e., plays a role in airway remodeling), lupus, allograft rejection, ankylosing spondylitis and antitumor immunity."},{"term":"Interleukin 18 (IL-18)","value":"A proinflammatory cytokine structurally and functionally related to the IL-1 family of proteins that is a strong inducer of IFN-gamma production by T lymphocytes and NK cells. It is the only cytokine that can induce T helper 1 (Th1) and T helper 2 (Th2) cell polarization depending on immunologic context. It is implicated in several immune-mediated diseases. It is invovled in both innate and acquired immunity and its inflammation-promoting role is IFN-gamma-independent. It  also plays a role in the local inflammation seen in rheumatoid arthritis. It is currently under investigation as an immunotherapeutic cancer agent and as an angiogenic factor."},{"term":"Interleukin 18 Binding Protein (IL-18BP)","value":"A constitutively secreted glycoprotein protein that exerts antiinflammatory and immunosuppressive effects. By preventing interleukin 18 (IL-18) receptor binding, it inhibits IL-18 and interferon (IFN)gamma production. Four human splice variants have been identified (IL-18BPa, IL-18BPb, IL-18BPc, IL-18BPd) of which IL-18BPa is the predominant form exhibiting the highest affinity for IL-18. While IL-18Pc also neutralizes IL-18, . IL-18BPb and IL-18BPd cannot bind to or neutralize cytokine. Inhibition of IL-18BP would be effective in suppressing high circulating levels IL-18 observed in many autoimmune diseases such as psoriasis, rheumatoid arthritis, inflammatory bowel disease psoriatic arthritis and in sepsis."},{"term":"Interleukin 1beta (IL-1beta)","value":"A cytokine released by mast cells following allergen-IgE binding that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. It is also released by epithelial cells and astrocytes. An upregulation of IL-1beta production by the microvasculture has been observed in Alzheimer's disease and in response to ischemic insult. See also Interleukin 1 (IL-1)"},{"term":"Interleukin 2 (IL-2)","value":"IL-2 is a cytokine produced by CD4+ T lymphocytes upon activation by antigens and costimulators. It promotes T cell clonal expansion in the adaptative immune response and can activate B lymphocytes, monocytes and NK cells. Binding of IL2 to its receptor activates the JAK/STAT, PI3-kinase and RAS signaling pathways. Alpha chain monomers (CD25) conform a low affinity IL2 receptor. High affinity and intermediate affinity IL2 receptors are conformed by alpha/beta heterodimers and beta chain monomers, respectively, associated to a gamma chain. It plays a role in both proliferative and activation-induced cell death (AICD) signaling of T cells. MS is in part genetically determined and the gene encoding the alpha-chain of the IL-2 receptor, IL2RA, harbors alleles associated with risk to MS and other autoimmune diseases such as GVHD. In addition, IL2RA genetic variants correlate with the levels of a soluble form of the IL-2 receptor in subjects with type 1 diabetes and multiple sclerosis (MS). IL-2 is produced by activated T cells in the synovium during the early stages of rheumatoid arthritis and in psoriatic lesions."},{"term":"Interleukin 20 (IL-20)","value":"A new member of the IL-10 family (including IL-19, IL-22, IL-24 and IL-26) of cytokines which signals through the IL-20R1/IL-20R2 heterodimer. Together with IL-19, it is synthesized by a distinct population of keratinocytes. IL-20 induces keratin proliferation and Stat-3 signal transduction pathway and may be implicated in the pathogenesis of psoriasis."},{"term":"Interleukin 22 (IL-22)","value":"Interleukin-22 (IL-22) is a member of IL-10 superfamily (including IL-19, IL-20, IL-24, and IL-26) of cytokines which mediator cellular inflammatory responses. IL-22 signals via binding to the cell-surface complex composed of IL-22R1 and IL-10R2 and is produced by activated dendritic and T cells. IL-22 together with IL-17 is produced by Th17 cells and is involved in mediating adaptive and innate immune responses. Both IL-17 and IL-22 mediate host defenses against extracellular pathogens. However, they may also be involved in the pathogenesis of several autoimmune diseases (e.g., Sjogrens' syndrome, psoriasis, rheumatoid arthritis).\r\n"},{"term":"Interleukin 23 (IL-23)","value":"A heterodimeric cytokine composed of a unique p19 subunit and the p40 subunit component of IL-12. It is secreted by activated dendritic cells (DCs) and macrophages and binds to memory T cells, NK cells, macrophages and DCs. In particular, this cytokine is suspected to be involved in the activation and maintenance of the Th17 subset of inflammatory T cells. It has been hypothesized that the autoimmune actions of IL-12 are attributable to IL-23 since mice lacking IL-23p19 (only IL-23 absent) and mice lacking IL-12p40 (both IL-12 and IL-23 absent) were protected from autoimmune encephalomyelitis (EAE) and collagen-induced arthritis (CIA). On the other hand, mice lacking IL-12p35 (only IL-12 absent) developed more severe disease.  Overexpression of IL-23 and/or IL-12 or defect in their receptors may be involved in conditions such as rheumatoid arthritis, psoriatic arthritis, psoriasis, multiple sclerosis, Crohn's disease and ankylosing spondylitis. Patients with Crohn's disease have been shown to have a significantly increased number of intestinal CD14+ macrophages as compared with normal control subjects and these cells produce larger amounts of IL-23 and TNF-alpha as compared to normal controls or patients with ulcerative colitis. Moreover, genomic studies conducted in patients with Crohn's disease have identified the IL-23 pathway as playing a predominant role in this disorder. Monoclonal antibodies directed against both IL-12 and IL-23 may be effective treatment options for these diseases.\r\n"},{"term":"Interleukin 3 (IL-3)","value":"A multilineage cell growth inducing cytokine (hemopoietic colony stimulating factor) secreted by lymphocytes, epithelial cells and astrocytes which stimulates clonal proliferation and differentiation of various types of blood and tissue cells."},{"term":"Interleukin 4 (IL-4)","value":"Pleiotropic, immune regulatory cytokine released by Th2 and mast cells that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-4 (in addition to IL-5, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. Eosinophil infiltration of airway submucosa and mucosa is characteristic allergic diseases. Like IL-12, this cytokine has been found to inhibit HIV-1 replication in primary blood-derived human macrophages. Antagonizing the effects of IL-4 is a potential new approach for the treatment of for asthma, allergic rhinitis and rheumatoid arthritis. IL-4 receptors are overabundant in several tumor types therefore IL-4 fusion toxins may be an effective treatment for some forms of cancer (i.e., breast cancer)."},{"term":"Interleukin 5 (IL-5)","value":"A proinflammatory cytokine released by Th2 and mast cells that is involved in the development and differentiation of eosinophils and B cells; it also upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-5 (in addition to IL-4, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. IL-5 is essential for eosinophilic inflammation which leads to airway hyperresponsivenes. Antagonizing the effects of IL-5 or inhibiting its production are potential new approaches for the treatment of allergic disease such as asthma and allergic rhinitis."},{"term":"Interleukin 6 (IL-6)","value":"A member of a subfamily of related hematopoietic, proinflammatory cytokines, including leukemia inhibitory factor, ciliary neurotrophic factor, oncostatin M, cardiotrophin-1 and IL-11. The expression of IL-6 in the brain has been found to be increased in neurological disorders such as Alzheimer's disease, Parkinson's disease, trauma, stroke and meningitis. IL-6 is also present in abnormally high levels in obesity and type 2 diabetes, and has been implicated in inflammatory bowel disease. IL-6 is upregulated in epithelial cells infected with rhinoviruses and overexpression of IL-6 have been observed in the synovium in the early stages of rheumatoid arthritis, at systemic and cutaneous levels in psoriasis and in human systemic lupus erythematosus. IL-6 in the presence of sex steroids is required for osteoclastogenesis to occur."},{"term":"Interleukin 8 (IL-8)","value":"An ELR+ (Glu-Leu-Arg) CXC chemokine suggested to be an important mediator of angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Overproduction of IL-8 may also be involved in airway inflammation characteristic of cystic fibrosis, asthma, the common cold and rheumatoid arthritis; IL-8 may also play a role in the inflammatory processes involved in psoriasis. Ischemia has been shown to increase the production of IL-8 in the brain. see Also Interleukin 8 beta  Receptor (IL-8betaR)"},{"term":"Interleukin 8 (IL-8) beta Receptor","value":"One of two G-protein-coupled receptor subtypes (alpha and beta) for interleukin 8 (IL-8), an ELR+ (Glu-Leu-Arg) CXC chemokine (chemokine CXCR2) produced by monocytes, fibroblasts and endothelial cells that mediates activation and chemotaxis of T cells, monocytes and neutrophils. Overexpression of IL-8 appears to be involved in airway inflammation characteristic of COPD as well as cystic fibrosis, asthma, the common cold and rheumatoid arthritis. Antagonism of this receptor could prevent recruitment of pathogenic cells into inflamed lungs thus preventing development of COPD. Antagonism of this receptor may also be effective in the treatment of psoriasis and atherosclerosis since IL-8 may also play a role in the inflammatory processes involved in psoriasis and angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Ischemia has also been shown to increase the production of IL-8 in the brain."},{"term":"Interleukin 9 (IL-9)","value":"A cytokine secreted from CD4+ T cells that affects T cell and mast cell division/development. It may also be involved in the pathogenesis of asthma by enhancing the effects of other cytokines and inflammatory mediators. The normal nonasthmatic state is suggested to be associated with downregulation of IL-9."},{"term":"iRNA","value":"See RNA Interference (RNAi)"}]},{"letter":"J","Terms":[{"term":"Janus Kinase 1 (JAK1)","value":"Jak1 belongs to the protein tyrosine Janus kinase family. Jak1 is involved in signal transduction of several hematopoietic cytokine receptors. The JAK/STAT pathway plays a crucial role in carcinogenesis and Jak1 activates STAT1 and STAT3 consequently modulating myogenic differentiation, participating in myoblast proliferation and actively repressing differentiation. JAK1 is activated by cytokines present in the bone marrow cells of multiple myeloma patients and its associated with survival, proliferation and invasion of multiple myeloma and various other cancers. Inhibition of the JAK/STAT pathway, particularly targeting Jak1 and Jak2, could be beneficial in the treatment of various cancers including multiple myeloma. JAK1 is a potentially effective and selective target for the development of novel immunosuppressive agents for the treatment of various autoimmune diseases such as rheumatoid arthritis."},{"term":"Janus kinase 2 (JAK2)","value":"Janus kinase (JAK) 2 is a member of the JAK family (JAK1, JAK2, JAK3 and Tyk2) of kinases that are involved in cytokine signaling. JAKs are closely associated with cell surface cytokine receptors, since the latter lack enzymatic activity and require phosphorylation by JAKs to propagate the cytokine signal. JAK2 responds to a multitude of ligands, including growth hormone, erythropoietin, leptin, prolactin, gamma interferon, leukemia inhibitory factor, cardiotropin, ciliary neurotrophic factor, granulocyte colony-stimulating factor, granulocyte-macrophage colony-stimulating factor, thrombopoietin, oncostatin M, IL-2, IL-3, IL-5, IL-6, IL-11 and IL-12. Binding of one of these ligands to a cytokine receptor causes homo- or hetero-oligomerization, bringing receptor-associated JAKs into proximity and enabling JAKs to autophosphorylate and allow docking of signaling molecules; STATs (signal transducers and activators of transcription) are an example of the JAK2 substrate. Deficiencies in JAK-STAT signaling are associated with immunodeficiency disorders and acquired activating mutations and translocations are found in hematologic malignancies. Somatic point mutation (V617F) in the conserved autoinhibitory pseudokinase domain of JAK2 causes constitutive activation of the kinase, leading to upregulated signaling that mimics continuous growth factor stimulation. The JAK V617F mutation has been detected in blood and marrow of a large proportion of patients with Bcr/Abl-negative chronic myeloproliferative disorders as well as in myelodysplastic syndrome, atypical myeloproliferative disorders and acute myeloid leukemia. JAK2 is a potentially effective and selective target for the development of novel immunosuppressive agents for the treatment of various autoimmune diseases such as rheumatoid arthritis."},{"term":"Janus Kinase 3 (JAK3)","value":"JAK3 is a large cytoplasmic cellular protein that is a member of the Janus family of protein-tyrosine kinases which also includes JAK1, JAK2 and tyrosine kinase 2 (TYK2). JAKs (via tyrosine phosphorylation) activate cytokine-mediated latent cytoplasmic signal transducers and activators of transcription. Several cytokines critical for immune cell development and homeostasis (IL-2, IL-4, IL-7, IL-9, IL-15 and IL-21) which bind to receptors sharing the common cytokine receptor gamma-chain (gammac), have emerged as crucial entities regulating immune function. Following cytokine binding to cell surface receptors, signal transduction to the nuclei is achieved via activation of JAKs which consequently phosphorylate the cytokine receptor creating a site for docking of STATs (signal transducers and activators of transcription). STATs are phosphorylated by JAKs and dimerization occurs followed by transport to the nucleus, DNA binding and, ultimately transcriptional modulation. In contrast to JAK1, JAK2 and Tyk2 which are used by a variety cytokine receptors and are ubiquitously expressed, JAK3 expression is relatively restricted and is only used by cytokine receptors containing gammac. High levels of JAK3 are found in natural killer (NK) cells and thymocytes and it is inducible in T cells, B cells and myeloid cells; it is not expressed in resting T cells. Interestingly, studies have shown that patients carrying mutations in the gene encoding JAK3 present the same T-B+NK- SCID (severe combined immunodeficiency) phenotype. Moreover, activation of STAT-4 and STAT-3 in T cells which is mediated by JAKs appears to play a key pathogenic role in Crohn's disease. JAK3 is a potentially effective and selective target for the development of novel immunosuppressive agents for the prevention of transplant rejection and the treatment of  various autoimmune diseases such as rheumatoid arthritis, psoraisis and Crohn's disease.  JAK3 enzymatic activity has been found to be enhanced by IgE receptor/FcepsilonRI crosslinking, and inhibition of JAK3 activity has been shown to prevent activation-associated morphological changes, degranulation and proinflammatory mediator release in human mast cells. Thus, targeting of JAK3 is also a potential treatment and prophylaxis for mast cell-mediated allergic reactions."}]},{"letter":"K","Terms":[{"term":"K(v)1.3 (KCNA3)","value":"K(v)1.3 (also known as potassium voltage-gated channel, shaker-related subfamily, member 3 ) is a voltage-gated, delayed-rectifier potassium ion channel that regulates membrane potential and calcium signaling in human effector memory T cells. Kv1.3 is a member of a large family of potassium channels involved in  diverse functions such as regulating neurotransmitter release, heart rate, insulin secretion, neuronal excitability, epithelial electrolyte transport, smooth muscle contraction and cell volume. The channel allows the repolarization of nerve cells after an action potential and plays a role in the T cell proliferation and activation; they maintain the membrane potential of effector-memory T cells that are important mediators of MS, type 1 diabetes mellitus and rheumatoid arthritis. The functional K(v)1.3 channel in T cells is composed of four identical K(v)1.3 subunits that are physically coupled through a series of adaptor proteins to the TCR signaling complex; it traffics to the immunological synapse during antigen presentation. Blockade of K(v)1.3 channels in effector-memory T cells suppresses calcium signaling, cytokine production (interferon-gamma, IL-2) and cell proliferation thus preventing inflammatory responses. In MS, disease-associated myelin-specific CD4+ T cells in patient blood and postmortem MS brain lesions express high numbers of K(v)1.3 channels. Targeting K(v)1.3 could suppress effector-memory T cell responses thus ameliorating autoimmune diseases like MS without compromising protective central immune response."},{"term":"Keratin","value":"A group of highly insoluble fibrous proteins that are the primary constituent of hair, nails and skin."},{"term":"Knockin","value":"A gentically modfied mutant organism (e.g., mouse, yeast) that carries a particular gene that is not normally present. The effect of including this gene can be provide information about a specific disease or condition."},{"term":"Knockout","value":"Experimental inactivation of specific genes in laboratory organisms (e.g., mice, yeast) in order to study a specific disease or condition."}]},{"letter":"L","Terms":[{"term":"L-Selectin","value":"A cellular adhesion molecule (CAM) that is a peripheral lymph node homing receptor. It is constitutively expressed but is shed upon cellular activation as a result of the actions of a membrane-bound metalloproteinase. L-selectin is the peripheral lymph node homing receptor and several receptors for L-selectin have been identified on lymph node high endothelial venules (HEVs). These include GlyCAM-1 and CD34 in humans and mucosal addressin cell adhesion molecule (MAdCAM)-1 in mice. L-selectin recognizes sialylated carbohydrate groups related to the Lewis X family. The ligand for L-selectin on inflamed venular endothelium has not been identified."},{"term":"Legionella","value":"A genus of rod- or coccus-shaped aerobic Gram-negative bacteria. Certain species such as L. pneumophila, produce Legionnaires' disease, a severe form of pneumonia.\r\n"},{"term":"Lesion","value":"Pathological or traumatic discontinuity of a tissue or loss of function of organ or other body part.\r\n"},{"term":"Leukotrienes","value":"Physiologically active substances which mediate inflammation and allergic reactions and have been implicated in asthma, rheumatoid arthritis, allergic rhinitis, psoriasis and inflammatory bowel disease. They are the result of eicosanoid metabolism and differ from prostaglandins and thromboxanes in that they do not have a central ring. Six metabolites have been named leukotriene (LT) A-F with the number of double bonds indicated as a subscript (e.g., LTB4). They are classified into two subclasses: peptidoleukotrienes (e.g., LTC4, LTD4, LTE4) and hydroxyleukotrienes (LTB4). In general, peptidoleukotrienes are involved in smooth muscle contraction, induce myocardial depression, increase vascular permeability and enhance mucus production. LTB4 is involved in immune responses such as stimulation of leukocytes (i.e., chemotaxis, aggregation, etc.). High levels of LTB4 are observed in rheumatoid arthritis, gout, psoriasis and inflammatory bowel disease suggesting that antagonists may be effective treatments; LTB4 antagonists may also be effective therapies for asthma."},{"term":"Lignanes","value":"Substances with varying biological activities originating from plants. They contain phytoestrogens and when included in the diet, may provide protection against hormone-dependent breast and prostate cancers and other diseases. They are also effective as an adjuvant therapy in the treatment of rheumatoid arthritis."},{"term":"Lipopolysaccharide (LPS)","value":"The major constituent of the cell walls of Gram-negative bacteria. It is highly immunogenic, and is frequently used to experimentally induce inflammation."},{"term":"Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)","value":"A member (EC 3.1.1.47) of the A2 phospholipase family of enzymes that hydrolyze phospholipids at the sn2 position to generate lysophospholipids and fatty acids. The enzyme is also known as 2-acetyl-1-alkylglycerophosphocholine esterase and platelet-activating factor acetylhydrolase (PAF-AH) and appears to be an independent predictor of coronary heart disease. The enzyme circulates bound to LDL and its expression is modulated by mediators of inflammation. It is speculated that this enzyme could either promote atherogenesis if it releases products from LDL phospholipids that are injurious to the artery wall or it could exert protective effects if it decreases inflammation and thrombotic events via hydrolysis of PAF. 5-lipoxygenase-mediated oxygenation of membrane phospholipids and its interaction with phospholipase A(2)s may play a crucial role in the pathogenesis of diseases such as bronchial asthma and atherosclerosis."},{"term":"Liposome","value":"A synthetic spherical particle (ranging in diameter from submicrons to cm) consisting of a single or multilayer lipid bilayer enclosing an aqueous compartment. They are used as models of the plasma membrane and for delivering drugs. Liposomes fuse with the plasma membrane of a cell and deliver their contents intracellularly."},{"term":"Lipoxygenase","value":"An enzyme catalyzing the oxidation of unsaturated fatty acids with O2 producing hydroperoxides of the fatty acids. 5-Lipoxygenase (EC 1.13.11.34) catalyzes the first step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes. 5-lipoxygenase inhibitors which block the synthesis of hydroperoxide acid, 5-HPETE and subsequent synthesis of leukotrienes may be effective in the management of COPD or rheumatoid arthritis. 15-Lipoxygenase (EC 1.13.11.33) is an atherogenic enzyme which plays a role in the oxidation of LDL leading to the formation of foam cells. Inhibition of this enzyme may be a potential treatment for atherosclerosis."},{"term":"Lyme Disease","value":"A tick-transmitted, spirochetal, inflammatory disorder due to Borrelia burgdorferi. It is also known as Lyme borreliosis and presents as a rash (erythema migrans) that may be followed weeks or months later by neurologic, cardiac or joint abnormalities."},{"term":"Lymph Node","value":"A small, bean-shaped organ that supplies lymphocytes to the bloodstream and filters out bacteria and foreign substances from the fluid that contains white blood cells. Also called lymph glands, these organs are located throughout the body."},{"term":"Lymphocyte","value":"A type of white blood cell formed in lymphocytic tissue (i.e., lymph nodes, spleen, thymus, tonsils, Peyer's patches, bone marrow) that is responsible for specific immune recognition of pathogens and the initiation of adaptive immune responses."},{"term":"Lymphocytosis","value":"An increased number of circulating lymphocytes. Pathologic lymphocytosis occurs in chronic inflammation, recovery from acute infection, lymphocytic leukemia and hypoadrenocorticism and indicates a strong immune stimulus of chronic duration from a bacterial infection, viremia or immune-mediated disease. Absolute lymphocytosis is the presence of more than 15,000 lymphocytes/mm3 blood.\r\n"}]},{"letter":"M","Terms":[{"term":"Macrophage","value":"An immune cell that is capable of phagocytosis, and that may also be capable of antigen processing and presentation (APCs). These cell have different names depending upon the tissue in which they are located (e.g., Kupffer cells in the liver, alveolar macrophages in lung, histiocytes in connective tissue). Macrophages process the phagocytosed antigen and present it in association with class II molecules to CD4+ T cells. If the CD4+ T cell is Th0, antigen presentation by macrophages often results in differentiation of these Th0 cells into Th1 cells. Phagocytosis and/or cytokines induce macrophage activation, and activated macrophages secrete IL-1 and upregulate expression of costimulatory molecules (e.g., B7 and ICAM-1) on their surface."},{"term":"Macrophage Colony Stimulating Factor (M-CSF)","value":"A key glycoprotein (proinflammatory cytokine) that regulates the maturation, survival and differentiation of bone marrow progenitor stem cells in hematopoiesis."},{"term":"Major Histocompatibility Complex (MHC)","value":"The genetic loci (class I, II and III regions) found in all mammals encoding a specialized group of highly polymorphic cell surface proteins responsible for antigen recognition. Class I and II MHC gene products are involved in signaling between lymphocytes and cells expressing antigen. Class III molecules are structurally and functionally different from the gene products of class I and II MHC and are commonly referred to as the complement system."},{"term":"MAP Kinase","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)\r\n"},{"term":"MAPK","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)"},{"term":"Mast Cells","value":"Large cells that, once activated by the contact of an allergan with IgE, release a large number of inflammatory mediators through different mechanisms. Mast cells contain large granules that store a variety of mediator molecules including the vasoactive amine histamine and the proteases tryptase and chymase. Other mechanisms include the synthesis of lipid membrane-derived molecules (prostaglandins, leukotrienes and PAF) and the production of cytokines. Mast cells play a crucial role in allergic reactions and asthma. Chymase-positive mast cells may contribute to fibrotic changes in primary pulmonary hypertension."},{"term":"Matrix Metalloproteinase-13 (MMP-13; Collagenase-3)","value":"An enzyme implicated in the mediation of the pathological changes in articular cartilage during the development of osteoarthritis. It has been selected as a target to reduce the excessive degradation of joint cartilage and development of osteoarthritis."},{"term":"Matrix Metalloproteinase-8 (MMP-8)","value":"An enzyme implicated which cleaves interstitial collagens in the triple helix domain. It cleaves type III collagen more slowly than type I. Also known as collagenase-2 or neutrophil collagenase."},{"term":"Matrix Metalloproteinase-9 (MMP-9)","value":"A member of the matrix metalloproteinase (MMP) family of enzymes (EC 3.4.24.35; also known as type V collagenase or gelatinase B). It cleaves gelatin types I and V and collagen types IV and V. Increased activity of MMP-9 is associated with diabetic retinopathy. See also Gelatinases and Matrix Metalloproteinases (MMPs)"},{"term":"Matrix Metalloproteinases (MMPs)","value":"A family of zinc-dependent enzymes also known as matrixins that catalyze the hydrolysis of peptide chains and therefore have the ability to degrade a variety of proteins (i.e., elastin, collagen, proteoglycans, laminin, fibronectin) of the extracellular matrix. They are functionally categorized into three groups according to their substrate target: collagenases, stromelysins and gelatinases which degrade fibrillar collagen, proteoglycans and glycoproteins and denatured and basement membrane collagens, respectively. MMPs are produced by neutrophils, alveolar macrophages and airway epithelial cells and have been implicated in several clinical inflammatory conditions such as COPD and asthma where inhibition would block extravasation, migration and alveolar wall degradation. Inhibitors may also be effective as a treatment for rheumatoid arthritis, inflammatory bowel disease (IBD), stroke and multiple sclerosis and for preventing tumor growth and metastasis."},{"term":"MEK","value":"See Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)"},{"term":"Melanocortin 1 Receptor (MC1R)","value":"One of five identified melanocortin G-protein-coupled receptors that is found in melanocytes and appears to be the receptor for alpha-melanocyte stimulating hormone (MSH). This subtype may mediate food intake and therefore modulators may be effective antiobesity agents. The subtype has also been shown to be expressed in several types of inflammatory cells and its activation by melanocortin peptides has been associated with the inhibition of inflammatory mediator production and inflammatory cell migration. Agonism of this receptor may therefore be effective in the treatment of inflammatory diseases such as rheumatoid arthritis."},{"term":"Melanocortin 2 Receptor  (MC2R)","value":"One of five identified melanocortin G-protein-coupled receptors that is localized in adrenocortical cells and appears to be the ACTH receptor. It is expressed in the zona fasciculata of the adrenal cortex and stimulates production of cortisol. Mutations in the gene encoding this subtype are associated with familial glucocorticoid deficiency (FGD). Antagonists to this subtype would inhibit ACTH-induced cortisol production and may be effective in the treatment of conditions such as Cushing's disease and preterm labor."},{"term":"Melanocortin 3 Receptor  (MC3R)","value":"One of five identified melanocortin G-protein-coupled receptors that together with MC4R are expressed mainly in the brain (hypothalamus in particular) where they appear to mediate ghrelin- and food deprivation-induced increases in food intake, food hoarding and foraging as well as sexual behavior.\r\n"},{"term":"Melanocortin 4 Receptor (MC4R)","value":"One of five identified melanocortin G-protein-coupled receptors expressed in skin and in the brain (particularly the hypothalamic nuclei). Activation of the receptor inhibits feeding behavior. Disruption of the MC4R in mice leads to an obesity syndrome. In addition, administration of melanocortin agonists into the cerebral ventricles inhibits feeding in several murine models of hyperphagia while coadministration of melanocortin antagonists blocks this effect. MC4R mutations result in a syndrome of hyperphagic obesity in humans that can present with either dominant or recessive patterns of inheritance."},{"term":"Melanocortin 5 Receptor (MC5R)","value":"One of five identified melanocortin G-protein-coupled receptors expressed in several types of peripheral tissues. This subtypes is thought play a role in regulating exocrine gland function and in coordinating central and peripheral signals for aggression."},{"term":"Melanocortin Receptors","value":"Five members of the rhodopsin family of 7-transmembrane, G-protein coupled receptors found in melanocytes, brain and other tissue that bind melanocortins, a group of posttranslationally processed pituitary peptide hormones derived from proopiomelanocortin (POMC) which mediate several biological actions such as food intake, and sexual behavior among others. Melanocortins include adrenocorticotropin (ACTH) and alpha, beta and gamma-melanocyte-stimulating hormones (MSHs). Activation of all five subtypes leads to increase intracellular cAMP formation. The receptors are inhibited by the endogenous antagonists agouti signaling protein and agouti-related protein. MCR1 appears to be the alpha-MSH receptor. MC2R is localized in adrenocortical cells and appears to be the ACTH receptor. MC3R and MC4R are localized primarily to sites in the brain and appear to mediate ghrelin- and food deprivation-induced increases in food intake, food hoarding and foraging."},{"term":"Melanocortins","value":"A group of posttranslationally processed pituitary peptide hormones derived from proopiomelanocortin (POMC) which display a wide variety of biological actions including mediation of food intake and sexual behavior. They include adrenocorticotropin (ACTH) and alpha, beta and gamma-melanocyte-stimulating hormones. These hormones mediate their effects through G-protein coupled receptors and stimulation of adenylate cyclase."},{"term":"MIF","value":"A cytokine with the unique ability to antagonize the effects of corticosteroids and whose expression has been recently described in rheumatoid arthritis (RA). MIF could be a therapeutic target for RA inflammation and disease progression."},{"term":"Missense Mutation","value":"A mutation that converts a codon coding for one amino acid to a codon coding for another amino acid. \r\n"},{"term":"Mitochondria","value":"A class of tubular-shaped organelles that reside within eukaryotic cells, converting oxygen and nutrients into adenosine triphosphate (ATP), which is required by cells for energy. Mitochondrial dysfunction has been hypothesized to contribute to the pathogenesis of Huntington's disease, Parkinson's disease, schizophrenia, and a wide range of other disorders."},{"term":"Mitogen-Activated Protein (MAP) Kinase (MAPK)","value":"A family of serine/threonine kinases that are activated when quiescent cells are exposed to mitogens and therefore potentially transmit a signal for entry into the cell cycle. One target is transcription factor p62TCF. MAPK can be phosphorylated by MAP kinase kinase (MAPKK) which is controlled by RAF1. C-Jun N-terminal kinases (JNK) are members of the MAPK family of enzymes. MAPK has been implicated in cerebral spasm and inhibitors of this kinase may be useful in the treatment of vasospasm following subarachnoid hemorrhage. See also p38 Mitogen-Activated Protein Kinases (MAPKs)"},{"term":"Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)","value":"A kinase enzyme (EC 2.7.12.2) and member of MAPK signal transduction cascade where it is lies upstream of MAPK and stimulates the enzymatic activity of MAPK. MAPKs, also known as extracellular signal-regulated kinases (ERKs), are activated by a wide variety of extracellular signals and thus serve as an integration point for multiple biochemical pathways. They are activated via rapid phosphorylation on threonine and tyrosine residues. The MAPK signaling cascade is initiated by extracellular signaling which activates (i.e., phosphorylates) MAP kinase kinase kinase (MKKK; MAP3K). Activated MAP3K phosphorylates MEK which then activates MAPK. MEK/ERK inhibitors inhibit mucin secretion which would be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders such asthma and cystic fibrosis. MEK inhibitors have also been shown to inhibit muscarinic receptor-induced human lung fibroblast proliferation which contributes to the pathology of COPD. In Crohn's disease, macroscopically noninflamed colon contributes to diarrhea via impaired epithelial sodium channel-mediated sodium absorption and studies have shown that therapeutic inhibition of MEK1/2 restores electrogenic sodium absorption. Thus, inhibition of MEK could be an effective strategy for the treatment of the chronic inflammation and diarrhea seen in Crohn's disease."},{"term":"MMP","value":"See Matrix Metalloproteinases (MMPs)"},{"term":"Monoclonal Antibody (MAb)","value":"An antibody of a defined specificity that recognizes only a single epitope of an antigen. MAbs are produced by a single clone of B lymphocytes. Production of MAbs for therapeutic use is usually carried out by fusion of the relevant B cell clone with an immortalized cell line. This results in a population of hybrid cells (i.e., hybridoma) that secretes a large amount of the MAb of interest. Therapeutic MAbs can be murine, chimeric or humanized. Murine MAbs are developed in mice and can result in marked human antimouse responses (i.e., immunogenicity) in humans following administration. Thus, chimeric antibodies were developed which are composed of the murine variable region grafted onto a human MAb (two-thirds human). Humanized MAbs are less immunogenic since only the complementary determining regions of the murine antibody (only 5%) are grafted onto a human MAb."},{"term":"Monocyte Chemoattractant Proteins (MCP-1, MCP-2, MCP-3, MCP-4)","value":"MCP-1 through MCP-4 are CC chemokines secreted by monocytes, macrophages, fibroblasts and keratinocytes. They stimulate macrophage activation and basophil histamine release and promote Th2 immunity. MCP-1 targets T cells, monocytes and basophils via CCR2 and CCR9 receptors; MCP-2 targets T cells, monocytes, eosinophils and basophils via CCR2 and CCR9 ; and MCP-3 and MCP-4 target T cells, monocytes, eosinophils, basophils and dendritic cells via CCR2, CCR3 and CCR9 receptors. MCP-1 has been implicated in the pathogenesis of rheumatoid arthritis and atherosclerosis and has been shown to be increase in the brain in response to ischemia."},{"term":"Mucosa","value":"The mucous lining consisting of epithelium and the lamina propria and sometimes a layer of smooth muscle, as in the digestive tract."},{"term":"Mutation","value":"Damage or change in a gene or chromosome so that transcription is altered.\r\n"},{"term":"Myalgia","value":"Pain in a muscle or muscles."},{"term":"Myocardial Infarction (MI) ","value":"A sudden lack of sufficient arterial or venous blood supply to the heart due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The resulting necrosis of the cardiac muscle is consistent with prolonged myocardial ischemia. It is common in individuals with coronary artery disease (CAD). See also Infarction and Infarct."}]},{"letter":"N","Terms":[{"term":"Nausea","value":"The unpleasant sensation of queasiness or stomach upset that often precedes or accompanies the act of vomiting. Some common causes include motion, early pregnancy, intense pain, emotional stress, gallbladder disease, food poisoning, enteroviruses among others. It is also be an adverse effect of several chemotherapeutic agents.\r\n"},{"term":"Necrosis","value":"Death of one or more cells of a tissue or organ. Early damage includes irreversible mitochondrial (e.g., swelling, granular calcium deposits) and nuclear (e.g., pyknosis, karyolysis, karyorrhexis) changes. Later, affected cells merge forming a focus of granular, amorphous or hyaline material."},{"term":"Neuritis","value":"Inflammation of a nerve. Also can refer to noninflammatory nerve lesions of the peripheral nervous system. \r\n"},{"term":"Neuron","value":"The cell of the nervous system which is composed of a cell body, dendrites and a single axon."},{"term":"Neuropathic","value":"Pertaining to neuropathy."},{"term":"Neuropathic Pain","value":"A heterogenous group of conditions caused by damage to or dysfunction of the peripheral or central nervous systems. Examples include diabetic neuropathy, AIDS neuropathy and carpal tunnel syndrome. Symptoms range from mild tingling or numbness to searing pain."},{"term":"Neutrophil","value":"See Polymorphonuclear Leukocytes."},{"term":"Neutrophil Collagenase (MMP-8; collagenase-2)","value":"See Matrix Metalloproteinase-8 (MMP-8)"},{"term":"Nitric Oxide (NO), Endogenous","value":"A biologically signaling gas synthesized from L-arginine in endothelium, macrophages, neutrophils, platelets and other tissues. It is formed in bone, brain, granulocytes, pancreatic B cells and peripheral nerves by a calcium-calmodulin-dependent constitutive nitric oxide synthase (cNOS) and, in hepatocytes, macrophages and smooth muscles by a calcium-calmodulin-independent inducible NOS (iNOS). It is involved in many important biological events such as neurotransmission, immune regulation, vascular smooth muscle relaxation (i.e., mechanisms of penile erection), inhibition of platelet aggregation and memory. NO production has been implicated as defective in diabetic peripheral vascular studies. Blockade of NOS, especially the endothelial NOS (eNOS) isoform, can induce insulin resistance which suggests that NO plays an important role in modulating insulin sensitivity and carbohydrate metabolism. Endothelium-derived NO (also known as endothelium-derived relaxing factor or EDRF) refers to the isoform of NO secreted by endothelial cells that is responsible for maintaining systemic blood pressure, vascular remodeling and angiogenesis. Studies have demonstrated that shortages or inactivation of this NO may contribute to high blood pressure and formation of atherosclerotic plaque and excess production is toxic to brain cells. NO has also been implicated in the pathogenesis of ischemic brain injury."},{"term":"Nitric Oxide (NO), Endothelium-derived","value":"See Nitric Oxide (NO), Endogenous"},{"term":"Nonsteroidal Antiinflammatory Drugs (NSAIDs)","value":"A large group of medications, some of which are related to aspirin. They are used to treat conditions associated with inflammation and pain."},{"term":"NSAIDs","value":"See Nonsteroidal Antiinflammatory Drugs (NSAIDs)"},{"term":"Nuclear Factor kappa B (NF-kappaB)","value":"A protein transcription factor and intracellular mediator of the inflammatory cascade involved in generation of certain adhesion molecules (ICAM-1, VCAM-1), iNO synthase, COX-2, cytokines (e.g., IL-1beta, IL-2, TNF-alpha, IL-6, IFN-gamma) and chemokines (e.g., IL-8). Other genes which are regulated by NFkappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. Recent findings suggest that NF-kappaB provides a mechanistic link between inflammation and cancer, controlling the ability of preneoplastic and malignant cells to resist apoptosis-based tumor surveillance mechanism and regulating tumor angiogenesis and invasiveness. NF-kappaB activity is closely associated with IkappaB Kinase Complex (IKK), and aberrant or constitutive NF-kappaB activation has been detected in many human malignancies including solid tumors and hematological cancers such as acute myeloid leukemia and chronic myelogenous leukemia. It has also been reported that constitutive activation of the receptor tyrosine kinase Flt3 is responsible for IKK activation. Also, TNF activation results in NF-kappaB activation and plays a role in inflammation-driven tumor progression. In addition, NF-kappaB signaling in microglia is essential for the Abeta-induced neuronal death that causes Alzheimer's disease. Therapeutic inhibitors of the NF-kappaB activation may be a useful option for treating cancer, including breast, lung, colorectal and prostate cancer and acute myeloid leukemia, musculoskeletal and connective tissue disorders  including ankylosing spondylitis and rheumatoid arthritis, respiratory disorders including asthma, neurological disorders including multiple sclerosis (MS), and also psychiatric, cardiovascular, renal, gastrointestinal, dermatological, endocrine, infections, metabolic, hematological and immunological diseases. NF-kappaB activation and plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease, depression and inflammatory bowel disease (IBD), atherosclerosis, asthma, arthritis, cachexia, cancer, diabetes, euthyroid sick syndrome, the common cold, AIDS, sepsis and stroke. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Other genes which are regulated by NF-kappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. NF-kappaB activation plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease and depression. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Moreover, enhanced NF-kappaB activity is involved in the pathology of both forms of IBD, Crohn's disease and ulcerative colitis and studies have demonstrated enhanced processing of the NF-kappaB precursor p105 and degradation of inhibitor of NF-kappaB, IkappaBalpha, by immunoproteasomes isolated from the mucosa of Crohn's disease patients. NF-kappaB has been identified as an important target for therapeutic intervention in IBD since it plays a central role in regulating inflammatory responses in these patients. NF-kappaB activation inhibitors may be effective for suppressing inflammation seen in Th17-mediated diseases such as rheumatoid arthritis, psoriasis and Crohn's disease."},{"term":"Nucleoside","value":"The building block of DNA and RNA which is a purine or pyrimidine base linked glycosidically to ribose or deoxyribose. It lacks the phosphate residues that would make it a nucleotide.  The ribonucleosides are adenosine, guanosine, cytidine and uridine and the deoxyribosides are deoxyadenosine, deoxyguanosine, deoxycytidine and deoxythymidine."},{"term":"Nucleotide","value":"The phosphate ester of a nucleoside that is the basic constituent of DNA and RNA. Other structures (e.g., cAMP, cGMP) and molecules with two or three phosphates are also called nucleotides."}]},{"letter":"O","Terms":[{"term":"Occlusion","value":"Closure or blockage as in the case of a blood vessel.\r\n"},{"term":"Oligonucleotide","value":"See Antisense Oligonucleotide."},{"term":"Oncostatin M","value":"A member of the IL-6 family of cytokines that participates in the induction of inflammation and modulation of the extracellular matrix. It is produced by T cells, macrophages and neutrophils and may be involved in bone formation, cartilage degradation, cholesterol uptake, tumor growth, pain and inflammation. The cytokine has been shown to be upregulated in rheumatoid arthritis and fibrotic diseases. Thus, antagonism of the oncostatin M receptor may be effective in diseases characterized by inflammation and changes in the extracellular matrix."},{"term":"Open-Label Trial","value":"A clinical study in which all participants (i.e., patient and investigator) know the identity of the administered drug."},{"term":"Orphan Drug","value":"A status granted by the FDA to unpatentable medications developed for rare diseases. Rare or orphan diseases are defined affecting fewer than 200,000 people in the US or are associated with a low prevalence of less than 5 per 10,000 in the community. This staus gives the manufacturer a seven-year right to exclusively market the compound. By increasing profitability of these agents, their production is encouraged."},{"term":"Osteoarthritis","value":"A noninflammatory degenerative joint disease which is seen mainly in the elderly and is characterized by degeneration of articular cartilage, hypertrophy of bone and changes in the synovial membrane. Individuals suffering from the disorder experience pain and stiffness especially after prolonged activity."},{"term":"Osteoblast","value":"A type of cell that produces and secretes the proteins which constitute the bone matrix and later controls mineralization of the same. When enclosed by the osseous matrix it produces, an osteoblast becomes an osteocyte."},{"term":"Osteoclast","value":"A large multinucleated cell of monocytic origin that is involved in the resorption of osseous tissue. Also known as an osteophage."},{"term":"Osteoclastogenesis Inhibitory Factor (OCIF)","value":"See Osteoprotegerin\r\n\r\n"},{"term":"Osteophyte","value":"A bony outgrowth or protuberance alsop known as a bone spur that forms along joints and is seen in conditions such as arthritis. They are responsible for limitations in joint motion and can cause pain."},{"term":"Osteoporosis","value":"Osteoporosis is the most common type of metabolic bone disease. It is a skeletal disorder characterized by low bone mass and deterioration of bone microarchitecture which leads to bone fragility and increased susceptibility to fractures (especially of the hip, spine and wrist) caused by relatively low impact. Polymorphisms in the gene (COLIA1) encoding collagen type Ialpha1 (a bone matrix protein) have been linked to reduced bone density and a predisposition for fractures among women. Other genes which may contribute to osteoporosis (i.e., bone remodeling, formation and/or fracture) include genes encoding the vitamin D receptor (VDR), the estrogen receptor alpha (ER-alpha), bone morphogenetic protein 2 (BMP-2), lipoxygenase (Alox15) and the transcription factor Cbfa1. The disease predominately occurs in postmenopausal women and elderly men. Risk factors include early menopause or early surgical removal of the ovaries without compensatory estrogen therapy, small body frame/low body weight, excessive use of tobacco and alcohol, genetic factors, insufficient dietary intake of calcium and vitamin D, insufficient exercise and anorexia. Medications such as glucocorticoids, thyroid hormones, methotrexate and other chemotherapeutic drugs, ciclosporin, heparin, cholestyramine and some anticonvulsants have been identified as risk factors for the disease. Moreover, osteoporosis has been linked to highly active antiretroviral therapy (HAART) in AIDS patients and to antidepressant therapy with selective serotonin reuptake inhibitors (SSRIs) in elderly men and women. Some endocrinologic, rheumatologic, hematologic and gastrointestinal diseases may also be risk factor for osteoporosis."},{"term":"Osteoprotegerin","value":"An endogenous antiosteoclastogenic cytokine also known as osteoclastogenesis inhibitory factor (OCIF) that is a member of the tumor necrosis factor (TNF) receptor superfamily. It is a soluble decoy receptor for the pro-osteoclastogenic cytokine RANKL and it inhibits the differentiation and resorption of osteoclasts. Its is a potential target for the treatment of osteoporosis.\r\n"}]},{"letter":"P","Terms":[{"term":"P-Selectin","value":"A cellular adhesion molecule (CAM) involved in acute inflammation and hemostasis. It is expressed by platelets and endothelium and mediates adhesion. The majority of P-selectin binding lymphocytes are memory cells. P-selectin is stored in intracellular granules and expression can be rapidly upregulated by several mediators such as histamine, thrombin and LTC4. P-selectin binds P-selectin glycoprotein-1 (PSGL-1) which is expressed on most leukocytes and also recognizes sialylated carbohydrate groups related to the Lewis X or Lewis A family."},{"term":"P2X3 Receptor","value":"An ATP-sensitive, ligand-gated ion channel that is a receptor protein expressed on sensory afferent neurons. It is involved in chronic inflammatory diseases and neuropathic pain responses and the afferent pathways controlling urinary bladder volume reflexes. P2X3 antagonists may be effective as a treatment for urinary incontinence and other disorders involving urine storage and voiding (e.g., overactive bladder). In addition, antagonists may be effective in the treatment of chronic inflammatory conditions such as rheumatoid arhritis and neuropathic pain."},{"term":"p38 MAP Kinase","value":"See p38 Mitogen-Activated Protein Kinases (MAPK)\r\n"},{"term":"p38 Mitogen-Activated Protein Kinases (MAPKs)","value":"A class of MAPKs composed of four isoforms: p38 MAPK-alpha (MAPK14), p38 MAPK-beta (MAPK11), p38 MAPK-gamma (MAPK12) and p38 MAPK-delta (MAPK13 or SAPK4) which are activated by a variety of cellular stresses including osmotic shock, inflammatory cytokines, lipopolysaccharides (LPS), ultraviolet light and growth factors. They are activated via MAP3K and MEK by phosphorylation at Thr180 and Tyr182, Activated p38 MAPKs have been shown to phosphorylate and activate mitogen-activated protein kinase-activated protein kinase 2 (MAPKAPK2) and the transcription factors ATF-2, Mac and MEF2. p38 MAPKs may also be involved in mucin secretion and inhibiotrs of this kinase could be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders and may also inhibit lung fibroblast proliferation which contributes to the pathology of COPD."},{"term":"p53","value":"See Tumor Suppressor Protein p53"},{"term":"Palliative","value":"A treatment directed toward the control of symptoms rather than the curing of the disease."},{"term":"Pannus","value":"A vascular tissue developing in a rheumatoid joint at the junction between the articular cartilage, synovium and capsule. It may adhere to the joint surface and extend across it."},{"term":"Paracrine","value":"Refers to hormone signaling where the hormone synthesized in and released from endocrine cells binds to its receptor on nearby cells affecting their function."},{"term":"PDGFRalpha","value":"See Platelet-Derived Growth Factor Receptor alpha (PDGFRalpha)"},{"term":"PDGFRbeta","value":"See Platelet-Derived Growth Factor Receptor beta (PDGFRbeta)\r\n"},{"term":"Pentraxins","value":"A family of acute phase proteins whose circulating levels, especially those of C-reactive protein, have been recognized as a reliable marker for osteoarthritis and rheumatoid arthritis severity and have been postulated to play a role in the inflammatory response. Pentraxin3 (PTX3), a member of this family is produced by chondrocytes from patients with osteoarthritis. PTX3 may function as an innate regulator of inflammation in the arthritic joint."},{"term":"Peripheral Blood Mononuclear Cells (PBMCs)","value":"Lymphocytes and monocytes isolated from peripheral blood by centrifugation."},{"term":"Peroxisome Proliferator-Activated Receptor alpha (PPARalpha)","value":"A nuclear receptor hormone that together with PPARdelta and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARalpha isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARalpha may be effective in the treatment of type 2 diabetes, lipoprotein disorders, atherosclerosis, hypertension and Alzheimer's-type dementia.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor gamma (PPARgamma)","value":"A ligand-activated transcription factor, member of the nuclear hormone receptor family, that is predominately expressed in adipose tissue and involved in adipocyte differentiation. Thus, it is important for lipid storage and utilization. Several fatty acids, eicosanoids, prostaglandins and their metabolites activate PPARgamma. Insulin-sensitizing thiazolidinediones have been shown to be PPARgamma agonists. PPARgamma agonists may be effective in the treatment of atherosclerosis and Alzheimer's disease. PPARgamma has also been implicated in tumor repression or formation and is expressed in both normal breast epithelia and breast cancer cells."},{"term":"Peroxisome Proliferator-Activated Receptors (PPARs)","value":"Ligand-activated transcription factors that are members of the nuclear receptor superfamily which also include steroid, retinoid, thyroid hormone and vitamin D receptors. Three PPARs have been identified: PPARalpha, PPARgamma and PPARdelta. They are activated by endogenous fatty acids or fatty acid derivatives. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. PPAR receptors have metabolic and immune functions that influence the development of atherosclerosis and agonists to either of the three subtypes may be effective in the treatment of atherosclerosis."},{"term":"Phalangeal","value":"Relating to a phalanx. See also Phalanx\r\n"},{"term":"Phalanx","value":"A bone in the finger. Each digit has three phalanges except the thumb which has two.\r\n\r\n"},{"term":"Phase 0 Trial","value":"A phase of clinical testing that is also known as exploratory IND in the US and Microdosing in Europe. This stage of drug development is intended to facilitate the transition from animal to human studies. The trials evaluate doses determined in animal studies that are only 1/100th of those expected to be required for therapeutic effect.\r\n"},{"term":"Phase I Trial","value":"The first human study of a new drug, usually conducted in a small number of healthy individuals to evaluate the biological properties of that drug, including pharmacological activity, pharmacokinetics and tolerability (i.e., toxicity). Examination of how the drug should be administered, how often and in what dosage are also assessed."},{"term":"Phase II Trial","value":"A type of study providing preliminary information on the efficacy and safety of a new drug. Phase IIa trials are conducted in a small population of patients, while phase IIb studies incorporate larger patient cohorts and can determine a range a doses to be used in phase III clinical trials."},{"term":"Phase III Trial","value":"A full-scale clinical study conducted in order to determine the efficacy and safety of a new drug prior to seeking marketing approval. These studies usually involve large patient populations randomized to receive a new or standard therapy and/or placebo."},{"term":"Phase IV Trial","value":"A large-scale clinical trial conducted following regulatory approval of a drug. Its purpose is to expand efficacy and safety information. These trials are also referred to as marketing support trials."},{"term":"Phenotype","value":"The observable traits of an organism (e.g., weight, height, hair color) regardless of the genotype. Phenotypic traits are not necessarily genetic and may result from an interaction between the genotype and the environment."},{"term":"Phosphodiesterase 3 (PDE3)","value":"A phosphodiesterase isoenzyme (EC subclass 3.1.4) with high affinity for both cAMP and cGMP. It plays a key role in regulating cAMP content in human airway smooth muscle cells."},{"term":"Phosphodiesterase 4 (PDE4)","value":"A phosphodiesterase (PDE) isoenzyme (EC class 3.1.4) characterized by high affinity for cAMP and poor affinity for cGMP. Four PDE4 isoforms have been identified (A, B, C and D). PDE4 plays a key role in regulating cAMP content in human airway smooth muscle cells. PDE4 isoenzymes are abundant in immunocompetent cells, where an increase in cAMP leads to the inhibition of the synthesis and release of proinflammatory mediators, cytokines and active oxygen species. Thus, PDE4 inhibitors may be effective as a treatment for inflammatory diseases such as rheumatoid arthritis, asthma, COPD, atopic dermatitis and IBD. They may also be active in the management of multiple sclerosis, Alzheimer's disease and osteoporosis."},{"term":"Phosphodiesterases (PDEs)","value":"A family of enzymes (EC subclass 3.1.4) that regulate intracellular cyclic nucleotide levels and includes several distinct isoenzymes (PDE1-11), which differ in primary structure, relative affinity for cyclic AMP versus cyclic GMP, responses to specific effectors and inhibitors, and mechanisms of regulation."},{"term":"Placebo","value":"An inactive compound used in preclinical and clinical trials as a comparison for active compounds."},{"term":"Platelet-Derived Growth Factor Receptor beta (PDGFRbeta)","value":"A membrane receptor tyrosine kinase for the glycoprotein PDGF. The two receptor isoforms (PDGFRalpha and PDGFRbeta) regulate cellular proliferation, differentiation and migration in normal cells and are widely expressed in several malignancies. Extracellular binding of PDGF stimulates the intrinsic tyrosine kinase activity in the cytoplasmic portion of each subunit of the receptor resulting in transphosphorylation of specific tyrosine residues. These phosphotyrosines can then serve as binding sites for intracellular signaling molecules by means of their Src homology 2 domains, thus activating multiple downstream pathways, including phosphatidyl-inositol-3 (PI3)-kinase, phospholipase C (PLC)-gamma, Src kinase, Janus kinase (JAK)/Signal transducers and activators of transcription (STAT) and mitogen activated protein (MAP) kinase pathways. PDGFR inhibitors have been shown to inhibit malignant cell proliferation and survival. Antagonism of this receptor type may also be effective in the treatment of macular degeneration. In GVHD, generated autoantibodies can activate PDGFR signaling which can consequently lead to the development of fibrosis and scleroderma. Thus, PDGFR inhibition may be beneficial in the treatment of GVHD in chronic conditions. Thus, PDGFR inhibition may be beneficial in the treatment of GVHD in chronic conditions. PDGFR mutations have been found to be associated with the development of mastocytosis and contribute to mast cell overproduction, increased release of proinflammatory cytokines and eosinophil infiltration leading to inflammation. Inhibition of PDGFRbeta may therefore be effective in the treatment of systemic mastocytosis."},{"term":"Pleiotropic","value":"Having multiple effects."},{"term":"Polymerase","value":"A general term for any enzyme belonging to the EC class 2, transferases which catalyze polymerization. Prokaryotic DNA polymerases are divided into types I, II and III, while eukaryotic polymerase is subdivided into polymerase alpha, -beta, -gamma, -delta and -epsilon. DNA polymerases are highly accurate, entering the correct complementary base opposite a base on the template chain; there is a low incidence of mismatching. DNA polymerases remove primers after they have served their function, refilling the gaps with nucleotides until all bases are paired. However, DNA polymerase cannot link the last nucleotide added to the 5´ end of the next-to-the-last segment; a single-chain nick remains that is later closed by DNA ligase. RNA polymerase catalyzes RNA transcription (a polymerization reaction). There are three types of eukaryotic RNA polymerase and only one bacterial RNA polymerase."},{"term":"Polymerase Chain Reaction (PCR)","value":"A technique developed in 1983 by K.B. Mullis and F. Faloona which simplifies the production of multiple DNA copies from a sample taking advantage of DNA polymerase, the enzyme which catalyzes DNA replication. During the first cycle of PCR, a DNA double helix containing the nucleotide sequence of interest is unwound by heating to 90ºC. DNA polymerase and the nucleotide triphosphates (adenine, thymine, cytosine and guanine) required for replication are added to the unwound DNA mixture. Artificially synthesized, short (about 20 to 30 nucleosides in length) DNA, complementary to the ends of the unwound template chains, are also added and serve as the primers for the reaction. The mixture is cooled to 60ºC, allowing the artificial primers to wind to the ends of the template chains. Replication then occurs where DNA polymerase assembles complementary copies of the template chains starting from the artificial primers. The resulting reaction mixture now contains twice as many DNA molecules. The second cycle is initiated by heating the reaction mixture again which results in unwinding of the newly synthesized double helices. The mixture is then cooled allowing additional copies of the artificial primer chains to rewind with the ends of the template chains (as in the first cycle). DNA polymerase makes copies of the artificial chains and at the end of this cycle, the number of DNA molecules has doubled again. Each time the heating and cooling cycle is repeated, the number of DNA molecules in the sample doubles and, since cycling time is short, hundreds of billions of DNA copies can be generated in a few hours."},{"term":"Polymerization","value":"The linkage of glucose units into chains in cellulose or starch molecules. Multiple identical or nearly identical subunits called monomers are linked together in a chain to form a polymer. This process underlies the assembly of most biological macromolecules. For example, monosaccharides polymerize into polysaccharides, amino acid monomers into proteins and nucleotide monomers into nucleic acid polymers."},{"term":"Polymorphonuclear Leukocytes","value":"White blood cells with multilobed nuclei and cytoplasmic granules. They include neutrophils (granules stain with neutral dyes), eosinophils (granules stain with eosin) and basophils (granules stain with basic dyes)."},{"term":"Polyp","value":"A general term describing any mass of tissue (hemispheroidal, spheroidal or irregular mound-like) that projects outward from the normal surface level. They may grow from a broad base or slender stalk and may be neoplasms, foci of inflammation, degenerative lesions or malformations."},{"term":"Polyp, Adenomatous","value":"A benign neoplasm derived from glandular epithelium.\r\n"},{"term":"Polyunsaturated Fatty Acids (PUFAs)","value":"Essential long-chain fatty acids containing two or more double bonds that occur throughout animal, plant, algae, fungi and bacteria present in cell membranes, storage oils, glycolipids, phospholipids, sphingolipids and lipoproteins. They are involved in regulating cellular architecture, dynamics, phase transitions and permeability of membranes and control membrane-associated processes (i.e., regulation of ATPase, transport proteins and histocompatibility complexes. They also regulate expression of some genes (e.g., genes encoding for fatty-acid synthase, nitric-oxide synthase, sodium-channel proteins) and are involved in immune responses and cold adaptation. PUFAs are also implicated in pathological conditions such as cardiovascular disease. PUFAs are grouped into two series on the basis of the position of the terminal double bond being 3C or 6C (e.g., 3-series PUFAs: linolenic acid, alpha-linolenic acid; 6-series PUFAs: gamma-linolenic acid [GLA], arachidonic acid [AA], eicosapentaenoic acid [EPA], docosahexaenoic acid [DHA]). See also Arachidonic Acid (AA), Docosahexaenoic acid (DHA) and Eicosapentaenoic Acid (EPA)"},{"term":"Preclinical Studies","value":"Experimental in vitro and/or in vivo testing in animals performed prior to clinical studies to determine the biological activity and safety of an agent."},{"term":"Prevalence","value":"The number of cases of a disease or condition at a given time."},{"term":"Prodrug","value":"A therapeutic substance that is converted its active form following metabolism."},{"term":"Prognosis","value":"An assessment of the likely outcome of the disease judged from general experience of the disease and the age and condition of the individual patient."},{"term":"Programmed Cell Death (PCD)","value":"See Apoptosis"},{"term":"Proliferation","value":"Growth and reproduction of similar cells."},{"term":"Prophylaxis","value":"The prevention of a disease or the process leading to a disease."},{"term":"Prophylaxis, Active","value":"Administration of an antigenic agent to actively stimulate an immune mechanism."},{"term":"Prophylaxis, Passive","value":"Use of antiserum from another individual or animal to provide temporary (7-10 days) protection against a specific infectious or toxic agent."},{"term":"Prostacyclin","value":"An unstable prostaglandin released by mast cells and endothelium that is a potent inhibitor of platelet aggregation and also causes vasodilation and increased vascular permeability."},{"term":"Prostaglandin (PG)","value":"A class of physiologically active substances present in many tissues. They are prostanoic acids with side chains in different degrees of unsaturation and oxidation. PGs result from cyclooxygenase-catalyzed eicosanoid metabolism from arachidonic acid. They can cause vasodilation, vasoconstriction, stimulation of bronchial, intestinal or uterine smooth muscle in addition to antagonizing hormones affecting lipid metabolism. They also contribute to the pain and inflammation in arthritis."},{"term":"Prostanoids","value":"A group of molecules generated from COX-dependent arachidonic metabolism. They include the prostaglandins, prostacyclins and thromboxanes. See also Eicosanoid"},{"term":"Protease","value":"Proteolytic enzymes including both endopeptidases (EC 3.4.21-24 & 3.4.99) and exopeptidases (EC 3.4.11-19), which hydrolyze peptide bonds leading to degradation of a protein (i.e., proteolysis). Proteases are classified into four general types: serine, cysteine, aspartic and matrix metalloproteinases (MMPs)."},{"term":"Proteasomes","value":"Proteolytic complexes that degrade the majority of short-lived cytosolic and nuclear proteins. They are implicated in ATP-dependent ubiquitin protein complex degradation and in antigen processing in antigen presenting cells. Proteasomes are also involved in the regulation of JAK/STAT pathways, IL-2, IL-3 and erythropoietin stimulation. Proteasome inhibitors down-regulate inflammatory mediators such as NFkappaB and may be a potential treatment for stroke and myocardial infarction. Proteasome inhibitors also induce apoptotic cell death, and thus are being studied for the treatment of cancer."},{"term":"Protein Kinase B (PKB)","value":"See Akt\t\r\n"},{"term":"Proteoglycan","value":"A high molecular weight complex of protein and polysaccharide that is a structural component of vertebrate tissues such as bone and cartilage and is also present on cell surfaces. Glycosaminoglycans (GAGs) consistute the polysaccharide units found in proteoglycans."},{"term":"Proteolysis","value":"The degradation of proteins via hydrolysis of the peptide bonds resulting in the formation of smaller polypeptides. The process is catalyzed by proteolytic enzymes (e.g., protease, peptidase), acids or bases. See also Protease\r\n"},{"term":"Psoriasis","value":"A common inherited chronic, squamous dermatosis that is characterized by exacerbations and remissions. It is a mutlifactorial autoimmune disease with genetic, immunologic and infectious factors playing a role in its etiology The disease has a polygenic inheritance pattern and presents with eruptions of rounded, circumscribed, erythematous, dry scaly patches. These patches are covered by grayish white or silvery white, umbilicated and lamellar scales. Psoriasis commonly affects extensor surfaces, nails, scalp, genitalia and lumbosacral region. Central clearing and coalescence of the lesions result in a wide variety of clinical configurations such as annular or circinate, discoid or nummular, figurate and gyrate arrangements. Five types of psoriasis exist: vulgaris (plaque), guttate, inverse, pustular and erythrodermic."},{"term":"Psoriatic Arthritis","value":"A progressive and potentially disabling form of arthritis that is characterized by dry, scaly, silver patches of skin (as seen in psoriasis) combined with joint pain and destructive changes in the feet, hands, knees and spine resembling rheumatoid arthritis (RA). Tendon pain and nail deformities are also common and patients suffering from the disease are negative for rheumatoid factor (RF) but positive for HLA-B27 antigen particularly when the spine is involved. There are five distinct forms of psoriatic arthritis: Symmetric (an RA-like form that affects multiple symmetric pairs of joints); Oligoarticular (a milder form affecting fewer joints in an asymmetric pattern); Distal interphalangeal (DIP) (primarily involves the distal joints of the fingers and toes and nails may be affected); Spondylitis (a form that mainly affects the spinal column from the neck to lower back); arthritis mutilans (a rare but severe and destructive form affecting the small joints of the hands, feet and other joints)."},{"term":"Purine","value":"A colorless crystalline nitrogen-containing organic base that is a heterocyclic compound with a fused pyrimidine/imidazole ring occurring in nucleic acids. Adenine is a purine base that pairs with thymine in DNA and with uracil in RNA and guanine is another that pairs with cytosine in DNA and RNA.\r\n"},{"term":"Purpura","value":"A small hemorrhage (up to about 1 cm in diameter) occurring in the skin, a mucous membrane or serosal surface, which can be caused by blood disorders, vascular abnormalities and trauma. Purpuric lesions may be or may not be associated with inflammation."},{"term":"Pyretic","value":"Febrile, pertaining to fever.\r\n"}]},{"letter":"Q","Terms":[]},{"letter":"R","Terms":[{"term":"RANKL (Receptor activator of NFkappaB Ligand)","value":"A member of the TNF family of cytokines that is produced by cells of osteoblastic lineage and is a crucial modulator of bone remodeling and required for the development and activation of osteoclasts. It is a target for the treatment of osteolytic bone disorders such as osteoporosis, rheumatoid arthritis and cancer-related bone disease like follicular lymphoma with bone involvement where aberrant expression of RANKL has been observed in malignant cells.\r\n"},{"term":"RANTES","value":"A cytokine that is a selective chemoattractant for memory T cells and monocytes. It is involved in the late-phase inflammatory cascade following initial allergen-IgE binding (early-phase) on mast cells and has been implicated in the pathogenesis of rheumatoid arthritis and asthma."},{"term":"Recombinant","value":"Describes a cell or an individual with a new combination of genes not found together in either parent; it usually refers to linked genes. Recombinant DNA is spliced DNA formed from 2 or more different sources that have been cleaved by restriction enzymes and joined by ligases."},{"term":"Recombinant Vaccine","value":"Use of a recombinant antigen preparation in combination with an adjuvant, which may be administered prophylactically or therapeutically to induce viral neutralizing proteins and other protective immune responses."},{"term":"Refractory","value":"A disease or infection that is resistant to treatment.\r\n"},{"term":"Reporter Gene","value":"A gene that encodes an easily assayable product. It is coupled to the upstream sequence of another gene and transfected into cells. It is used experimentally to observe which factors activate response elements in the upstream region of the gene of interest."},{"term":"Resorption","value":"The act of losing a substance via lysis or physiologic or pathologic processes. Bone resorption is the removal of osseus tissue."},{"term":"Retrovirus","value":"A virus that contains RNA as its genetic material. This RNA is translated into DNA which inserts into the DNA of a viral-infected cell. Retroviruses are responsible for many diseases including some cancers and AIDS."},{"term":"Rheumatoid Arthritis","value":"An often chronic systemic disease which is the most common type of inflammatory arthritis. It causes inflammatory changes in the synovium of the small joints of the hands, wrists and feet resulting in pain, stiffness, swelling and loss of function. The disease can also affect other parts of the body."},{"term":"Rheumatoid Factor (RF)","value":"A complex of IgG and anti-IgG formed in joints in rheumatoid arthritis. Serum RFs are IgM antibodies directed against IgG and are found in 80% of adult rheumatoid arthritis patients. Blood tests measuring serum RF aid in the diagnosis of rheumatoid arthritis."},{"term":"Rheumatoid Nodule","value":"A growth seen in some cases of rheumatoid arthritis that is a subcutaneous site of chronic irritation (e.g., extensor surface of the forearm). They occur particularly over bony prominences. The nodule is a nonspecific necrobiotic granuloma which consists of a necrotic core surrounded by palisaded fibroblasts. The term also refers to a small round, mostly subcutaneous nodule made up of aschoff bodies that is seen in rheumatic fever."},{"term":"Ribonucleases (RNAases)","value":"A family of nucleases (EC 2.7 and EC 3.1) that catalyze the hydrolysis of internucleotide phosphodiester bonds in RNA into smaller components thus degrading it. They can be divided into endoribonucleases and exoribonucleases which include further sub-classes (i.e., EC 2.7 phosphorolytic enzymes and EC 3.1 hydrolytic enzymes).\r\n"},{"term":"Ribonucleic Acid (RNA)","value":"A macromolecule consisting of ribonucleoside residues connected by phosphate from the 3'-hydroxyl of one to the 5'-hydroxyl group of the next nucleotide. It is found in all cells in both the nuclei and cytoplasm and in viruses. RNA is divided into fractions depending on location, form or function. Messenger RNA (mRNA) reflects the exact nucleoside sequence of genetically active DNA. mRNA carries the message of the DNA coded within its sequence to the cytoplasmic areas where protein is assembled. Ribosomal RNA (rRNA) is encoded in DNA regions forming parts of the nucleolus; it is the RNA of ribosomes or polyribosomes. Transfer RNA (tRNA) refers to short-chained RNA molecules of at least 20 types (one for each of the 20 amino acids in protein synthesis). tRNA combines with amino acids during protein synthesis and interacts with mRNA codons, thus providing a link between the information coded into nucleic acids and the amino acid sequence of proteins. Small nuclear RNAs (snRNAs) are small (about 90-300 nucleotides) chains in the nucleus that are involved in processing of mRNA and rRNA. Small cytoplasmic RNA (scRNA) functions primarily in the cytoplasm and forms the signal recognition particle. scRNA participates in the process of attaching ribosomes to the endoplasmic reticulum during synthesis of membrane proteins or proteins later secreted by the cell."},{"term":"Ribonucleotide","value":"A nucleotide in which a purine or pyrimidine base is linked to a ribose molecule. It is a component of RNA. See also Nucleotide \r\n"},{"term":"Ribosome","value":"A small, sphere-shaped, cytoplasmic structures that is composed of RNA and protein and is the site of protein synthesis. Ribosomes are free in the cytoplasm and often attached to the membrane of the endoplasmic reticulum. Ribosomes exist in both eukaryotic and prokaryotic cells. Bacterial ribosomes are composed of two subunits: the smaller 30S subunit containing 21 proteins and a single 16S RNA molecule, and the larger 50S subunit containing 32 proteins and two RNA molecules (23S and 5S). 16S serves as a scaffold defining the positions of the ribosomal protein with the 3' end containing the anti-Shine-Dalgarno sequence. This sequence binds upstream to the AUG start codon on the mRNA. 16S interacts with 23S and facilitates binding of 50S and 30S. Many antibiotic agents bind to the 30S and 16S subunits of the bacterial ribosome. This action inhibits translocation of peptidyl-tRNA from the A-site to the P-site and also causes misreading of mRNA, interrupting bacterial protein synthesis necessary for survival and reproduction."},{"term":"Ribozyme","value":"A nonprotein biological catalyst consisting of specific domains of ribonucleic acid (RNA) that can recognize, bind and digest nucleic acids thus playing a key role in intron splicing events. Several cleave precursors of tRNA resulting in functional tRNA while others act on rRNA. Ribozymes induce conformational changes which involve bringing the hydroxyl groups of RNA molecules into positions where their reactivity leads to hydrolysis and breakage of RNA chains. Ribozymes have been investigated as a potential therapeutic approach for diseases such as HBV infection, since their enzymatic activity can be used to block pathogenic protein synthesis. The utility of ribozymes as biologic and therapeutic agents has been limited due to their susceptibility to chemical and enzymatic degradation and to restricted target site specificity."},{"term":"RNA","value":"See Ribonucleic Acid (RNA)"},{"term":"RNA Interference (RNAi)","value":"RNA interference (RNAi) is an endogenous process of gene silencing that is due to interruption in the cell's translation. This interruption is triggered by the cell's own mRNA in response to the presence of and consequent destruction of matching double-stranded RNA sequences. Gene expression is inhibited in a sequence-dependent manner. The process endogenously protects the cell against viruses and other insults. The process has also emerged as a powerful gene silencing technique that is useful in research and development of therapeutics. See also Small interfering RNA (siRNA)"},{"term":"RNAse","value":"See Ribonucleases (RNAases)\r\n"}]},{"letter":"S","Terms":[{"term":"Sarcopenia","value":"Age-related loss of skeletal muscle\r\n"},{"term":"Sepsis","value":"Systemic inflammatory response syndrome (SIRS) accompanied by a confirmed infectious process. See also Sepsis, Severe and Septic Shock and Systemic inflammatory response syndrome (SIRS)"},{"term":"Sepsis, Severe","value":"A stage in the continuum of clinical response to infection defined as sepsis associated with organ dysfunction; sepsis associated with hypotension; or sepsis associated with hypoperfusion abnormalities. See also Sepsis and Sepsis, Severe and Systemic Inflammatory Response Syndrome (SIRS)"},{"term":"Septic Shock","value":"A condition of clinical shock caused by endotoxin in the blood and characterized by hypoperfusion, multiple organ failure and persistent hypotension in a septic patient. See also Sepsis and Sepsis, Severe"},{"term":"Single-Blind","value":"A research testing parameter in which patients do not know which of several treatments they are receiving, thus preventing personal bias from influencing their reactions and study results."},{"term":"Single-Nucleotide Polymorphism (SNP)","value":"Single-nucleotide polymorphisms are the most common type of genetic variation. Each SNP represents a difference in a single nucleotide (e.g., a SNP may replace the nucleotide cytosine (C) with the nucleotide thymine [T]). SNPs occur approximately once in every 300 nucleotides. They are frequently found in the DNA between genes. SNPs can be used as biomarkers for diseases and may predict response to drugs and environmental factors (i.e., toxins).\r\n"},{"term":"siRNA","value":"See Small interfering RNA (siRNA)\r\n\r\n"},{"term":"Sjogren's Syndrome","value":"A chronic, systemic inflammatory disorder of unknown cause, characterized by dryness of the mouth, eyes and other mucous membranes and progressive destruction of the exocrine glands (sweat glands, lacrimal glands, salivary glands). It is often associated with rheumatic disorders (e.g., rheumatoid arthritis, scleroderma, SLE) and the lungs, kidneys, peripheral nerves, blood vessels and thyroid may also be affected. Sjogren's syndrome mainly affects females in their thirties to forties."},{"term":"SNP","value":"See Single-Nucleotide Polymorphism (SNP)\r\n"},{"term":"Sphingosine Kinase","value":"Sphingosine kinase (SphK) is a key enzyme in the sphingolipid metabolic pathway responsible for phosphorylating sphingosine into sphingosine-1-phosphate (S1P). SphK/S1P play a critical role in angiogenesis, inflammation and various pathologic conditions such as rheumatoid arthrtis, atherosclerosis, vascular inflammatory disease, cancer, allergic diseases, inflammatory bowel disease among others. See also Sphingosine kinase 1."},{"term":"Sphingosine kinase 1","value":"Sphingosine kinase 1 is an oncogenic sphingolipid-metabolizing enzyme that catalyzes the formation of sphingosine-1-phosphate (S1P), a lipid messenger with intracellular and extracellular functions. S1P can regulate proliferation and survival and has been established as a mitogenic factor. Sphingosine kinase 1 inhibitors block S1P production, leading to a decrease in proliferation and induction of apoptosis in cancer cells. Importantly, there are data showing that sphingosine kinase 1 and sphingosine kinase 2 have opposing roles in the regulation of ceramide biosynthesis and opposing effects on cancer cells (activation of sphingosine kinase 2 is proapoptotic and antiproliferative), stressing that the development of specific sphingosine kinase 1 inhibitors is critical. see also Sphingosine Kinase"},{"term":"Spleen Tyrosine Kinase (Syk)","value":"A non-receptor cytoplasmic tyrosine kinase that is a member of the Syk family of tyrosine kinases. Syk is predominantly expressed in hematopoietic tissues but can also be found in other tissue types. Syk transmits signals from the B cells receptors in addition to signaling from CD74, Fc Receptor and integrins. It is also involved in T-cell activation and release of proinflammatory cytokines. Exaggerrated release of these cytokines can result in autoimmune responses and in certain cancers such as those seen in GVHD and non-Hodgkin's lymphoma, respectively. "},{"term":"Spondylitis","value":"Inflammation of the vertebrae. See also Spondylitis, Ankylosing"},{"term":"Spondylitis, Ankylosing","value":"A systemic rheumatic disorder characterized by inflammation of the axial skeleton and large peripheral joints. The disease also known as Marie-Strümpell disease, is classified together with Reiter's syndrome (venereal and dysenteric), psoriasis, reactive arthritis, ulcerative colitis and Crohn's disease. It resembles rheumatoid arthrits but is seronegative for rheumatoid factor (RF)."},{"term":"Statins","value":"Statins are a group of compounds also known as HMG-CoA (3-Hydroxy-3-methylglutaryl coenzyme A) reductase inhibitors that are used clinically to reduce serum cholesterol levels, thereby lowering the risk of heart attack. The statins are a class of drugs that lower cholesterol levels in people with or at risk of cardiovascular disease by inhibiting the HMG-CoA reductase, the rate-limiting enzyme of the mevalonate pathway of cholesterol synthesis. Inhibition of this enzyme in the liver results in a decrease cholesterol synthesis as well as an increase in the synthesis of low-density lipoprotein (LDL) receptors. This increase in receptors augments the clearance of LDL from the bloodstream. HMG-CoA reductase inhibitors are widely used in the treatment of hypercholesterolemia, and their use has been associated with reductions in cardiovascular events and improved endothelial function. Statins also display multiple pleiotropic effects and due to their confirmed favorable safety profile, they may be effective in completely unrelated indications. For example, independently of cholesterol levels, statins are able to improve the bioavailability of nitric oxide (NO) by increasing endothelial NO synthase (eNOS) expression, primarily by stabilization of eNOS mRNA and also by acutely increasing eNOS phosphorylation. They may therefore be effective in the treatment of erectile dysfunction. Other pleiotropic effects of statins include antiinflammatory activity and effects on cell growth, proliferation and apoptosis and they are currently under investigation as chemopreventive agents. Preliminary evidence suggests that statins may also be effective in the treatment of osteoporosis, rheumatoid arthritis, COPD, multiple sclerosis, systemic sclerosis, sepsis and diabetes and in the prevention of stroke, angina, heart failure and Parkinson's disease among other indications. "},{"term":"Steroids","value":"A large family of compounds derived from cholesterol which are structurally similar in that they contain the tetracyclic cyclopenta[a]phenanthrene skeleton. Examples include plant and animal hormones, body constituents and drugs."},{"term":"Stress-Activated Protein Kinase (SAPK)","value":"See C-Jun N-Terminal Kinase (JNK)"},{"term":"Synovial Fluid","value":"A clear fluid composed of mucin, albumin, fat, epithelium and leukocytes which is thixotropic and serves as a lubricant in joints, tendons, sheaths or bursa. It also provides nutrients to avascular articular cartilage."},{"term":"Synovial Membrane (Synovium)","value":"The inner layer of the articular capsule of a synovial joint. It is composed of loose connective tissue and secretes the synovial fluid."},{"term":"Synovitis","value":"Inflammation of the synovium."},{"term":"Systemic Inflammatory Response Syndrome (SIRS)","value":"A pattern of physiological variables including leukocytosis or severe leukopenia, hyperthermia or hypothermia, tachycardia and tachypneahas, that are seen in critically ill patients in response to a range of insults such as trauma, burns, pancreatitis and infection. These inflammatory responses have been collectively termed the SIRS. The term sepsis is reserved for SIRS when infection is suspected or proven. See also Sepsis and Sepsis, Severe"},{"term":"Systemic Lupus Erythematosus (SLE)","value":"A chronic inflammatory connective tissue disorder of unknown cause that resembles rheumatoid arthritis and can involve joints, kidneys, serous surfaces and vessel walls. It is a multisystemic autoimmune disease characterized by immune tolerance to self. It occurs predominantly in young women but also in children. Symptoms can include vascular headaches, epilepsy or psychoses, organ dysfunction and articular manifestations (intermittent arthralgias to acute polyarthritis)."}]},{"letter":"T","Terms":[{"term":"T Cell","value":"One of two major classes of lymphocytes that develop in the thymus. T cell lineage markers are the expression of two T cell antigen receptors (TCR-1gammadelta and TCR-2alphabeta). TCR-2+ cells are further classified into two nonoverlapping populations that express the CD4 marker and help or induce immune responses (Th cells) or carry the CD8 marker and are predominately cytotoxic (CTLs). In general, CD4+ and CD8+ T cells recognize specific antigens in association with MHC class II and I molecules, respectively. CD4+ T cells can be further divided into Th0, Th1, Th2 and Th3 cells based on their cytokine production profile."},{"term":"T Cell Antigen Receptor (TCR)","value":"Cell surface receptor on T cells made up of a disulfide-bridged heterodimer, which recognizes processed antigen associated with an MHC molecule. Several polypeptides that form the CD3 complex associate to the TCR and are involved in TCR expression and signal transduction. Four different gene loci (alpha, beta, gamma and delta) encode the antigen-binding part of the TCR heterodimer and define the two types of TCR: TCR-2alphabeta and TCR-1gammadelta. Only one single type of TCR is expressed on a given T cell. TCR vaccines are under development for the treatment of rheumatoid arthritis."},{"term":"Th17 Cells","value":"T helper 17 cells (Th17) are a subset of T helper cells that are developmentally distinct from Th1 and Th2 cells. Th17 cells produce cytokines such as interleukin-17 (IL-17), IL-21 and IL-22. Differentiation of this subset appears to be regulated by transforming growth factor beta (TGF-beta), IL-6, IL-21, IL-23 and possibly IL-1beta. An excessive number of Th17 cells may be involved in the pathogenesis of autoimmune diseases (e.g., multiple sclerosis, psoriatic arthritis, rheumatoid arthritis, psoriasis, ankylosing spondylitis, inflammatory bowel disease) where they play a pivotal role in the inflammation and tissue injury characterizing these conditions. Th17 cells also protect against microbial infection at epithelial/mucosal barriers. Deficiencies in Th17 cells result in susceptibility to opportunistic infections."},{"term":"Thrombosis, Arterial","value":"The formation of unwanted blood clots (i.e., thrombi) in arteries leading to partial and complete blockage of that artery. It is very common in individuals suffering from artherosclerosis. Blood clot developing in the coronary artery can lead to myocardial infarction while blood clot occurring in the brain can result in cerebrovascular injury.\r\n"},{"term":"Thrombosis, Deep Vein","value":"Formation of blood clots (i.e., thrombi) in any of the deep veins of the body (e.g., leg, pelvis, major-extremity veins). A complication is development of a pulmonary embolism.\r\n"},{"term":"Thrombosis, Venous","value":"The formation of unwanted blood clots (i.e., thrombi) within veins typically in the thigh or leg regions. Clots can dislodge and migrate towards the lungs, causing pulmonary embolism. \r\n"},{"term":"Thymidylate Synthase","value":"An enzyme (EC 2.1.1.45) of the transferase class involved in folate metabolism that catalyzes the reaction:  5,10-methylenetetrahydrofolate + dUMP <=> dihydrofolate + dTMP in the synthesis of thymidine triphosphate. Inhibition of this enzyme (e.g.,  5-fluorouracil) reduces cell proliferation and may be effective in the treatment of cancer and rheumatoid arthritis."},{"term":"Tie-2 Receptor","value":"Tie-2 (also known as the angiopoietin-1 receptor) is a transmembrane receptor for angiopoietins 1 and 2. Activation of the receptor via ligand binding appears to regulate endothelial cell proliferation and differentiation during blood vessel formation. Ang-2 expression has been shown to function as a key regulator of blood vessel remodeling and tumor angiogenesis. Antagonism of Tie-2 could be effective in treating various cancers.\r\n"},{"term":"TNF-alpha Converting Enzyme (TACE)","value":"A zinc containing metalloprotease and unique member of the adamalysin family that cleaves membrane-bound TNF-alpha. TACE has been selected as a target to block the production of the proinflammatory cytokine in a variety of pathological conditions including rheumatoid arthritis, inflammatory bowel disease, multiple sclerosis and congestive heart failure."},{"term":"Tolerance","value":"The ability to endure unusually large doses of a drug or toxin. An acquired drug tolerance is a decreasing response to repeated constant doses of a drug or the need for increasing doses to maintain a constant response.\r\n"},{"term":"Toll-Like Receptors (TLRs)","value":"A class of single membrane-spanning, non-catalytic receptors that are a type of pattern recognition receptor (PRR). They are the key recognition structures of the innate immune system that recognize molecules shared by pathogens but distinct from host molecules. When activated, they initiate the production of inflammatory cytokines, chemokines, tissue degrading enzymes and type I interferons (IFNs). TLR signaling is also involved in activation of the adaptive immune system via upregulation of costimulatory molecules of antigen presenting cells (APCs). TLRs therefore can link innate and acquired immune responses. TLR signaling is thought to be involved in the pathogenesis of rheumatoid arthritis. Signaling via TLR7 has been shown to markedly induced IFN-alpha which enhances Th1-mediated cellular antiviral and antitumor immunity. TLR7 agonism has been shown to be effective in the treatment of actinic keratosis. TLR3 has been shown to be expressed in the brain with significantly increased levels observed in the brains of patients with Alzheimer's disease (AD). TLR4 is the main receptor for bacterial endotoxin and is a potential target for the treatment of sepsis. It has also been identified as a potential risk factor for asthma.TLR9 agonists have been developed that enhance anthrax vaccines."},{"term":"Topoisomerase II","value":"An enzyme (EC 5.99.1.3) that plays a critical role in maintaining the proper topology and physical integrity of DNA. It makes transient double-stranded breaks and allows the passage of a second DNA duplex across the break. DNA topoisomerase II is usually ATP-dependent and the  alpha isoform has been found to have preference for positive DNA supercoils. Since it participates in the processes of DNA transcription, chromosome disentanglement, recombination and repair, targeting DNA topoisomerase II has become a valid approach for design of anticancer therapeutics. Additionally, mounting interest has been shown in the chemical reaction performed by topoisomerase, which is able to trigger movement of DNA segments several orders of magnitude larger than the size of the protein. Further investigation of this class of enzymes would provide insight into the nature of triggering large-scale mechanical motions induced by biomolecular motors. DNA topoisomerase II antagonism may be a useful therapeutic approach to treat cancer, including breast, colorectal, lung, prostate and head and neck cancer, melanoma and hematological cancer including acute myeloid leukemia. Inhibition of topoisomerase II may be an effective therapeutic option for the treatment of autoimmune diseases such a rheumatoid arthritis and multiple sclerosis (MS). Studies have shown that inhibition of topoisomerase II results in has a cytotoxic effects on both proliferating and nonproliferating cells, suggesting lack of cell cycle phase specificity. Moreover, inhibition of the enzyme has been shown to inhibit B-cell-, T-cell-, and macrophage proliferation and impair antigen presentation, as well as the secretion of proinflammatory cytokines IFN-gamma, TNF-alpha and IL-2. In MS, topoisomerase II inhibition and thus immunosuppression may slow the progression of the disease or the frequency of relapses."},{"term":"Topoisomerases","value":"Enzymes (EC class 5) that relieve supercoils in front of the replication fork by introducing breaks, allowing the DNA to rotate around the breaks after which the DNA is resealed. There are two types of DNA topoisomerase: DNA topoisomerase I (EC 5.99.1.2), which introduces a break in one of the two DNA chains to remove a supercoil, and DNA topoisomerase II (EC 5.99.1.3), which introduces breaks in both chains. See also Topisomerase II"},{"term":"Transcription","value":"The process by which genes are copied into RNA, resulting in three major RNA types that interact in protein synthesis: messenger RNA (mRNA), ribosomal RNA (rRNA) and transfer RNA (tRNA). See also Ribonucleic Acid (RNA)"},{"term":"Transcription Factors","value":"Endogenous substances (usually proteins) that bind to the promoter regions of genes and regulate the start, stimulation or termination of the genetic transcription process. Examples include NFkappaB, nuclear factor of activated T cells (NF-AT), activator protein-1 (AP-1), CREB and signal transduction-activated transcription fators (STAT)."},{"term":"Transforming Growth Factor alpha (TGF-alpha)","value":"A 50 amino acid polypeptide originally isolated from viral transformed rodent cells and later from a variety of tissues including epithelium and maternal decidua. It is closely related to epidermal growth factor (EGF). It contains an EGF-like domain and binds to the EGF receptor. It stimulates growth of microvascular endothelial cells, is angiogenic and acts synergistically with TGF-beta to induce phenotypic transformation. Its true physiological role is unknown. See also Growth Factors\r\n"},{"term":"Transforming Growth Factor-beta (TGF-beta)","value":"Members of a large family of pleiotropic homodimer cytokines which includes the TGF-beta1, TGF-beta2 and TGF-beta3 isoforms. They are secreted by many different cell types including B and T cells, macrophages, platelets, neurons and glial cells and signaling is mediated via a high affinity transmembrane receptor complex consisting of TGF-beta type I receptor activin-like kinase 5 (ALK5) and TGF-beta type II receptor (TbetaRII) serine/threonine kinase receptor subunits. In addition to activities such as suppression of  immune responses (via downregulation of antigen presenting cells [APCs] and inhibition of B and T cell proliferation), enhancement of extracellular matrix protein production, and mediation of cell growth, differentiation and embryonic development, TGF-betas also act synergistically with neurotrophins to exert neuroprotective effects. In AD, TGF-beta levels are increased in human brain tissue although brain TbetaRII expression and serum TGF-beta levels are reduced and evidence suggests that TGF-betas have both beneficial and detrimental effects in this disease. See also Growth Factors"},{"term":"Transforming Growth Factors (TGFs)","value":"Proteins secreted by transformed cells that can stimulate growth of normal cells. The transforming growth factor family includes many of the bone morphogenetic proteins. See Transforming Growth Factor alpha (TGF-alpha), Transforming Growth Factor beta (TGF-beta) and Transforming Growth Factor beta1 (TGF-beta1)\r\n"},{"term":"Transgenic","value":"Refers to an organism in which gene(s) or DNA from another organism were incorporated via injection into the nucleus of the ovum. The resulting transgenic animal expresses the protein(s) that the new gene(s) encodes."},{"term":"Translation","value":"Protein synthesis resulting from the interaction of mRNA, rRNA and tRNA transcribed in the nucleus. The genetic code or sequence of nucleotides in mRNA is translated into a sequence of amino acids during polypeptide assembly. During translation, ribosomes read along the mRNA molecule, gradually assembling a corresponding amino acid sequence. Nucleotides are read three at a time as codons."},{"term":"Transplant Rejection","value":"Transplant rejection is the result of a cascade of host immune responses evoked when allograft tissue is transplanted into a recipient. Rejection is ameliorated with optimum matching of MHC antigens and ABO blood groups between host and donor and with immunosuppressants. It is also referred to as graft rejection, organ rejection and tissue rejection. There are three types of rejection. Hhyperacute rejection occurs immediately after transplantation and is due to unmatched antigens. Acute rejection occurs during the first week after transplantation until 3 months after transplantation. Chronic rejection occurs over many years and is due to the host's constant immune response directed against the new organ which resulting damage to the transplanted tissue or organ.\r\n\r\n"},{"term":"Tuberculosis","value":"A highly contagious infection caused by the bacterium, Mycobacterium tuberculosis. Tiny lumps or tubercles can be an indication of infection. It is transmitted by an aerosol of organisms suspended in tiny droplets that are inhaled. When it causes scarring of the lungs, tuberculosis may constitute a risk factor for lung cancer."},{"term":"Tumor Necrosis Factor (TNF)","value":"A group of cytokines that includes TNF-alpha, released by activated macrophages and lymphocytes, and TNF-beta, released from cytotoxic T lymphocytes (CTLs). The TNF family of receptors are important mediators of cellular immune responses including proliferation, differentiation, apoptosis and cytokine production."},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 13B (TNFLSF13B)","value":"See B Cell Activating Factor (BAFF)"},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 5 (TNFSF5, CD40L)","value":"See CD40 ligand (CD40L; CD154)"},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 6 (FASLG; FAS ligand; FasL)","value":"A membrane protein that belongs to the tumor necrosis factor family. It is a ligand of TNFRSF6 (Fas) a member of the TNF receptor family and it is involved in the induction of apoptosis. Fas signaling also appears to regulate endothelial function and blood pressure through modulating eNOS expression in the Akt signal-dependent manner. Moreover, upregulation of Fas-L signaling is observed after a head injury which leads to neuronal cell death.\r\n"},{"term":"Tumor Necrosis Factor Receptor Type 6 (FASL Receptor; Fas)","value":"A cytokine receptor that binds the TNFSF6/FASL ligand and is involved in the induction of cell death through caspase cascade activation.\r\n"},{"term":"Tumor Necrosis Factor-alpha (TNF-alpha)","value":"TNF-alpha is a proinflammatory cytokine (also known as cachectin) and member of the TNF family of cytokines that is released by activated macrophages and lymphocytes. It acts via receptors belonging to the TNF family of receptors, among which TNF receptor 1 and 2 (TNFR-1, TNFR-2) trigger several signal transduction pathways, resulting in the activation of transcription factors such as NF-kappaB and cFos/cJun. TNFR-1 (also known as CD120a; p55/60) is expressed in most tissues and is fully activated by both the membrane-bound and soluble trimeric forms of TNF. TNFR-2 (also known as CD120b; p75/80), however, is found only in cells of the immune system and is activated by the membrane-bound form of the TNF homotrimer. Activated factors induce the transcription of antiapoptotic, proliferative, immunomodulatory and inflammatory genes. NF-kappaB is the major survival factor in preventing TNF-alpha-induced apoptosis and inhibition of this transcription factor may improve the efficacy of apoptosis-inducing cancer therapies; TNF-alpha-targeted therapies are also being tested in the regional treatment of locally advanced soft tissue sarcomas and metastatic melanomas. In addition, TNF-alpha-induced insulin resistance is believed to be a major contributor to the development of type 2 diabetes in obesity and elevated brain levels of TNF-alpha have been observed in Alzheimer's Disease (AD)  and ischemic stroke patients. TNF-alpha is also a crucial cytokine in the establishment and maintenance of inflammation in multiple autoimmune diseases. Studies have reported elevated TNF levels at the site of active MS lesions in postmortem brain samples from patients with MS and CSF and serum TNF levels in individuals with MS are elevated compared to unaffected individuals with TNF levels correlating to the severity of the lesions. In addition, peripheral blood mononuclear cells from MS patients just prior to symptom exacerbation display increased TNF secretion after stimulation as compared to cells from the same patients during remission and inhibition of the TNF-alpha signaling pathway (e.g., TNF-alpha blockers, blockers of  p38, JNK and/or ERK kinases, antagonists of transcription factor NF-kappaB activation) is a viable therapeutic strategy for the treatment of Crohn's disease, psoriasis, psoriatic arthritis, uveitis, sarcoidosis, Behcet's syndrome, graft versus host disease and ankylosing spondylitis."},{"term":"Tumor Suppressor Protein p53","value":"A transcription factor that modulates stress responses and which, upon activativation, precedes apoptosis in many cell types. Upregulation of p53 has been reported to be a feature of neurodegenerative disorders including Alzheimer's disease, and p53 inhibitors have been found to protect neurons in experimental models of neurodegeneration. Moreover, activation of p53 may be effective in inducing apoptosis in tumors. In almost all cases of actinic keratosis, the p53 gene is mutated resulting in a decrease in the tumor-suppressing action of the protein. Mutations in the p53 are also associated with serval types of cancer including melanoma and thyroid cancer."}]},{"letter":"U","Terms":[{"term":"Ulcer","value":"A local lesion on the skin or the mucosa of an organ or tissue. It is due to the sloughing of inflammatory necrotic tissue. See also Ulcer, Gastric; Ulcer, Peptic; and Ulcer, Decubitus"},{"term":"Ulcer, Decubitus","value":"A chronic ulcer that appears in pressure areas in debilitated or immobilized patients. It occurs due to a reduction in circulation from enhanced pressure on tissue."},{"term":"Ulcer, Gastric","value":"A lesion in the mucosal lining of the stomach that results from gastric inflammation. It can be caused by use of alcohol, aspirin or NSAIDs. Symptoms include recurrent abdominal pains (which are alleviated with antacids), nausea, vomiting, weight loss and fatigue. Complications include GI bleeding, obstruction, perforation and ulcer penetration into surrounding tissues."},{"term":"Ulcer, Peptic","value":"An ulcer in the wall of the stomach or duodenum resulting from the digestive action of gastric juice on the mucous membrane."},{"term":"Upstream","value":"The nucleotide sequences in DNA or RNA that precede the codons specifying the mRNA for transcription or the protein coding sequences for translation. It is also used to describe events that occur early on within sequential reactions. See also Downstream"}]},{"letter":"V","Terms":[{"term":"Vascular Endothelial Growth Factor (VEGF)","value":"A major growth factor protein secreted by many cell types, the expression of which is regulated by a number of growth factors and cytokines. VEGF is a potent angiogenic factor that stimulates capillary formation in vivo and induces mitogenesis in endothelial cells. It is involved in cardiac neovascularization. The expression of VEGF and of its receptor, KDR, are decreased in diabetic myocardium and plasma, which could contribute to the impaired coronary collateral vessel formation in diabetes. Because VEGF markedly enhances peripheral tissue vascularity, VEGF gene therapy has been proposed to be a potential treatment of erectile dysfunction. VEGF also plays a key role in the angiogenesis that occurs in tumor growth, psoriasis, diabetic retinopathy and rheumatoid arthritis. Also known as Vascular Permeability Factor (VPF)."},{"term":"Vasculitis","value":"Inflammation of the blood vessels.\r\n"},{"term":"Vector","value":"An organism that carries an infectious microorganism (e.g., a virus or parasite) from one host to another, generally without becoming infected itself. Alternatively, a virus or a small piece of DNA (i.e., plasmid) that carries a modified or foreign gene. In gene therapy, the vector delivers the desired gene to a target cell. See also Plasmid"},{"term":"Virus","value":"A small infectious particle between 10 and 300 nm in diameter, not visible with a light microscope. Viruses have no cell structure and thus differ from other infectious agents or cells. They have no wall and the genetic material is contained in either DNA or RNA encased within a protein shell or capsid. Some viruses may also have an outer membrane composed of lipoprotein. They are obligate parasites and need to enter a plant or animal cell in order to reproduce. Their RNA or DNA encodes for various proteins which are made by the host cell."},{"term":"Vitronectin (alphavbeta3)","value":"Integrin alphavbeta3 is a member of a large family of transmembrane receptors for extracellular matrix (ECM) and plasma proteins and is composed of two noncovalently linked subunits (alphav and beta3) that span the plasma membrane; it also contains the cell-binding sequence Arg-Gly-Asp (RGD). Vitronectin is expressed on osteoclasts, vascular smooth muscle cells and endothelial cells and  it binds glycosaminoglycans, collagen, plasminogen, plasminogen activator inhibitor-1 (PAI-1), urokinase receptor (uPAR), integrins, complement, heparin and thrombin-antithrombin III (TAT) complexes. Upon ligand binding, these subunits interact with the actin cytoskeleton and FAK complex through their cytoplasmic domains. It is known that endogenous insulin-like growth factor-I (IGF-I) regulates intestinal smooth muscle growth by concomitantly stimulating proliferation and inhibiting apoptosis and IGF-I-stimulated growth is augmented by the integrin alphavbeta3 ligands vitronectin and fibronectin. IGF-I expression in smooth muscle is increased in both experimental colitis and Crohn's disease. Thus, the smooth muscle hyperplasia and stricture formation observed in the chronically inflamed intestine may be in part due to upregulation of endogenous IGF-I and ligands of integrin alphavbeta3 that mediate the increase in smooth muscle cell proliferation and decrease in apoptosis. Integrin alphavbeta3 has also been established as a proangiogenic factor that facilitates endothelial cell motility and migration. Thus, antagonists of alphavbeta3 may be effective in the treatment of Crohn's disease. Integrin alphavbeta3 may also be involved in development and progression of diseases such as osteoporosis, restenosis following percutaneous transluminal coronary angioplasty, rheumatoid arthritis, cancer and ocular diseases and antagonism of this integrin could prevent and/or treat these diseases. "},{"term":"Vomiting","value":"See Emesis"}]},{"letter":"W","Terms":[{"term":"Wild-type","value":"The normal, nonmutated version of a gene. Also the parent strain of a virus, bacteria, mouse, or other laboratory organism that are found in the wild."},{"term":"Wnt","value":"A family of 22 cysteine-rich secreted soluble glycoproteins involved in several key developmental processes such as axis determination in embryos, induction of tissue and cellular differentiation and formation of cartilage and bone. The Wnt signaling pathway has been implicated in the development of cancer. Wnt genes (Wnt2, Wnt5, Wnt4) have been extensively studied in Drosophila melanogaster. Mutated Wnt leads to a wingless phenotype (hence the name: wingless-type, WNT).\r\n"}]},{"letter":"X","Terms":[]},{"letter":"Y","Terms":[{"term":"YLD","value":"Acronym for \"Years Lost due to Disability\" which is calculated by the number of years lived in a condition multiplied by a disability weight for that condition assigned on a scale from 0 (perfect health) to 1 (death). YLD = number of incident cases in reference period x disability weight x average duration of condition.\r\n"}]},{"letter":"Z","Terms":[]},{"letter":"0-9","Terms":[{"term":"5-Lipoxygenase","value":"The enzyme (EC 1.13.11.34) that catalyzes the first oxidation step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes (LTs) which primarily act as mediators of inflammatory and allergic reactions. The enzyme's activity is regulated in a complex manner and involves different signaling pathways. It can be activated by an increase in intracellular Ca2+ concentration, diacylglycerols, phosphorylation by MAPKAP kinase-2 and ERK, while protein kinase A and glutathione peroxidase have been found to suppress its function. Several inflammatory diseases including COPD, asthma, arthritis and inflammatory bowel disease (IBD) are associated with elevated levels of LTB(4); eicosanoids generated through the 5-LOX pathway may also be primary mediators of allergic rhinitis, idiopathic pulmonary fibrosis, atherosclerosis, atopic dermatitis, acne and ischemia-related organ injury. Modulation of LTB(4) synthesis could be achieved via inhibition of 5-LOX which would block the synthesis of hydroperoxide acid, 5-HPETE, and subsequent synthesis of eicosanoids (e.g., cysteinyl LTs, LTB[4]) that are instrumental in the promotion of the pulmonary inflammatory response and bronchospasm. Thus, these agents may be effective in the management of COPD and asthma."}]}]}"},{"mime":"TXT","content":"{"List":[{"letter":"A","Terms":[{"term":"Acupuncture","value":"A technique used in China for over 3000 years and introduced in the U.S. and Canada in the 1970s to treat pain or disease. It is based upon qi (vital energy) which runs through pathways within the body called meridians. Fine needles are inserted just under the skin at specific points along the meridians to stimulate, disperse and balance the flow or energy, relieve pain and treat a variety of chronic, acute and degenerative conditions. \r\n\r\n"},{"term":"Acute","value":"Referring to a health-related state or exposure that indicates brief (short-term) duration and strong intensity."},{"term":"Adenoma","value":"A benign epithelial tumor of glandular origin.\r\n"},{"term":"Adenosine","value":"A naturally occurring purine nucleoside consisting of the nitrogenous base adenine linked to the sugar ribose that is an intermediate product of adenosine triphosphate (ATP) metabolism. It reduces systemic vascular resistance. Adenosine antagonists may be effective in the treatment of depression while adenosine A2A receptor agonists may be potential candidates for the treatment for inflammatory diseases such as asthma. Adenosine A1 and A3 receptor agonists are potential neuroprotective agents against the development of stroke."},{"term":"Adenosine Kinase","value":"The enzyme (EC 2.7.1.20) that catalyzes the phosphorylation of ribofurnosyl-containing nucleoside analogues at the 5'-hydroxyl using ATP or GTP as the phosphate donor and catalyzes the conversion of adenosine to AMP. Inhibition of this enzyme is a potential target for the treatment of chronic inflammatory bowel disease, rheumatoid arthritis and chronic pain."},{"term":"Adenovirus","value":"A DNA-containing virus that causes respiratory tract and eye infections. In gene therapy, adenoviruses are genetically modified to carry a specific gene effective against diseases such as certain types of cancer, cystic fibrosis and others."},{"term":"Adhesion","value":"The interaction of one cell with another, thereby controlling the position of a cell in lymphoid tissue or the migration of cells into tissues. It is also a prerequisite for antigen presentation and other immune effector functions."},{"term":"Adhesion Molecules","value":"Membrane-bound proteins that enable one cell to interact with another during leukocyte migration. These proteins often traverse the membrane and are linked to the cytoskeleton so that the cell may use them to gain traction on other cells or on the extracellular matrix as they migrate. These molecules are subdivided into several structural groups: selectins, immunoglobulin (Ig) supergene family and integrins. Some of these molecules are constitutively expressed by cells (e.g., CR3 on mononuclear cells), while others are induced by cytokines or cellular activation. Some must be synthesized (e.g., ICAM-1 in endothelium), while others are stored intracellularly and may be mobilized to the cell surface (LFA-1 in neutrophils)."},{"term":"Adjuvant Therapy","value":"A modality that is added to a primary therapy. It can involve the addition of a drug(s) or a procedure (i.e., surgical resection of cancer)."},{"term":"Akt","value":"An enzyme also known as protein kinase B (PKB) that is involved in the phosphoinositide 3-kinase (PI3K) signal transduction pathway. Its possesses numerous modulatory affects including activation of glycogen synthesis, glycolysis and platelet activation and mediation of antiapoptotic and cell survival signaling. It has been implicated as a major factor in many types of cancer due to effects on cell growth and proliferation.\r\n"},{"term":"Allele","value":"One of a series of different genes that occupy the same locus on a specific chromosome."},{"term":"Allergenic","value":"See Antigenic"},{"term":"Amyloidosis","value":"A diverse class of disorders characterized by the tissular accumulation of extracellular beta-sheet fibrils composed of amyloid A which leads to the displacement of normal structures and cellular dysfunction. Amyloid accumulation occurs in the brains of patients with Alzheimer's disease, in the pancreata of patients with type 2 diabetes and systemically in inflammatory diseases such as rheumatoid arthritis."},{"term":"Analgesia","value":"An insensitivity to pain."},{"term":"Anemia","value":"A condition characterized by too few circulating red blood cells resulting in insufficient oxygen to tissues and organs."},{"term":"Anemia, Iron Deficiency","value":"Iron deficiency anemia is one of the most common nutritional disorders and is due to excessive loss, deficient intake or poor absorption of iron. It is also known as nutritional hypochromic anemia. Iron is required for hemoglobin synthesis, which is responsible for the transport of oxygen in red blood cells. Red cells appear abnormal and are small (microcytic) and pale (hypochromic) in iron deficiency anemia.\r\n"},{"term":"Anergy","value":"Reduced or complete lack of normal immunological generalized or antigen-specific responses (i.e., induction of immune tolerance)."},{"term":"Angiogenesis","value":"The development of new blood vessels from existing ones. Persistent upregulation of this process has been implicated in the pathogenesis of solid tumors, hematologic malignanacies, ischemic heart disease, atherosclerosis, psoriasis, rheumatoid arthritis, diabetic retinopathy and age-related macular degeneration. The inhibition of angiogenesis is an attractive antitumor therapeutic strategy that may also be effective in the treatment of rheumatoid arthritis. The induction of therapeutic angiogenesis has been proposed as a method of treating stroke and angina pectoris."},{"term":"Angiopoietin-1 (ANGPT1)","value":"A modulator of angiogenesis. ANGPT1 binds to the TIE-2 receptor tyrosine kinase and is involved in vascular endothelial growth. See also Angiopoietin-2 (ANGPT2)"},{"term":"Angiopoietin-2 (ANGPT2)","value":"A modulator of angiogenesis that functions as an antagonist for angiopoietin 1  (ANGPT1) by binding to the TIE-2 receptor. It is expressed in remodeling vascular sites. ANGPT2 is abundant in growing blood vessels and promotes angiogenesis driven by vascular endothelial growth factor (VEGF). In combination with VEGF, it may facilitate endothelial cell migration and proliferation, thus leading to a wide variety of malignancies. Antagonism of ANGPT2 may be effective in the treatment of various cancers including colorectal cancer and hepatocellular carcinoma. See also Angiopoietin-1 (ANGPT1)\r\n\r\n"},{"term":"Ankylosing Spondylitis","value":"A chronic, painful, autoimmune, progressive inflammatory type of arthritis (also known as Bechterew's disease/syndrome, Marie Strümpell disease, spondylarthritis, spondyloarthritis) that primarily affects the lower vertebrae and sacroiliac joints and can eventually cause fusion of these areas. The disease may spread to higher vertebra causing the entire spine to become rigid with the loss of normal curvature and movement. Pain and stiffness can spread to the rib cage, causing difficulties with chest expansion. Other joints may be involved, including the hip, knee, elbows, hands and ankles. The accompanying inflammation may also affect the gastrointestinal tract and eyes and, in rare cases, the lungs and heart. Although the cause is unknown, genetic components appear to play a major role. Individuals with HLA-B gene variants, particularly HLA-B27, have an increased risk for developing the disease."},{"term":"Anti-RA33 Antibody","value":"A serum marker used in the diagnosis of rheumatoid arthritis that is directed against a specific ribonuclear protein complex (i.e., autoantigen RA33). Autoantibodies against RA33 are detected in the sera of 30% of RA patients, but only occasionally in sera from patients with other connective tissue diseases. Recent evidence suggests that RA33 may be the same protein as A2 of the heterogeneous nuclear ribonucleoprotein (hnRNP) complex."},{"term":"Antibody","value":"A protein synthesized by B lymphocytes in response to an antigen that has the ability to specifically bind with said antigen. Antibodies are the soluble form of the B cell's specific antigen receptors and are collectively referred to as immunoglobulins (Igs). Igs are produced in many different forms, each with different amino acid sequences and antigen binding sites. Through recruiting the complement system and various white blood cells, they protect the body by inactivating viruses and bacterial toxins and by killing invading microorganisms and larger parasites."},{"term":"Antigen","value":"Any molecule specifically recognized by B and/or T cells that can induce the formation of a specific antibody. For vaccines, the term antigen refers to a vaccine component that induces protection against a single disease."},{"term":"Antigenic","value":"Having the properties of an antigen. Synonyms include immunogenic and allergenic."},{"term":"Antikeratin Antibody (AKA)","value":"An autoantibody directed against human filaggrin and (pro) filaggrin-related proteins of buccal epithelial cells that when detected in serum can be an indication of rheumatoid arthritis. This marker is not as specific as rheumatoid factor (RF). Recent evidence suggests that AKA and antiperinuclear factor (APF) are the same autoantibody and that it recognizes citrulline-containing epitopes in antibodies present early in the pathogenesis of RA, before other disease manifestations occur."},{"term":"Antiperinuclear Factor (APF)","value":"An autoantibody directed against human filaggrin and (pro) filaggrin-related proteins of buccal epithelial cells that when detected in serum can be an indication of rheumatoid arthritis. Recent evidence suggests that APF and Antikeratin Antibody (AKA) are the same autoantibody and that it recognizes citrulline-containing epitopes in antibodies present early in the pathogenesis of RA, even before other disease manifestations occur."},{"term":"Antisense","value":"Refers to the complementary strand of a coding sequence of DNA (antisense DNA) or mRNA (antisense RNA). These nucleotide sequences are not templates for synthesis but interact with complementary sequences in other molecules thereby affecting their function. Antisense therapy uses a DNA or RNA sequence that has the reverse orientation (i.e., opposite \"sense\"; antisense oligonucleotide) of the DNA or RNA sequence present in a specific disease-causing target gene and when administered, it will bind to the target gene and inhibit its expression.  See also Antisense Oligonucleotide"},{"term":"Antisense Oligonucleotide","value":"Complementary strands of small segments of mRNA that bind to specific mRNA sequences encoding for disease-causing proteins. Pairing of mRNA with antisense fragments blocks initiation of protein synthesis by reducing the availability of mRNA to ribosomes. Antisense oligonucleotides have been used to inhibit viral infections and to treat cancer and other diseases."},{"term":"Apoptosis","value":"An active form of cell death in which intrinsic cellular genetic programs are activated, leading to cellular suicide. Also known as programmed cell death."},{"term":"Arachidonic Acid (AA)","value":"A polyunsaturated essential fatty acid (5,8,11,14-eicosatetraenoic acid) present in cell membranes that is an intracellular second messenger in biological systems. It is the precursor of eicosanoids, thromboxanes and hydroxyeicosatetraenoic acid derivatives including leukotrienes (via cyclooxygenase or lipoxygenase metabolism). See also Polyunsaturated Fatty Acids (PUFAs)"},{"term":"Arthritis","value":" A group of disorders involving inflammation of the joints that includes more than 100 different conditions (e.g., rheumatoid arthritis, osteoarthritis, ankylosing spondylitis, carpal tunnel syndrome, gout, polymyalgia rheumatica, childhood arthritis, etc.) "},{"term":"Arthritis, Psoriatic","value":"See Psoriatic Arthritis"},{"term":"Attenuate","value":"A gradual reduction."},{"term":"Autoimmune Disease","value":"A disorder in which the body's immune system starts a defensive attack directed against its own tissues."},{"term":"Autosomal Dominant","value":"A genetic trait that is expressed when it is present as a single allele. Thus, only one affected parent is needed to pass it to offspring. \r\n"},{"term":"Autosomal Recessive","value":"A genetic trait that is only expressed when it is present on both alleles of a gene. Thus,  two chromosomes bearing the gene anomaly are required, one from each parent. The risk of transmitting an autosomal recessive disease is 1/4 (25%) at each pregnancy.\r\n\r\n"},{"term":"Autosome","value":"A chromosome not involved in sex determination. The diploid human genome consists of 46 chromosomes: 22 pairs of autosomes in both males and females and 1 pair of sex chromosomes (XX in females and XY in males).\r\n"},{"term":"Axon","value":"A single process (0.25 to more than 10 microns in diameter) of a neuron that conducts impulses away from the cell body and dendrites of that neuron. In contrast to dendrites, which are usually 1.5 mm in length, axons can reach up to 50 cm in length. Those axons that are 0.5 microns in diameter are usually encased in a myelin sheath. In the brain and spinal cord (CNS), oligodendroglia cells are responsible for the sheath, while Schwann cells make up the sheath in the peripheral nervous system. In general, axons transmit impulses to other nerve or effector cells via synaptic terminals."}]},{"letter":"B","Terms":[{"term":"B Cell","value":"One of two major classes of lymphocytes that develop in adult bone marrow and in the fetal liver of mammals. B cells express surface immunoglobulins (Igs), which act as specific antigen receptors. Naive B cells (i.e., B cells that have never been activated) express variable levels of both IgM and IgD isotypes. With a few exceptions, B cell activation is dependent on both recognition of a specific antigen and T cell help. Activated B cells divide and differentiate into either memory cells or plasma cells. Memory B cells are long-lived and express antigen receptors other than IgM or IgD; they have undergone rearrangements in their Ig genes that result in increased affinity for that particular antigen. Plasma cells are short-lived and secrete large amounts of Igs (i.e., the soluble form of the antigen receptor)."},{"term":"B Cell Activating Factor (BAFF)","value":"B cell activating factor (BAFF) is also known as tumor necrosis factor ligand superfamily member 13B (TNFLSF13B), B lymphocyte stimulator (BLyS), TNF- and APOL-related leukocyte expressed ligand (TALL-1) and the dendritic cell-derived TNF-like molecule (CD257 antigen; cluster of differentiation 257). It is a 285 amino acid transmembrane glycoprotein expressed on several cell types including monocytes, dendritic cells and bone marrow stromal cells; there is also a soluble protein fragment resulting from the cleavage of the transmembrane form from the membrane. BAFF binds to three TNF receptors: BAFF-R expressed on mature B lymphocytes; TACI expressed on mature B lymphocytes and a subset of T cells; and BCMA expressed on mature B lymphocytes and plasma cells. Signaling through BAFF-R and BCMA stimulates B lymphocyte proliferation. BAFF has been implicated in the pathogenesis of autoimmune diseases such as multiple sclerosis, myasthenia gravis, rheumatoid arthritis, Sjogren's syndrome and systemic lupus erythematosus through the role it plays in promoting survival and maturation of autoreactive B cells."},{"term":"B Lymphocyte Stimulator (BLyS)","value":"See B Cell Activating Factor (BAFF)"},{"term":"B7-1 (CD80 Antigen)","value":"CD80 antigen is a protein expressed on the surface of antigen presenting cells. It is a member of the B7 costimulatory family. It binds to CD28 present on T lymphocytes and is involved in costimulation and proliferation. Targeting could be effective in the treatment of autoimmune diseases such as GVHD. In addition, upregulation of the CD80 antigen is associated with non-Hodgkin lymphoma (NHL), where it enhances the proliferation and the survival of malignant B and T cells. Thus, antibodies against CD80 antigen may be an effective treatment against NHL."},{"term":"B7-2 (CD86 Antigen)","value":"CD86 antigen is a membrane protein of the B7 costimulatory family that stimulates T cell activation by binding the CD28 antigen. However, it inhibits T cell activation when it binds to CTLA-4. Targeting could be effective in the treatment of autoimmune diseases such as GVHD\r\n"},{"term":"BAFF","value":"See B Cell Activating Factor (BAFF)"},{"term":"Bioavailability","value":"The proportion of an administered drug absorbed into the bloodstream, indicating the physiological concentration of that drug."},{"term":"Biomarker","value":"Characteristic that is objectively measured and evaluated as an indicator of normal biological processess, pathogenic processess or pharmacologic responses to a therapeutic intervention."},{"term":"Bisphosphonates","value":"A class of compounds that are synthetic analogues of pyrophosphate, an endogenous inhibitor of mineral deposition. These compounds prevent bone resorption and increase bone mineral density and are used clinically in the management of Paget's disease, tumor-induced hypercalcemia and osteolysis and osteoporosis. They are thought to act through inhibition of osteoclast activity."},{"term":"Blind Trial, Single- or Double-","value":"See Single-Blind and Double-Blind"},{"term":"BLyS","value":"See B Cell Activating Factor (BAFF)"},{"term":"BMP-2","value":"See Bone Morphogenetic Protein-2 (BMP-2)"},{"term":"Bone","value":"A hard connective tissue consisting of cells embedded in a matrix of mineralized ground substance and collagen fibers impregnated with a form of calcium phosphate, carbonate, citrate sodium and magnesium. Bone is composed of a dense outer layer of compact and cortical bone covered by the periosteum and an inner loose, spongy cancellous bone portion. The center of the bone is filled with marrow. Bone forms a part of the skeleton with about 200 distinct ossa evident. Also known as os (plural, ossa)."},{"term":"Bone Morphogenetic Protein-2 (BMP-2)","value":"A member of the TGF-beta family of cytokines that promotes osteoblastic cell differentiation and osteogenesis."},{"term":"Bone Spur","value":"See Osteophyte\r\n"},{"term":"Bone, Cancellous","value":"Bone in which the trabeculae form a latticework (cancellous) in which the interstices are filled with marrow. Also known as substantia spongiosa, trabecularis, trabecular bone and spongy bone."},{"term":"Bone, Compact","value":"The compact and noncancellous portion of bone that is composed of concentric lamellar osteons and interstitial lamellae."},{"term":"Bone, Cortical","value":"The outer, thin layer of compact bone."},{"term":"Bone, Lamellar","value":"Normal adult mammalian bone composed of parallel lamellae in the cancellous bone and concentric lamellae in compact bone."}]},{"letter":"C","Terms":[{"term":"C-Jun N-terminal Kinases (JNK)","value":"JNK, also known as stress-activated protein kinases or SAPK, belongs to the mitogen-activated protein kinase (MAPK) family and represents a group of enzymes that modulate the expression of genes controlling immune responses, proliferation and cell death. It is activated by exposure of cells to cytokines and environmental stress. Genetic deletion of JNK1 or JNK2 results in disruption of the regulation of CD4+ cell differentiation to Th1 or Th2 subsets and may represent a new therapeutic approach for modulating Th1 and Th2 diseases. The JNK signaling pathway also has been implicated in neuronal death. Small-molecule inhibitors of this pathway may promote neuronal survival and be potentially useful for the treatment of Parkinson's disease. In addition, JNK inhibitors have been shown to suppress joint destruction in animal models of rheumatoid arthritis."},{"term":"C-Reactive Protein (CRP)","value":"A member of the pentraxin family and complement system that is produced by hepatocytes in response to prostaglandin E1 or parogen during periods of inflammation. It is detectable in serum in various disease conditions (e.g., rheumatoid arthritis, lupus, pneumococcal pneumonia, rheumatic fever, cancer, tuberculosis and myocardial infarction) and particularly during the acute phase of immune response; C-reactive protein should normally be negative in the bloodstream. It consists of five polypeptide subunits (total molecular weight = 105 kD) and binds to polysaccharides present in  bacterial and fungal cell walls or surfaces in addition to lecithin, phosphoryl or choline containing molecules. See also Pentraxins and Complement System"},{"term":"Cachexia","value":"Weight loss and wasting which accompany chronic disease or emotional disturbances. Tumor necrosis factor (TNF), which mobilizes fat, may be involved in cachexia."},{"term":"cAMP (cyclic 3´,5´-Adenosine Monophosphate)","value":"The 3', 5' cyclic ester of adenosine monophosphate (AMP) which acts as a second messenger in signal transduction pathways. cAMP is generated from adenosine 5'-triphosphate (ATP) by the action of adenylate cyclase which is coupled to hormone receptors by G proteins. cAMP activates a specific protein kinase and is inactivated by phosphodiesterase forming 5' AMP. cAMP is responsible for smooth muscle relaxation during bronchodilation, increased ciliary beat frequency and decreased mucus viscosity."},{"term":"Cancer","value":"The abnormal, rapid, unorganized and uncontrolled proliferation of new tissue. The malignant tissue develops from a single cell that has undergone mutations in its DNA. This cell does not mature noramlly and eventually die but it divides prolifically. There are approximately 200 different types of cancers. Cancers arising from epithelial cells are called carcinomas and those arising from mesenchymal tissues are called sarcomas. Leukemias are also classified as malignant growths. Cancer cells can invade nearby tissues (i.e., metastasis) and can spread through the bloodstream and lymphatic system to other parts of the body."},{"term":"Cartilage","value":"A nonvascular, firm connective tissue composed of chondrocytes and an interstitial matrix of collagen fibers and ground substance. There are three types of cartilage: hyaline, elastic and fibrocartilage. It is resilient and flexible and found in joints, thorax walls and tubular structures (i.e., larynx, air passages, ears). It makes up the skeleton in the early fetus, and is later replaced by bone."},{"term":"Cartilage, Articular","value":"The cartilage that covers the articular surfaces of bones in a synovial joint."},{"term":"Cathepsin S","value":"A cysteine protease (EC 3.4.22.27) involved in the regulation of intracellular trafficking of MHC class II molecules (i.e., regulates degradation of the invariant chain [li] of class II-Ii complexes) to the cell surface in antigen presenting cells therefore affecting immune responses. Inhibitors of this enzyme are potentially useful in the treatment of several inflammatory diseases such as asthma, COPD, emphysema, chronic bronchitis and ARDS. The enzyme has also been found to be localized at sites of vascular matrix remodeling. Cytokine-stimulated vascular intimal smooth muscle cells and macrophages that have migrated into and accumulated within developing intimal plaques can use this enzyme to degrade extracellular elastin. This suggests that cathepsin S plays a role in vessel wall remodeling and may be a potential therapeutic target for regulating plaque stability in atherosclerosis. It is also a potential target for the treatment of COPD."},{"term":"CCR1","value":"See Chemokine (C-C motif) receptor 1 (CCR1)"},{"term":"CCR2","value":"See Chemokine (C-C motif) receptor 2 (CCR2)"},{"term":"CD System","value":"Organization of cell surface molecules (markers) that are unique to different subsets of lymphocytes and other cell types (i.e., Natural Killer [NK] cells, monocyte/macrophages, granulocytes, follicular dendritic cells [DCs], thymocytes, interdigitating DCs, endothelium, epithelium). CD markers, of which more than 200 have been identified, are found on the cell surface and can be specific for a population of cells, stage of differentiation or activation. For example, CD2 and CD3 are markers for T cells; CD4 and CD8 are markers for T cell subsets; CD25 is a marker for activated T cells; and CD19 and CD20 are markers for B cells. Accurate identification of a cell population is often achieved by assessing the expression of several, rather than one, CD molecule."},{"term":"CD154","value":"See CD40 ligand (CD40L; CD154)"},{"term":"CD19","value":"A transmembrane glycoprotein that belongs to the immunoglobulin superfamily and is ubiquitously expressed on cells of B lymphocyte lineage. Its expression is induced when a hematopoietic stem cell makes a commitment to differentiate along B cell lineage, expression is continued throughout differentiation and is, finally, downregulated when a B lymphocyte becomes a plasma cell. It is a critical player in activation of naïve B-cells since binding of an antigen to B-cell receptor does not create a signal of sufficient strength for activation of a naïve B-cell. CD19 forms part of a B-cell co-receptor complex, which also includes CD21, CD81 and CD225, and participates in cross-linking with B-cell receptor. The cross-linking event brings into proximity Lyn kinase and leads to phosphorylation of the CD19 cytoplasmic tail. Subsequently, phosphorylated cytoplasmic tail of CD19 serves as a platform to bind and activate signaling molecules responsible for propagation of the initial stimuli, increasing the signal intensity by 1,000-10,000-fold. Mutations in the CD19 gene have been found to cause a specific type of hypogammaglobulinemia in which the response of mature B cells to antigenic stimulation is defective. In cancer, since CD19 expression is preserved on B-cells that have undergone malignant transformation, its application as a marker and as a target for anticancer antibodies has been widely studied in non-Hodgkin's lymphoma (NHL) and acute lymphocytic leukemia (ALL). Monoclonal antibodies against CD19 coupled to toxins have shown promising results both in preclinical and clinical studies."},{"term":"CD20","value":"A 33- to 37-kDa transmembrane glycoprotein of the immunoglobulin superfamily that is expressed on the surface of normal and malignant B cells, residing within lipid rafts of the phospholipids membrane where it functions as a store-operated calcium channel following the ligation of the B cell receptor with antigen. No natural ligands of CD20 have been identified. However, CD20 has been shown to participate in antibody-dependent cellular cytotoxicity (ADCC), complement-dependent cellular cytotoxicity (CDCC) and cell growth. Immunohistological studies of specimens from patients with ankylosing spondylitis (AS) removed during spinal surgery have shown significantly increased numbers of CD20 + B cells within joints exhibiting persistent inflammatory lesions. Antibodies directed against CD20 may be effective in the treatment of AS as well as chronic lymphocytic leukemia (CLL) and autoimmune conditions such as rheumatoid arthritis, systemic lupus erythematosus and multiple sclerosis."},{"term":"CD28","value":"CD28 is a type I membrane protein member of the immunoglobulin superfamily involved in T-cell costimulation that regulate immunity through enhancement and inhibition of T-cell responses. Naïve T cells require two signals for proper activation and acquisition of effector function. One signal derives from the T-cell receptor (TCR) recognizing its cognate peptide in the context of self-MHC and the second one is triggered by costimulatory molecules. Costimulation via CD28 is recognized as the most important for costimulating naïve T cells inducing cell proliferation and cytokine production and targeting of this protein may be effective in the treatment of various autoimmune diseases. It has been observed that CD28-mediated costimulation is essential for differentiation of functional tumor-specific CD8+ T-effector cells. Moreover, recent results demonstrate significantly enhanced activity of tumor-specific T cells after administration of anti-CD28 antibodies. In melanoma therapy, CD28 and the melanoma associated proteoglycan CSPG4 (MCSP) antigen are being targeted.\r\n"},{"term":"CD3 (T Cell Receptor Complex)","value":"The CD3 antigen is a protein complex composed of four distinct chains: CD3gamma chain, CD3delta chain and two CD3epsilon chains. These chains are highly homologous cell surface proteins that are members of the immunoglobulin superfamily and contain a single extracellular immunoglobulin domain. The transmembrane region of these CD3 chains is negatively charged allowing them to associate with the positively charged T cell antigen receptor (TCR) chains (TCRalpha and TCRbeta). The intracellular tails of the CD3 chains contain a single conserved motif known as an immunoreceptor tyrosine-based activation motif (ITAM) which is essential for the signaling capacity of the TCR. Association of the CD3 chains with TCR and the zeta-chain (accessory molecules of TCR) generates an activation signal in T lymphocytes. Thus, the TCR complex is composed of the TCR, zeta-chain and CD3 molecules. CD3+ T cells are increased in patients with Crohn's disease. Therefore modulation of the CD3 complex on T cells may be beneficial in the treatment of the disease."},{"term":"CD4","value":"CD4 (cluster of differentiation 4) is a transmembrane glycoprotein and member of the immunoglobulin (Ig) superfamily of receptors that is expressed on the surface of T helper (Th) cells, regulatory T cells, monocytes, macrophages and dendritic cells. It is a coreceptorthat together with the T cell receptor (TCR) activates the T cell following interaction with MHC class II molecules present on the surface of antigen presenting cells. CD4 amplifies the signal generated by the TCR by recruiting the tyrosine kinase lck. It has four Ig domains (D1-D4) exposed on the extracellular surface of the cell and uses the D1 domain to interact with the beta2-domain of MHC class II molecules. T cells expressing CD4 molecules (not CD8) on their surface are MHC class II-restricted, specific for antigens presented by MHC II and not by MHC class I. CD4 is a primary receptor used by HIV-1 to gain entry into host T cells. In multiple sclerosis (MS), myelin antigen-specific CD4+ T cells become activated in the peripheral immune compartment and cross the blood-brain barrier to trigger the disease. Commitment of T cells to proinflammatory effector T helper cell lineages (e.g., IL-17-producing CD4+ T cells or Th17 cells) appears to be an important inducer of organ-specific autoimmunity and studies suggest that Th17 cells are the dominant pathogenic cellular component in MS and other autoimmune inflammatory diseases. Decreasing myelin-specific CD4+ T cell responses with an anti-CD4 antibody, for example, could reduce demyelination and decrease immune cell infiltration into the CNS and thus, reduce subsequent initiation and progression of the autoimmune response. See also CD4+ T Cells"},{"term":"CD4+ T Cells","value":"T cells expressing both the T cell antigen receptor-2 (alphabeta; TCR-2) and the CD4 marker. The TCR recognizes the antigen associated with major histocompatibility complex (MHC) on the surface of the antigen presenting cell (APC), while the CD4 molecule recognizes the class II MHC molecule only. Therefore, CD4 determines that a given T cell be class II- rather than class I-restricted. CD4 also contributes to T cell activation by providing biochemical signals to the T cell at the time of antigen presentation. CD4+ cells can be subdivided into Th0, Th1, Th2 or Th3 populations, depending upon the cytokine profile they secrete. CD4+ cells have been implicated in the development and progression of rheumatoid arthritis. See also CD4"},{"term":"CD40","value":"A member (also known as tumor necrosis factor receptor type 5; TNFR5) of the TNF receptor (TNF) superfamily that is expressed by a number of different cell types including immune, hematopoietic, vascular and epithelial, as well as tumor cells. It is a receptor for CD154, however CD40 itself lacks intrinsic kinase activity and employs adapter molecules to mediate its effects on such processes as proliferation, survival and, most importantly, immune response. It has been shown that CD154-CD40 ligation activates NF-kappaB and JNK signaling, and CD40 engagement induces tumor regression via an indirect effect of immune activation and a direct cytotoxic effect on the tumor. Various anti-CD40 antibodies have reached clinical evaluation in patients with chronic lymphocytic leukemia and other hematologic malignancies. Moreover, studies have shown that the number of CD40+ macrophages was significantly elevated in both histologically inflamed and noninflamed colon and ileum of IBD children. Antagonism of CD40 may control the inflammation observed in Crohn's disease. "},{"term":"CD40 ligand (CD40L; CD154)","value":"A costimulatory molecule primarily expressed on activated CD4+ T lymphocytes that is a member of the TNF family of molecules (also known as Tumor Necrosis Factor Ligand Superfamily Member 5; TNFSF5). It is also found in a soluble form (sCD40L). It binds to CD40 on antigen-presenting cells (APC) to induce activation of APC in association with T cell receptor stimulation by MHC molecules on the APC. CD40L-CD40 ligation regulates B cell function and activates NF-kappaB and JNK signaling. It also induces tumor regression via an indirect effect of immune activation and a direct cytotoxic effect on the tumor. Soluble CD40L (sCD40L) has been shown to be directly involved in the development of vascular damage  and circulating levels are enhanced in patients with Alzheimer's disease (AD) suggesting a possible role in the pathogenesis in this disease. sCD40L may also be contribute to inflammation which affects neuronal survival in HIV type 1 dementia. significantly higher sCD40L levels were detected in cerebrospinal fluid and plasma from HIV-infected patients with cognitive impairment as compared with their nonimpaired HIV-infected controls."},{"term":"cDNA","value":"See Complementary DNA (cDNA)\r\n"},{"term":"Central Nervous System (CNS)","value":"The portion of the nervous system encompassing the brain and spinal cord."},{"term":"Chemokine (C-C motif) receptor 1 (CCR1)","value":"A G-protein-coupled receptor of the beta chemokine receptor subfamily that signals through increases in intracellular calcium levels. It acts as a receptor for macrophage inflammatory protein 1 alpha (MIP-1 alpha), regulated on activation normal T expressed and secreted protein (RANTES), monocyte chemoattractant protein 3 (MCP-3) and myeloid progenitor inhibitory factor-1 (MPIF-1). CCR1 is essential for recruitment of effector immune cells to a site of inflammation. Monocyte infiltration is implicated in a variety of diseases including multiple myeloma, rheumatoid arthritis and multiple sclerosis (MS) and CCR1 activation results in meditation of monocyte trafficking to sites of inflammation. Antagonism of CCR1 may therefore be effective in the treatment of MS.\r\n"},{"term":"Chemokine (C-C motif) receptor 2 (CCR2)","value":"CCR2 is a 7-transmembrane, GPCR expressed on monocytes and mast cells as well as B cells, T cells, megakaryocytes, basophils, eosinophils, fibroblasts, astrocytes, dendritic cells, chondrocytes, colonocytes, endothelial cells, enterocytes, Langerhans cells, epithelium cells, smooth muscle cells and synoviocytes. Two isoforms have been identified (CCR2A and CCR2B) which bind monocyte chemoattractant protein-1 (MCP-1); agonist-induced activation of the receptors results in calcium mobilization and inhibition of adenylyl cyclase. MCP-1/CCR2 interactions are responsible for mediation of monocyte recruitment to sites of inflammation such as that seen in MS. Antagonism of the receptor may be effective for the treatment of rheumatoid arthritis and multiple sclerosis. "},{"term":"Chemokine CXC receptor 3 (CXCR3)","value":"CXCR3, also known as GPR9 and CD183, is a GPCR (Galphai) and member of the CXC chemokine receptor family.  There are two variants: CXCR3-A which binds to the CXC chemokines CXCL9 (MIG), CXCL10 and CXCL11 (IP-10, I-TAC) and CXCR3-B which binds CXCL4 in addition to CXCL9, CXCL10, and CXCL11. It induces cellular responses involved in leukocyte trafficking and is involved in inflammatory diseases such as rheumatoid arthritis and multiple sclerosis (MS). While CXCR3 expression has been shown to be reduced in noninflammatory (silent) MS lesions, its expression is upregulated in the inflammatory form of the disease. Antagonism of this receptor may interfere with activation of T lymphocytes and their migration to the CNS and therefore be beneficial in the treatment of inflammation associated with MS.\r\n"},{"term":"Chemokine CXCR2 Receptor","value":"See Interleukin 8 (IL-8) beta Receptor"},{"term":"Chemokine CXCR4 Receptor","value":"CXCR4, also known as fusin, is an alpha-chemokine, 7-transmembrane G-protein-coupled receptor that specifically binds stromal cell-secreted CXCL12 (also called stromal cell-derived factor-1; SDF-1) and transduces a signal by increasing intracellular calcium ion levels. CXCR4 displays potent lymphocytic chemotactic activity and plays a role in hematopoiesis, neuronal and cardiovascular development, the spread and progression of tumors and organization of the immune system. CXCR4 is found on the surface of both hematopoietic and nonhematopoietic tumor cells. Interaction between this receptor and its ligand CXCL12 regulates hematopoietic stem cell quiescence and homing. Antagonism of CXCR4 releases and mobilizes hematopoietic stem cells into the bloodstream which is a crucial step in stem cell transplantation. CXCR4 is also implicated in cancer cell migration and metastasis, since it promotes tumor spread to organs where CXCL12 is expressed (e.g., bone marrow). CXCL12 itself can stimulate survival and growth of neoplastic cells in a paracrine fashion and can promote tumor angiogenesis by attracting endothelial cells to the tumor microenvironment. CXCR4 has been demonstrated to be involved in several diseases, including cancer cell metastasis, leukemia cell progression, rheumatoid arthritis (RA) and pulmonary fibrosis and CXCR4 is used by human immunodeficiency virus (HIV) to enter host cells. CXCR4 antagonism therefore is a potential therapeutic target to treat HIV infection, inflammatory diseases, cardiovascular diseases and cancer, including breast, lung and prostate cancer and hematologic cancers such as multiple myeloma, acute myeloid leukemia (AML) and non-Hodgkins lymphomas (NHL)."},{"term":"Chemokine Receptors","value":"G-protein-linked, 7-transmembrane (i.e., serpentine) receptors that bind chemokines and are used as coreceptors for the binding of immunodeficiency viruses (HIV, SIV, FIV) to leukocytes. Individuals deficient in particular CCRs seem to be resistant to HIV-1 infection. CXCR4 is a coreceptor for T-tropic viruses. CCR5 is the receptor for MIP-1alpha, MIP-1beta and RANTES and a primary coreceptor with CR4 for cell entry of macrophage-tropic HIV-1 strains. CCR5 is also implicated in asthma, rheumatoid arthritis and multiple sclerosis. Antagonists to the CCR1 (binds MIP-1alpha, RANTES, MIP-5/HCC-2), CCR2 (binds MCP-1, MCP-3, MCP-4) and CCR3 (binds, RANTES, MCP-2, MCP-3, MCP-4, eotaxin, MIP-5/HCC-2) receptors are under development for treatment of rheumatoid arthritis."},{"term":"Chemokines","value":"A large group of small polypeptide cytokines (e.g., IL-8, PF4, MCP-1, MIP-1alpha, RANTES) with proinflammatory activities synthesized by several cell types (e.g., monocytes, macrophages, T cells, mast cells, fibroblasts, endothelial cells, platelets, epithelium, microglial cells, keratinocytes). These molecules display a certain degree of selectivity for various immune cell types and are involved in activation of leukocytes during transendothelial migration and chemotaxis in tissues. The chemokine family is composed of two main subgroups: CC chemokines which contain two adjacent cysteine residues and CXC chemokines in which the two cysteine residues are separated by another amino acid. CXC chemokines are further subdivided into ELR+ or ELR- chemokines, where ELR indicates the amino acids (Glu-Leu-Arg) preceding the first cysteine residue. ELR+ chemokines are chemotactic for neutrophils and ELR- chemokines are chemotactic for lymphocytes."},{"term":"Chimera","value":"An organism made up of two genetically distinct cell types. It is created by fusing two early blastula stage embryos, by reconstituting bone marrow in an irradiated recipient or by somatic segregation."},{"term":"Chondrogenesis","value":"The formation of new cartilage from chondroprogenitor cells. Chondrogenic growth factors such as IGF-I and TGF-beta stimulate this process.\r\n"},{"term":"Chronic","value":"A term referring to a health-related state or exposure that signifies prolonged (long-term) duration. In some instances, it can indicate low intensity."},{"term":"Ciclosporin","value":"See Cyclosporine"},{"term":"CL (Total Body Clearance)","value":"A pharmacokinetic parameter that refers to total body clearance or the volume of plasma completely cleared of drug per unit time. Units include ml/min or l/h (i.e., volume/time). Clearance can also refer to elimination of a compound from the body only via the kidneys. This form of clearance is designated CLr."},{"term":"Collagen","value":"The major water-insoluble protein that forms the white fibers of connective tissue, cartilage and bone. The protein is high in glycerine, L-alanine, L-proline and L-4-hydroxyproline but does not contain L-tryptophan and only low amounts of sulfur. Several types (about 11) of collagen have been identified including type I, II, III and IV."},{"term":"Collagenase-1 (MMP-1)","value":"A member (EC 3.4.24.7) of the matrix metalloprotease (MMP) family of enzymes that is a key factor in tissue and joint destruction in chronic inflammatory conditions such as periodontitis and rheumatoid arthritis. See also Matrix Metalloproteinases (MMPs)"},{"term":"Complement System","value":"A group of serum molecules that mediate inflammation and opsonization of antigens and microorganisms in addition to controlling lysis of pathogens or cells sensitized with antibody. These serum molecules may be activated via the classical pathway involving activation by immune complexes binding to C1q subcomponent of C1, which has six Fc binding sites, or by an alternative pathway that can involve activation in the presence of suitable surface molecules, such as microbial products. Complement components interact with each other, so that a small stimulus can result in a cascade of activity."},{"term":"Complementary DNA (cDNA)","value":"Deoxyribonucleic Acid (DNA) synthesized a mature (i.e., fully spliced) mRNA template in a reaction catalyzed by reverse transcriptase (RT). RT acts on a single strand of mRNA yielding a sequence of DNA that complements the mRNA template; this strand of DNA is cDNA and can be used to clone eukaryotic genes in prokaryotes. RT generates its cDNA based on the pairing of RNA base pairs (A, U, G and C) to their DNA complements (T, A, C and G respectively).\r\n"},{"term":"Corticosteroids","value":"A class of steroid hormones that are produced in the adrenal cortex and are involved in many physiologic processes including among others stress responses, immune responses, inflammation, carbohydrate metabolism, protein catabolism, electrolyte homeostasis and behavior. The class includes both glucocorticoids and mineralocorticoids although corticosteroid is often used synonymously for glucocorticoid. Corticosterone, cortisone and aldosterone are common endogenous corticosteroids. Corticosteroids have been shown to be effective for a number of indications including cancer, asthma, allergic rhinitis, rheumatoid arthritis, nausea, COPD and inflammatory bowel disease."},{"term":"Costimulation","value":"Costimulation is a process that is essential for initiation of effective immune responses. Costimulation is required for the proliferation, differentiation and survival of T and B cells. T cell costimulation involves antigen-specific signal via T cell receptor (TCR) interaction with MHC molecules on the membrane of antigen presenting cells (APC). This is followed by an antigen nonspecific costimulatory signal resulting from the interaction between costimulatory molecules (e.g., CD28, ICOS) expressed on the membrane of APC and the T cell. B cell costimulation involves the binding of antigens to the B cell membrane-bound B cell receptor (BCR) and consequent intracellular signalling. This leads to phagocytosis of the antigen and its processing and presentation on MHC II molecules. Presentation results in recognition by antigen-specific Th2 cells and, in turn, activation of the B cell through binding of TCR to the MHC-antigen complex.\r\n"},{"term":"Crossover Trial","value":"A clinical study in which subjects receive two or more drugs separated by drug-free periods."},{"term":"Cyclooxygenase (COX)","value":"An enzyme also known as prostaglandin endoperoxide synthase (EC 1.14.99.1) that catalyzes the two steps in prostaglandin (PG) synthesis forming PG2 and PGH2 from arachidonic acid. The two major forms of the enzyme are COX-1 and COX-2. COX-1 is constitutive and present in endothelium, stomach and kidney. It is involved in maintenance of platelet and kidney function and considered a housekeeper enzyme, maintaining homeostasis. COX-2 is not present at baseline but is inducible during inflammation by cytokines and endotoxins. It has been shown to play a role in propagation of inflammatory cascades leading to disorders such as Alzheimer's disease, rheumatoid arthritis and osteoarthritis, cancer, kidney disease and osteoporosis.  Recently, COX-3, a distinct COX-1 variant,  and two smaller COX-1-derived proteins (partial COX-1 or PCOX-1 proteins) have been cloned and found to be expressed in canine cerebral cortex and in other tissues; COX-3 was predominantly expressed in canine cerebral cortex and heart. Canine COX-3 was shown to be selectively inhibited by NSAIDs and therefore COX-3 may be involved in pain and fever."},{"term":"Cyclosporine","value":"An immunosuppressant oligonucleotide synthesized by the fungus Tolypocladium inflatum Gams and used clinically in the prevention of organ rejection following transplant. Also known as ciclosporin."},{"term":"Cytokines","value":"Soluble proteins produced by one of several cell types (i.e., T cells, B cells, fibroblasts, macrophages, epithelial cells, astrocytes, endothelium, monocytes) that are involved in signaling between cells of the immune system. Cytokines include interleukins, tumor necrosis factors (TNFs) and colony-stimulating factors (CSFs)."}]},{"letter":"D","Terms":[{"term":"Dendritic Cell (DC)","value":"An antigen presenting cell (APC) that recognizes and captures foreign antigens and then migrates to the lymph nodes and spleen, where it presents the processed antigens to T cells, thereby initiating specific T cell responses. DCs are important in the generation of antiviral responses since they produce IL-12, a crucial factor in the development of Th1 and cytotoxic responses. In addition, DCs orchestrate these responses by virtue of their simultaneous expression of both class II and class I MHC molecules, which enables activation of both virus-specific CD4+ T cells and CTLs. Interdigitating cells are DCs located in lymph nodes in areas where T cells are present. In contrast to other APCs, these DCs can provide a full activation stimulus to virgin CD4+ T cells. Follicular DCs are closely surrounded by lymphocytes in the spleen and lymph node follicles and present antigen predominantly to B cells."},{"term":"Deoxyribonucleic Acid (DNA)","value":"A nucleic acid which contains deoxyribose as the sugar component loosely bound to protein. It stores the hereditary information required for cell growth and reproduction. It is a linear macromolecular chain of deoxyribose molecules esterified with phosphate groups between 3' and 5' hydroxyl groups. Purines (i.e., adenosine [A] and guanine [G]) and pyrimidines (cytosine [C] and thymine [T]) are linked to this structure. DNA is found in the nuclei (chromatin, chromosomes) and mitochondria of organisms. DNA is the autoreproducing component of viruses and contains all hereditary information. It may be open-ended or circular (e.g., mitochondrial DNA) and single- or double-stranded (e.g., chromosomes)."},{"term":"Diacylglycerol (DAG)","value":"A glycerol substituted on the 1 and 2 hydroxyl groups with long chain fatty acyl residues. It is a normal intermediate in the biosynthesis of phosphatidyl phospholipids and is released by phospholipase C (PLC). DAG is involved in signal transduction. Increased DAG levels in membranes activate protein kinase C (PKC). The high levels of glucose seen in diabetes increase the synthesis of DAG and PKC in vascular tissue. This can result in structural and functional abnormalities including changes in vascular permeability and gene expression in the retina (i.e., retinopathy) and kidney (i.e., nephropathy)."},{"term":"Diarrhea","value":"A symptom characterized by loose or unformed stools, frequently accompanied by other gastrointestinal symptoms. It is nearly always a symptom of another disease or condition, rather than a disease in its own right. It is considered acute when it lasts for less than 4 weeks (typically associated with a bacterial or viral infection) and chronic when it persists for more than four weeks. Diarrhea is broadly classified as secretory, osmotic or exudative. Secretory diarrhea is caused by an increase in active secretion or an inhibition of absorption. Osmotic diarrhea occurs when too much water is drawn into the bowels. This can be the result of maldigestion (e.g., pancreatic disease or celiac disease), in which the nutrients are left in the lumen to pull in water, lactose or fructose intolerance, or use of osmotic laxatives, among other causes. Exudative diarrhea is characterized by the presence of blood and/or pus in the stool. This typically occurs with inflammatory bowel disease (Crohn's disease or ulcerative colitis) and severe infections.\r\n"},{"term":"Dihydroorotate Dehydrogenase","value":"Dihydroorotate dehydrogenase (EC 1.3.3.1) is a mitochondrial enzyme that catalyzes the fourth step in the de novo biosynthesis of pyrimidine-containing ribonucleotides; it catalyzes the ubiquinone-mediated oxidation of dihydroorotate to orotate. As rapidly proliferating human T cells have an exceptional requirement for de novo pyrimidine biosynthesis, small molecule DHODH inhibitors constitute an attractive therapeutic approach to autoimmune diseases, immunosuppression and cancer. Inhibition of this enzyme would prevent T and B cell proliferation and may be effective in the treatment of multiple sclerosis, Crohn's disease and rheumatoid arthritis among others."},{"term":"DMARDS","value":"The abbreviation for disease-modifying antirheumatic drugs."},{"term":"DNA","value":"See Deoxyribonucleic Acid (DNA)"},{"term":"Docosahexaenoic Acid (DHA)","value":"A polyunsaturated essential fatty acid (an omega-3 fatty acid; n-docosanoic acid; also known as behenic acid) present in cell membranes. See also PUFAs (Polyunsaturated Fatty Acids)"},{"term":"Double-Blind","value":"A research testing method characteristic of a controlled experiment/trial in which neither the participants nor the person administering the treatment know which treatment any particular subject is receiving. Usually the comparison is between an experimental drug and a placebo or a standard comparison agent."},{"term":"Double-Dummy","value":"A research testing method in which patients in all treatment groups receive medication of the same appearance, one of which is inactive (placebo) and the other active. For example, all patients would receive a topical cream and capsules. Those receiving the active cream received dummy capsules and vice versa."},{"term":"Downstream","value":"Segments of nucleotide sequences of DNA or RNA that are remote from the initiation sites (i.e., codons) and are transcribed or translated later. It is also used to decribe events that occur late within sequential reactions. See also Upstream"},{"term":"Dual Energy X-Ray Absorptiometry (DXA)","value":"A method used to measure bone mineral density to aid in the diagnosis of osteoporosis. It is also used for estimating fat and lean tissue density and body fat distribution."}]},{"letter":"E","Terms":[{"term":"E-Selectin","value":"A cellular adhesion molecule (CAM) and CD antigen (CD62E) expressed only on endothelial cells and activated by cytokines. It plays a crucial role in inflammation mediating leukocyte recruitment to the sites of injury or, more specifically, neutrophil, monocyte and memory T cell adhesion to cytokine-activated endothelial cells. E-selectin recognizes sialylated carbohydrate groups present on the surface proteins of certain leukocytes; these carbohydrates include members of the Lewis X or Lewis A family expressed monocytes, granulocytes and T lymphocytes. Neutrophilic inflammation is a pathogenic feature of COPD and inhibition of  E-selectin may an effective therapy for the treatment of this airway disease. E-selectin may play a role in the pathophysiology of stroke."},{"term":"Edema","value":"The abnormal accumulation of fluid in cells, tissues or serous cavities."},{"term":"Effectiveness","value":"The therapeutic effect of an intervention as demonstrated or observed in the real-world setting. See also Efficacy"},{"term":"Efficacy","value":"The therapeutic effect of an intervention as demonstrated or observed in a controlled setting, such as a clinical trial. See also Effectiveness"},{"term":"Eicosanoids","value":"Physiologically active substances derived from cyclooxygenase- or lipoxygenase-catalyzed arachidonic acid metabolism. They include prostaglandins, leukotrienes and thromboxanes."},{"term":"Elastase","value":"A serine protease that hydrolyzes elastin. Neutrophil elastase (EC 3.4.21.37) is a major component of lung elastolytic activity and a stimulant of mucus secretion. It also induces release of IL-8 from epithelial cells and therefore may prolong inflammation. Macrophage elastase or MMP-12 (EC 3.4.24.65) hydrolyzes soluble and insoluble elastin and specifically cleaves 14-Ala- | -Leu-15 and 16-Tyr- | -Leu-17 in the insulin B chain. It is a potential target for the treatment of COPD, ARDS and cystic fibrosis. See also Matrix Metalloproteinase-12 (MMP-12)"},{"term":"Emesis","value":"Emesis is the complex reflex consisting of ejecting the contents of the stomach through the mouth. Also known as vomiting, this reflex can be triggered by various endogenous or exogenous factors."},{"term":"Endocarditis","value":"A disease characterized by exudative and proliferative inflammatory alterations of the endocardium. Vegetations may be present on the surface of the endocardium or in the endocardium itself and commonly involve a heart valve; the inner lining of the ventricular or atrial chambers may also be affected. It may occur as a primary disorder or as a complication of or in association with another disease and it mimics rheumatoid arthritis."},{"term":"Endocrine","value":"A term referring to internal, ductless, secretion (i.e., into the systemic circulation) or to the glands or the hormones which secrete or are secreted, respectively, in this manner."},{"term":"Endogenous","value":"Originating from within an organism, tissue or cell. "},{"term":"Endothelium","value":"A layer of flat squamous cells lining blood and lymphatic vessels and other structures such as the heart and posterior surface of the cornea."},{"term":"Enzyme-Linked Immunosorbent Assay (ELISA)","value":"A laboratory test used to detect antibodies or antigens. It is similar to an radioimmunoassay (RIA) except that it substitutes an enzyme for the radioactive isotope. In this assay, the antigen is absorbed to a solid phase followed by addition of the test antibody. The test antibody is later detected using enzyme-labeled protein G (binds IgG) and colorimetry. ELISAs are also used to measure other low- to high-molecular-weight compounds (e.g., peptides, steroids, prostaglandins, enzymes, etc.) from tissue or plasma extracts."},{"term":"Epitope","value":"A single antigenic determinant which is the portion of the antigen that combines with the antibody paratope. Any given antigen can have several different epitopes or repeated epitopes. Antibodies are specific for the epitope and not the entire antigen molecule."},{"term":"Erythrocyte","value":"A cell in the blood of vertebrates that transports oxygen and carbon dioxide to and from tissue. In mammals, they are anucleated, biconcave and disk-shaped cells and they contain hemoglobin. Also known as red blood cells (RBCs)"},{"term":"Etiology","value":"The cause or origin of a disease."},{"term":"Exacerbation","value":"An increase in the severity of a disease or in any of its symptoms."},{"term":"Exogenous","value":"Originating from outside an organism, tissue or cell."},{"term":"Exon","value":"A sequence of DNA that encodes information for protein synthesis that is transcribed to messenger RNA.\r\n"}]},{"letter":"F","Terms":[{"term":"Familial","value":"An inherited disorder or trait."},{"term":"Familial Adenomatous Polyposis (FAP)","value":"An inherited disorder syndrome characterized by numerous precancerous polyps in the colon and rectum. Patients with FAP have nearly a 100% chance of developing colorectal cancer. Mutations in the APC gene cause both classic and attenuated FPA and mutations in the MUTYH gene cause autosomal recessive FAP. Individuals with classic FAP develop multiple benign polyps in the colon as early as their teenage years. If not removed, these polyps  become malignant. Autosomal recessive FAP is a milder form with patients presenting with fewer polyps as compared the classic type. Both forms are associated with a high risk of gastric cancer.\r\n"},{"term":"FAS","value":"See Tumor Necrosis Factor Receptor Type 6 (FASL Receptor; Fas)"},{"term":"FAS Ligand","value":"See Tumor Necrosis Factor Ligand Superfamily Member 6 (FASLG; FAS ligand; FasL).\r\n"},{"term":"Fibroblast","value":"A spindle-shaped cell with cytoplasmic processes that is present in connective tissue and forms collagen fibers."},{"term":"Fibromyalgia Syndrome (FMS)","value":"A chronic disorder of unknown cause characterized by widespread musculoskeletal pain and altered pain processing which manifests as multiple tender joints. It may also be associated with fatigue, sleep disturbances, cognitive difficulties and psychological distress.\r\n"},{"term":"Fibromylagia","value":"A disorder characterized by musculoskeletal tenderness, stiffness and fatigue. It mimics rheumatoid arthritis The cause is unknown and remission is rare. See Also Fibromyalgia Syndrome (FMS)"},{"term":"Fusion Gene","value":"A hybrid gene created by joining portions of two different genes (to produce a new protein) or by joining a gene to a different promoter (to alter gene transcription)."}]},{"letter":"G","Terms":[{"term":"G-Protein","value":"One of several mediators of activated cell surface receptors and their enzymes and ion channels. They are responsible for the signal transduction pathways which alter the concentration of intracellular second messengers (e.g.,  cAMP, cGMP, Ca2+). These second messengers in turn regulate the behavior of other intracellular target proteins, leading to the desired cellular response."},{"term":"G-Protein-Coupled Receptor","value":"Cell surface receptors that are coupled to G proteins (i.e., GTP binding protein). They have seven membrane spanning domains and have been divided into two subclasses: those in which the binding site is in the extracellular domain (e.g., receptors for glycoprotein hormones such as TSH and FSH) and those in which the ligand binding site is in the plane of the seven transmembrane domains (e.g., rhodopsin, receptors for small neurotransmitters and hormones such as the muscarinic acetylcholine receptor). Also called 7TM receptors."},{"term":"Gene Therapy","value":"Treatment of pathophysiologic states based on the transfer of genetic material, including complementary DNA (cDNA), full-length genes, RNA or oligonucleotides."},{"term":"Genome","value":"The entire collection of genes and other functional and nonfunctional DNA sequences in the nucleus of an organism. It includes those genes that encode mRNAs, rRNAs, tRNAs and sn/scRNA and the functional sequences that occur as regulatory elements or as sites where replication begins. Much of the nonfunctional DNA consists of sequence elements repeated thousands or millions of times. Arrangement of functional and nonfunctional DNA within the genome is not fixed and existing sequences may be internally rearranged, moving from one location to another."},{"term":"Genotype","value":"The genetic constitution of an organism or cell."},{"term":"Glucocorticoid Receptor (GR)","value":"A nuclear receptor of the NR3 class also known as type II glucocorticoid receptor (GR), which exists as a dimer coupled with chaperone molecules (e.g., HSP90, HSP65). Chaperone molecules are shed subsequent to ligand binding. GR binds cortisol and corticosterone and also aldosterone and deoxycortisone but with less affinity. The activated receptor then binds nuclear hormone response elements and also affects transcription via protein-protein interactions with other transcription factors such as activator protein- 1 (AP-1) and nuclear factor kappaB (NF-kappaB). Activation can result in potent anti-inflammatory activity as well as regulation of several cardiovascular, metabolic, immunologic and homeostatic responses. Synthetic glucocorticoid receptor ligands may be effective as a treatment for arthritis, dermatitis, allergic reactions, allergic rhinitis, atopic dermatitis, asthma, COPD, hepatitis, lupus erythematosus, inflammatory bowel disease, sarcoidosis, Alzheimer's-type dementia, and for glucocorticoid replacement in Addison's disease or other forms of adrenal insufficiency. On the other hand, GR antagonists may be effective in the treatment for disorders involving pathological exposure to glucocorticoids such as Cushing's syndrome. These agents would reduce the effects of excess cortisol.\r\n"},{"term":"Glucocorticoids","value":"A family of steroid hormones generally synthesized and secreted by the adrenal medulla which affect intermediary metabolism such as hepatic glycogen deposition. Glucocorticoids also have potent antiinflammatory activity. Glucocorticoid receptors are found in the cells of almost all vertebrate tissues.\r\nCortisol (also known as hydrocortisone) is the most potent naturally occurring hormone in this class. It regulates several cardiovascular, metabolic, immunologic and homeostatic responses. Synthetic glucocorticoids have been show to be effective as a treatment for arthritis, dermatitis, allergic reactions, asthma, hepatitis, lupus erythematosus, inflammatory bowel disease, sarcoidosis and for glucocorticoid replacement in Addison's disease or other forms of adrenal insufficiency."},{"term":"Glucose","value":"A simple monosaccharide found in the blood that is derived from transport or glycogenolysis; it is the body's main source of energy."},{"term":"Glycoprotein","value":"A protein conjugated with a carbohydrate (e.g., sugar molecule)."},{"term":"GM-CSF","value":"See Granulocyte-Macrophage Colony Stimulating Factor (GM-CSF)"},{"term":"Graft-versus-Host Disease (GVHD)","value":"GVHD is a pathophysiological condition in which cells from the transplanted tissue/organ of a donor initiate an immunologic attack on the cells and tissue of the recipient and constitutes both the immunologic assault itself and the consequent rejection of the tissue/organ. GVHD is most frequent in hematopoietic stem cell transplantation although it also can occur in recipients of solid organs transplants and blood transfusions (including maternal-fetal transfusions). It can be acute (developing within 100 days or less of transplantation) or chronic (emerging at day 100 posttransplantation or later). Acute GVHD is characterized by increased inflammatory and immune responses initiated by donor  lymphocytes against the host; manifestations include dermatitis, enteritis and hepatitis. Chronic GVHD is more complex involving thymus atrophy or dysfunction which leads to decreased peripheral tolerance and an increase in the population of autoreactive T lymphocytes. It manifests as an autoimmune syndrome directed towards multiple organs. See also Transplant Rejection\r\n\r\n"},{"term":"Granulocyte-Macrophage Colony Stimulating Factor (GM-CSF)","value":"A cytokine produced in response to inflammatory mediators secreted by mesenchymal cells present in hemopoietic environment and at peripheral sites of inflammation. GM-CSF stimulates production of neutrophilic granulocytes, macrophages and mixed granulocyte-macrophage colonies from bone marrow cells and the formation of eosinophil colonies from fetal liver progenitor cells. It may also mediate mature granulocytes and macrophages. GM-CSF is used clinically to promote the recovery of the white blood cells following chemotherapy. Patients suffering from COPD have increase levels of this proinflammatory cytokine. Neutralization of this CSF would prevent activation of inflammatory cells and thus attenuate the release of airway neutrophilic and remodelling mediators.  Inhibiting GM-CSF may be effective in the treatment of COPD in reducing lung inflammation."},{"term":"Growth Factors","value":"Protein substances involved in cell differentiation and growth. They mediate fetal development, are involved in maintenance and repair of tissues, stimulate blood cell production and are also involved in cancer growth. Examples include epidermal growth factor (EGF), insulin-like growth factors (IGFs), nerve growth factor (NGF), platelet-derived growth factor (PDGF) and transforming growth factor alpha and beta (TGF-alpha, TGF-beta)."}]},{"letter":"H","Terms":[{"term":"Half-life","value":"The time required for one-half of an amount of a substance to be lost through biological processes."},{"term":"Hepatitis","value":"An inflammatory liver disease. See also Hepatitis A, Hepatitis B, Hepatitis C, Hepatitis E and Hepatitis D."},{"term":"Hepatitis A","value":"A form of viral hepatitis that is known as infectious hepatitis because it can spread through contact with oral secretions or stool or through sexual contact. See also Hepatitis A Virus\r\n"},{"term":"Hepatitis A Virus (HAV)","value":"A small (27 nm diameter) single stranded RNA virus with some resemblance to enteroviruses (e.g., poliovirus) that is a member of the Picornaviridae family. It replicates in hepatocytes and is transmitted via the oral-fecal route. It can also be sexually transmitted."},{"term":"Hepatitis B","value":"An inflammatory process in the liver caused by the hepatitis B virus (HBV) that is characterized by patchy hepatocellular necrosis affecting all acini. Liver disease caused by chronic hepatitis B can be fatal due to the development of cirrhosis leading to liver failure and an increased risk of hepatocellular liver cancer."},{"term":"Hepatitis B Surface Antigen (HBsAg)","value":"HBV surface antigen (HBsAg) is associated with the viral surface coat and several subtypes have been identified. Detection of HBsAg in serum usually provides initial evidence of acute HBV infection. In general, HBsAg appears during the incubation period, 1 to 6 weeks prior to development of clinical or biochemical illness and disappears during convalescence. Corresponding antibody (anti-HBVs) appears weeks or months later after clinical recovery and usually persists for life. Occasionally, HBsAg persists after infection and anti-HBs do not develop. These patients usually develop chronic hepatitis or become asymptomatic carriers of the virus."},{"term":"Herpes Simplex Virus (HSV)","value":"Viruses belonging to the family Herpesviridae that cause a variety of infections. HSV type 1 infections are generally characterized by eruptions of one or more vesicles on the lips or external nares while HSV type 2-induced eruptions commonly occur on the genitalia. Both types are recrudescent. HSV type 6 is found in some lymphoproliferative disorders but is also highly prevalent in individuals suffering from Alzheimer's disease."},{"term":"HLA","value":"See Human Leukocyte Antigen (HLA)"},{"term":"HMGB1","value":"High mobility group box protein 1 (HMGB1; also known as amphoterin, p30, sulphoglucuronyl carbohydrate binding protein [SBP-1] and differentiation enhancing factor [DEF]) is a ubiquitous nonhistone 30 kDa chromosomal protein that acts as a transcription factor, growth factor and an architectural chromatin-binding factor. It is also expressed as a membrane protein on the surface of some neurons where it is essential for extension of neuritis. In addition, HMGB1 is also an extracellular secreted cytokine released by activated monocytes, macrophages, neutrophils and platelets to mediate inflammation and cell motility. HMGB1 can be actively released from inflammatory cells in response to exogenous bacterial endotoxin (e.g., lipopolysaccharide [LPS]) or endogenous proinflammatory cytokines including tumor necrosis factor (TNF), interleukin (IL)-1beta and interferon (IFN)-gamma. It can also be passively released by necrotic cells. HMGB1 has been identified as playing an important extracellular role in local and systemic inflammation in arthritis and sepsis."},{"term":"Human Leukocyte Antigen (HLA)","value":"The human major histocompatibility complex (MHC) locus which is divided into eight regions: DP, DM, DQ, DR, class III, B, C and A. HLA-A, -B and -C loci encode class I MHC molecules, while HLA-DP, HLA-DQ and HLA-DR loci encode class II MHC molecules. HLA-DM encodes class II molecule DM, which is involved in loading peptides onto class II molecules. The HLA class III region encodes C2, factor B, TNF-alpha and TNF-beta in addition to several heat shock proteins. The HLA-DR1 and HLA-DR4 genes have been associated with an increase in susceptibility to rheumatoid arthritis."},{"term":"Hyaline","value":"Refers to something that is clear, transparent, colorless and granule-free. Examples are hyaline cartilage and hyaline hyphae present in fungus such as Aspergillosis spp."},{"term":"Hypercalcemia","value":"A condition in which abnormally high concentrations of calcium compounds are found in the serum (normal blood calcium = 8.5-10.5 mg/dl). The condition may occur in association with hyperparathyroidism, multiple myeloma, excessive vitamin D intake and some cancers. It may also be a drug side effect."},{"term":"Hyperplasia","value":"An increase in the number of cells in a tissue or organ resulting in increased volume of that structure. The term excludes tumor formation."},{"term":"Hypothyroidism","value":"A condition characterized by reduced production of thyroid hormone. The resulting thyroid insufficiency manifests as low metabolic rate and symptoms can include weight gain, somnolence and myxedema."}]},{"letter":"I","Terms":[{"term":"ICAM-1","value":"One of several adhesion molecules (CAMs) belonging to the Ig supergene family. It is induced on endothelium at inflammation sites by IL-1, TNF and IFN-alpha, and binds to integrins mediating adhesion and migration. ICAM-1 may be involved in the pathogenesis of rheumatoid arthritis since high levels of the molecule are found in the rheumatoid synovium."},{"term":"IGF1","value":"A gene (also known as HGNC:5464, IGFI) located on chromosome 12 (12q22-q23) that encodes insulin-like growth factor 1 (IGF-1; somatomedin C) in humans. It has been implicated in the pathogenesis of osteoarthritis. \r\n"},{"term":"IkappaB Kinase beta (IKKbeta)","value":"A protein serine/threonine kinase (EC 2.7.11.10) that phosphorylates IkappaB, a cytoplasmic inhibitor, at specific residues, targeting it for proteasomal degradation via the ubiquitination pathway and allowing the nuclear translocation of IkappaB. Subsequent degradation of the IkappaB complex (IKK) activates nuclear factor kappaB (NF-kappaB), a translation factor that plays an important role in inflammation, immunity, cell proliferation and apoptosis. If the serine residues are replaced by threonine residues, the activity of the enzyme is decreased considerably. It is composed of alpha, beta and gamma subunits, the latter not having kinase activity but presumed to play a regulatory role. IKKbeta regulates several inflammatory genes such as TNF-alpha, interleukin (IL-1) and cell adhesion molecules and two proinflammatory mediators NF-kappaB and activator protein-1 (AP-1) appear to be activated in airway diseases and inflammatory disease such as MS. Inhibitors of IKKbeta block the NF-kappaB activation cascade thus attenuating inflammatory responses. IKKbeta inhibitors may be effective in the treatment of inflammatory airway diseases such as COPD, asthma and cystic fibrosis. IKKbeta is activated by TNF-alpha and hyperglycemia and its inhibition can reverse insulin resistance. Therefore, this mediator may be a new target for the development of insulin sensitizers and antidiabetic therapies. NF-kappaB is inhibited by binding to IkappaB and polymorphisms of the NFKB and NFKBI genes and an imbalance in NF-kappaB and IkappaB and has been associated with development of many inflammatory diseases, including MS, ulcerative colitis, Crohn's disease, rheumatoid arthritis, systemic lupus erythematosus, psoriatic arthritis, giant cell arthritis, type 1 diabetes, celiac disease, and Parkinson's disease, as well as susceptibility of several cancers."},{"term":"IkappaB Kinase Complex (IKK)","value":"A 900 kDa protein serine/threonine kinase composed of alpha, beta and gamma (IKKalpha, IKKbeta and IKKgamma) subunits that targets the IkappaB protein. IkappaB is the inhibitory of subunit of the transcription factor nuclear factor kappa B (NFkappaB). NFkappaB is activated via sequential phosphorylation, ubiquitination and degradation of IkappaB. IKK phosphorylates IkappaB thus allowing for subsequent proteasomal degradation, nuclear translocation and activation of NFkappaB. The IKKgamma does not appear to have kinase activity but rather plays a regulatory role. IKKalpha is a nuclear factor-inducing kinase (NIK) interacting protein. Direct interaction with NIK results in its phosphorylation and activation. IKKbeta is 50% identical to IKKalpha and contains a kinase domain. Both IKKalpha and IKKbeta can undergo homotypic interactions and can interact with each other. The catalytic activities of both IKKalpha and IKKbeta are essential for proper IkappaB phosphorylation and NF-kappaB activation. See also IkappaB Kinase beta (IKKbeta)"},{"term":"Immune System","value":"An integrated group of various cell types and the soluble molecules they secrete (i.e., antibodies, cytokines) responsible for immunity."},{"term":"Immunogenic","value":"See Antigenic"},{"term":"Immunoglobulin (Ig)","value":"A subgroup of globulins that are classified as alpha, beta and gamma according to lipid or carbohydrate content and physiological function. Antibodies are Igs and all Igs may function as antibodies. Serum Igs belong to the gamma group and constitute a family of glycoproteins that bind antigens. Serum Igs can be precipitated from plasma or serum and can be normal or specific. Serum Igs are classified into 5 groups: IgG, IgD, IgE, IgA and IgM."},{"term":"Immunoglobulin A (IgA)","value":"Major class of immunoglobulins found in mammalian serum, body fluids (i.e., tears and saliva) and in the respiratory, reproductive, urinary and gastrointestinal tracts. It protects the body's mucosal surfaces from infection. It is present in human colostrum but cannot be transferred across the placenta."},{"term":"Immunoglobulin E (IgE)","value":"IgE is a class of immunoglobulins or \"antibodies\" that attach to mast cells in the respiratory and intestinal tracts, triggering release of inflammatory modulators and resulting in manifestation of symptoms associated with allergic reactions. Of the five types of Igs (IgM, IgG, IgA, IgE and IgD) in the body, only IgE has been shown to be involved in allergic reactions. It is responsible for the symptoms seen in patients with allergic rhinitis, asthma and eczema. IgE elicits an immune response by binding to one of two Fc receptors. The high affinity receptor FcepisilonRI is expressed only on mast cells and/or basophils.  Aggregation of antigens and binding of IgE to the mast cell Fcepisilon results in degranulation and the release of mediators from the cells; binding to FcepisilonRII on basophils causes release of type 2 cytokines (e.g., IL-4, IL-13) and other inflammatory mediators. The low affinity receptor Fcepisilon RII is constitutively expressed on B cells and inducibly expressed by IL-4 on macrophages, eosinophils, platelets and T cells."},{"term":"Immunoglobulin G (IgG)","value":"An immunoglobulin composed of two Fab and one Fc fragment.  The Fabs include the antigen combining sites while the Fc region consists of the remaining constant sequence domains of the heavy chains and contains cell binding and complement binding sites. IgGs act on pathogens via agglutination, opsonization, activation of complement-mediated reactions against cellular pathogens and/or neutralization. Unlike other Igs, IgG can cross the placenta to the fetus as maternal antibodies. There are four known IgG subclasses. IgG2 differs from the rest in that it cannot be transferred across the placenta and IgG4 does not fix complement. IgG is present in serum at a concentration of 8-16 mg/ml."},{"term":"In situ","value":"A Latin phrase that literally means \"in the place.\"  It is used to refer to examination of a phenomenon in exactly the place where it occurs (e.g., organ perfusions). In oncology, in situ refers to malignant cells present as a tumor. They have not metastasized beyond the original site where the tumor was discovered.\r\n"},{"term":"In vitro","value":"A Latin phrase that literally means \"in glass.\" It is used to refer to a process or reaction (or experiment) occurring in an artificial environment (i.e., test tube, culture medium, etc.)."},{"term":"In vivo","value":"A Latin phrase that literally means \"in a living being.\"  It is used to refer to a process or reaction (or experiment) occurring in a living body."},{"term":"Indolent","value":"Slowly progressing, low-grade; causing little or no pain."},{"term":"Infarct","value":"The area of necrosis in tissue resulting from a local lack of oxygen (i.e., ischemia). See also Infarction"},{"term":"Infarction","value":"Sudden lack of sufficient arterial or venous blood supply due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The organs most commonly affected are the heart, brain, spleen, kidney, intestine, lung and testes. See also Infarct"},{"term":"Inflammation","value":"The response of the immune system to an injury caused by irritation, infection, physical damage or chemically-induced cell stress. Local reactions at the site of injury cause immune cells to be recruited into the area, leading to the destruction and removal of the affected tissues and to wound repair. The five symptoms of inflammation are redness, heat, swelling, pain and dysfunction of the affected area, although not all five need be present at any one time."},{"term":"Inflammatory Bowel Disease (IBD)","value":"A serious disorder of the gastrointestinal tract in which tissue damage and inflammation lead to bowel impairment. The two major forms are ulcerative colitis and Crohn's disease."},{"term":"Insulin-like Growth Factor-1 (IGF-1)","value":"A peptide formed in response to growth hormone (GH) stimulation that is responsible for the peripheral effects of GH. It is highly homologous to human insulin (70%) and is involved in the development of diabetic retinopathy and in retinal neovascularization. IGF-1 has also been shown to promote the synthesis of new cartilage."},{"term":"Insulin-like Growth Factor-1 (IGF-1) Receptor (IGFR-1)","value":"A transmembrane tyrosine kinase receptor that binds and mediates the effects of IGF-I; the receptor also binds the related IGF-II. IGF-I is a member of a group of growth factor peptides (m.w. about 4,000) synthesized in the liver and kidney with high homology to human insulin (about 70%). It is formed in response to growth hormone (GH) stimulation that is responsible for the peripheral effects of GH. It exerts weak insulin activity via the IGF-I receptor which enhances the effects of insulin.\r\n"},{"term":"Integrin alphavbeta3 (vitronectin) Receptor","value":"Integrin alphavbeta3  is a member of a large family of transmembrane receptors for ECM and plasma proteins and is composed of two noncovalently linked subunits (alphav and beta3) that span the plasma membrane. Integrin alphavbeta3 interacts with various ECM proteins, including fibronectin, osteoponin, tenascin and vitronectin. Upon ligand binding, these subunits interact with the actin cytoskeleton and FAK complex through their cytoplasmic domains. It is known that endogenous insulin-like growth factor-I (IGF-I) regulates intestinal smooth muscle growth by concomitantly stimulating proliferation and inhibiting apoptosis and IGF-I-stimulated growth is augmented by the integrin alphavbeta3 ligands vitronectin and fibronectin. IGF-I expression in smooth muscle is increased in both experimental colitis and Crohn's disease. Thus, the smooth muscle hyperplasia and stricture formation observed in the chronically inflamed intestine may be in part due to upregulation of endogenous IGF-I and ligands of integrin alphavbeta3 that mediate the increase in smooth muscle cell proliferation and decrease in apoptosis. Integrin alphavbeta3 has also been established as a proangiogenic factor that facilitates endothelial cell motility and migration. Thus, antagonist of alphavbeta3 may be effective in the treatment of Crohn's disease."},{"term":"Interferon gamma (IFN-gamma)","value":"A type II interferon produced by T lymphocytes which shows marked immunoregulatory activity although its antiviral activity is less potent as compared to type I interferons. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis and multiple sclerosis."},{"term":"Interleukin (IL)","value":"A member of a class of cytokines (IL-1 through IL-29) produced by several cell types (i.e., lymphocytes, macrophages, monocytes, fibroblasts, astrocytes, endothelium, etc) with very diverse actions. Some of these actions include effects on stem cell division (IL-11); development and differentiation of B cells (IL-5) and Th1 cells (IL-12); T cell growth and activation (IL-2); lymphocyte growth (IL-6), etc."},{"term":"Interleukin 1 (IL-1)","value":"A soluble protein cytokine that is a member of the IL-1 superfamily which includes IL-1alpha, IL-1beta and the IL-1 receptor antagonist (IL-1RA). IL-1alpha and  IL-beta are proinflammatory cytokines that are involved in inflammatory and immune responses while IL-1RA competes for receptor binding with these tow isotypes thus blocking inflammatory and/ or immune activation. Both isotypes are secreted by monocytes, macrophages and/or accessory cells early during an immune response and they activate T and B cells, stimulate T cell proliferation and enhance T and B cell responses to antigens. Overproduction of IL-1 has been implicated in several diseases including COPD, rheumatoid arthritis, type 1 diabetes, Alzheimer's disease and inflammatory bowel disease (IBD) and inhibitors of this cytokine may be effective treatment options for these disorders."},{"term":"Interleukin 1 Receptor (IL-1R)","value":"The cytokine receptor that binds members of the IL-1 superfamily IL-1alpha, IL-1beta and IL-1 receptor, type I(IL-1R1/IL-1RA). There are two identified subtypes: type I (CD121a) and type II (CD121b) which are involved in cytokine-induced immune and inflammatory responses. Antagonism of these receptor subtypes may be effective in the treatment of inflammatory diseases such as COPD."},{"term":"Interleukin 10 (IL-10)","value":"A cytokine released by Th2 cells that can inhibit cytokine release from Th1 cells. In addition, during late-phase inflammatory reactions, IL-10 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells that are involved in recruitment of inflammatory cells from the circulation. IL-10 has been implicated in the pathogenesis of systemic lupus erythematosus. It inhibits the synthesis and release of proinflammatory cytokines produced by stimulated monocytes and macrophages and is under development for rheumatoid arthritis. Psoriatic lesions show significantly low levels of IL-10 and studies suggest that this cytokine may be an effective treatment for psoriasis."},{"term":"Interleukin 11 (IL-11)","value":"A pleiotropic antiinflammatory cytokine that modulates antigen-specific antibody responses, potentiates megakaryocytes and regulates bone marrow adipogenesis. IL-11 has been shown to act synergistically with IL-10 to inhibit proinflammatory cytokine production and it decreases TNF-alpha, IL-1 and IL-12 production due to inhibition of NFkappaB. IL-11 may be effective as a treatment for psoriasis."},{"term":"Interleukin 12 (IL-12)","value":"A heterodimeric cytokine that promotes cell-mediated immunity by facilitating type 1 helper T lymphocyte responses, including the production of IFN-gamma by both T cells and natural killer cells, potentiating the lytic activity of natural killer cells and boosting specific cytolytic T lymphocyte responses. IL-12 has shown potent therapeutic effects in various cancers and infectious diseases, including some viral infections. Overproduction of this inflammatory cytokine may be involved in autoimmune insulitis, type 1 diabetes, IBD, rheumatoid arthritis, psoriasis and multiple sclerosis."},{"term":"Interleukin 13 (IL-13)","value":"Immune regulatory cytokine, predominantly produced by activated Th2 cells and mast cells, that inhibits the production of inflammatory cytokines in monocytes. IL-13 upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-13 ( in addition to IL-4, IL-5 and GM-CSF) selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa."},{"term":"Interleukin 15 (IL-15)","value":"A cytokine expressed by monocytes, macrophages, dendritic cells (DC), keratinocytes, fibroblasts and nerve cells. It binds to and signals through a complex composed of the IL-2/IL-15 receptor beta chain (CD122) and the common gamma chain (gamma-C, CD132). It is expressed by T cells, monocytes and keratinocytes in psoriatic epidermis that affects T, B and NK cell division, neutrophil and monocyte activation. It also inhibits lymphocyte apoptosis. Keratinocyte-derived IL-15 has been shown to inhibit keratinocyte and lymphocyte apoptosis and it may play a role in the survival of infiltrating lymphocytes and abnormal keratinocytes features in psoriasis. This cytokine has been implicated as playing a role in rheumatoid arthritis and is overexpressed in psoriasis and pulmonary inflammatory diseases. IL-15 accumulates within synovial lesions and induces the overproduction of IL-17 within rheumatic joints. In addition, IL-15 neutralization has been shown to be beneficial in preclinical models of psoriasis, diabetes and celiac disease. IL-15 is normally not secreted. However, viral infection can cause its secretion."},{"term":"Interleukin 17 (IL-17)","value":"IL-17 is a family of cytokines whose members include IL-17A, IL-17B, IL-17C, IL-17D, IL-17E (also known as IL-25) and IL-17F. These cytokines are associated with many immune regulatory effects and are associated with mediation of proinflammatory and allergic responses. IL-17 induces cytokine (e.g., IL-6, G-CSF, GM-CSF, IL-1beta, TGF-beta, TNF-alpha), chemokine (e.g., IL-8, GRO-alpha and MCP-1) and prostaglandin (e.g. PGE2) production from several cell types (e.g., fibroblasts, endothelial cells, epithelial cells, keratinocytes, monocytes and macrophages). IL-17 is secreted by the novel T helper cell subset Th17 which induces autoimmune inflammation and IL-17 receptor signaling may play a role in the development of chronic destructive arthritis from acute synovitis; IL-17 contributes both directly and indirectly to the bone and cartilage destruction occurring in rheumatoid arthritis. IL-17 may also be involved in the stimulation of osteoclastogenesis. The IL-17 family has been linked to other immune/autoimmune related diseases including asthma (i.e., plays a role in airway remodeling), lupus, allograft rejection, ankylosing spondylitis and antitumor immunity."},{"term":"Interleukin 18 (IL-18)","value":"A proinflammatory cytokine structurally and functionally related to the IL-1 family of proteins that is a strong inducer of IFN-gamma production by T lymphocytes and NK cells. It is the only cytokine that can induce T helper 1 (Th1) and T helper 2 (Th2) cell polarization depending on immunologic context. It is implicated in several immune-mediated diseases. It is invovled in both innate and acquired immunity and its inflammation-promoting role is IFN-gamma-independent. It  also plays a role in the local inflammation seen in rheumatoid arthritis. It is currently under investigation as an immunotherapeutic cancer agent and as an angiogenic factor."},{"term":"Interleukin 18 Binding Protein (IL-18BP)","value":"A constitutively secreted glycoprotein protein that exerts antiinflammatory and immunosuppressive effects. By preventing interleukin 18 (IL-18) receptor binding, it inhibits IL-18 and interferon (IFN)gamma production. Four human splice variants have been identified (IL-18BPa, IL-18BPb, IL-18BPc, IL-18BPd) of which IL-18BPa is the predominant form exhibiting the highest affinity for IL-18. While IL-18Pc also neutralizes IL-18, . IL-18BPb and IL-18BPd cannot bind to or neutralize cytokine. Inhibition of IL-18BP would be effective in suppressing high circulating levels IL-18 observed in many autoimmune diseases such as psoriasis, rheumatoid arthritis, inflammatory bowel disease psoriatic arthritis and in sepsis."},{"term":"Interleukin 1beta (IL-1beta)","value":"A cytokine released by mast cells following allergen-IgE binding that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. It is also released by epithelial cells and astrocytes. An upregulation of IL-1beta production by the microvasculture has been observed in Alzheimer's disease and in response to ischemic insult. See also Interleukin 1 (IL-1)"},{"term":"Interleukin 2 (IL-2)","value":"IL-2 is a cytokine produced by CD4+ T lymphocytes upon activation by antigens and costimulators. It promotes T cell clonal expansion in the adaptative immune response and can activate B lymphocytes, monocytes and NK cells. Binding of IL2 to its receptor activates the JAK/STAT, PI3-kinase and RAS signaling pathways. Alpha chain monomers (CD25) conform a low affinity IL2 receptor. High affinity and intermediate affinity IL2 receptors are conformed by alpha/beta heterodimers and beta chain monomers, respectively, associated to a gamma chain. It plays a role in both proliferative and activation-induced cell death (AICD) signaling of T cells. MS is in part genetically determined and the gene encoding the alpha-chain of the IL-2 receptor, IL2RA, harbors alleles associated with risk to MS and other autoimmune diseases such as GVHD. In addition, IL2RA genetic variants correlate with the levels of a soluble form of the IL-2 receptor in subjects with type 1 diabetes and multiple sclerosis (MS). IL-2 is produced by activated T cells in the synovium during the early stages of rheumatoid arthritis and in psoriatic lesions."},{"term":"Interleukin 20 (IL-20)","value":"A new member of the IL-10 family (including IL-19, IL-22, IL-24 and IL-26) of cytokines which signals through the IL-20R1/IL-20R2 heterodimer. Together with IL-19, it is synthesized by a distinct population of keratinocytes. IL-20 induces keratin proliferation and Stat-3 signal transduction pathway and may be implicated in the pathogenesis of psoriasis."},{"term":"Interleukin 22 (IL-22)","value":"Interleukin-22 (IL-22) is a member of IL-10 superfamily (including IL-19, IL-20, IL-24, and IL-26) of cytokines which mediator cellular inflammatory responses. IL-22 signals via binding to the cell-surface complex composed of IL-22R1 and IL-10R2 and is produced by activated dendritic and T cells. IL-22 together with IL-17 is produced by Th17 cells and is involved in mediating adaptive and innate immune responses. Both IL-17 and IL-22 mediate host defenses against extracellular pathogens. However, they may also be involved in the pathogenesis of several autoimmune diseases (e.g., Sjogrens' syndrome, psoriasis, rheumatoid arthritis).\r\n"},{"term":"Interleukin 23 (IL-23)","value":"A heterodimeric cytokine composed of a unique p19 subunit and the p40 subunit component of IL-12. It is secreted by activated dendritic cells (DCs) and macrophages and binds to memory T cells, NK cells, macrophages and DCs. In particular, this cytokine is suspected to be involved in the activation and maintenance of the Th17 subset of inflammatory T cells. It has been hypothesized that the autoimmune actions of IL-12 are attributable to IL-23 since mice lacking IL-23p19 (only IL-23 absent) and mice lacking IL-12p40 (both IL-12 and IL-23 absent) were protected from autoimmune encephalomyelitis (EAE) and collagen-induced arthritis (CIA). On the other hand, mice lacking IL-12p35 (only IL-12 absent) developed more severe disease.  Overexpression of IL-23 and/or IL-12 or defect in their receptors may be involved in conditions such as rheumatoid arthritis, psoriatic arthritis, psoriasis, multiple sclerosis, Crohn's disease and ankylosing spondylitis. Patients with Crohn's disease have been shown to have a significantly increased number of intestinal CD14+ macrophages as compared with normal control subjects and these cells produce larger amounts of IL-23 and TNF-alpha as compared to normal controls or patients with ulcerative colitis. Moreover, genomic studies conducted in patients with Crohn's disease have identified the IL-23 pathway as playing a predominant role in this disorder. Monoclonal antibodies directed against both IL-12 and IL-23 may be effective treatment options for these diseases.\r\n"},{"term":"Interleukin 3 (IL-3)","value":"A multilineage cell growth inducing cytokine (hemopoietic colony stimulating factor) secreted by lymphocytes, epithelial cells and astrocytes which stimulates clonal proliferation and differentiation of various types of blood and tissue cells."},{"term":"Interleukin 4 (IL-4)","value":"Pleiotropic, immune regulatory cytokine released by Th2 and mast cells that upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-4 (in addition to IL-5, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. Eosinophil infiltration of airway submucosa and mucosa is characteristic allergic diseases. Like IL-12, this cytokine has been found to inhibit HIV-1 replication in primary blood-derived human macrophages. Antagonizing the effects of IL-4 is a potential new approach for the treatment of for asthma, allergic rhinitis and rheumatoid arthritis. IL-4 receptors are overabundant in several tumor types therefore IL-4 fusion toxins may be an effective treatment for some forms of cancer (i.e., breast cancer)."},{"term":"Interleukin 5 (IL-5)","value":"A proinflammatory cytokine released by Th2 and mast cells that is involved in the development and differentiation of eosinophils and B cells; it also upregulates expression of cellular adhesion molecules on endothelial and epithelial cells during late-phase inflammatory reactions. Following an early-phase allergic reaction in which allergen crosslinking of IgE bound to mast cells occurs, IL-5 (in addition to IL-4, IL-13 and GM-CSF) secreted by Th2 cells selectively recruits and activates eosinophils, other Th2 lymphocytes and IgE-secreting B lymphocytes into airway mucosa. IL-5 is essential for eosinophilic inflammation which leads to airway hyperresponsivenes. Antagonizing the effects of IL-5 or inhibiting its production are potential new approaches for the treatment of allergic disease such as asthma and allergic rhinitis."},{"term":"Interleukin 6 (IL-6)","value":"A member of a subfamily of related hematopoietic, proinflammatory cytokines, including leukemia inhibitory factor, ciliary neurotrophic factor, oncostatin M, cardiotrophin-1 and IL-11. The expression of IL-6 in the brain has been found to be increased in neurological disorders such as Alzheimer's disease, Parkinson's disease, trauma, stroke and meningitis. IL-6 is also present in abnormally high levels in obesity and type 2 diabetes, and has been implicated in inflammatory bowel disease. IL-6 is upregulated in epithelial cells infected with rhinoviruses and overexpression of IL-6 have been observed in the synovium in the early stages of rheumatoid arthritis, at systemic and cutaneous levels in psoriasis and in human systemic lupus erythematosus. IL-6 in the presence of sex steroids is required for osteoclastogenesis to occur."},{"term":"Interleukin 8 (IL-8)","value":"An ELR+ (Glu-Leu-Arg) CXC chemokine suggested to be an important mediator of angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Overproduction of IL-8 may also be involved in airway inflammation characteristic of cystic fibrosis, asthma, the common cold and rheumatoid arthritis; IL-8 may also play a role in the inflammatory processes involved in psoriasis. Ischemia has been shown to increase the production of IL-8 in the brain. see Also Interleukin 8 beta  Receptor (IL-8betaR)"},{"term":"Interleukin 8 (IL-8) beta Receptor","value":"One of two G-protein-coupled receptor subtypes (alpha and beta) for interleukin 8 (IL-8), an ELR+ (Glu-Leu-Arg) CXC chemokine (chemokine CXCR2) produced by monocytes, fibroblasts and endothelial cells that mediates activation and chemotaxis of T cells, monocytes and neutrophils. Overexpression of IL-8 appears to be involved in airway inflammation characteristic of COPD as well as cystic fibrosis, asthma, the common cold and rheumatoid arthritis. Antagonism of this receptor could prevent recruitment of pathogenic cells into inflamed lungs thus preventing development of COPD. Antagonism of this receptor may also be effective in the treatment of psoriasis and atherosclerosis since IL-8 may also play a role in the inflammatory processes involved in psoriasis and angiogenesis that may contribute to plaque formation in human coronary atherosclerosis. Ischemia has also been shown to increase the production of IL-8 in the brain."},{"term":"Interleukin 9 (IL-9)","value":"A cytokine secreted from CD4+ T cells that affects T cell and mast cell division/development. It may also be involved in the pathogenesis of asthma by enhancing the effects of other cytokines and inflammatory mediators. The normal nonasthmatic state is suggested to be associated with downregulation of IL-9."},{"term":"iRNA","value":"See RNA Interference (RNAi)"}]},{"letter":"J","Terms":[{"term":"Janus Kinase 1 (JAK1)","value":"Jak1 belongs to the protein tyrosine Janus kinase family. Jak1 is involved in signal transduction of several hematopoietic cytokine receptors. The JAK/STAT pathway plays a crucial role in carcinogenesis and Jak1 activates STAT1 and STAT3 consequently modulating myogenic differentiation, participating in myoblast proliferation and actively repressing differentiation. JAK1 is activated by cytokines present in the bone marrow cells of multiple myeloma patients and its associated with survival, proliferation and invasion of multiple myeloma and various other cancers. Inhibition of the JAK/STAT pathway, particularly targeting Jak1 and Jak2, could be beneficial in the treatment of various cancers including multiple myeloma. JAK1 is a potentially effective and selective target for the development of novel immunosuppressive agents for the treatment of various autoimmune diseases such as rheumatoid arthritis."},{"term":"Janus kinase 2 (JAK2)","value":"Janus kinase (JAK) 2 is a member of the JAK family (JAK1, JAK2, JAK3 and Tyk2) of kinases that are involved in cytokine signaling. JAKs are closely associated with cell surface cytokine receptors, since the latter lack enzymatic activity and require phosphorylation by JAKs to propagate the cytokine signal. JAK2 responds to a multitude of ligands, including growth hormone, erythropoietin, leptin, prolactin, gamma interferon, leukemia inhibitory factor, cardiotropin, ciliary neurotrophic factor, granulocyte colony-stimulating factor, granulocyte-macrophage colony-stimulating factor, thrombopoietin, oncostatin M, IL-2, IL-3, IL-5, IL-6, IL-11 and IL-12. Binding of one of these ligands to a cytokine receptor causes homo- or hetero-oligomerization, bringing receptor-associated JAKs into proximity and enabling JAKs to autophosphorylate and allow docking of signaling molecules; STATs (signal transducers and activators of transcription) are an example of the JAK2 substrate. Deficiencies in JAK-STAT signaling are associated with immunodeficiency disorders and acquired activating mutations and translocations are found in hematologic malignancies. Somatic point mutation (V617F) in the conserved autoinhibitory pseudokinase domain of JAK2 causes constitutive activation of the kinase, leading to upregulated signaling that mimics continuous growth factor stimulation. The JAK V617F mutation has been detected in blood and marrow of a large proportion of patients with Bcr/Abl-negative chronic myeloproliferative disorders as well as in myelodysplastic syndrome, atypical myeloproliferative disorders and acute myeloid leukemia. JAK2 is a potentially effective and selective target for the development of novel immunosuppressive agents for the treatment of various autoimmune diseases such as rheumatoid arthritis."},{"term":"Janus Kinase 3 (JAK3)","value":"JAK3 is a large cytoplasmic cellular protein that is a member of the Janus family of protein-tyrosine kinases which also includes JAK1, JAK2 and tyrosine kinase 2 (TYK2). JAKs (via tyrosine phosphorylation) activate cytokine-mediated latent cytoplasmic signal transducers and activators of transcription. Several cytokines critical for immune cell development and homeostasis (IL-2, IL-4, IL-7, IL-9, IL-15 and IL-21) which bind to receptors sharing the common cytokine receptor gamma-chain (gammac), have emerged as crucial entities regulating immune function. Following cytokine binding to cell surface receptors, signal transduction to the nuclei is achieved via activation of JAKs which consequently phosphorylate the cytokine receptor creating a site for docking of STATs (signal transducers and activators of transcription). STATs are phosphorylated by JAKs and dimerization occurs followed by transport to the nucleus, DNA binding and, ultimately transcriptional modulation. In contrast to JAK1, JAK2 and Tyk2 which are used by a variety cytokine receptors and are ubiquitously expressed, JAK3 expression is relatively restricted and is only used by cytokine receptors containing gammac. High levels of JAK3 are found in natural killer (NK) cells and thymocytes and it is inducible in T cells, B cells and myeloid cells; it is not expressed in resting T cells. Interestingly, studies have shown that patients carrying mutations in the gene encoding JAK3 present the same T-B+NK- SCID (severe combined immunodeficiency) phenotype. Moreover, activation of STAT-4 and STAT-3 in T cells which is mediated by JAKs appears to play a key pathogenic role in Crohn's disease. JAK3 is a potentially effective and selective target for the development of novel immunosuppressive agents for the prevention of transplant rejection and the treatment of  various autoimmune diseases such as rheumatoid arthritis, psoraisis and Crohn's disease.  JAK3 enzymatic activity has been found to be enhanced by IgE receptor/FcepsilonRI crosslinking, and inhibition of JAK3 activity has been shown to prevent activation-associated morphological changes, degranulation and proinflammatory mediator release in human mast cells. Thus, targeting of JAK3 is also a potential treatment and prophylaxis for mast cell-mediated allergic reactions."}]},{"letter":"K","Terms":[{"term":"K(v)1.3 (KCNA3)","value":"K(v)1.3 (also known as potassium voltage-gated channel, shaker-related subfamily, member 3 ) is a voltage-gated, delayed-rectifier potassium ion channel that regulates membrane potential and calcium signaling in human effector memory T cells. Kv1.3 is a member of a large family of potassium channels involved in  diverse functions such as regulating neurotransmitter release, heart rate, insulin secretion, neuronal excitability, epithelial electrolyte transport, smooth muscle contraction and cell volume. The channel allows the repolarization of nerve cells after an action potential and plays a role in the T cell proliferation and activation; they maintain the membrane potential of effector-memory T cells that are important mediators of MS, type 1 diabetes mellitus and rheumatoid arthritis. The functional K(v)1.3 channel in T cells is composed of four identical K(v)1.3 subunits that are physically coupled through a series of adaptor proteins to the TCR signaling complex; it traffics to the immunological synapse during antigen presentation. Blockade of K(v)1.3 channels in effector-memory T cells suppresses calcium signaling, cytokine production (interferon-gamma, IL-2) and cell proliferation thus preventing inflammatory responses. In MS, disease-associated myelin-specific CD4+ T cells in patient blood and postmortem MS brain lesions express high numbers of K(v)1.3 channels. Targeting K(v)1.3 could suppress effector-memory T cell responses thus ameliorating autoimmune diseases like MS without compromising protective central immune response."},{"term":"Keratin","value":"A group of highly insoluble fibrous proteins that are the primary constituent of hair, nails and skin."},{"term":"Knockin","value":"A gentically modfied mutant organism (e.g., mouse, yeast) that carries a particular gene that is not normally present. The effect of including this gene can be provide information about a specific disease or condition."},{"term":"Knockout","value":"Experimental inactivation of specific genes in laboratory organisms (e.g., mice, yeast) in order to study a specific disease or condition."}]},{"letter":"L","Terms":[{"term":"L-Selectin","value":"A cellular adhesion molecule (CAM) that is a peripheral lymph node homing receptor. It is constitutively expressed but is shed upon cellular activation as a result of the actions of a membrane-bound metalloproteinase. L-selectin is the peripheral lymph node homing receptor and several receptors for L-selectin have been identified on lymph node high endothelial venules (HEVs). These include GlyCAM-1 and CD34 in humans and mucosal addressin cell adhesion molecule (MAdCAM)-1 in mice. L-selectin recognizes sialylated carbohydrate groups related to the Lewis X family. The ligand for L-selectin on inflamed venular endothelium has not been identified."},{"term":"Legionella","value":"A genus of rod- or coccus-shaped aerobic Gram-negative bacteria. Certain species such as L. pneumophila, produce Legionnaires' disease, a severe form of pneumonia.\r\n"},{"term":"Lesion","value":"Pathological or traumatic discontinuity of a tissue or loss of function of organ or other body part.\r\n"},{"term":"Leukotrienes","value":"Physiologically active substances which mediate inflammation and allergic reactions and have been implicated in asthma, rheumatoid arthritis, allergic rhinitis, psoriasis and inflammatory bowel disease. They are the result of eicosanoid metabolism and differ from prostaglandins and thromboxanes in that they do not have a central ring. Six metabolites have been named leukotriene (LT) A-F with the number of double bonds indicated as a subscript (e.g., LTB4). They are classified into two subclasses: peptidoleukotrienes (e.g., LTC4, LTD4, LTE4) and hydroxyleukotrienes (LTB4). In general, peptidoleukotrienes are involved in smooth muscle contraction, induce myocardial depression, increase vascular permeability and enhance mucus production. LTB4 is involved in immune responses such as stimulation of leukocytes (i.e., chemotaxis, aggregation, etc.). High levels of LTB4 are observed in rheumatoid arthritis, gout, psoriasis and inflammatory bowel disease suggesting that antagonists may be effective treatments; LTB4 antagonists may also be effective therapies for asthma."},{"term":"Lignanes","value":"Substances with varying biological activities originating from plants. They contain phytoestrogens and when included in the diet, may provide protection against hormone-dependent breast and prostate cancers and other diseases. They are also effective as an adjuvant therapy in the treatment of rheumatoid arthritis."},{"term":"Lipopolysaccharide (LPS)","value":"The major constituent of the cell walls of Gram-negative bacteria. It is highly immunogenic, and is frequently used to experimentally induce inflammation."},{"term":"Lipoprotein-Associated Phospholipase A2 (Lp-PLA2)","value":"A member (EC 3.1.1.47) of the A2 phospholipase family of enzymes that hydrolyze phospholipids at the sn2 position to generate lysophospholipids and fatty acids. The enzyme is also known as 2-acetyl-1-alkylglycerophosphocholine esterase and platelet-activating factor acetylhydrolase (PAF-AH) and appears to be an independent predictor of coronary heart disease. The enzyme circulates bound to LDL and its expression is modulated by mediators of inflammation. It is speculated that this enzyme could either promote atherogenesis if it releases products from LDL phospholipids that are injurious to the artery wall or it could exert protective effects if it decreases inflammation and thrombotic events via hydrolysis of PAF. 5-lipoxygenase-mediated oxygenation of membrane phospholipids and its interaction with phospholipase A(2)s may play a crucial role in the pathogenesis of diseases such as bronchial asthma and atherosclerosis."},{"term":"Liposome","value":"A synthetic spherical particle (ranging in diameter from submicrons to cm) consisting of a single or multilayer lipid bilayer enclosing an aqueous compartment. They are used as models of the plasma membrane and for delivering drugs. Liposomes fuse with the plasma membrane of a cell and deliver their contents intracellularly."},{"term":"Lipoxygenase","value":"An enzyme catalyzing the oxidation of unsaturated fatty acids with O2 producing hydroperoxides of the fatty acids. 5-Lipoxygenase (EC 1.13.11.34) catalyzes the first step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes. 5-lipoxygenase inhibitors which block the synthesis of hydroperoxide acid, 5-HPETE and subsequent synthesis of leukotrienes may be effective in the management of COPD or rheumatoid arthritis. 15-Lipoxygenase (EC 1.13.11.33) is an atherogenic enzyme which plays a role in the oxidation of LDL leading to the formation of foam cells. Inhibition of this enzyme may be a potential treatment for atherosclerosis."},{"term":"Lyme Disease","value":"A tick-transmitted, spirochetal, inflammatory disorder due to Borrelia burgdorferi. It is also known as Lyme borreliosis and presents as a rash (erythema migrans) that may be followed weeks or months later by neurologic, cardiac or joint abnormalities."},{"term":"Lymph Node","value":"A small, bean-shaped organ that supplies lymphocytes to the bloodstream and filters out bacteria and foreign substances from the fluid that contains white blood cells. Also called lymph glands, these organs are located throughout the body."},{"term":"Lymphocyte","value":"A type of white blood cell formed in lymphocytic tissue (i.e., lymph nodes, spleen, thymus, tonsils, Peyer's patches, bone marrow) that is responsible for specific immune recognition of pathogens and the initiation of adaptive immune responses."},{"term":"Lymphocytosis","value":"An increased number of circulating lymphocytes. Pathologic lymphocytosis occurs in chronic inflammation, recovery from acute infection, lymphocytic leukemia and hypoadrenocorticism and indicates a strong immune stimulus of chronic duration from a bacterial infection, viremia or immune-mediated disease. Absolute lymphocytosis is the presence of more than 15,000 lymphocytes/mm3 blood.\r\n"}]},{"letter":"M","Terms":[{"term":"Macrophage","value":"An immune cell that is capable of phagocytosis, and that may also be capable of antigen processing and presentation (APCs). These cell have different names depending upon the tissue in which they are located (e.g., Kupffer cells in the liver, alveolar macrophages in lung, histiocytes in connective tissue). Macrophages process the phagocytosed antigen and present it in association with class II molecules to CD4+ T cells. If the CD4+ T cell is Th0, antigen presentation by macrophages often results in differentiation of these Th0 cells into Th1 cells. Phagocytosis and/or cytokines induce macrophage activation, and activated macrophages secrete IL-1 and upregulate expression of costimulatory molecules (e.g., B7 and ICAM-1) on their surface."},{"term":"Macrophage Colony Stimulating Factor (M-CSF)","value":"A key glycoprotein (proinflammatory cytokine) that regulates the maturation, survival and differentiation of bone marrow progenitor stem cells in hematopoiesis."},{"term":"Major Histocompatibility Complex (MHC)","value":"The genetic loci (class I, II and III regions) found in all mammals encoding a specialized group of highly polymorphic cell surface proteins responsible for antigen recognition. Class I and II MHC gene products are involved in signaling between lymphocytes and cells expressing antigen. Class III molecules are structurally and functionally different from the gene products of class I and II MHC and are commonly referred to as the complement system."},{"term":"MAP Kinase","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)\r\n"},{"term":"MAPK","value":"See Mitogen Activated Protein (MAP) Kinase (MAPK)"},{"term":"Mast Cells","value":"Large cells that, once activated by the contact of an allergan with IgE, release a large number of inflammatory mediators through different mechanisms. Mast cells contain large granules that store a variety of mediator molecules including the vasoactive amine histamine and the proteases tryptase and chymase. Other mechanisms include the synthesis of lipid membrane-derived molecules (prostaglandins, leukotrienes and PAF) and the production of cytokines. Mast cells play a crucial role in allergic reactions and asthma. Chymase-positive mast cells may contribute to fibrotic changes in primary pulmonary hypertension."},{"term":"Matrix Metalloproteinase-13 (MMP-13; Collagenase-3)","value":"An enzyme implicated in the mediation of the pathological changes in articular cartilage during the development of osteoarthritis. It has been selected as a target to reduce the excessive degradation of joint cartilage and development of osteoarthritis."},{"term":"Matrix Metalloproteinase-8 (MMP-8)","value":"An enzyme implicated which cleaves interstitial collagens in the triple helix domain. It cleaves type III collagen more slowly than type I. Also known as collagenase-2 or neutrophil collagenase."},{"term":"Matrix Metalloproteinase-9 (MMP-9)","value":"A member of the matrix metalloproteinase (MMP) family of enzymes (EC 3.4.24.35; also known as type V collagenase or gelatinase B). It cleaves gelatin types I and V and collagen types IV and V. Increased activity of MMP-9 is associated with diabetic retinopathy. See also Gelatinases and Matrix Metalloproteinases (MMPs)"},{"term":"Matrix Metalloproteinases (MMPs)","value":"A family of zinc-dependent enzymes also known as matrixins that catalyze the hydrolysis of peptide chains and therefore have the ability to degrade a variety of proteins (i.e., elastin, collagen, proteoglycans, laminin, fibronectin) of the extracellular matrix. They are functionally categorized into three groups according to their substrate target: collagenases, stromelysins and gelatinases which degrade fibrillar collagen, proteoglycans and glycoproteins and denatured and basement membrane collagens, respectively. MMPs are produced by neutrophils, alveolar macrophages and airway epithelial cells and have been implicated in several clinical inflammatory conditions such as COPD and asthma where inhibition would block extravasation, migration and alveolar wall degradation. Inhibitors may also be effective as a treatment for rheumatoid arthritis, inflammatory bowel disease (IBD), stroke and multiple sclerosis and for preventing tumor growth and metastasis."},{"term":"MEK","value":"See Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)"},{"term":"Melanocortin 1 Receptor (MC1R)","value":"One of five identified melanocortin G-protein-coupled receptors that is found in melanocytes and appears to be the receptor for alpha-melanocyte stimulating hormone (MSH). This subtype may mediate food intake and therefore modulators may be effective antiobesity agents. The subtype has also been shown to be expressed in several types of inflammatory cells and its activation by melanocortin peptides has been associated with the inhibition of inflammatory mediator production and inflammatory cell migration. Agonism of this receptor may therefore be effective in the treatment of inflammatory diseases such as rheumatoid arthritis."},{"term":"Melanocortin 2 Receptor  (MC2R)","value":"One of five identified melanocortin G-protein-coupled receptors that is localized in adrenocortical cells and appears to be the ACTH receptor. It is expressed in the zona fasciculata of the adrenal cortex and stimulates production of cortisol. Mutations in the gene encoding this subtype are associated with familial glucocorticoid deficiency (FGD). Antagonists to this subtype would inhibit ACTH-induced cortisol production and may be effective in the treatment of conditions such as Cushing's disease and preterm labor."},{"term":"Melanocortin 3 Receptor  (MC3R)","value":"One of five identified melanocortin G-protein-coupled receptors that together with MC4R are expressed mainly in the brain (hypothalamus in particular) where they appear to mediate ghrelin- and food deprivation-induced increases in food intake, food hoarding and foraging as well as sexual behavior.\r\n"},{"term":"Melanocortin 4 Receptor (MC4R)","value":"One of five identified melanocortin G-protein-coupled receptors expressed in skin and in the brain (particularly the hypothalamic nuclei). Activation of the receptor inhibits feeding behavior. Disruption of the MC4R in mice leads to an obesity syndrome. In addition, administration of melanocortin agonists into the cerebral ventricles inhibits feeding in several murine models of hyperphagia while coadministration of melanocortin antagonists blocks this effect. MC4R mutations result in a syndrome of hyperphagic obesity in humans that can present with either dominant or recessive patterns of inheritance."},{"term":"Melanocortin 5 Receptor (MC5R)","value":"One of five identified melanocortin G-protein-coupled receptors expressed in several types of peripheral tissues. This subtypes is thought play a role in regulating exocrine gland function and in coordinating central and peripheral signals for aggression."},{"term":"Melanocortin Receptors","value":"Five members of the rhodopsin family of 7-transmembrane, G-protein coupled receptors found in melanocytes, brain and other tissue that bind melanocortins, a group of posttranslationally processed pituitary peptide hormones derived from proopiomelanocortin (POMC) which mediate several biological actions such as food intake, and sexual behavior among others. Melanocortins include adrenocorticotropin (ACTH) and alpha, beta and gamma-melanocyte-stimulating hormones (MSHs). Activation of all five subtypes leads to increase intracellular cAMP formation. The receptors are inhibited by the endogenous antagonists agouti signaling protein and agouti-related protein. MCR1 appears to be the alpha-MSH receptor. MC2R is localized in adrenocortical cells and appears to be the ACTH receptor. MC3R and MC4R are localized primarily to sites in the brain and appear to mediate ghrelin- and food deprivation-induced increases in food intake, food hoarding and foraging."},{"term":"Melanocortins","value":"A group of posttranslationally processed pituitary peptide hormones derived from proopiomelanocortin (POMC) which display a wide variety of biological actions including mediation of food intake and sexual behavior. They include adrenocorticotropin (ACTH) and alpha, beta and gamma-melanocyte-stimulating hormones. These hormones mediate their effects through G-protein coupled receptors and stimulation of adenylate cyclase."},{"term":"MIF","value":"A cytokine with the unique ability to antagonize the effects of corticosteroids and whose expression has been recently described in rheumatoid arthritis (RA). MIF could be a therapeutic target for RA inflammation and disease progression."},{"term":"Missense Mutation","value":"A mutation that converts a codon coding for one amino acid to a codon coding for another amino acid. \r\n"},{"term":"Mitochondria","value":"A class of tubular-shaped organelles that reside within eukaryotic cells, converting oxygen and nutrients into adenosine triphosphate (ATP), which is required by cells for energy. Mitochondrial dysfunction has been hypothesized to contribute to the pathogenesis of Huntington's disease, Parkinson's disease, schizophrenia, and a wide range of other disorders."},{"term":"Mitogen-Activated Protein (MAP) Kinase (MAPK)","value":"A family of serine/threonine kinases that are activated when quiescent cells are exposed to mitogens and therefore potentially transmit a signal for entry into the cell cycle. One target is transcription factor p62TCF. MAPK can be phosphorylated by MAP kinase kinase (MAPKK) which is controlled by RAF1. C-Jun N-terminal kinases (JNK) are members of the MAPK family of enzymes. MAPK has been implicated in cerebral spasm and inhibitors of this kinase may be useful in the treatment of vasospasm following subarachnoid hemorrhage. See also p38 Mitogen-Activated Protein Kinases (MAPKs)"},{"term":"Mitogen-Activated Protein (MAP) Kinase Kinase (MEK; MAP2K)","value":"A kinase enzyme (EC 2.7.12.2) and member of MAPK signal transduction cascade where it is lies upstream of MAPK and stimulates the enzymatic activity of MAPK. MAPKs, also known as extracellular signal-regulated kinases (ERKs), are activated by a wide variety of extracellular signals and thus serve as an integration point for multiple biochemical pathways. They are activated via rapid phosphorylation on threonine and tyrosine residues. The MAPK signaling cascade is initiated by extracellular signaling which activates (i.e., phosphorylates) MAP kinase kinase kinase (MKKK; MAP3K). Activated MAP3K phosphorylates MEK which then activates MAPK. MEK/ERK inhibitors inhibit mucin secretion which would be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders such asthma and cystic fibrosis. MEK inhibitors have also been shown to inhibit muscarinic receptor-induced human lung fibroblast proliferation which contributes to the pathology of COPD. In Crohn's disease, macroscopically noninflamed colon contributes to diarrhea via impaired epithelial sodium channel-mediated sodium absorption and studies have shown that therapeutic inhibition of MEK1/2 restores electrogenic sodium absorption. Thus, inhibition of MEK could be an effective strategy for the treatment of the chronic inflammation and diarrhea seen in Crohn's disease."},{"term":"MMP","value":"See Matrix Metalloproteinases (MMPs)"},{"term":"Monoclonal Antibody (MAb)","value":"An antibody of a defined specificity that recognizes only a single epitope of an antigen. MAbs are produced by a single clone of B lymphocytes. Production of MAbs for therapeutic use is usually carried out by fusion of the relevant B cell clone with an immortalized cell line. This results in a population of hybrid cells (i.e., hybridoma) that secretes a large amount of the MAb of interest. Therapeutic MAbs can be murine, chimeric or humanized. Murine MAbs are developed in mice and can result in marked human antimouse responses (i.e., immunogenicity) in humans following administration. Thus, chimeric antibodies were developed which are composed of the murine variable region grafted onto a human MAb (two-thirds human). Humanized MAbs are less immunogenic since only the complementary determining regions of the murine antibody (only 5%) are grafted onto a human MAb."},{"term":"Monocyte Chemoattractant Proteins (MCP-1, MCP-2, MCP-3, MCP-4)","value":"MCP-1 through MCP-4 are CC chemokines secreted by monocytes, macrophages, fibroblasts and keratinocytes. They stimulate macrophage activation and basophil histamine release and promote Th2 immunity. MCP-1 targets T cells, monocytes and basophils via CCR2 and CCR9 receptors; MCP-2 targets T cells, monocytes, eosinophils and basophils via CCR2 and CCR9 ; and MCP-3 and MCP-4 target T cells, monocytes, eosinophils, basophils and dendritic cells via CCR2, CCR3 and CCR9 receptors. MCP-1 has been implicated in the pathogenesis of rheumatoid arthritis and atherosclerosis and has been shown to be increase in the brain in response to ischemia."},{"term":"Mucosa","value":"The mucous lining consisting of epithelium and the lamina propria and sometimes a layer of smooth muscle, as in the digestive tract."},{"term":"Mutation","value":"Damage or change in a gene or chromosome so that transcription is altered.\r\n"},{"term":"Myalgia","value":"Pain in a muscle or muscles."},{"term":"Myocardial Infarction (MI) ","value":"A sudden lack of sufficient arterial or venous blood supply to the heart due to emboli, thrombi, vascular torsion or pressure (i.e., the formation of an infarct). The resulting necrosis of the cardiac muscle is consistent with prolonged myocardial ischemia. It is common in individuals with coronary artery disease (CAD). See also Infarction and Infarct."}]},{"letter":"N","Terms":[{"term":"Nausea","value":"The unpleasant sensation of queasiness or stomach upset that often precedes or accompanies the act of vomiting. Some common causes include motion, early pregnancy, intense pain, emotional stress, gallbladder disease, food poisoning, enteroviruses among others. It is also be an adverse effect of several chemotherapeutic agents.\r\n"},{"term":"Necrosis","value":"Death of one or more cells of a tissue or organ. Early damage includes irreversible mitochondrial (e.g., swelling, granular calcium deposits) and nuclear (e.g., pyknosis, karyolysis, karyorrhexis) changes. Later, affected cells merge forming a focus of granular, amorphous or hyaline material."},{"term":"Neuritis","value":"Inflammation of a nerve. Also can refer to noninflammatory nerve lesions of the peripheral nervous system. \r\n"},{"term":"Neuron","value":"The cell of the nervous system which is composed of a cell body, dendrites and a single axon."},{"term":"Neuropathic","value":"Pertaining to neuropathy."},{"term":"Neuropathic Pain","value":"A heterogenous group of conditions caused by damage to or dysfunction of the peripheral or central nervous systems. Examples include diabetic neuropathy, AIDS neuropathy and carpal tunnel syndrome. Symptoms range from mild tingling or numbness to searing pain."},{"term":"Neutrophil","value":"See Polymorphonuclear Leukocytes."},{"term":"Neutrophil Collagenase (MMP-8; collagenase-2)","value":"See Matrix Metalloproteinase-8 (MMP-8)"},{"term":"Nitric Oxide (NO), Endogenous","value":"A biologically signaling gas synthesized from L-arginine in endothelium, macrophages, neutrophils, platelets and other tissues. It is formed in bone, brain, granulocytes, pancreatic B cells and peripheral nerves by a calcium-calmodulin-dependent constitutive nitric oxide synthase (cNOS) and, in hepatocytes, macrophages and smooth muscles by a calcium-calmodulin-independent inducible NOS (iNOS). It is involved in many important biological events such as neurotransmission, immune regulation, vascular smooth muscle relaxation (i.e., mechanisms of penile erection), inhibition of platelet aggregation and memory. NO production has been implicated as defective in diabetic peripheral vascular studies. Blockade of NOS, especially the endothelial NOS (eNOS) isoform, can induce insulin resistance which suggests that NO plays an important role in modulating insulin sensitivity and carbohydrate metabolism. Endothelium-derived NO (also known as endothelium-derived relaxing factor or EDRF) refers to the isoform of NO secreted by endothelial cells that is responsible for maintaining systemic blood pressure, vascular remodeling and angiogenesis. Studies have demonstrated that shortages or inactivation of this NO may contribute to high blood pressure and formation of atherosclerotic plaque and excess production is toxic to brain cells. NO has also been implicated in the pathogenesis of ischemic brain injury."},{"term":"Nitric Oxide (NO), Endothelium-derived","value":"See Nitric Oxide (NO), Endogenous"},{"term":"Nonsteroidal Antiinflammatory Drugs (NSAIDs)","value":"A large group of medications, some of which are related to aspirin. They are used to treat conditions associated with inflammation and pain."},{"term":"NSAIDs","value":"See Nonsteroidal Antiinflammatory Drugs (NSAIDs)"},{"term":"Nuclear Factor kappa B (NF-kappaB)","value":"A protein transcription factor and intracellular mediator of the inflammatory cascade involved in generation of certain adhesion molecules (ICAM-1, VCAM-1), iNO synthase, COX-2, cytokines (e.g., IL-1beta, IL-2, TNF-alpha, IL-6, IFN-gamma) and chemokines (e.g., IL-8). Other genes which are regulated by NFkappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. Recent findings suggest that NF-kappaB provides a mechanistic link between inflammation and cancer, controlling the ability of preneoplastic and malignant cells to resist apoptosis-based tumor surveillance mechanism and regulating tumor angiogenesis and invasiveness. NF-kappaB activity is closely associated with IkappaB Kinase Complex (IKK), and aberrant or constitutive NF-kappaB activation has been detected in many human malignancies including solid tumors and hematological cancers such as acute myeloid leukemia and chronic myelogenous leukemia. It has also been reported that constitutive activation of the receptor tyrosine kinase Flt3 is responsible for IKK activation. Also, TNF activation results in NF-kappaB activation and plays a role in inflammation-driven tumor progression. In addition, NF-kappaB signaling in microglia is essential for the Abeta-induced neuronal death that causes Alzheimer's disease. Therapeutic inhibitors of the NF-kappaB activation may be a useful option for treating cancer, including breast, lung, colorectal and prostate cancer and acute myeloid leukemia, musculoskeletal and connective tissue disorders  including ankylosing spondylitis and rheumatoid arthritis, respiratory disorders including asthma, neurological disorders including multiple sclerosis (MS), and also psychiatric, cardiovascular, renal, gastrointestinal, dermatological, endocrine, infections, metabolic, hematological and immunological diseases. NF-kappaB activation and plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease, depression and inflammatory bowel disease (IBD), atherosclerosis, asthma, arthritis, cachexia, cancer, diabetes, euthyroid sick syndrome, the common cold, AIDS, sepsis and stroke. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Other genes which are regulated by NF-kappaB include those encoding the IL-2 receptor, the IL-12 p40 subunit and c-Myc. NF-kappaB activation plays a role in inflammation and is an important signaling factor for cytokines that appear to participate in several pathological conditions such as MS, Parkinson's disease and depression. NF-kappaB has been implicated in various aspects of neuroplasticity including long-term potentiation and cellular apoptosis and differentiation. Macrophages of MS patients have been shown to display heightened activation of STAT6, STAT1 and NF-kappaB and a corresponding inflammatory profile that may be responsible for controlling macrophage-mediated demyelination. NF-kappaB activation inhibitors may be effective in preventing demyelination in MS. Moreover, enhanced NF-kappaB activity is involved in the pathology of both forms of IBD, Crohn's disease and ulcerative colitis and studies have demonstrated enhanced processing of the NF-kappaB precursor p105 and degradation of inhibitor of NF-kappaB, IkappaBalpha, by immunoproteasomes isolated from the mucosa of Crohn's disease patients. NF-kappaB has been identified as an important target for therapeutic intervention in IBD since it plays a central role in regulating inflammatory responses in these patients. NF-kappaB activation inhibitors may be effective for suppressing inflammation seen in Th17-mediated diseases such as rheumatoid arthritis, psoriasis and Crohn's disease."},{"term":"Nucleoside","value":"The building block of DNA and RNA which is a purine or pyrimidine base linked glycosidically to ribose or deoxyribose. It lacks the phosphate residues that would make it a nucleotide.  The ribonucleosides are adenosine, guanosine, cytidine and uridine and the deoxyribosides are deoxyadenosine, deoxyguanosine, deoxycytidine and deoxythymidine."},{"term":"Nucleotide","value":"The phosphate ester of a nucleoside that is the basic constituent of DNA and RNA. Other structures (e.g., cAMP, cGMP) and molecules with two or three phosphates are also called nucleotides."}]},{"letter":"O","Terms":[{"term":"Occlusion","value":"Closure or blockage as in the case of a blood vessel.\r\n"},{"term":"Oligonucleotide","value":"See Antisense Oligonucleotide."},{"term":"Oncostatin M","value":"A member of the IL-6 family of cytokines that participates in the induction of inflammation and modulation of the extracellular matrix. It is produced by T cells, macrophages and neutrophils and may be involved in bone formation, cartilage degradation, cholesterol uptake, tumor growth, pain and inflammation. The cytokine has been shown to be upregulated in rheumatoid arthritis and fibrotic diseases. Thus, antagonism of the oncostatin M receptor may be effective in diseases characterized by inflammation and changes in the extracellular matrix."},{"term":"Open-Label Trial","value":"A clinical study in which all participants (i.e., patient and investigator) know the identity of the administered drug."},{"term":"Orphan Drug","value":"A status granted by the FDA to unpatentable medications developed for rare diseases. Rare or orphan diseases are defined affecting fewer than 200,000 people in the US or are associated with a low prevalence of less than 5 per 10,000 in the community. This staus gives the manufacturer a seven-year right to exclusively market the compound. By increasing profitability of these agents, their production is encouraged."},{"term":"Osteoarthritis","value":"A noninflammatory degenerative joint disease which is seen mainly in the elderly and is characterized by degeneration of articular cartilage, hypertrophy of bone and changes in the synovial membrane. Individuals suffering from the disorder experience pain and stiffness especially after prolonged activity."},{"term":"Osteoblast","value":"A type of cell that produces and secretes the proteins which constitute the bone matrix and later controls mineralization of the same. When enclosed by the osseous matrix it produces, an osteoblast becomes an osteocyte."},{"term":"Osteoclast","value":"A large multinucleated cell of monocytic origin that is involved in the resorption of osseous tissue. Also known as an osteophage."},{"term":"Osteoclastogenesis Inhibitory Factor (OCIF)","value":"See Osteoprotegerin\r\n\r\n"},{"term":"Osteophyte","value":"A bony outgrowth or protuberance alsop known as a bone spur that forms along joints and is seen in conditions such as arthritis. They are responsible for limitations in joint motion and can cause pain."},{"term":"Osteoporosis","value":"Osteoporosis is the most common type of metabolic bone disease. It is a skeletal disorder characterized by low bone mass and deterioration of bone microarchitecture which leads to bone fragility and increased susceptibility to fractures (especially of the hip, spine and wrist) caused by relatively low impact. Polymorphisms in the gene (COLIA1) encoding collagen type Ialpha1 (a bone matrix protein) have been linked to reduced bone density and a predisposition for fractures among women. Other genes which may contribute to osteoporosis (i.e., bone remodeling, formation and/or fracture) include genes encoding the vitamin D receptor (VDR), the estrogen receptor alpha (ER-alpha), bone morphogenetic protein 2 (BMP-2), lipoxygenase (Alox15) and the transcription factor Cbfa1. The disease predominately occurs in postmenopausal women and elderly men. Risk factors include early menopause or early surgical removal of the ovaries without compensatory estrogen therapy, small body frame/low body weight, excessive use of tobacco and alcohol, genetic factors, insufficient dietary intake of calcium and vitamin D, insufficient exercise and anorexia. Medications such as glucocorticoids, thyroid hormones, methotrexate and other chemotherapeutic drugs, ciclosporin, heparin, cholestyramine and some anticonvulsants have been identified as risk factors for the disease. Moreover, osteoporosis has been linked to highly active antiretroviral therapy (HAART) in AIDS patients and to antidepressant therapy with selective serotonin reuptake inhibitors (SSRIs) in elderly men and women. Some endocrinologic, rheumatologic, hematologic and gastrointestinal diseases may also be risk factor for osteoporosis."},{"term":"Osteoprotegerin","value":"An endogenous antiosteoclastogenic cytokine also known as osteoclastogenesis inhibitory factor (OCIF) that is a member of the tumor necrosis factor (TNF) receptor superfamily. It is a soluble decoy receptor for the pro-osteoclastogenic cytokine RANKL and it inhibits the differentiation and resorption of osteoclasts. Its is a potential target for the treatment of osteoporosis.\r\n"}]},{"letter":"P","Terms":[{"term":"P-Selectin","value":"A cellular adhesion molecule (CAM) involved in acute inflammation and hemostasis. It is expressed by platelets and endothelium and mediates adhesion. The majority of P-selectin binding lymphocytes are memory cells. P-selectin is stored in intracellular granules and expression can be rapidly upregulated by several mediators such as histamine, thrombin and LTC4. P-selectin binds P-selectin glycoprotein-1 (PSGL-1) which is expressed on most leukocytes and also recognizes sialylated carbohydrate groups related to the Lewis X or Lewis A family."},{"term":"P2X3 Receptor","value":"An ATP-sensitive, ligand-gated ion channel that is a receptor protein expressed on sensory afferent neurons. It is involved in chronic inflammatory diseases and neuropathic pain responses and the afferent pathways controlling urinary bladder volume reflexes. P2X3 antagonists may be effective as a treatment for urinary incontinence and other disorders involving urine storage and voiding (e.g., overactive bladder). In addition, antagonists may be effective in the treatment of chronic inflammatory conditions such as rheumatoid arhritis and neuropathic pain."},{"term":"p38 MAP Kinase","value":"See p38 Mitogen-Activated Protein Kinases (MAPK)\r\n"},{"term":"p38 Mitogen-Activated Protein Kinases (MAPKs)","value":"A class of MAPKs composed of four isoforms: p38 MAPK-alpha (MAPK14), p38 MAPK-beta (MAPK11), p38 MAPK-gamma (MAPK12) and p38 MAPK-delta (MAPK13 or SAPK4) which are activated by a variety of cellular stresses including osmotic shock, inflammatory cytokines, lipopolysaccharides (LPS), ultraviolet light and growth factors. They are activated via MAP3K and MEK by phosphorylation at Thr180 and Tyr182, Activated p38 MAPKs have been shown to phosphorylate and activate mitogen-activated protein kinase-activated protein kinase 2 (MAPKAPK2) and the transcription factors ATF-2, Mac and MEF2. p38 MAPKs may also be involved in mucin secretion and inhibiotrs of this kinase could be potentially effective as a treatment for the airway mucus hypersecretion seen in COPD and other respiratory disorders and may also inhibit lung fibroblast proliferation which contributes to the pathology of COPD."},{"term":"p53","value":"See Tumor Suppressor Protein p53"},{"term":"Palliative","value":"A treatment directed toward the control of symptoms rather than the curing of the disease."},{"term":"Pannus","value":"A vascular tissue developing in a rheumatoid joint at the junction between the articular cartilage, synovium and capsule. It may adhere to the joint surface and extend across it."},{"term":"Paracrine","value":"Refers to hormone signaling where the hormone synthesized in and released from endocrine cells binds to its receptor on nearby cells affecting their function."},{"term":"PDGFRalpha","value":"See Platelet-Derived Growth Factor Receptor alpha (PDGFRalpha)"},{"term":"PDGFRbeta","value":"See Platelet-Derived Growth Factor Receptor beta (PDGFRbeta)\r\n"},{"term":"Pentraxins","value":"A family of acute phase proteins whose circulating levels, especially those of C-reactive protein, have been recognized as a reliable marker for osteoarthritis and rheumatoid arthritis severity and have been postulated to play a role in the inflammatory response. Pentraxin3 (PTX3), a member of this family is produced by chondrocytes from patients with osteoarthritis. PTX3 may function as an innate regulator of inflammation in the arthritic joint."},{"term":"Peripheral Blood Mononuclear Cells (PBMCs)","value":"Lymphocytes and monocytes isolated from peripheral blood by centrifugation."},{"term":"Peroxisome Proliferator-Activated Receptor alpha (PPARalpha)","value":"A nuclear receptor hormone that together with PPARdelta and PPARgamma modulate metabolic and immune functions. It is a member of the NR1C family and the superfamily of nuclear receptor which includes steroid, retinoid, thyroid hormone and vitamin D receptors. The PPARalpha isoform is involved in regulation of lipid homeostasis, cellular differentiation, proliferation and immune response and is activated by many endogenous ligands including 15-deoxy-delta12,14-prostaglandin J2, prostacyclin, several fatty acids and their oxidation products, lysophophatidic acid, 13-HODE, 15-HETE, Paz-PC, azelaoyl-PAF and leukotriene B4. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. Modulators of PPARalpha may be effective in the treatment of type 2 diabetes, lipoprotein disorders, atherosclerosis, hypertension and Alzheimer's-type dementia.\r\n"},{"term":"Peroxisome Proliferator-Activated Receptor gamma (PPARgamma)","value":"A ligand-activated transcription factor, member of the nuclear hormone receptor family, that is predominately expressed in adipose tissue and involved in adipocyte differentiation. Thus, it is important for lipid storage and utilization. Several fatty acids, eicosanoids, prostaglandins and their metabolites activate PPARgamma. Insulin-sensitizing thiazolidinediones have been shown to be PPARgamma agonists. PPARgamma agonists may be effective in the treatment of atherosclerosis and Alzheimer's disease. PPARgamma has also been implicated in tumor repression or formation and is expressed in both normal breast epithelia and breast cancer cells."},{"term":"Peroxisome Proliferator-Activated Receptors (PPARs)","value":"Ligand-activated transcription factors that are members of the nuclear receptor superfamily which also include steroid, retinoid, thyroid hormone and vitamin D receptors. Three PPARs have been identified: PPARalpha, PPARgamma and PPARdelta. They are activated by endogenous fatty acids or fatty acid derivatives. Once activated, they heterodimerize with the retinoid X receptor (RXR) and bind to response elements on DNA resulting in regulation of transcription. PPAR receptors have metabolic and immune functions that influence the development of atherosclerosis and agonists to either of the three subtypes may be effective in the treatment of atherosclerosis."},{"term":"Phalangeal","value":"Relating to a phalanx. See also Phalanx\r\n"},{"term":"Phalanx","value":"A bone in the finger. Each digit has three phalanges except the thumb which has two.\r\n\r\n"},{"term":"Phase 0 Trial","value":"A phase of clinical testing that is also known as exploratory IND in the US and Microdosing in Europe. This stage of drug development is intended to facilitate the transition from animal to human studies. The trials evaluate doses determined in animal studies that are only 1/100th of those expected to be required for therapeutic effect.\r\n"},{"term":"Phase I Trial","value":"The first human study of a new drug, usually conducted in a small number of healthy individuals to evaluate the biological properties of that drug, including pharmacological activity, pharmacokinetics and tolerability (i.e., toxicity). Examination of how the drug should be administered, how often and in what dosage are also assessed."},{"term":"Phase II Trial","value":"A type of study providing preliminary information on the efficacy and safety of a new drug. Phase IIa trials are conducted in a small population of patients, while phase IIb studies incorporate larger patient cohorts and can determine a range a doses to be used in phase III clinical trials."},{"term":"Phase III Trial","value":"A full-scale clinical study conducted in order to determine the efficacy and safety of a new drug prior to seeking marketing approval. These studies usually involve large patient populations randomized to receive a new or standard therapy and/or placebo."},{"term":"Phase IV Trial","value":"A large-scale clinical trial conducted following regulatory approval of a drug. Its purpose is to expand efficacy and safety information. These trials are also referred to as marketing support trials."},{"term":"Phenotype","value":"The observable traits of an organism (e.g., weight, height, hair color) regardless of the genotype. Phenotypic traits are not necessarily genetic and may result from an interaction between the genotype and the environment."},{"term":"Phosphodiesterase 3 (PDE3)","value":"A phosphodiesterase isoenzyme (EC subclass 3.1.4) with high affinity for both cAMP and cGMP. It plays a key role in regulating cAMP content in human airway smooth muscle cells."},{"term":"Phosphodiesterase 4 (PDE4)","value":"A phosphodiesterase (PDE) isoenzyme (EC class 3.1.4) characterized by high affinity for cAMP and poor affinity for cGMP. Four PDE4 isoforms have been identified (A, B, C and D). PDE4 plays a key role in regulating cAMP content in human airway smooth muscle cells. PDE4 isoenzymes are abundant in immunocompetent cells, where an increase in cAMP leads to the inhibition of the synthesis and release of proinflammatory mediators, cytokines and active oxygen species. Thus, PDE4 inhibitors may be effective as a treatment for inflammatory diseases such as rheumatoid arthritis, asthma, COPD, atopic dermatitis and IBD. They may also be active in the management of multiple sclerosis, Alzheimer's disease and osteoporosis."},{"term":"Phosphodiesterases (PDEs)","value":"A family of enzymes (EC subclass 3.1.4) that regulate intracellular cyclic nucleotide levels and includes several distinct isoenzymes (PDE1-11), which differ in primary structure, relative affinity for cyclic AMP versus cyclic GMP, responses to specific effectors and inhibitors, and mechanisms of regulation."},{"term":"Placebo","value":"An inactive compound used in preclinical and clinical trials as a comparison for active compounds."},{"term":"Platelet-Derived Growth Factor Receptor beta (PDGFRbeta)","value":"A membrane receptor tyrosine kinase for the glycoprotein PDGF. The two receptor isoforms (PDGFRalpha and PDGFRbeta) regulate cellular proliferation, differentiation and migration in normal cells and are widely expressed in several malignancies. Extracellular binding of PDGF stimulates the intrinsic tyrosine kinase activity in the cytoplasmic portion of each subunit of the receptor resulting in transphosphorylation of specific tyrosine residues. These phosphotyrosines can then serve as binding sites for intracellular signaling molecules by means of their Src homology 2 domains, thus activating multiple downstream pathways, including phosphatidyl-inositol-3 (PI3)-kinase, phospholipase C (PLC)-gamma, Src kinase, Janus kinase (JAK)/Signal transducers and activators of transcription (STAT) and mitogen activated protein (MAP) kinase pathways. PDGFR inhibitors have been shown to inhibit malignant cell proliferation and survival. Antagonism of this receptor type may also be effective in the treatment of macular degeneration. In GVHD, generated autoantibodies can activate PDGFR signaling which can consequently lead to the development of fibrosis and scleroderma. Thus, PDGFR inhibition may be beneficial in the treatment of GVHD in chronic conditions. Thus, PDGFR inhibition may be beneficial in the treatment of GVHD in chronic conditions. PDGFR mutations have been found to be associated with the development of mastocytosis and contribute to mast cell overproduction, increased release of proinflammatory cytokines and eosinophil infiltration leading to inflammation. Inhibition of PDGFRbeta may therefore be effective in the treatment of systemic mastocytosis."},{"term":"Pleiotropic","value":"Having multiple effects."},{"term":"Polymerase","value":"A general term for any enzyme belonging to the EC class 2, transferases which catalyze polymerization. Prokaryotic DNA polymerases are divided into types I, II and III, while eukaryotic polymerase is subdivided into polymerase alpha, -beta, -gamma, -delta and -epsilon. DNA polymerases are highly accurate, entering the correct complementary base opposite a base on the template chain; there is a low incidence of mismatching. DNA polymerases remove primers after they have served their function, refilling the gaps with nucleotides until all bases are paired. However, DNA polymerase cannot link the last nucleotide added to the 5´ end of the next-to-the-last segment; a single-chain nick remains that is later closed by DNA ligase. RNA polymerase catalyzes RNA transcription (a polymerization reaction). There are three types of eukaryotic RNA polymerase and only one bacterial RNA polymerase."},{"term":"Polymerase Chain Reaction (PCR)","value":"A technique developed in 1983 by K.B. Mullis and F. Faloona which simplifies the production of multiple DNA copies from a sample taking advantage of DNA polymerase, the enzyme which catalyzes DNA replication. During the first cycle of PCR, a DNA double helix containing the nucleotide sequence of interest is unwound by heating to 90ºC. DNA polymerase and the nucleotide triphosphates (adenine, thymine, cytosine and guanine) required for replication are added to the unwound DNA mixture. Artificially synthesized, short (about 20 to 30 nucleosides in length) DNA, complementary to the ends of the unwound template chains, are also added and serve as the primers for the reaction. The mixture is cooled to 60ºC, allowing the artificial primers to wind to the ends of the template chains. Replication then occurs where DNA polymerase assembles complementary copies of the template chains starting from the artificial primers. The resulting reaction mixture now contains twice as many DNA molecules. The second cycle is initiated by heating the reaction mixture again which results in unwinding of the newly synthesized double helices. The mixture is then cooled allowing additional copies of the artificial primer chains to rewind with the ends of the template chains (as in the first cycle). DNA polymerase makes copies of the artificial chains and at the end of this cycle, the number of DNA molecules has doubled again. Each time the heating and cooling cycle is repeated, the number of DNA molecules in the sample doubles and, since cycling time is short, hundreds of billions of DNA copies can be generated in a few hours."},{"term":"Polymerization","value":"The linkage of glucose units into chains in cellulose or starch molecules. Multiple identical or nearly identical subunits called monomers are linked together in a chain to form a polymer. This process underlies the assembly of most biological macromolecules. For example, monosaccharides polymerize into polysaccharides, amino acid monomers into proteins and nucleotide monomers into nucleic acid polymers."},{"term":"Polymorphonuclear Leukocytes","value":"White blood cells with multilobed nuclei and cytoplasmic granules. They include neutrophils (granules stain with neutral dyes), eosinophils (granules stain with eosin) and basophils (granules stain with basic dyes)."},{"term":"Polyp","value":"A general term describing any mass of tissue (hemispheroidal, spheroidal or irregular mound-like) that projects outward from the normal surface level. They may grow from a broad base or slender stalk and may be neoplasms, foci of inflammation, degenerative lesions or malformations."},{"term":"Polyp, Adenomatous","value":"A benign neoplasm derived from glandular epithelium.\r\n"},{"term":"Polyunsaturated Fatty Acids (PUFAs)","value":"Essential long-chain fatty acids containing two or more double bonds that occur throughout animal, plant, algae, fungi and bacteria present in cell membranes, storage oils, glycolipids, phospholipids, sphingolipids and lipoproteins. They are involved in regulating cellular architecture, dynamics, phase transitions and permeability of membranes and control membrane-associated processes (i.e., regulation of ATPase, transport proteins and histocompatibility complexes. They also regulate expression of some genes (e.g., genes encoding for fatty-acid synthase, nitric-oxide synthase, sodium-channel proteins) and are involved in immune responses and cold adaptation. PUFAs are also implicated in pathological conditions such as cardiovascular disease. PUFAs are grouped into two series on the basis of the position of the terminal double bond being 3C or 6C (e.g., 3-series PUFAs: linolenic acid, alpha-linolenic acid; 6-series PUFAs: gamma-linolenic acid [GLA], arachidonic acid [AA], eicosapentaenoic acid [EPA], docosahexaenoic acid [DHA]). See also Arachidonic Acid (AA), Docosahexaenoic acid (DHA) and Eicosapentaenoic Acid (EPA)"},{"term":"Preclinical Studies","value":"Experimental in vitro and/or in vivo testing in animals performed prior to clinical studies to determine the biological activity and safety of an agent."},{"term":"Prevalence","value":"The number of cases of a disease or condition at a given time."},{"term":"Prodrug","value":"A therapeutic substance that is converted its active form following metabolism."},{"term":"Prognosis","value":"An assessment of the likely outcome of the disease judged from general experience of the disease and the age and condition of the individual patient."},{"term":"Programmed Cell Death (PCD)","value":"See Apoptosis"},{"term":"Proliferation","value":"Growth and reproduction of similar cells."},{"term":"Prophylaxis","value":"The prevention of a disease or the process leading to a disease."},{"term":"Prophylaxis, Active","value":"Administration of an antigenic agent to actively stimulate an immune mechanism."},{"term":"Prophylaxis, Passive","value":"Use of antiserum from another individual or animal to provide temporary (7-10 days) protection against a specific infectious or toxic agent."},{"term":"Prostacyclin","value":"An unstable prostaglandin released by mast cells and endothelium that is a potent inhibitor of platelet aggregation and also causes vasodilation and increased vascular permeability."},{"term":"Prostaglandin (PG)","value":"A class of physiologically active substances present in many tissues. They are prostanoic acids with side chains in different degrees of unsaturation and oxidation. PGs result from cyclooxygenase-catalyzed eicosanoid metabolism from arachidonic acid. They can cause vasodilation, vasoconstriction, stimulation of bronchial, intestinal or uterine smooth muscle in addition to antagonizing hormones affecting lipid metabolism. They also contribute to the pain and inflammation in arthritis."},{"term":"Prostanoids","value":"A group of molecules generated from COX-dependent arachidonic metabolism. They include the prostaglandins, prostacyclins and thromboxanes. See also Eicosanoid"},{"term":"Protease","value":"Proteolytic enzymes including both endopeptidases (EC 3.4.21-24 & 3.4.99) and exopeptidases (EC 3.4.11-19), which hydrolyze peptide bonds leading to degradation of a protein (i.e., proteolysis). Proteases are classified into four general types: serine, cysteine, aspartic and matrix metalloproteinases (MMPs)."},{"term":"Proteasomes","value":"Proteolytic complexes that degrade the majority of short-lived cytosolic and nuclear proteins. They are implicated in ATP-dependent ubiquitin protein complex degradation and in antigen processing in antigen presenting cells. Proteasomes are also involved in the regulation of JAK/STAT pathways, IL-2, IL-3 and erythropoietin stimulation. Proteasome inhibitors down-regulate inflammatory mediators such as NFkappaB and may be a potential treatment for stroke and myocardial infarction. Proteasome inhibitors also induce apoptotic cell death, and thus are being studied for the treatment of cancer."},{"term":"Protein Kinase B (PKB)","value":"See Akt\t\r\n"},{"term":"Proteoglycan","value":"A high molecular weight complex of protein and polysaccharide that is a structural component of vertebrate tissues such as bone and cartilage and is also present on cell surfaces. Glycosaminoglycans (GAGs) consistute the polysaccharide units found in proteoglycans."},{"term":"Proteolysis","value":"The degradation of proteins via hydrolysis of the peptide bonds resulting in the formation of smaller polypeptides. The process is catalyzed by proteolytic enzymes (e.g., protease, peptidase), acids or bases. See also Protease\r\n"},{"term":"Psoriasis","value":"A common inherited chronic, squamous dermatosis that is characterized by exacerbations and remissions. It is a mutlifactorial autoimmune disease with genetic, immunologic and infectious factors playing a role in its etiology The disease has a polygenic inheritance pattern and presents with eruptions of rounded, circumscribed, erythematous, dry scaly patches. These patches are covered by grayish white or silvery white, umbilicated and lamellar scales. Psoriasis commonly affects extensor surfaces, nails, scalp, genitalia and lumbosacral region. Central clearing and coalescence of the lesions result in a wide variety of clinical configurations such as annular or circinate, discoid or nummular, figurate and gyrate arrangements. Five types of psoriasis exist: vulgaris (plaque), guttate, inverse, pustular and erythrodermic."},{"term":"Psoriatic Arthritis","value":"A progressive and potentially disabling form of arthritis that is characterized by dry, scaly, silver patches of skin (as seen in psoriasis) combined with joint pain and destructive changes in the feet, hands, knees and spine resembling rheumatoid arthritis (RA). Tendon pain and nail deformities are also common and patients suffering from the disease are negative for rheumatoid factor (RF) but positive for HLA-B27 antigen particularly when the spine is involved. There are five distinct forms of psoriatic arthritis: Symmetric (an RA-like form that affects multiple symmetric pairs of joints); Oligoarticular (a milder form affecting fewer joints in an asymmetric pattern); Distal interphalangeal (DIP) (primarily involves the distal joints of the fingers and toes and nails may be affected); Spondylitis (a form that mainly affects the spinal column from the neck to lower back); arthritis mutilans (a rare but severe and destructive form affecting the small joints of the hands, feet and other joints)."},{"term":"Purine","value":"A colorless crystalline nitrogen-containing organic base that is a heterocyclic compound with a fused pyrimidine/imidazole ring occurring in nucleic acids. Adenine is a purine base that pairs with thymine in DNA and with uracil in RNA and guanine is another that pairs with cytosine in DNA and RNA.\r\n"},{"term":"Purpura","value":"A small hemorrhage (up to about 1 cm in diameter) occurring in the skin, a mucous membrane or serosal surface, which can be caused by blood disorders, vascular abnormalities and trauma. Purpuric lesions may be or may not be associated with inflammation."},{"term":"Pyretic","value":"Febrile, pertaining to fever.\r\n"}]},{"letter":"Q","Terms":[]},{"letter":"R","Terms":[{"term":"RANKL (Receptor activator of NFkappaB Ligand)","value":"A member of the TNF family of cytokines that is produced by cells of osteoblastic lineage and is a crucial modulator of bone remodeling and required for the development and activation of osteoclasts. It is a target for the treatment of osteolytic bone disorders such as osteoporosis, rheumatoid arthritis and cancer-related bone disease like follicular lymphoma with bone involvement where aberrant expression of RANKL has been observed in malignant cells.\r\n"},{"term":"RANTES","value":"A cytokine that is a selective chemoattractant for memory T cells and monocytes. It is involved in the late-phase inflammatory cascade following initial allergen-IgE binding (early-phase) on mast cells and has been implicated in the pathogenesis of rheumatoid arthritis and asthma."},{"term":"Recombinant","value":"Describes a cell or an individual with a new combination of genes not found together in either parent; it usually refers to linked genes. Recombinant DNA is spliced DNA formed from 2 or more different sources that have been cleaved by restriction enzymes and joined by ligases."},{"term":"Recombinant Vaccine","value":"Use of a recombinant antigen preparation in combination with an adjuvant, which may be administered prophylactically or therapeutically to induce viral neutralizing proteins and other protective immune responses."},{"term":"Refractory","value":"A disease or infection that is resistant to treatment.\r\n"},{"term":"Reporter Gene","value":"A gene that encodes an easily assayable product. It is coupled to the upstream sequence of another gene and transfected into cells. It is used experimentally to observe which factors activate response elements in the upstream region of the gene of interest."},{"term":"Resorption","value":"The act of losing a substance via lysis or physiologic or pathologic processes. Bone resorption is the removal of osseus tissue."},{"term":"Retrovirus","value":"A virus that contains RNA as its genetic material. This RNA is translated into DNA which inserts into the DNA of a viral-infected cell. Retroviruses are responsible for many diseases including some cancers and AIDS."},{"term":"Rheumatoid Arthritis","value":"An often chronic systemic disease which is the most common type of inflammatory arthritis. It causes inflammatory changes in the synovium of the small joints of the hands, wrists and feet resulting in pain, stiffness, swelling and loss of function. The disease can also affect other parts of the body."},{"term":"Rheumatoid Factor (RF)","value":"A complex of IgG and anti-IgG formed in joints in rheumatoid arthritis. Serum RFs are IgM antibodies directed against IgG and are found in 80% of adult rheumatoid arthritis patients. Blood tests measuring serum RF aid in the diagnosis of rheumatoid arthritis."},{"term":"Rheumatoid Nodule","value":"A growth seen in some cases of rheumatoid arthritis that is a subcutaneous site of chronic irritation (e.g., extensor surface of the forearm). They occur particularly over bony prominences. The nodule is a nonspecific necrobiotic granuloma which consists of a necrotic core surrounded by palisaded fibroblasts. The term also refers to a small round, mostly subcutaneous nodule made up of aschoff bodies that is seen in rheumatic fever."},{"term":"Ribonucleases (RNAases)","value":"A family of nucleases (EC 2.7 and EC 3.1) that catalyze the hydrolysis of internucleotide phosphodiester bonds in RNA into smaller components thus degrading it. They can be divided into endoribonucleases and exoribonucleases which include further sub-classes (i.e., EC 2.7 phosphorolytic enzymes and EC 3.1 hydrolytic enzymes).\r\n"},{"term":"Ribonucleic Acid (RNA)","value":"A macromolecule consisting of ribonucleoside residues connected by phosphate from the 3'-hydroxyl of one to the 5'-hydroxyl group of the next nucleotide. It is found in all cells in both the nuclei and cytoplasm and in viruses. RNA is divided into fractions depending on location, form or function. Messenger RNA (mRNA) reflects the exact nucleoside sequence of genetically active DNA. mRNA carries the message of the DNA coded within its sequence to the cytoplasmic areas where protein is assembled. Ribosomal RNA (rRNA) is encoded in DNA regions forming parts of the nucleolus; it is the RNA of ribosomes or polyribosomes. Transfer RNA (tRNA) refers to short-chained RNA molecules of at least 20 types (one for each of the 20 amino acids in protein synthesis). tRNA combines with amino acids during protein synthesis and interacts with mRNA codons, thus providing a link between the information coded into nucleic acids and the amino acid sequence of proteins. Small nuclear RNAs (snRNAs) are small (about 90-300 nucleotides) chains in the nucleus that are involved in processing of mRNA and rRNA. Small cytoplasmic RNA (scRNA) functions primarily in the cytoplasm and forms the signal recognition particle. scRNA participates in the process of attaching ribosomes to the endoplasmic reticulum during synthesis of membrane proteins or proteins later secreted by the cell."},{"term":"Ribonucleotide","value":"A nucleotide in which a purine or pyrimidine base is linked to a ribose molecule. It is a component of RNA. See also Nucleotide \r\n"},{"term":"Ribosome","value":"A small, sphere-shaped, cytoplasmic structures that is composed of RNA and protein and is the site of protein synthesis. Ribosomes are free in the cytoplasm and often attached to the membrane of the endoplasmic reticulum. Ribosomes exist in both eukaryotic and prokaryotic cells. Bacterial ribosomes are composed of two subunits: the smaller 30S subunit containing 21 proteins and a single 16S RNA molecule, and the larger 50S subunit containing 32 proteins and two RNA molecules (23S and 5S). 16S serves as a scaffold defining the positions of the ribosomal protein with the 3' end containing the anti-Shine-Dalgarno sequence. This sequence binds upstream to the AUG start codon on the mRNA. 16S interacts with 23S and facilitates binding of 50S and 30S. Many antibiotic agents bind to the 30S and 16S subunits of the bacterial ribosome. This action inhibits translocation of peptidyl-tRNA from the A-site to the P-site and also causes misreading of mRNA, interrupting bacterial protein synthesis necessary for survival and reproduction."},{"term":"Ribozyme","value":"A nonprotein biological catalyst consisting of specific domains of ribonucleic acid (RNA) that can recognize, bind and digest nucleic acids thus playing a key role in intron splicing events. Several cleave precursors of tRNA resulting in functional tRNA while others act on rRNA. Ribozymes induce conformational changes which involve bringing the hydroxyl groups of RNA molecules into positions where their reactivity leads to hydrolysis and breakage of RNA chains. Ribozymes have been investigated as a potential therapeutic approach for diseases such as HBV infection, since their enzymatic activity can be used to block pathogenic protein synthesis. The utility of ribozymes as biologic and therapeutic agents has been limited due to their susceptibility to chemical and enzymatic degradation and to restricted target site specificity."},{"term":"RNA","value":"See Ribonucleic Acid (RNA)"},{"term":"RNA Interference (RNAi)","value":"RNA interference (RNAi) is an endogenous process of gene silencing that is due to interruption in the cell's translation. This interruption is triggered by the cell's own mRNA in response to the presence of and consequent destruction of matching double-stranded RNA sequences. Gene expression is inhibited in a sequence-dependent manner. The process endogenously protects the cell against viruses and other insults. The process has also emerged as a powerful gene silencing technique that is useful in research and development of therapeutics. See also Small interfering RNA (siRNA)"},{"term":"RNAse","value":"See Ribonucleases (RNAases)\r\n"}]},{"letter":"S","Terms":[{"term":"Sarcopenia","value":"Age-related loss of skeletal muscle\r\n"},{"term":"Sepsis","value":"Systemic inflammatory response syndrome (SIRS) accompanied by a confirmed infectious process. See also Sepsis, Severe and Septic Shock and Systemic inflammatory response syndrome (SIRS)"},{"term":"Sepsis, Severe","value":"A stage in the continuum of clinical response to infection defined as sepsis associated with organ dysfunction; sepsis associated with hypotension; or sepsis associated with hypoperfusion abnormalities. See also Sepsis and Sepsis, Severe and Systemic Inflammatory Response Syndrome (SIRS)"},{"term":"Septic Shock","value":"A condition of clinical shock caused by endotoxin in the blood and characterized by hypoperfusion, multiple organ failure and persistent hypotension in a septic patient. See also Sepsis and Sepsis, Severe"},{"term":"Single-Blind","value":"A research testing parameter in which patients do not know which of several treatments they are receiving, thus preventing personal bias from influencing their reactions and study results."},{"term":"Single-Nucleotide Polymorphism (SNP)","value":"Single-nucleotide polymorphisms are the most common type of genetic variation. Each SNP represents a difference in a single nucleotide (e.g., a SNP may replace the nucleotide cytosine (C) with the nucleotide thymine [T]). SNPs occur approximately once in every 300 nucleotides. They are frequently found in the DNA between genes. SNPs can be used as biomarkers for diseases and may predict response to drugs and environmental factors (i.e., toxins).\r\n"},{"term":"siRNA","value":"See Small interfering RNA (siRNA)\r\n\r\n"},{"term":"Sjogren's Syndrome","value":"A chronic, systemic inflammatory disorder of unknown cause, characterized by dryness of the mouth, eyes and other mucous membranes and progressive destruction of the exocrine glands (sweat glands, lacrimal glands, salivary glands). It is often associated with rheumatic disorders (e.g., rheumatoid arthritis, scleroderma, SLE) and the lungs, kidneys, peripheral nerves, blood vessels and thyroid may also be affected. Sjogren's syndrome mainly affects females in their thirties to forties."},{"term":"SNP","value":"See Single-Nucleotide Polymorphism (SNP)\r\n"},{"term":"Sphingosine Kinase","value":"Sphingosine kinase (SphK) is a key enzyme in the sphingolipid metabolic pathway responsible for phosphorylating sphingosine into sphingosine-1-phosphate (S1P). SphK/S1P play a critical role in angiogenesis, inflammation and various pathologic conditions such as rheumatoid arthrtis, atherosclerosis, vascular inflammatory disease, cancer, allergic diseases, inflammatory bowel disease among others. See also Sphingosine kinase 1."},{"term":"Sphingosine kinase 1","value":"Sphingosine kinase 1 is an oncogenic sphingolipid-metabolizing enzyme that catalyzes the formation of sphingosine-1-phosphate (S1P), a lipid messenger with intracellular and extracellular functions. S1P can regulate proliferation and survival and has been established as a mitogenic factor. Sphingosine kinase 1 inhibitors block S1P production, leading to a decrease in proliferation and induction of apoptosis in cancer cells. Importantly, there are data showing that sphingosine kinase 1 and sphingosine kinase 2 have opposing roles in the regulation of ceramide biosynthesis and opposing effects on cancer cells (activation of sphingosine kinase 2 is proapoptotic and antiproliferative), stressing that the development of specific sphingosine kinase 1 inhibitors is critical. see also Sphingosine Kinase"},{"term":"Spleen Tyrosine Kinase (Syk)","value":"A non-receptor cytoplasmic tyrosine kinase that is a member of the Syk family of tyrosine kinases. Syk is predominantly expressed in hematopoietic tissues but can also be found in other tissue types. Syk transmits signals from the B cells receptors in addition to signaling from CD74, Fc Receptor and integrins. It is also involved in T-cell activation and release of proinflammatory cytokines. Exaggerrated release of these cytokines can result in autoimmune responses and in certain cancers such as those seen in GVHD and non-Hodgkin's lymphoma, respectively. "},{"term":"Spondylitis","value":"Inflammation of the vertebrae. See also Spondylitis, Ankylosing"},{"term":"Spondylitis, Ankylosing","value":"A systemic rheumatic disorder characterized by inflammation of the axial skeleton and large peripheral joints. The disease also known as Marie-Strümpell disease, is classified together with Reiter's syndrome (venereal and dysenteric), psoriasis, reactive arthritis, ulcerative colitis and Crohn's disease. It resembles rheumatoid arthrits but is seronegative for rheumatoid factor (RF)."},{"term":"Statins","value":"Statins are a group of compounds also known as HMG-CoA (3-Hydroxy-3-methylglutaryl coenzyme A) reductase inhibitors that are used clinically to reduce serum cholesterol levels, thereby lowering the risk of heart attack. The statins are a class of drugs that lower cholesterol levels in people with or at risk of cardiovascular disease by inhibiting the HMG-CoA reductase, the rate-limiting enzyme of the mevalonate pathway of cholesterol synthesis. Inhibition of this enzyme in the liver results in a decrease cholesterol synthesis as well as an increase in the synthesis of low-density lipoprotein (LDL) receptors. This increase in receptors augments the clearance of LDL from the bloodstream. HMG-CoA reductase inhibitors are widely used in the treatment of hypercholesterolemia, and their use has been associated with reductions in cardiovascular events and improved endothelial function. Statins also display multiple pleiotropic effects and due to their confirmed favorable safety profile, they may be effective in completely unrelated indications. For example, independently of cholesterol levels, statins are able to improve the bioavailability of nitric oxide (NO) by increasing endothelial NO synthase (eNOS) expression, primarily by stabilization of eNOS mRNA and also by acutely increasing eNOS phosphorylation. They may therefore be effective in the treatment of erectile dysfunction. Other pleiotropic effects of statins include antiinflammatory activity and effects on cell growth, proliferation and apoptosis and they are currently under investigation as chemopreventive agents. Preliminary evidence suggests that statins may also be effective in the treatment of osteoporosis, rheumatoid arthritis, COPD, multiple sclerosis, systemic sclerosis, sepsis and diabetes and in the prevention of stroke, angina, heart failure and Parkinson's disease among other indications. "},{"term":"Steroids","value":"A large family of compounds derived from cholesterol which are structurally similar in that they contain the tetracyclic cyclopenta[a]phenanthrene skeleton. Examples include plant and animal hormones, body constituents and drugs."},{"term":"Stress-Activated Protein Kinase (SAPK)","value":"See C-Jun N-Terminal Kinase (JNK)"},{"term":"Synovial Fluid","value":"A clear fluid composed of mucin, albumin, fat, epithelium and leukocytes which is thixotropic and serves as a lubricant in joints, tendons, sheaths or bursa. It also provides nutrients to avascular articular cartilage."},{"term":"Synovial Membrane (Synovium)","value":"The inner layer of the articular capsule of a synovial joint. It is composed of loose connective tissue and secretes the synovial fluid."},{"term":"Synovitis","value":"Inflammation of the synovium."},{"term":"Systemic Inflammatory Response Syndrome (SIRS)","value":"A pattern of physiological variables including leukocytosis or severe leukopenia, hyperthermia or hypothermia, tachycardia and tachypneahas, that are seen in critically ill patients in response to a range of insults such as trauma, burns, pancreatitis and infection. These inflammatory responses have been collectively termed the SIRS. The term sepsis is reserved for SIRS when infection is suspected or proven. See also Sepsis and Sepsis, Severe"},{"term":"Systemic Lupus Erythematosus (SLE)","value":"A chronic inflammatory connective tissue disorder of unknown cause that resembles rheumatoid arthritis and can involve joints, kidneys, serous surfaces and vessel walls. It is a multisystemic autoimmune disease characterized by immune tolerance to self. It occurs predominantly in young women but also in children. Symptoms can include vascular headaches, epilepsy or psychoses, organ dysfunction and articular manifestations (intermittent arthralgias to acute polyarthritis)."}]},{"letter":"T","Terms":[{"term":"T Cell","value":"One of two major classes of lymphocytes that develop in the thymus. T cell lineage markers are the expression of two T cell antigen receptors (TCR-1gammadelta and TCR-2alphabeta). TCR-2+ cells are further classified into two nonoverlapping populations that express the CD4 marker and help or induce immune responses (Th cells) or carry the CD8 marker and are predominately cytotoxic (CTLs). In general, CD4+ and CD8+ T cells recognize specific antigens in association with MHC class II and I molecules, respectively. CD4+ T cells can be further divided into Th0, Th1, Th2 and Th3 cells based on their cytokine production profile."},{"term":"T Cell Antigen Receptor (TCR)","value":"Cell surface receptor on T cells made up of a disulfide-bridged heterodimer, which recognizes processed antigen associated with an MHC molecule. Several polypeptides that form the CD3 complex associate to the TCR and are involved in TCR expression and signal transduction. Four different gene loci (alpha, beta, gamma and delta) encode the antigen-binding part of the TCR heterodimer and define the two types of TCR: TCR-2alphabeta and TCR-1gammadelta. Only one single type of TCR is expressed on a given T cell. TCR vaccines are under development for the treatment of rheumatoid arthritis."},{"term":"Th17 Cells","value":"T helper 17 cells (Th17) are a subset of T helper cells that are developmentally distinct from Th1 and Th2 cells. Th17 cells produce cytokines such as interleukin-17 (IL-17), IL-21 and IL-22. Differentiation of this subset appears to be regulated by transforming growth factor beta (TGF-beta), IL-6, IL-21, IL-23 and possibly IL-1beta. An excessive number of Th17 cells may be involved in the pathogenesis of autoimmune diseases (e.g., multiple sclerosis, psoriatic arthritis, rheumatoid arthritis, psoriasis, ankylosing spondylitis, inflammatory bowel disease) where they play a pivotal role in the inflammation and tissue injury characterizing these conditions. Th17 cells also protect against microbial infection at epithelial/mucosal barriers. Deficiencies in Th17 cells result in susceptibility to opportunistic infections."},{"term":"Thrombosis, Arterial","value":"The formation of unwanted blood clots (i.e., thrombi) in arteries leading to partial and complete blockage of that artery. It is very common in individuals suffering from artherosclerosis. Blood clot developing in the coronary artery can lead to myocardial infarction while blood clot occurring in the brain can result in cerebrovascular injury.\r\n"},{"term":"Thrombosis, Deep Vein","value":"Formation of blood clots (i.e., thrombi) in any of the deep veins of the body (e.g., leg, pelvis, major-extremity veins). A complication is development of a pulmonary embolism.\r\n"},{"term":"Thrombosis, Venous","value":"The formation of unwanted blood clots (i.e., thrombi) within veins typically in the thigh or leg regions. Clots can dislodge and migrate towards the lungs, causing pulmonary embolism. \r\n"},{"term":"Thymidylate Synthase","value":"An enzyme (EC 2.1.1.45) of the transferase class involved in folate metabolism that catalyzes the reaction:  5,10-methylenetetrahydrofolate + dUMP <=> dihydrofolate + dTMP in the synthesis of thymidine triphosphate. Inhibition of this enzyme (e.g.,  5-fluorouracil) reduces cell proliferation and may be effective in the treatment of cancer and rheumatoid arthritis."},{"term":"Tie-2 Receptor","value":"Tie-2 (also known as the angiopoietin-1 receptor) is a transmembrane receptor for angiopoietins 1 and 2. Activation of the receptor via ligand binding appears to regulate endothelial cell proliferation and differentiation during blood vessel formation. Ang-2 expression has been shown to function as a key regulator of blood vessel remodeling and tumor angiogenesis. Antagonism of Tie-2 could be effective in treating various cancers.\r\n"},{"term":"TNF-alpha Converting Enzyme (TACE)","value":"A zinc containing metalloprotease and unique member of the adamalysin family that cleaves membrane-bound TNF-alpha. TACE has been selected as a target to block the production of the proinflammatory cytokine in a variety of pathological conditions including rheumatoid arthritis, inflammatory bowel disease, multiple sclerosis and congestive heart failure."},{"term":"Tolerance","value":"The ability to endure unusually large doses of a drug or toxin. An acquired drug tolerance is a decreasing response to repeated constant doses of a drug or the need for increasing doses to maintain a constant response.\r\n"},{"term":"Toll-Like Receptors (TLRs)","value":"A class of single membrane-spanning, non-catalytic receptors that are a type of pattern recognition receptor (PRR). They are the key recognition structures of the innate immune system that recognize molecules shared by pathogens but distinct from host molecules. When activated, they initiate the production of inflammatory cytokines, chemokines, tissue degrading enzymes and type I interferons (IFNs). TLR signaling is also involved in activation of the adaptive immune system via upregulation of costimulatory molecules of antigen presenting cells (APCs). TLRs therefore can link innate and acquired immune responses. TLR signaling is thought to be involved in the pathogenesis of rheumatoid arthritis. Signaling via TLR7 has been shown to markedly induced IFN-alpha which enhances Th1-mediated cellular antiviral and antitumor immunity. TLR7 agonism has been shown to be effective in the treatment of actinic keratosis. TLR3 has been shown to be expressed in the brain with significantly increased levels observed in the brains of patients with Alzheimer's disease (AD). TLR4 is the main receptor for bacterial endotoxin and is a potential target for the treatment of sepsis. It has also been identified as a potential risk factor for asthma.TLR9 agonists have been developed that enhance anthrax vaccines."},{"term":"Topoisomerase II","value":"An enzyme (EC 5.99.1.3) that plays a critical role in maintaining the proper topology and physical integrity of DNA. It makes transient double-stranded breaks and allows the passage of a second DNA duplex across the break. DNA topoisomerase II is usually ATP-dependent and the  alpha isoform has been found to have preference for positive DNA supercoils. Since it participates in the processes of DNA transcription, chromosome disentanglement, recombination and repair, targeting DNA topoisomerase II has become a valid approach for design of anticancer therapeutics. Additionally, mounting interest has been shown in the chemical reaction performed by topoisomerase, which is able to trigger movement of DNA segments several orders of magnitude larger than the size of the protein. Further investigation of this class of enzymes would provide insight into the nature of triggering large-scale mechanical motions induced by biomolecular motors. DNA topoisomerase II antagonism may be a useful therapeutic approach to treat cancer, including breast, colorectal, lung, prostate and head and neck cancer, melanoma and hematological cancer including acute myeloid leukemia. Inhibition of topoisomerase II may be an effective therapeutic option for the treatment of autoimmune diseases such a rheumatoid arthritis and multiple sclerosis (MS). Studies have shown that inhibition of topoisomerase II results in has a cytotoxic effects on both proliferating and nonproliferating cells, suggesting lack of cell cycle phase specificity. Moreover, inhibition of the enzyme has been shown to inhibit B-cell-, T-cell-, and macrophage proliferation and impair antigen presentation, as well as the secretion of proinflammatory cytokines IFN-gamma, TNF-alpha and IL-2. In MS, topoisomerase II inhibition and thus immunosuppression may slow the progression of the disease or the frequency of relapses."},{"term":"Topoisomerases","value":"Enzymes (EC class 5) that relieve supercoils in front of the replication fork by introducing breaks, allowing the DNA to rotate around the breaks after which the DNA is resealed. There are two types of DNA topoisomerase: DNA topoisomerase I (EC 5.99.1.2), which introduces a break in one of the two DNA chains to remove a supercoil, and DNA topoisomerase II (EC 5.99.1.3), which introduces breaks in both chains. See also Topisomerase II"},{"term":"Transcription","value":"The process by which genes are copied into RNA, resulting in three major RNA types that interact in protein synthesis: messenger RNA (mRNA), ribosomal RNA (rRNA) and transfer RNA (tRNA). See also Ribonucleic Acid (RNA)"},{"term":"Transcription Factors","value":"Endogenous substances (usually proteins) that bind to the promoter regions of genes and regulate the start, stimulation or termination of the genetic transcription process. Examples include NFkappaB, nuclear factor of activated T cells (NF-AT), activator protein-1 (AP-1), CREB and signal transduction-activated transcription fators (STAT)."},{"term":"Transforming Growth Factor alpha (TGF-alpha)","value":"A 50 amino acid polypeptide originally isolated from viral transformed rodent cells and later from a variety of tissues including epithelium and maternal decidua. It is closely related to epidermal growth factor (EGF). It contains an EGF-like domain and binds to the EGF receptor. It stimulates growth of microvascular endothelial cells, is angiogenic and acts synergistically with TGF-beta to induce phenotypic transformation. Its true physiological role is unknown. See also Growth Factors\r\n"},{"term":"Transforming Growth Factor-beta (TGF-beta)","value":"Members of a large family of pleiotropic homodimer cytokines which includes the TGF-beta1, TGF-beta2 and TGF-beta3 isoforms. They are secreted by many different cell types including B and T cells, macrophages, platelets, neurons and glial cells and signaling is mediated via a high affinity transmembrane receptor complex consisting of TGF-beta type I receptor activin-like kinase 5 (ALK5) and TGF-beta type II receptor (TbetaRII) serine/threonine kinase receptor subunits. In addition to activities such as suppression of  immune responses (via downregulation of antigen presenting cells [APCs] and inhibition of B and T cell proliferation), enhancement of extracellular matrix protein production, and mediation of cell growth, differentiation and embryonic development, TGF-betas also act synergistically with neurotrophins to exert neuroprotective effects. In AD, TGF-beta levels are increased in human brain tissue although brain TbetaRII expression and serum TGF-beta levels are reduced and evidence suggests that TGF-betas have both beneficial and detrimental effects in this disease. See also Growth Factors"},{"term":"Transforming Growth Factors (TGFs)","value":"Proteins secreted by transformed cells that can stimulate growth of normal cells. The transforming growth factor family includes many of the bone morphogenetic proteins. See Transforming Growth Factor alpha (TGF-alpha), Transforming Growth Factor beta (TGF-beta) and Transforming Growth Factor beta1 (TGF-beta1)\r\n"},{"term":"Transgenic","value":"Refers to an organism in which gene(s) or DNA from another organism were incorporated via injection into the nucleus of the ovum. The resulting transgenic animal expresses the protein(s) that the new gene(s) encodes."},{"term":"Translation","value":"Protein synthesis resulting from the interaction of mRNA, rRNA and tRNA transcribed in the nucleus. The genetic code or sequence of nucleotides in mRNA is translated into a sequence of amino acids during polypeptide assembly. During translation, ribosomes read along the mRNA molecule, gradually assembling a corresponding amino acid sequence. Nucleotides are read three at a time as codons."},{"term":"Transplant Rejection","value":"Transplant rejection is the result of a cascade of host immune responses evoked when allograft tissue is transplanted into a recipient. Rejection is ameliorated with optimum matching of MHC antigens and ABO blood groups between host and donor and with immunosuppressants. It is also referred to as graft rejection, organ rejection and tissue rejection. There are three types of rejection. Hhyperacute rejection occurs immediately after transplantation and is due to unmatched antigens. Acute rejection occurs during the first week after transplantation until 3 months after transplantation. Chronic rejection occurs over many years and is due to the host's constant immune response directed against the new organ which resulting damage to the transplanted tissue or organ.\r\n\r\n"},{"term":"Tuberculosis","value":"A highly contagious infection caused by the bacterium, Mycobacterium tuberculosis. Tiny lumps or tubercles can be an indication of infection. It is transmitted by an aerosol of organisms suspended in tiny droplets that are inhaled. When it causes scarring of the lungs, tuberculosis may constitute a risk factor for lung cancer."},{"term":"Tumor Necrosis Factor (TNF)","value":"A group of cytokines that includes TNF-alpha, released by activated macrophages and lymphocytes, and TNF-beta, released from cytotoxic T lymphocytes (CTLs). The TNF family of receptors are important mediators of cellular immune responses including proliferation, differentiation, apoptosis and cytokine production."},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 13B (TNFLSF13B)","value":"See B Cell Activating Factor (BAFF)"},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 5 (TNFSF5, CD40L)","value":"See CD40 ligand (CD40L; CD154)"},{"term":"Tumor Necrosis Factor Ligand Superfamily Member 6 (FASLG; FAS ligand; FasL)","value":"A membrane protein that belongs to the tumor necrosis factor family. It is a ligand of TNFRSF6 (Fas) a member of the TNF receptor family and it is involved in the induction of apoptosis. Fas signaling also appears to regulate endothelial function and blood pressure through modulating eNOS expression in the Akt signal-dependent manner. Moreover, upregulation of Fas-L signaling is observed after a head injury which leads to neuronal cell death.\r\n"},{"term":"Tumor Necrosis Factor Receptor Type 6 (FASL Receptor; Fas)","value":"A cytokine receptor that binds the TNFSF6/FASL ligand and is involved in the induction of cell death through caspase cascade activation.\r\n"},{"term":"Tumor Necrosis Factor-alpha (TNF-alpha)","value":"TNF-alpha is a proinflammatory cytokine (also known as cachectin) and member of the TNF family of cytokines that is released by activated macrophages and lymphocytes. It acts via receptors belonging to the TNF family of receptors, among which TNF receptor 1 and 2 (TNFR-1, TNFR-2) trigger several signal transduction pathways, resulting in the activation of transcription factors such as NF-kappaB and cFos/cJun. TNFR-1 (also known as CD120a; p55/60) is expressed in most tissues and is fully activated by both the membrane-bound and soluble trimeric forms of TNF. TNFR-2 (also known as CD120b; p75/80), however, is found only in cells of the immune system and is activated by the membrane-bound form of the TNF homotrimer. Activated factors induce the transcription of antiapoptotic, proliferative, immunomodulatory and inflammatory genes. NF-kappaB is the major survival factor in preventing TNF-alpha-induced apoptosis and inhibition of this transcription factor may improve the efficacy of apoptosis-inducing cancer therapies; TNF-alpha-targeted therapies are also being tested in the regional treatment of locally advanced soft tissue sarcomas and metastatic melanomas. In addition, TNF-alpha-induced insulin resistance is believed to be a major contributor to the development of type 2 diabetes in obesity and elevated brain levels of TNF-alpha have been observed in Alzheimer's Disease (AD)  and ischemic stroke patients. TNF-alpha is also a crucial cytokine in the establishment and maintenance of inflammation in multiple autoimmune diseases. Studies have reported elevated TNF levels at the site of active MS lesions in postmortem brain samples from patients with MS and CSF and serum TNF levels in individuals with MS are elevated compared to unaffected individuals with TNF levels correlating to the severity of the lesions. In addition, peripheral blood mononuclear cells from MS patients just prior to symptom exacerbation display increased TNF secretion after stimulation as compared to cells from the same patients during remission and inhibition of the TNF-alpha signaling pathway (e.g., TNF-alpha blockers, blockers of  p38, JNK and/or ERK kinases, antagonists of transcription factor NF-kappaB activation) is a viable therapeutic strategy for the treatment of Crohn's disease, psoriasis, psoriatic arthritis, uveitis, sarcoidosis, Behcet's syndrome, graft versus host disease and ankylosing spondylitis."},{"term":"Tumor Suppressor Protein p53","value":"A transcription factor that modulates stress responses and which, upon activativation, precedes apoptosis in many cell types. Upregulation of p53 has been reported to be a feature of neurodegenerative disorders including Alzheimer's disease, and p53 inhibitors have been found to protect neurons in experimental models of neurodegeneration. Moreover, activation of p53 may be effective in inducing apoptosis in tumors. In almost all cases of actinic keratosis, the p53 gene is mutated resulting in a decrease in the tumor-suppressing action of the protein. Mutations in the p53 are also associated with serval types of cancer including melanoma and thyroid cancer."}]},{"letter":"U","Terms":[{"term":"Ulcer","value":"A local lesion on the skin or the mucosa of an organ or tissue. It is due to the sloughing of inflammatory necrotic tissue. See also Ulcer, Gastric; Ulcer, Peptic; and Ulcer, Decubitus"},{"term":"Ulcer, Decubitus","value":"A chronic ulcer that appears in pressure areas in debilitated or immobilized patients. It occurs due to a reduction in circulation from enhanced pressure on tissue."},{"term":"Ulcer, Gastric","value":"A lesion in the mucosal lining of the stomach that results from gastric inflammation. It can be caused by use of alcohol, aspirin or NSAIDs. Symptoms include recurrent abdominal pains (which are alleviated with antacids), nausea, vomiting, weight loss and fatigue. Complications include GI bleeding, obstruction, perforation and ulcer penetration into surrounding tissues."},{"term":"Ulcer, Peptic","value":"An ulcer in the wall of the stomach or duodenum resulting from the digestive action of gastric juice on the mucous membrane."},{"term":"Upstream","value":"The nucleotide sequences in DNA or RNA that precede the codons specifying the mRNA for transcription or the protein coding sequences for translation. It is also used to describe events that occur early on within sequential reactions. See also Downstream"}]},{"letter":"V","Terms":[{"term":"Vascular Endothelial Growth Factor (VEGF)","value":"A major growth factor protein secreted by many cell types, the expression of which is regulated by a number of growth factors and cytokines. VEGF is a potent angiogenic factor that stimulates capillary formation in vivo and induces mitogenesis in endothelial cells. It is involved in cardiac neovascularization. The expression of VEGF and of its receptor, KDR, are decreased in diabetic myocardium and plasma, which could contribute to the impaired coronary collateral vessel formation in diabetes. Because VEGF markedly enhances peripheral tissue vascularity, VEGF gene therapy has been proposed to be a potential treatment of erectile dysfunction. VEGF also plays a key role in the angiogenesis that occurs in tumor growth, psoriasis, diabetic retinopathy and rheumatoid arthritis. Also known as Vascular Permeability Factor (VPF)."},{"term":"Vasculitis","value":"Inflammation of the blood vessels.\r\n"},{"term":"Vector","value":"An organism that carries an infectious microorganism (e.g., a virus or parasite) from one host to another, generally without becoming infected itself. Alternatively, a virus or a small piece of DNA (i.e., plasmid) that carries a modified or foreign gene. In gene therapy, the vector delivers the desired gene to a target cell. See also Plasmid"},{"term":"Virus","value":"A small infectious particle between 10 and 300 nm in diameter, not visible with a light microscope. Viruses have no cell structure and thus differ from other infectious agents or cells. They have no wall and the genetic material is contained in either DNA or RNA encased within a protein shell or capsid. Some viruses may also have an outer membrane composed of lipoprotein. They are obligate parasites and need to enter a plant or animal cell in order to reproduce. Their RNA or DNA encodes for various proteins which are made by the host cell."},{"term":"Vitronectin (alphavbeta3)","value":"Integrin alphavbeta3 is a member of a large family of transmembrane receptors for extracellular matrix (ECM) and plasma proteins and is composed of two noncovalently linked subunits (alphav and beta3) that span the plasma membrane; it also contains the cell-binding sequence Arg-Gly-Asp (RGD). Vitronectin is expressed on osteoclasts, vascular smooth muscle cells and endothelial cells and  it binds glycosaminoglycans, collagen, plasminogen, plasminogen activator inhibitor-1 (PAI-1), urokinase receptor (uPAR), integrins, complement, heparin and thrombin-antithrombin III (TAT) complexes. Upon ligand binding, these subunits interact with the actin cytoskeleton and FAK complex through their cytoplasmic domains. It is known that endogenous insulin-like growth factor-I (IGF-I) regulates intestinal smooth muscle growth by concomitantly stimulating proliferation and inhibiting apoptosis and IGF-I-stimulated growth is augmented by the integrin alphavbeta3 ligands vitronectin and fibronectin. IGF-I expression in smooth muscle is increased in both experimental colitis and Crohn's disease. Thus, the smooth muscle hyperplasia and stricture formation observed in the chronically inflamed intestine may be in part due to upregulation of endogenous IGF-I and ligands of integrin alphavbeta3 that mediate the increase in smooth muscle cell proliferation and decrease in apoptosis. Integrin alphavbeta3 has also been established as a proangiogenic factor that facilitates endothelial cell motility and migration. Thus, antagonists of alphavbeta3 may be effective in the treatment of Crohn's disease. Integrin alphavbeta3 may also be involved in development and progression of diseases such as osteoporosis, restenosis following percutaneous transluminal coronary angioplasty, rheumatoid arthritis, cancer and ocular diseases and antagonism of this integrin could prevent and/or treat these diseases. "},{"term":"Vomiting","value":"See Emesis"}]},{"letter":"W","Terms":[{"term":"Wild-type","value":"The normal, nonmutated version of a gene. Also the parent strain of a virus, bacteria, mouse, or other laboratory organism that are found in the wild."},{"term":"Wnt","value":"A family of 22 cysteine-rich secreted soluble glycoproteins involved in several key developmental processes such as axis determination in embryos, induction of tissue and cellular differentiation and formation of cartilage and bone. The Wnt signaling pathway has been implicated in the development of cancer. Wnt genes (Wnt2, Wnt5, Wnt4) have been extensively studied in Drosophila melanogaster. Mutated Wnt leads to a wingless phenotype (hence the name: wingless-type, WNT).\r\n"}]},{"letter":"X","Terms":[]},{"letter":"Y","Terms":[{"term":"YLD","value":"Acronym for \"Years Lost due to Disability\" which is calculated by the number of years lived in a condition multiplied by a disability weight for that condition assigned on a scale from 0 (perfect health) to 1 (death). YLD = number of incident cases in reference period x disability weight x average duration of condition.\r\n"}]},{"letter":"Z","Terms":[]},{"letter":"0-9","Terms":[{"term":"5-Lipoxygenase","value":"The enzyme (EC 1.13.11.34) that catalyzes the first oxidation step in arachidonic metabolism, subsequently resulting in synthesis of leukotrienes (LTs) which primarily act as mediators of inflammatory and allergic reactions. The enzyme's activity is regulated in a complex manner and involves different signaling pathways. It can be activated by an increase in intracellular Ca2+ concentration, diacylglycerols, phosphorylation by MAPKAP kinase-2 and ERK, while protein kinase A and glutathione peroxidase have been found to suppress its function. Several inflammatory diseases including COPD, asthma, arthritis and inflammatory bowel disease (IBD) are associated with elevated levels of LTB(4); eicosanoids generated through the 5-LOX pathway may also be primary mediators of allergic rhinitis, idiopathic pulmonary fibrosis, atherosclerosis, atopic dermatitis, acne and ischemia-related organ injury. Modulation of LTB(4) synthesis could be achieved via inhibition of 5-LOX which would block the synthesis of hydroperoxide acid, 5-HPETE, and subsequent synthesis of eicosanoids (e.g., cysteinyl LTs, LTB[4]) that are instrumental in the promotion of the pulmonary inflammatory response and bronchospasm. Thus, these agents may be effective in the management of COPD and asthma."}]}]}"}],"title":"I pass a &quot;operation = siDiseaseBriefings/glossary and diseaseBriefingId = 55&quot; as parameter to &quot;RetrieveSIServiceREST&quot; operation","status":"passed"},{"date":"2019-06-15 01:14:19","title":"response contains &quot;List.letter&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:14:19","title":"response contains &quot;List.Terms.term&quot; in json fields","status":"passed"},{"date":"2019-06-15 01:14:19","title":"response contains &quot;List.Terms.value&quot; in json fields","status":"passed"}],"status":"passed"}},{"testcase":{"tag":"@TestCaseId(\"DiseaseBriefingsGlossary_08\")","time":"2019-06-15 01:14:20","title":"Check that all the tags are returned in the response","steps":[{"date":"2019-06-15 01:14:20","title":"I am authenticated user accessing &quot;SOAP&quot; API","status":"passed"},{"date":"2019-06-15 01:14:20","StepAttachment":[{"mime":"TXT","content":"PD94bWwgdmVyc2lvbj0iMS4wIiA/PjxuczI6Y29tLnRob21zb24ubHMuc29hLnN0YWNrLnNvYXNlcnZpY2VzLnNlcnZpY2Uuc29hcC52MS5yZXRyaWV2ZS5SZXRyaWV2ZURpc2Vhc2VCcmllZmluZ3NJZElucHV0IHhtbG5zOm5zMj0ibG9jYWwiPjxhcHBsaWNhdGlvbklEPm5nYXBpIzE3NTY8L2FwcGxpY2F0aW9uSUQ+PHVzZXJJRD5BUEk8L3VzZXJJRD48ZGlzZWFzZUJyaWVmaW5nSWQ+MTAwPC9kaXNlYXNlQnJpZWZpbmdJZD48L25zMjpjb20udGhvbXNvbi5scy5zb2Euc3RhY2suc29hc2VydmljZXMuc2VydmljZS5zb2FwLnYxLnJldHJpZXZlLlJldHJpZXZlRGlzZWFzZUJyaWVmaW5nc0lkSW5wdXQ+"}],"title":"I pass a &quot;applicationID = ngapi#1756 and userID = API and diseaseBriefingId = 100&quot; as parameter to &quot;DiseaseBriefingGlossary_Soap&quot; operation","status":"passed"},{"date":"2019-06-15 01:14:20","title":"response contains &quot;terms.term.value&quot; in fields.","status":"passed"},{"date":"2019-06-15 01:14:20","title":"response contains &quot;terms.term.term&quot; in fields.","status":"passed"},{"date":"2019-06-15 01:14:20","title":"response contains &quot;letter&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows Server 2016 10.0 x86","ip":"10.152.83.40","name":"Feature_RetrieveSIDiseaseBriefingsGlossary","time":"2019-06-15 01:14:19","url":"http://mwa.eu-west-1.prodeu.prod.cortellis.int.clarivate.com","targettestcycle":"Smokes-RT77-Services"}}]