[{"testset":{"tests":[{"testcase":{"tag":"@TestCaseId(\"QueryAnalyticsV2_009\")","time":"2019-02-27 16:27:14","title":"Validate the authToken with Analytics API.","steps":[{"date":"2019-02-27 16:27:14","title":"I am authenticated user accessing &quot;REST&quot; API","status":"passed"},{"date":"2019-02-27 16:27:14","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvYXV0aC12Mi90b2tlbg=="},{"mime":"TXT","content":"MjgzNDQzM2YtMTEzMS00N2FlLTgzMjUtZTA0MGI2YmExZjFl"},{"mime":"TXT","content":"MjgzNDQzM2YtMTEzMS00N2FlLTgzMjUtZTA0MGI2YmExZjFl"}],"title":"I pass a &quot;&quot; as parameter to &quot;getTokenV2&quot; operation","status":"passed"},{"date":"2019-02-27 16:27:17","substeps":[{"date":"2019-02-27 16:27:17","message":"Valid token received","status":"passed"}],"title":"I should get token in the response","status":"passed"},{"date":"2019-02-27 16:27:14","StepAttachment":[{"mime":"TXT","content":"aHR0cHM6Ly9wcm9kZXUtYXBpLmNvcnRlbGxpcy5pbnQuY2xhcml2YXRlLmNvbS9hcGktd3Mvd3MvcnMvYW5hbHl0aWNzLXYyL3F1ZXJ5L3RyaWFsU2FmZXR5UmVmc0J5QWN0aW9uP2FjdGlvbklkPTIyMQ=="},{"mime":"TXT","content":"<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Rowset rowCount='60'><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In November 2018, results were presented. A total of 67% patients in the safety analysis set completed the 21-day DLT observation study. Overall, two patients each discontinued the study due to drug treatment emergent adverse event (DTEAE) and withdrawal of consent. In the high dose (1.8 mg/kg) cohort, 8% had angioedema as DLT during the 21-day DLT observation period, in line with dose escalation rules; the 1.8 mg/kg dose group was subsequently expanded from three to six patients. During the study, all patients had &gt;/= 1 TEAE and &gt;/= DTEAE. MSB-0010445 related DTEAE was reported in 92%. Grade 3 (angioedema [a DLT], generalized pruritis, generalized rash) were three MSB-0010445-related DTEAEs and all were reported in same patient (1.8 mg/kg dose group) and all resolved. There was no grade 4/5 DTEAEs reported. Death was reported in two patients due to disease progression which was considered unrelated to the study. DLTs, treatment emergent adverse events, DTEAE and radiation TEAE (RTEAE) was reported in 0, 100, 100 and 0% (low dose); 0, 100, 100 and 0% (intermediate); 17, 100, 100 and 33% (high-1.8 mg/kg dose); 0, 100, 100 and 50% (high-2.4 mg/kg); 13, 100, 100 and 38% (high overall), respectively. Overall, serious DTEAE and serious RTEAE were reported in 33 (50, 50, and 50%, in high-1.8, 2.4 mg/kg dose and high-overall dose group, respectively) and 0%, respectively. MSB-0010445 related DTEAE and MSB-0010445-or SBRT related DTEAE was reported in 100 and 100% (low); 100 and 100% (intermediate); 83 and 83% (high-1.8 mg/kg); 100 and 100% (high-2.4 mg/kg); 88 and 88% (high overall), respectively. There was no serious MSB-0010445-related DTEAE and MSB-0010445- or SBRT-related DTEAEs reported. Grade &gt;/= 3 DTEAE, RTEAE, MSB-0010445 related DTEAE and MSB-0010445 or SBRT- related DTEAE was reported in 67, 0, 17, and 17% (high-1.8 mg/kg dose); 50, 50, 0, and 0% (high-2.4 mg/kg dose); 63, 13, 13, and 13% (high overall), respectively. There were no DTEAE leading to dose reduction of MSB-0010445. DTEAE leading to temporary discontinuation of MSB-0010445, permanent discontinuation and DTEAE leading to study discontinuation was reported in 17, 17, and 17% (high-1.8 mg/kg dose); 0, 50, and 50% (high-2.4 mg/kg dose); 13, 25 and 25% (high overall), respectively. There were no reports of cardiovascular events and no new risks were reported. Patients with &gt;/= 1 event was reported in 100, 100, 83, 100 and 88%, in low, intermediate, high-1.8 mg/kg dose, high-2.4 mg/kg dose, and high overall dose group, respectively. Diarrhea, nausea, fatigue, pyrexia, arthralgia, dyspnea, night sweats and pruritis was reported in 50, 50, 0, 0, 100, 0, 0, and 50% (low dose); 50, 50, 50, 0, 50, 100, 50, and 50% (intermediate dose); 33, 50, 33, 50, 17, 17, 50 and 33% (high-1.8 mg/kg dose); 0, 0, 50, 0, 0, 0, 0, and 0% (high-2.4 mg/kg dose); 25, 38, 38, 38, 13, 13, 38, and 25% (high-overall), respectively [&lt;ulink linkType="Reference" linkID="2093066"&gt;2093066&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The study would consist of four arms:&lt;br/&gt;Arm I (low dose cohort): patients would receive &lt;ulink linkType="Drug" linkID="57922"&gt;MSB-0010445&lt;/ulink&gt;, 0.3 mg/kg as iv infusion over 1 h, q3w for the first 12 weeks as a part of induction phase followed by maintenance dose of 0.3 mg/kg drug every three weeks until significant clinical progression, occurrence of unacceptable toxicity, or withdrawal of consent. The first administration of MSB0010445 would be performed 3 days after the last dose of Stereotactic Body Radiation Therapy (SBRT) to the targeted reference lesion. SBRT would be administered using a dose and schedule recommended based upon the data showing the best abscopal effect using multiple fractions if one site would be targeted patient received 3 fractions (1 per day) of 8 Gray (Gy) each (total: 24 Gy). If the target lesion would be located in the thorax, the maximum total dose administered would be 18 Gy (3 x 6 Gy).&lt;br/&gt;Arm II (intermediate dose cohort): patients would receive MSB-0010445, 1.0 mg/kg as iv infusion over 1 h, q3w for the first 12 weeks as a part of induction phase followed by maintenance dose of 0.3 mg/kg drug every three weeks until significant clinical progression, occurrence of unacceptable toxicity, or withdrawal of consent. The first administration of MSB0010445 would be performed 3 days after the last dose of SBRT to the targeted reference lesion. SBRT would be administered using a dose and schedule recommended based upon the data showing the best abscopal effect using multiple fractions if one site would be targeted patient received 3 fractions (1 per day) of 8 Gray (Gy) each (total: 24 Gy). If the target lesion would be located in the thorax, the maximum total dose administered would be 18 Gy (3 x 6 Gy).&lt;br/&gt;Arm III (high dose cohort; 1.8 mg/kg): patients would receive MSB-0010445, 1.8 mg/kg as iv infusion over 1 h, q3w for the first 12 weeks as a part of induction phase followed by maintenance dose of 0.3 mg/kg drug every three weeks until significant clinical progression, occurrence of unacceptable toxicity, or withdrawal of consent. The first administration of MSB0010445 would be performed 3 days after the last dose of SBRT to the targeted reference lesion. SBRT would be administered using a dose and schedule recommended based upon the data showing the best abscopal effect using multiple fractions if one site would be targeted patient received 3 fractions (1 per day) of 8 Gray (Gy) each (total: 24 Gy). If the target lesion would be located in the thorax, the maximum total dose administered would be 18 Gy (3 x 6 Gy).&lt;br/&gt;Arm IV (high dose cohort; 2.4 mg/kg): patients would receive MSB0010445, 2.4 mg/kg as iv infusion over  1 h, q3w for the first 12 weeks as a part of induction phase followed by maintenance dose of 0.3 mg/kg drug every three weeks until significant clinical progression, occurrence of unacceptable toxicity, or withdrawal of consent. The first administration of MSB0010445 would be performed 3 days after the last dose of SBRT to the targeted reference lesion. SBRT would be administered using a dose and schedule recommended based upon the data showing the best abscopal effect using multiple fractions if one site would be targeted patient received 3 fractions (1 per day) of 8 Gray (Gy) each (total: 24 Gy). If the target lesion would be located in the thorax, the maximum total dose administered would be 18 Gy (3 x 6 Gy).&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2A">Phase 2a Clinical</DevStatus><Drugs>NHS-IL2-LT</Drugs><Indications>Stage IV melanoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In November 2018, results were presented. Following single dose administration, serum MSB-0010445 was found to be dose proportional from 0.3 to 2.4 mg/kg dose. At the end of 1 h infusion Tmax was observed and t1/2 was found to be approximately 8 to 16 h. Following multiple doses, dose proportional increase in Cmax of serum MSB-0010445 was reported from 0.3 to 2.4 mg/kg. At the end of 1 h infusion Tmax was observed and t1/2 was found to be approximately 15 to 18 h. The best overall response reported was stable disease (SD) in five patients among 12 patients (four patients with disease control &gt;/= 4.3 months; 3 out of 5 patients with previous ipilimumab + anti-PD1 treatment) and progressive disease (PD) in 3 out of 12 patients, by irRECIST, and best overall response was unevaluable in 4 out of 12 patients. In two patients, best overall response was SD and progressive disease was observed in six patients, by RECIST. On day 32, increased numbers of CD8+ tumor infiltrating Tcells were observed in two patients (n = 1, 2.4 mg/kg group; n = 1, low dose group) relative to baseline and a decrease was reported for one patient (low dose group). On day 32, increased numbers of FoxP3 + tumor infiltrating Treg cells were observed on day 32 in one patient (low-dose group); and no change was reported for two patients (n = 1, 1.8 mg/kg group, n = 1, low dose group). All activated Tcell subsets increased upon MSB-0010445 dosing, whereas CD8+/Treg ratio decreased. In all dose groups, Tregs defined with and without CD127 increased [&lt;ulink linkType="Reference" linkID="2093066"&gt;2093066&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>MSB-0010445 and Stereotactic Body Radiation Therapy in Advanced Melanoma</ProtocolTitle><References>EMR 062235-005; NCT01973608</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients (n = 12) received MSB-0010445 (0.3, 1 or 1.8 mg/kg (low, intermediate and high dose levels, respectively); iv infusion); high dose arm patients received 1.8 mg/kg as starting dose and was escalated at 0.6 mg/kg to maximum dose of 3.6 mg/kg or until MTD was reached. Target sites received three fractions (one per day) of 8 Gy (total 24 Gy); for target lesions of thorax, the maximum total dose was 18 Gy (3 x 6 Gy). MSB-0010445 (iv infusion over 60 +/- 20 min) was initiated 3 days after the last dose of SBRT to the target lesion and given every 3 weeks thereafter [&lt;ulink linkType="Reference" linkID="2093066"&gt;2093066&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="159844"/><TrialStatus>Terminated</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In April 2016, interim results were presented.  The adverse events and adverse reactions reported after the first and second vaccination with HBAI-20   were of the number and scale expected for a vaccine and comparable to the HBVaxPro-10 microg. No serious adverse events were reported [&lt;ulink linkType="Reference" linkID="1757354"&gt;1757354&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In February 2017, results were presented. HBAI-20 vaccine safety and toxicity profile was   comparable to  &lt;ulink linkType="Drug" linkID="6748"&gt;HBVaxPro&lt;/ulink&gt;    [&lt;ulink linkType="Reference" linkID="1962408"&gt;1962408&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Study population would consist of healthy volunteers (n = 24) and registered non-responders (n = 12).&lt;/para&gt;&lt;para&gt;The study would include three groups. HB vaccine naive healthy subjects  would be      randomized into group 1 and 2 and registered non-responders  would be included in group 3.&lt;/para&gt;&lt;para&gt;'Group 1' subjects would receive the standard HB vaccine (HBVaxPro-10 microg), 'group 2' and 'group 3'      subjects would receive the HBAI-20 vaccine. A total of  two subjects from 'group 3' would constitute 'group 3      pilot' and would start the study 7 days before the start of the remaining 'group 3' subjects. All study subjects in groups 2 and 3 would receive two vaccinations with the assigned      investigational medical product (IMP) at 0 and 1 month and one regular booster vaccination      with the standard HB vaccine HBVaxPro-10 microg 6 months after the first dose according to the      recommended vaccination schedule for HBVaxPro-10 microg.&lt;/para&gt;&lt;para&gt;The primary study parameter would be the number and intensity of      local and systemic adverse reactions (redness, swelling, impaired movement). The secondary      study parameter  would be the HBAI-20 vaccine immunogenicity as calculated by the median titer,      geometric mean titer, geometric mean titer increase, proportion of subjects with a virus      specific antibody titer measure by the COBAS system of  &gt;/= 10 mIU/ml, and seroconversion rate.      &lt;/para&gt;&lt;para&gt;Study subjects would be vaccinated three times at 0, 1 and 6 months from the      beginning of the study and invited to the hospital for eight visits. The risks associated with      participation in this study would be considered to be low and comparable with standard vaccines.      Physical discomfort after vaccine administration can occur at the injection site (redness,      swelling, etc) and systemically (fever, fatigue, headache). Effects  would be expected to occur      for a short period of time (within the first 4 days after the first and second injection).      In addition subjects may experience adverse reactions to the cytokine component of the      adjuvant. Because of the very low dose of the cytokine component of the adjuvant, which would      be gradually released, the risks  would be expected to be low. The potential risks of venepuncture      for blood sampling would be mild pain and hematoma,  will be considered low.&lt;/para&gt;&lt;para&gt;The naive subjects participating in this study would benefit from participating by receiving      immunization against hepatitis B. Subjects in the non-responder group may benefit when they      become responders due to the effect of the HBAI-20 vaccine.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>HBAI-20; Recombivax HB</Drugs><Indications>Hepatitis B virus infection</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In April 2016, interim results were presented. HBAI-20/HBVaxPro combined vaccination induced protective anti-Hepatitis B titres after two vaccinations in 60% of true non-responders. The immunogenicity of the HBAI-20 and HBVaxPro-10 microg were comparable   in healthy subjects [&lt;ulink linkType="Reference" linkID="1757354"&gt;1757354&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In February 2017, results were presented. HBAI-20 induced protective anti-Hepatitis B titres in 90% of  non-responders  [&lt;ulink linkType="Reference" linkID="1962408"&gt;1962408&lt;/ulink&gt;].&lt;br/&gt;&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>Safety and Immunogenicity of HBAI-20 Hepatitis B Vaccine in Naive Adults and Non-responders</ProtocolTitle><References>2014-000913-30; HBNR01; NCT02540538</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;The study consists of 3 groups of subjects: 10 true non-responders   were vaccinated with HBAI20 (CyTuVax's AI20 adjuvant added to HBVaxPro-10 g), 12 naive subjects   were vaccinated with HBAI-20 and 12 naive subjects  were vaccinated with HBVaxPro 10 microg. All subjects were  vaccinated twice [&lt;ulink linkType="Reference" linkID="1757354"&gt;1757354&lt;/ulink&gt;],   [&lt;ulink linkType="Reference" linkID="1962408"&gt;1962408&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="239559"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would receive either the HBAI-20 vaccine or a standard hepatitis B vaccine [&lt;ulink linkType="Reference" linkID="1962408"&gt;1962408&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>HBAI-20</Drugs><Indications>Hepatitis B virus infection</Indications><OutcomeSummary/><ProtocolTitle>A double-blinded, multicenter, international, phase II, efficacy and safety trial of HBAI-20 in non-responder patients with hepatitis B infection</ProtocolTitle><References>BE RESPONDER</References><TreatmentSummary/><Trial id="312835"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The efficacy would be assessed within the experimental Arm 1, while 2  would serve as a reference arm&lt;br/&gt;Thsi study would consist of two arms:&lt;br/&gt;Arm 1: patients  would receive NKTR-214 in combination with nivolumab specified dose on specified days.&lt;br/&gt;Arm 2: patients in reference arm  would receive a combination of &lt;ulink linkType="Drug" linkID="3199"&gt;gemcitabine&lt;/ulink&gt; and &lt;ulink linkType="Drug" linkID="44383"&gt;carboplatin&lt;/ulink&gt; specified dose on specified days.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin; carboplatin; gemcitabine; nivolumab</Drugs><Indications>Metastasis; Transitional cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A Randomized Study of NKTR-214 Plus Nivolumab and of Reference Chemotherapy in Cisplatin Ineligible Patients Who Have Locally Advanced or Metastatic Urothelial Cancer With Low PD-L1 Expression</ProtocolTitle><References>18-214-10; CA045-012; NCT03785925; PIVOT-10</References><TreatmentSummary/><Trial id="364590"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In January 2015, results were published. Fatigue, anorexia, and rash were the most frequently reported adverse events. Thyroid gland dysfunction occurred in three patients [&lt;ulink linkType="Reference" linkID="1647413"&gt;1647413&lt;/ulink&gt;]. &lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;A total of 12 to 24 patients were planned to be enrolled. Patients would remain on the dose      throughout the trial. After local irradiation (5 x 4 Gy) given over 5 consecutive days and two treatment free days cohorts of three to six subjects would receive &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; (as a 1 h-infusion) on 3 consecutive days in 3-week cycles at dose levels of 0.15, 0.30, and 0.45 mg/kg, respectively. It was intended to administer at least four cycles (21 days each), or until      progression or second line therapy becomes necessary.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1B">Phase 1b Clinical</DevStatus><Drugs>NHS-IL2-LT</Drugs><Indications>Metastatic non small cell lung cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In January 2015, results were published. Maximum tolerated dose was not reached in patients with metastatic NSCLC treated with EMD-521873. Objective responses were not reported. There was transient increases in leukocyte subsets. In two patients, long-term survival was observed, including one patient with long-term tumor control [&lt;ulink linkType="Reference" linkID="1647413"&gt;1647413&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>EMD-521873 Plus Radiotherapy in Non-Small-Cell Lung Cancer (NSCLC)</ProtocolTitle><References>EMR 62235-002; NCT00879866</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients were given local irradiation (5 x 4 Gy) for a single pulmonary nodule. On 3 consecutive days q3w, dose-escalated EMD-521873 (0.15, 0.30 and 0.45 mg/kg) was administered as 1h intravenous infusion [&lt;ulink linkType="Reference" linkID="1647413"&gt;1647413&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="51498"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;This study was to evaluate whether directing IL-2 activity using &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt; to the patient's tumor sites that overexpress p53 results in clinical benefits if the &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt; treatment was given with cisplatin. &lt;/para&gt;&lt;para&gt;The study would  consist of two stages: stage 1 (dose-escalation [0.04, 0.06 and 0.08 mg/kg of &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt;]) and stage 2 (dose expansion [dose at MTD]). Cisplatin would be given as iv infusions in two treatment courses with two treatment cycles for each course (70 mg/m2 on day 1 of cycle 1 for each course). &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt; would be given as iv infusions in cycles 1 (day 3 and 5) and 2 (day 1, 3 and 5) with a 9-day rest period between cycles and 7-day recovery period between courses.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>ALT-801 (bolus injection, cancer), Altor</Drugs><Indications>Stage IV melanoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results of phase Ib portion of the study were presented in May 2012.  A total of 22 patients were evaluable. At 0.10 mg/kg dose of &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt;, the MTD was not reached. Manageable and transient toxicity was reported. Tumor response and disease stabilization was reported for some patients confirmed by response evaluation criteria in solid tumors. The overall survival rates at 6 and 12 months were 87 and 58%, respectively [&lt;ulink linkType="Reference" linkID="1296150"&gt;1296150&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>Study of ALT-801 With Cisplatin in Patients With Metastatic Melanoma</ProtocolTitle><References>CA-ALT-801-02-09; NCT01029873; QUILT-2.008; R44CA097550</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Chemotherapy-naive patients received two consecutive courses of cisplatin (70 mg/m2, iv) on day 1 and &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt; (0.04 to 0.10 mg/kg, iv) on days 3, 5, 15, 17 and 19 for 4 weeks. After two courses, patients with stable disease or better received two additional courses of treatment [&lt;ulink linkType="Reference" linkID="1296150"&gt;1296150&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="62586"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In January 2016, results were presented. In a patient who received gemcitabine and ALT-801 at a dose of 0.08 mg/kg, grade &gt;/= 3 hepatotoxicity led to a step-down to 0.06 mg/kg dose. A DLT (grade &gt;/= 3 hepatotoxicity) was experienced by one patient in the 0.06 mg/kg dose, with no further DLTs, the cohort was expanded to six patients. Anorexia, pruritus, rash, edema, fatigue, and chills were reported to be the other attributed adverse events. Without further DLTs, it was observed that all patients had completed therapy [&lt;ulink linkType="Reference" linkID="1727401"&gt;1727401&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would receive iv infusion of &lt;ulink linkType="Drug" linkID="57607"&gt;ALT-801&lt;/ulink&gt; for two treatment courses and one maintenance course on days 3, 5, 8 and 15 of each course and &lt;ulink linkType="Drug" linkID="3199"&gt;gemcitabine&lt;/ulink&gt; for two treatment courses and one maintenance course on days 1 and  8 of each course.&lt;/para&gt;&lt;para&gt;ALT-801 would be evaluated as to whether it can prevent disease progression and allow for bladder preservation to maintain the quality of life for patients with BCG failure, defined as refractory, relapsing or intolerant, non-muscle invasive bladder cancer who refuse or were not medically fit to undergo a radical cystectomy recommended by the participating urologist as the standard next therapy per urologic guidelines.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>ALT-801 (bolus injection, cancer), Altor; gemcitabine</Drugs><Indications>Bladder cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In January 2016, results were presented. In three patients, complete response was observed, which was durable in two patients lasting &gt;/= 18 months. Transient IFN-gamma and IL-6 induction, but not tumor necrosis factor-alpha and interleukin-10 induction was observed with ALT-801 [&lt;ulink linkType="Reference" linkID="1727401"&gt;1727401&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A Study of ALT-801 in Patients With Bacillus Calmette-Guerin (BCG) Failure Non-Muscle Invasive Bladder Cancer</ProtocolTitle><References>CA-ALT-801-01-12; NCT01625260</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received ALT-801 iv plus iv  gemcitabine at 1000 mg/m2 in a 3 + 3 design. Initially ALT-801 was administered as monotherapy, after an amendment gemcitabine was added. Patients received induction of two cycles, with a 13-day rest betwen cycles. Each cycle consisted of four doses of ALT-801 on day 3, 5, 8, 15 and two doses of gemcitabine, one each on days 1 and 8. Patients who had a biopsy-proven complete response (CR) after induction received one maintenance cycle and underwent response assessment. The initial dose of ALT-801 was 0.08 mg/kg with two step-down doses allowed if dose-limiting toxicities (DLTs) were 0.06 and 0.04 mg/kg [&lt;ulink linkType="Reference" linkID="1727401"&gt;1727401&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="88603"/><TrialStatus>No longer recruiting</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In May 2002, safety results were published. Dose limiting toxicities were similar to aldesleukin, and included hypotension, atrial fibrillation, hyponatremia, renal fluid retention, rash and eosinophilia [&lt;ulink linkType="Reference" linkID="452551"&gt;452551&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description/><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>AIC-284</Drugs><Indications>Metastasis; Renal cell carcinoma; Stage IV melanoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In May 2002, results were published. The maximum tolerated dose was exceeded at 26.1 microg/kg. Flow cytometry of peripheral blood cells showed an increase in both T-cell and NK-cell numbers and an increased IL-2 receptor alpha-chain (CD25) expression on T-cells, but no increased IL-2 receptor beta-chain (CD122) expression on NK cells [&lt;ulink linkType="Reference" linkID="452551"&gt;452551&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I clinical trial to evaluate the safety and efficacy of BAY-50-4798 in the treatment of patients with advanced renal cell carcinoma or melanoma</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients (n = 30) received BAY-50-4798 at dose levels of 1.3, 2.6, 5.2, 10.4, 17.4 or 26.1 microg/kg iv over 15 min infusion every 8 h on days 1 to 5 and 15 to 19 for a maximum of 28 doses, repeated every 12 weeks [&lt;ulink linkType="Reference" linkID="452551"&gt;452551&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="286299"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Each subject was to be treated for at least 2 cycles (at least 45 days) [&lt;ulink linkType="Reference" linkID="213477"&gt;213477&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor</Indications><OutcomeSummary/><ProtocolTitle>A phase I/II, open-label, randomized, dose-ranging study to assess optimum dose, safety,and efficacy of Multikine in head and neck cancer patients</ProtocolTitle><References/><TreatmentSummary/><Trial id="41757"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would receive two dose levels of &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; with a low dose of cyclophosphamide.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>tucotuzumab celmoleukin</Drugs><Indications>Ovary tumor</Indications><OutcomeSummary/><ProtocolTitle>Determine if Either of Two Doses of Study Drug Given With a Low-Dose of Cyclophosphamide After a Complete or Partial Response to a Platinum-Based Second-Line Therapy in Women With Recurrent Ovarian Carcinoma Results in a Longer Time to Progression When Compared to the First Time to Progression</ProtocolTitle><References>EMR 62206-016; NCT00408967</References><TreatmentSummary/><Trial id="35819"/><TrialStatus>Terminated</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In October 2012,   interim safety data   was reviewed  by  Independent Data Monitoring Committee (IDMC) and  no safety concerns were raised [&lt;ulink linkType="Reference" linkID="1333673"&gt;1333673&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In February 2013,   the  IDMC had reported that the drug was safe [&lt;ulink linkType="Reference" linkID="1386231"&gt;1386231&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would be randomized into three arms (A, B, and C) in a 3 : 1 : 3 ratio.&lt;/para&gt;&lt;para&gt;Patients in arm A would receive &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; 400 IU (2.0 ml total daily) 1.0 ml peri-tumoral, 1.0 ml peri-lymphatic (at the jugular lymphatic chain ipsilaterally to the injected tumor site inferior to the tip of the mastoid process in the area of the sternomastoid muscle sequentially and during the same visit) 5 x weekly x 3 weeks administered in combination with CIZ as adjuvant therapy prior to SOC, surgery followed by radiation or concurrent radiochemotherapy with cisplatin 100 mg/m2 iv to determine if &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; plus CIZ affects the overall survival of patients at median three years. Cyclophosphamide 300 mg/m2 would be administered iv bolus 3 days prior to treatment with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;. Indomethacin 25 mg capsules would be administered orally tid beginning on day 1 of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment up to 1 day prior to surgery. Multivitamin tablets or capsules with zinc (&gt;/= to 15 mg but not &amp;gt; 40 mg) would be administered orally beginning on day 1 of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment up to 1 day prior to surgery for immune system/nutritional support  [&lt;ulink linkType="Reference" linkID="1683088"&gt;1683088&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1496514"&gt;1496514&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients in arm B  would receive SOC for previously untreated squamous cell carcinoma of the head and neck would be currently surgery followed by radiotherapy (60 to 70 Gy in 30 to 35 fractions over 6 to 7 weeks) or for higher risk patients (patients determined at surgery to have positive surgical margins, two or more clinically positive nodes or extracapsular noldal spread) radiotherapy would be combined with concurrent chemotherapy (cisplatin 100 mg/m2 iv 1 x weekly for 3 weeks on day 1 of weeks 1, 4 and 7 of radiotherapy  (or days 1, 22, 43 of start of radiotherapy course).&lt;/para&gt;&lt;para&gt;Patients in arm C would  receive &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;  400 IU (2.0 ml) 1/2 peri-tumorally and 1/2 peri-lymphatically (at the jugular lymphatic chain ipsilaterally to the injected tumor site inferior to the tip of the mastoid process in the area of the sternomastoid muscle sequentially and during the sam	e visit) five times a week for 3 weeks prior to SOC to determine the contribution of CIZ on &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; activity [&lt;ulink linkType="Reference" linkID="1485864"&gt;1485864&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients would receive either  &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; plus standard of Care (SOC) or SOC only [&lt;ulink linkType="Reference" linkID="1506553"&gt;1506553&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1650036"&gt;1650036&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2052469"&gt;2052469&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients would be followed for protocol-specific outcomes in accordance with the study protocol after treatment with Multikine [&lt;ulink linkType="Reference" linkID="1953560"&gt;1953560&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C3">Phase 3 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Metastatic head and neck cancer; Squamous cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In April 2011, results were published. At a median of three and a half years following surgery, &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment resulted in 33% improvement in the survival rate  [&lt;ulink linkType="Reference" linkID="1530224"&gt;1530224&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>Efficacy and Safety Study of Leukocyte Interleukin, Injection (LI) to Treat Cancer of the Oral Cavity</ProtocolTitle><References>2010-019952-35; CS001P3; CTRI/2011/05/001716; IT-MATTERS; NCT01265849; SLCTR/2014/017; UKCRN 16800</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients  would receive &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (15 local injections)  in the area around the tumor and in the area of the adjacent lymph nodes     over a 3-week period prior to standard of care treatment [&lt;ulink linkType="Reference" linkID="1333673"&gt;1333673&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="73333"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>SO-C101</Drugs><Indications>Hematological neoplasm; Solid tumor</Indications><OutcomeSummary/><ProtocolTitle>A phase I, clinical study of SO-C101 in patients with both solid tumors and hematological malignancies</ProtocolTitle><References/><TreatmentSummary/><Trial id="352032"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients (n = 54) were treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (n = 27; cumulative injection doses were 2400, 4800, and 8000 IU), while 27 control patients received only conventional cancer treatment (Conventional treatment included surgical removal of the tumor followed by radiation therapy) [&lt;ulink linkType="reference" linkID="496397"&gt;496397&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516482"&gt;516482&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516578"&gt;516578&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Paraffin-embedded tumor samples obtained at surgical resection of the residual tumor (between days 21 and 28 after treatment initiation) were used. Histological analysis, necrosis evaluation, and American Joint Committee on Cancer grading were performed from H&amp;amp;E-stained sections. Immuno-histochemical analysis was performed on 3 different tumor regions (surface, zone 1; center, zone 2; and tumor-stroma interface, zone 3). Trichrome staining was used to evaluate connective tissue, and morphometric measurements were made using ImagePro analysis software. Cell cycling was determined by the use of Ki-67 marker [&lt;ulink linkType="reference" linkID="516482"&gt;516482&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516578"&gt;516578&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor; Squamous cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study were reported in 2003. Following low and medium dose &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment, the was an increase in the number of cycling tumor cells compared with control values, as measured by the cell proliferation marker Ki-67; these findings were statistically significant (p &amp;lt; 0.05, ANOVA). Treatment with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; also induced a shift from stromal infiltrating T-cells toward intra-epithelial T-cells, and posted a statistically significant (p &amp;lt; 0.05) increase in intra-epithelial CD3-positive T-cells independent of the &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; dose, whereas the increase in CD25 (interleukin-2 receptor alpha [IL-2Ralpha])-positive lymphoid cells was significant only at the lowest &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; dose (p &amp;lt; 0.05) [&lt;ulink linkType="reference" linkID="496397"&gt;496397&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516482"&gt;516482&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516578"&gt;516578&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Follow-up data on disease recurrence was reported for only 8 out of the 27 patients treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;. For these 8 patients who were sequentially treated at one center, no disease recurrence was observed at 24 months post-treatment [&lt;ulink linkType="Reference" linkID="466834"&gt;466834&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="496397"&gt;496397&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516482"&gt;516482&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516578"&gt;516578&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I/II, multi-center, clinico-pathological study of Multikine in patients with advanced primary oral squamous cell carcinoma</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients (n = 54) were treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (n = 27; cumulative injection doses were 2400, 4800, and 8000 IU), while 27 control patients received only conventional cancer treatment (Conventional treatment included surgical removal of the tumor followed by radiation therapy) [&lt;ulink linkType="reference" linkID="496397"&gt;496397&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516482"&gt;516482&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="516578"&gt;516578&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41872"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin</Drugs><Indications>Head and neck tumor; Squamous cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A pilot study to evaluate the effects of VB10.NEO in combination with NKTR-214 in patients with squamous cell carcinoma of the head and neck</ProtocolTitle><References/><TreatmentSummary/><Trial id="354207"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="NS">Phase not specified</DevStatus><Drugs>Multikine</Drugs><Indications>Prostate tumor</Indications><OutcomeSummary/><ProtocolTitle>A clinical efficacy study of immunotherapy with Multikine in treatment-naive prostate cancer patients</ProtocolTitle><References/><TreatmentSummary/><Trial id="41721"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;Overall, &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was well-tolerated. No systemic or local toxicity or severe adverse events were reported in this trial. In addition, no complications related to &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; at surgery, after surgery, or during wound healing were reported [&lt;ulink linkType="Reference" linkID="554924"&gt;554924&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="602862"&gt;602862&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="603100"&gt;603100&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients (n = 19) were treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (800 IU/ml, administered half peri-tumorally [400 IU] and half peri-lymphatically [400 IU] five times per week for 3 weeks, reaching a cumulative dose of 12,000 IU. All &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; injections were administered intra-dermally at the circumferential margin of the visible or palpable tumor mass, and the peri-lymphatic injection was administered at the posterior submandibular area at the jugular lymphatic chain, ipsilateral to the injected tumor. &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;  administration was preceded by a single iv (bolus) infusion of cyclophosphamide (300 mg/m2) 3 days before the first &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; administration. Indomethacin (25 mg orally tid) was self-administered (with food), for a total daily dose of 75 mg, beginning 3 days after cyclophosphamide administration and until 24 h before surgery. Zinc sulfate (50 mg, as elemental zinc) and a multivitamin supplement, both qd, were self-administered beginning 3 days after cyclophosphamide administration and until 24 h before surgery. Patients were counseled and encouraged to continue self-administration of the multivitamin and zinc regimen after surgical intervention [&lt;ulink linkType="Reference" linkID="542586"&gt;542586&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="543024"&gt;543024&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="554924"&gt;554924&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="602862"&gt;602862&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="603100"&gt;603100&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor; Squamous cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study were reported in June 2004, at the 40th ASCO meeting in New Orleans, LA. Of the 19 evaluable &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;-treated patients, pathologically complete response was observed in 2 patients (12%), another 2 patients (12%) had &amp;gt; 50% tumor reduction, and 4 (21%) had minor responses (&gt; 30% but &amp;lt; 50% tumor reduction); the objective response rate was 2% and the overall response rate was 42%. Progressive disease (&gt;/= 40% tumor volume increase) occurred in only one patient, and stable disease (SD) was detected in the rest of the 10 patients  [&lt;ulink linkType="Reference" linkID="542586"&gt;542586&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="543024"&gt;543024&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="554924"&gt;554924&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="602862"&gt;602862&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="603100"&gt;603100&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Histopathology showed that the intra-tumoral CD4+:CD8+ cell ratio was low (&amp;lt; 1 CD4 cell for each CD8 cell) in the control patients not treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;. An increase in tumor-infiltrating CD4+ and a decrease of CD8+ T-cells was observed in the &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;-treated patients, leading to a statistically significant (p &amp;lt; 0.05) higher intra-tumoral CD4+:CD8+ ratio (&gt; 2.5). This observation was paralleled by dendritic cell transition from tumor surface toward stromal interface (p &amp;lt; 0.05), with macrophage decrease and neutrophil accumulation, multi-focal microscopic necrosis, and statistically significant (p &amp;lt; 0.05) increase in tumor stroma of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;-treated patients, compared with controls [&lt;ulink linkType="Reference" linkID="542586"&gt;542586&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="543024"&gt;543024&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="554924"&gt;554924&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="602862"&gt;602862&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="603100"&gt;603100&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In August 2018, results were presented. A total of 10% of patients had no tumor cells remaining after a 3 week Multikine treatment, and the remaining patients had only about 50% of their tumor cells remaining. In a survival follow-up study of patients, it was observed that there was a 33% overall survival benefit compared to results obtained in 55 clinical trials reported in the scientific literature between 1987 and 2007 in the same patient population [&lt;ulink linkType="Reference" linkID="2065674"&gt;2065674&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase II, multi-center, clinico-pathological efficacy study of neo-adjuvant Multikine immunotherapy, in patients with oral squamous cell carcinoma (OSCC)</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients (n = 19) were treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (800 IU/ml, administered half peri-tumorally [400 IU] and half peri-lymphatically [400 IU] five times per week for 3 weeks, reaching a cumulative dose of 12,000 IU. All &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; injections were administered intra-dermally at the circumferential margin of the visible or palpable tumor mass, and the peri-lymphatic injection was administered at the posterior submandibular area at the jugular lymphatic chain, ipsilateral to the injected tumor. &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;  administration was preceded by a single iv (bolus) infusion of cyclophosphamide (300 mg/m2) 3 days before the first &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; administration. Indomethacin (25 mg orally tid) was self-administered (with food), for a total daily dose of 75 mg, beginning 3 days after cyclophosphamide administration and until 24 h before surgery. Zinc sulfate (50 mg, as elemental zinc) and a multivitamin supplement, both qd, were self-administered beginning 3 days after cyclophosphamide administration and until 24 h before surgery. Patients were counseled and encouraged to continue self-administration of the multivitamin and zinc regimen after surgical intervention [&lt;ulink linkType="Reference" linkID="542586"&gt;542586&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="543024"&gt;543024&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="554924"&gt;554924&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="602862"&gt;602862&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="603100"&gt;603100&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2065674"&gt;2065674&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41890"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was to be administered at one of 2 doses, as part of an 18-day regimen [&lt;ulink linkType="reference" linkID="367992"&gt;367992&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="NS">Phase not specified</DevStatus><Drugs>Multikine</Drugs><Indications>Breast tumor</Indications><OutcomeSummary/><ProtocolTitle>A clinical efficacy study of Multikine in patients with breast cancer</ProtocolTitle><References/><TreatmentSummary/><Trial id="41707"/><TrialStatus>Not yet recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Registered non-responders after at least 3 HBV vaccinations (n = 132 to 140) 18 to 59 years of age,      males and females would be enrolled in this study.&lt;/para&gt;&lt;para&gt;This study consist of two groups:&lt;br/&gt;Group 1 (active-comparator): subjects included in this group would be adults who are non-responders (did not achieve seroprotection after 3 or more vaccinations with a Hepatitis B vaccine. They would receive three doses of HBVaxPro 10 microg at 0, 1, and 2 months. The HBVaxPro 10 microg  vaccines would be administered strictly im in the deltoid muscle and must not be injected intravascularly.&lt;br/&gt;Group 2 (experimental):  subjects included in group 2  would be adults who would be non-responders (did not achieve seroprotection after three or more vaccinations with a Hepatitis B vaccine). They would receive three doses of HBAI-20 at 0, 1, and 2 months.&lt;/para&gt;&lt;para&gt;Main study parameters/endpoints:&lt;br/&gt;The primary study parameter  would be the immunogenicity of the adjuvanted vaccine. The      immunogenicity of the adjuvanted vaccine would be measured as the percentage of subjects that      attain seroprotection after the first vaccination at 1, 2, and 3, 5 months (HBsAg antibodies      &gt;/= 10 mIU/ml measure by the COBAS system). The secondary study parameter would be the safety of the      vaccination. The safety of the vaccination would be the number and severity of the local and      systemic adverse reactions.&lt;/para&gt;&lt;para&gt;Nature and extent of the burden and risks associated with participation, benefit and group      relatedness:&lt;br/&gt;Study subjects would be vaccinated 3 times at 0, 1, and 2 months from the beginning of the      study and invited to the hospital or vaccination centre for 4 or 5 visits. The risks      associated with participation in this study would be considered to be low and comparable with      standard vaccines. Physical discomfort after vaccine administration can occur at the      injection site (redness, swelling, etc) and systemically (fever, fatigue, headache). Effects      would be expected to occur for a short period of time (within the first 4 days after the first and      second injection). In addition subjects may experience adverse reactions to the cytokine      component of the adjuvant. Because of the very low dose of the cytokine component of the      adjuvant, which would be gradually released, the risks are expected to be low. The potential      risks of venepuncture for blood sampling would be mild pain and haematoma, and are considered low.      Subjects may benefit from this study by becoming immunized (seroprotected) against Hepatitis      B. Becoming seroprotected would be important for the non-responder subjects because most of the      registered non-responders would be healthcare workers who can be exposed to the Hepatitis B virus.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>HBAI-20; Recombivax HB</Drugs><Indications>Hepatitis B virus infection</Indications><OutcomeSummary/><ProtocolTitle>Hepatitis B Vaccine for Non-responders</ProtocolTitle><References>2016-002720-91; HBNR02; NCT03415672</References><TreatmentSummary/><Trial id="327329"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin; entinostat</Drugs><Indications>Stage IV melanoma</Indications><OutcomeSummary/><ProtocolTitle>A phase Ib/II trial to evaluate the safety and efficacy of NKTR-214 in combination with entinostat, in patients with metastatic melanoma who have previously progressed on treatment with an anti-PD-1 (programmed death receptor-1) agent</ProtocolTitle><References>ENCORE 606</References><TreatmentSummary/><Trial id="341373"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;There were no serious adverse effects associated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;  treatment; two patients reported minor adverse effects which included headache and palpitation, but it was confirmed if they were related to the &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment. It was also noted, but not confirmed whether the development of sepsis and Wegener granulomatosis in one patient was related to the &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment  [&lt;ulink linkType="Reference" linkID="506485"&gt;506485&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients received &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;, injected peri-tumorally (n = 11) or peri-lymphatically (n = 1) for 10 days. For the peritumoral protocol, the total quantity of 2 l or 4 ml was divided into 4 equal parts and injected at 4 equidistant points along the periphery of the tumor to a depth of 5 mm. For the peri-lymphatic protocol, the total quantity of 4 ml was divided and injected at 4 arbitrary points at the periphery of the mastoid tip adjacent to the jugulodigastric nodes. Patients (n = 10) received 800 U, and 2 patients received 1600 U, at a concentration of 400 U/ml. The treatment protocol also included the following: iv cyclophosphamide (50 mg/m2) to reduce suppressor T-lymphocyte activity; intra-oral indomethacin (75 mg, from day 1 to day 21), to decrease levels of prostaglandin (which mediates macrophage-induced immune suppression), and oral zinc (142 mg, from day 1 to day 21) to augment T-lymphocyte function. Patients were advised to undergo either surgery or radiation as definitive treatment at 21 days after completion of the study protocol [&lt;ulink linkType="Reference" linkID="506485"&gt;506485&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor; Squamous cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Preliminary results from the study were presented in October 2007, at the First Annual Congress on Leukocyte Interleukin injection in Alexandria, VA. Data from the first four treated patients showed substantial tumor reductions in only three weeks; at that point the clinical protocol required the investigator to conduct surgery or radiation therapy [&lt;ulink linkType="reference" linkID="265226"&gt;265226&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In May 1998, further results from the trial confirmed several beneficial responses to &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; therapy, including tumor size reduction, resolution of tumor ulceration, pain reduction and, in tongue tumors, improvement in tongue mobility [&lt;ulink linkType="reference" linkID="286491"&gt;286491&lt;/ulink&gt;]. Further data were reported in November 1999. Of the 10 evaluated patients, partial tumor regression was observed in 3 patients (tumor reductions &gt; 50%); 1 patient who had a tumor of nearly 7 cm in diameter had a complete clinical response with no measurable tumor remaining [&lt;ulink linkType="reference" linkID="346764"&gt;346764&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Final data were reported in August 2003. After &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; treatment, two patients showed complete regression, two showed partial regression and  one patient had a clear focus of regression.   Pathological study results showed tumor fragmentation and the appearance of multi-nucleated macrophages. Fluorescence-activated cell sorter analysis showed lymphocyte activation, reflected by an unusually high number of cytotoxic T-lymphocyte-activation-4 cells and natural killer cells  [&lt;ulink linkType="Reference" linkID="506485"&gt;506485&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I, safety, tolerability and efficacy study of Multikine in patients with squamous cell head and neck cancer</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt;, injected peri-tumorally (n = 11) or peri-lymphatically (n = 1) for 10 days. For the peritumoral protocol, the total quantity of 2 l or 4 ml was divided into 4 equal parts and injected at 4 equidistant points along the periphery of the tumor to a depth of 5 mm. For the peri-lymphatic protocol, the total quantity of 4 ml was divided and injected at 4 arbitrary points at the periphery of the mastoid tip adjacent to the jugulodigastric nodes. Patients (n = 10) received 800 U, and 2 patients received 1600 U, at a concentration of 400 U/ml. The treatment protocol also included the following: iv cyclophosphamide (50 mg/m2) to reduce suppressor T-lymphocyte activity; intra-oral indomethacin (75 mg, from day 1 to day 21), to decrease levels of prostaglandin (which mediates macrophage-induced immune suppression), and oral zinc (142 mg, from day 1 to day 21) to augment T-lymphocyte function. Patients were advised to undergo either surgery or radiation as definitive treatment at 21 days after completion of the study protocol [&lt;ulink linkType="Reference" linkID="506485"&gt;506485&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41749"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;The drug was well tolerated, and there were no unexpected safety findings in the  population of HIV-infected patients receiving HAART plus sc &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; as adjunctive therapy [&lt;ulink linkType="Reference" linkID="567904"&gt;567904&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description/><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>AIC-284</Drugs><Indications>HIV infection</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;The drug showed dose-proportional pharmacokinetics for the 2.6, 5.2, 8.7 and 13.1 microg/kg doses; for day 5, half-lives were 3.8, 5.9, 11.4 and 13.9 h, Cmax values were 2.34, 4.96, 8.23 and 11.9 microg/l, and AUC (0-12) values were 18.5, 42.3, 69.2 and 98.7 microg.h/l respectively. Accumulation was minimal during multiple-dose treatment. Limited efficacy data indicated that treatment with &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; caused at least a transient increase in CD4+ T-cell counts in some recipients, particularly at the early time points, and this effect appeared to increase with increasing dose. &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; was generally well tolerated across the dose ranges tested, but a lack of potent, sustained immunologic activity suggested that further optimization of dose and schedule would be necessary [&lt;ulink linkType="Reference" linkID="567763"&gt;567763&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="567904"&gt;567904&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I/II safety, tolerability, pharmacokinetics, and efficacy study of an IL-2 antagonist BAY-50-4798, in HIV patients</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Subjects were administered sc &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; or placebo, bid for 5 days, every 8 weeks for three cycles [&lt;ulink linkType="Reference" linkID="567763"&gt;567763&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="9220"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was well-tolerated, and the treatment showed minimal toxicity [&lt;ulink linkType="reference" linkID="365600"&gt;365600&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was injected at four doses three times per week around the tumor, for 2 weeks prior to conventional therapy [&lt;ulink linkType="Reference" linkID="346764"&gt;346764&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="365600"&gt;365600&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study revealed that about 50% of the patients treated with &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; showed tumor reductions [&lt;ulink linkType="reference" linkID="365600"&gt;365600&lt;/ulink&gt;]. &lt;ulink linkType="Drug" linkID="7401"/&gt; &lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase II, safety and efficacy study of Multikine in patients with head and neck cancer</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was injected at four doses three times per week around the tumor, for 2 weeks prior to conventional therapy [&lt;ulink linkType="Reference" linkID="346764"&gt;346764&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="365600"&gt;365600&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41758"/><TrialStatus>No longer recruiting</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>ALKS-4230</Drugs><Indications>Cancer</Indications><OutcomeSummary/><ProtocolTitle>A phase I study to evaluate ALKS-4230 for the potential treatment of cancer</ProtocolTitle><References/><TreatmentSummary/><Trial id="370317"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>avelumab; bempegaldesleukin; enzalutamide; talazoparib tosylate</Drugs><Indications>Head and neck tumor; Hormone refractory prostate cancer; Squamous cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A phase Ib/II clinical trial to evaluate the anti-cancer activity of the combined agents, avelumab, talazoparib and NKTR-214 and separately avelumab, enzalutamide and NKTR-214 in multiple cancer settings, including metastatic castration-resistant prostate cancer (mCRPC) and squamous cell carcinoma of the head and neck (SCCHN)</ProtocolTitle><References/><TreatmentSummary/><Trial id="359129"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients were vaccinated with &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt;  after resection of hepatocellular carcinoma     [&lt;ulink linkType="Reference" linkID="657474"&gt;657474&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>AFTVac</Drugs><Indications>Hepatocellular carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;This study  demonstrated that &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; resulted in a significantly increased time before the first recurrence of cancer when compared to 24 historical control patients. A total of 8 of 12 patients developed  delayed-type hypersensitivity (DTH) responses against the fragments      [&lt;ulink linkType="Reference" linkID="657474"&gt;657474&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I/IIa, safety and efficacy study of AFTVac in hepatocellular carcinoma patients</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients were vaccinated with &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt;  after resection of hepatocellular carcinoma     [&lt;ulink linkType="Reference" linkID="657474"&gt;657474&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="37218"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;Reported  side-effects were limited to grade I or II skin toxicities, and included erythema, predominantly dry desquamation of the skin and pruritus. There was also an incidence of interstitial pneumonia   [&lt;ulink linkType="Reference" linkID="657402"&gt;657402&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Prior to the study, patients underwent clinical assessment. A delayed-type hypersensitivity (DTH) test was performed  by processing a sample of the patient's resected fixed cancer tissue and injected intra-dermally into the patient's forearm. Erythema diameter was measured  for 2 days post-injection, before five     injections of &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; into the left upper arm at week 0, followed  by five injections into the right upper arm after 2 weeks. A further five  injections were administered at week 4 on the left upper arm, and in week 6, a second 48-h DTH test was done to detect the cellular immune response, which was referred to as positive if &gt; 10 mm in diameter. Follow-up assessments were carried out. Patient observation continued until the majority of surviving patients had lived &gt; 12 months after the curative resection [&lt;ulink linkType="Reference" linkID="657402"&gt;657402&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients who had undergone curative resection were randomized to &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt;  treatment (n = 19) or no adjuvant control group (n = 22). Beginning 4 to   6 weeks after hepatic resection, three intradermal vaccinations were administered  at 2-week intervals. DTH test was performed before and after vaccination [&lt;ulink linkType="Reference" linkID="657402"&gt;657402&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2B">Phase 2b Clinical</DevStatus><Drugs>AFTVac</Drugs><Indications>Hepatocellular carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study revealed that after a median follow-up of 15 months, &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; significantly decreased the recurrence of carcinoma by 81% (95% CI: 33 to 95%; p = 0.003) and prolonged overall survival rates compared to controls (p = 0.01). &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; treatment also significantly prolonged the time to first recurrence (p = 0.003) and improved recurrence-free survival (p = 0.003) [&lt;ulink linkType="Reference" linkID="657402"&gt;657402&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase IIb, randomized, safety and efficacy study of AFTVac in patients with hepatocellular carcinoma</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients who had undergone curative resection were randomized to &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt;  treatment (n = 19) or no adjuvant control group (n = 22). Beginning 4 to   6 weeks after hepatic resection, three intradermal vaccinations were administered  at 2-week intervals. DTH test was performed before and after vaccination [&lt;ulink linkType="Reference" linkID="657402"&gt;657402&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="37159"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;The most common treatment emergent adverse events seen were: lymphocytopenia (1, 0, 1, 2, 1), anemia (0, 0, 0, 0, 1), neutropenia (0, 0, 0, 0, 1), thrombocytopenia (0, 0, 0, 0, 1), nausea (0, 0, 0, 0, 1), vomiting (0, 0, 0, 0, 1), hypophosphatemia (0, 0, 1, 0, 1), dyspnea (0, 0, 1, 1, 0), bronchospasm (0, 0, 0, 1, 0) and hypoxia (0, 0, 1, 0, 0), respectively, in patients treated with 0.5 (n = 3), 1.0 (n = 4), 2.0 (n = 7), 3.0 (n = 6) and 4.0 mg (n = 7) &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;. Grade 3 hypoxia (2 mg/m2 dose level), grade 3 dyspnea, bronchospasm, gamma-glutamyltransferase elevation (3 mg/m2 dose level), and grade 4 thrombocytopenia/grade 3 neutropenia and anemia (4 mg/m2 dose level) were the DLTs reported [&lt;ulink linkType="Reference" linkID="1195829"&gt;1195829&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Subjects enrolled in the study would receive a maximum of six cycles of the assigned regimen over 18 weeks. Each cycle would be 3 weeks (21 days) with cyclophosphamide on day 1 and &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; on days 2 to 4, followed by 17 days with no experimental pharmaceutical product.&lt;/para&gt;&lt;para&gt;In each cycle, cyclophosphamide at 300 mg/m2 would be given per institutional guidelines 1 day (22 to 28 h) prior to 3 consecutive days of &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; as a 4 h iv infusion at one of six planned dose levels of  0.5, 1, 2, 3, 4, or 6 mg/m2.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1B">Phase 1b Clinical</DevStatus><Drugs>tucotuzumab celmoleukin</Drugs><Indications>Carcinoma; Colorectal tumor; Non-small-cell lung cancer; Ovary tumor; Prostate tumor</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results were presented in June 2011 at the American Society of Clinical Oncology Annual Meeting, Chicago, IL. The 3 mg/m2 dose of &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; in combination with cyclophosphamide was determined to be the maximum tolerated dose (MTD). At the MTD, the Cmax, AUC (0 to 24 h), half-life and clearance values were 1252.9 ng/ml, 13329.1 ng/ml.h, 8.46 h and 0.49 l/h, respectively. The median overall survival duration was 37.9 weeks. Of the 25 patients evaluable for efficacy, 10 had stable disease and 14 had progressive disease. The count of peripheral blood mononuclear cells (PBMCs) decreased during infusion days, and &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; increased the plasma sIL-2R values [&lt;ulink linkType="Reference" linkID="1195829"&gt;1195829&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>EMD-273066 in Patients With Recurrent EpCAM Positive Ovarian, Prostate, Colorectal or Non-Small Cell Lung Cancers When First Given Cyclophosphamide</ProtocolTitle><References>EMR 62206-015; NCT00132522</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Subjects received up to six treatment cycles (21-day cycles) of cyclophosphamide (300 mg/m2, iv infusion) on day 1, followed by &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; (0.5 to 4 mg/m2, iv infusion) on days 2 to 4 [&lt;ulink linkType="Reference" linkID="1195289"&gt;1195289&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="28529"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;In this trial, 15 patients      would be enrolled in two treatment cohorts. A total of five patients (cohort A) would be treated with      200 IU Multikine daily, 5 days/week for 2 weeks, off 2 weeks, then treated again 5 days/week      for 2 weeks. If no serious adverse events were noted in cohort A patients, ten      patients would be treated in cohort B. Cohort B patients would be treated in the same      manner as cohort A patients except that the dose would be increased to 400 IU Multikine      per day.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Condyloma</Indications><OutcomeSummary/><ProtocolTitle>Study of Leukocyte Interleukin Injection for Treatment of Perianal Warts</ProtocolTitle><References>NCT03038828; NMCSD2013.008_UCSF; PAW</References><TreatmentSummary/><Trial id="286956"/><TrialStatus>Terminated</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The drugs tested in this study were TAK-659 and NKTR-214. TAK-659 in      combination with NKTR-214 was being tested for patients with advanced NHL after two but no      &gt;three prior lines of therapy. The study would determine the MTD or the RP2D of TAK-659      when administered with NKTR-214.&lt;/para&gt;&lt;para&gt;The study would enroll approximately 40 patients, approximately 18 to 24 patients in a      dose escalation phase, and approximately 12 patients would be added after determination of      MTD/RP2D/MAD in the safety expansion phase. This study consists of two phases: a dose      escalation phase and a safety expansion phase. TAK-659 and NKTR-214 doses would be escalated according to a standard 3+3 dose escalation      schema. TAK-659 60 mg + NKTR-214 0.003 mg/kg is the starting dose. Patients could also      receive 40, 80 or 100 mg qd of TAK-659 during dose escalation and 0.003 or 0.006 mg/kg      of NKTR-214. Alternative regimens or schedules of TAK-659 were permissible following      discussion between sponsor and investigators. In dose escalation phase, dose levels would be      escalated based on available safety and tolerability data to determine the MTD or MAD or      RP2D. Dose for safety expansion phase would be based on available safety, pharmacodynamics      and preliminary efficacy data.&lt;/para&gt;&lt;para&gt;For patients enrolled in either the dose escalation or safety expansion phases, the      maximum duration of treatment would be 12 months unless, in the opinion of the investigator      and with the agreement of the sponsor, the patients would derive benefit from continued      therapy beyond 12 months. Patients would make multiple visits to the clinic, and would have      an end of treatment visit 30 days after the last dose of TAK-659 or NKTR-214 or the start of      subsequent alternative anticancer therapy, whichever occurs first. Patients would be      followed for 90 days after the last dose to permit the detection of any delayed      treatment-related adverse events (AEs).&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1B">Phase 1b Clinical</DevStatus><Drugs>bempegaldesleukin; mivavotinib</Drugs><Indications>Non-Hodgkin lymphoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of TAK-659 in Combination With NKTR-214 in Participants With Advanced Non-Hodgkin Lymphoma (NHL)</ProtocolTitle><References>C34015; NCT03772288; U1111-1218-4372</References><TreatmentSummary/><Trial id="337393"/><TrialStatus>Not yet recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;This randomized study consists of two arms:&lt;br/&gt;Arm 1: patients will receive NKTR-214 in combination with nivolumab (specified dose on specified days).&lt;br/&gt;Arm 2: patients will receive the investigator's choice of either one of two treatment options (sunitinib and cabozantinib [specified dose on specified days]).&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C3">Phase 3 Clinical</DevStatus><Drugs>bempegaldesleukin; cabozantinib S-malate; nivolumab; sunitinib</Drugs><Indications>Metastatic renal cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of NKTR-214 in Combination With Nivolumab Compared With the Investigator's Choice of a Tyrosine Kinase Inhibitor (TKI) Therapy (Either Sunitinib or Cabozantinib Monotherapy) for Advanced Metastatic Renal Cell Carcinoma (RCC)</ProtocolTitle><References>17-214-09; CA045002; NCT03729245</References><TreatmentSummary/><Trial id="358884"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;Overall, the &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; injections were well-tolerated, and no associated serious adverse reactions were reported; one patient was hospitalized for lactic acidosis, secondary to anti-retroviral drugs [&lt;ulink linkType="reference" linkID="424946"&gt;424946&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="427438"&gt;427438&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="444079"&gt;444079&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients were administered &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; daily (starting dose 200 IU) by endocervical/perilesional injections 16 to 20 times over a 6-week period. Follow-up cervical biopsy was done 7 to 8 weeks after the last injection [&lt;ulink linkType="reference" linkID="424946"&gt;424946&lt;/ulink&gt;]. &lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Cervical dysplasia</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Clinical data from this study were presented in October 2001, at the annual meeting of the International Society for Interferon and Cytokine Research in Cleveland, Ohio.  In the 5 evaluable patients, clinical response by colposcopic examination was demonstrated; 3 of 4 patients had no evidence of dysplasia on biopsy 7 to 8 weeks after the final injection, and biopsies on the remaining volunteer showed no apparent changes in her dysplasia; the fifth patient was lost to follow-up [&lt;ulink linkType="reference" linkID="424946"&gt;424946&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Further data were reported at the 40th annual American College of Obstetricians and Gynecologists Meeting of the Armed Forces District in Norfolk, Virginia. At that time, it was reported that 6 of 8 patients had no evidence of dysplasia on biopsy, 7 to 8 weeks after the final &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; injection [&lt;ulink linkType="reference" linkID="427438"&gt;427438&lt;/ulink&gt;]. Similar data were reported in March 2002, at the annual meeting of the Society of Gynecological Oncologists in Miami, FL [&lt;ulink linkType="reference" linkID="444079"&gt;444079&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I, dose-escalating safety study of immunotherapy with the leukocyte interleukin injection Multikine for the treatment of human papilloma virus (HPV) induced cervical dysplasia, in HIV patients</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients were administered &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; daily (starting dose 200 IU) by endocervical/perilesional injections 16 to 20 times over a 6-week period. Follow-up cervical biopsy was done 7 to 8 weeks after the last injection [&lt;ulink linkType="reference" linkID="424946"&gt;424946&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41727"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In August 2011, results were published. It was reported that &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; injection concomitant with fractionated radiotherapy was well tolerated by all patients. Patients had treatment-related adverse effects and in no case did treatment-related adverse effects exceed grade 1 toxicity. The most common adverse events (AEs) reported in patients were local erythema, induration, and swelling at the site of injection [&lt;ulink linkType="Reference" linkID="1215725"&gt;1215725&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients had aggressive tumor resection, fractionated radiotherapy up to a total dose of 60 Gy, and three concomitant courses of &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; administered with an  1-week interval at the late stage of irradiation. Patients underwent two delayed-type hypersensitivity (DTH) tests (one at 48 h before the initial course of vaccination [DTH-1] and one at 2 weeks after the third   course of vaccination [DTH-2]). At the time of tumor progression, all but one of the patients took salvage therapy  [&lt;ulink linkType="Reference" linkID="1215725"&gt;1215725&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>AFTVac</Drugs><Indications>Glioblastoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In August 2011, results were published. The median duration of overall survival, the actuarial two-year survival, and the median duration of progression-free survival rates were found to be 21.4 months, 40%, and 7.6 months, respectively. Overall survival demonstrated a statistically significant association with recursive partitioning analysis class (p &amp;lt; 0.05), whereas the progression-free survival demonstrated a statistically significant association with p53 staining index (p &amp;lt; 0.05) and size of DTH-2 response (p &amp;lt; 0.001) [&lt;ulink linkType="Reference" linkID="1215725"&gt;1215725&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I/IIa, prospective clinical trial to evaluate the safety and efficacy of autologous formalin-fixed tumor vaccine concomitant with fractionated radiotherapy for newly diagnosed glioblastoma multiforme</ProtocolTitle><References/><TreatmentSummary/><Trial id="80200"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="NS">Phase not specified</DevStatus><Drugs>AFTVac; anastrozole; epirubicin; exemestane; zoledronic acid</Drugs><Indications>Metastatic breast cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results presented in April 2013 showed that the bone metastasis had disappeared and she was diagnosed complete remission after five years. Tumor markers were in normal level and quality-of-life was good   [&lt;ulink linkType="Reference" linkID="1400057"&gt;1400057&lt;/ulink&gt;]. &lt;br/&gt;&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A case study of bone-metastatic breast cancer with autologous formalin-fixed tumor vaccine</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;The breast was operated and  irradiated according to palliative radiation therapy with 36 Gy, later vaccinated with &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; and  six courses of chemotherapy   (cyclophosphamide 100 mg/day x 14 days + &lt;ulink linkType="Drug" linkID="13022"&gt;epirubicin&lt;/ulink&gt; 50 mg qw +  5-FU 500 mg for 2 weeks) was given  as the last step of adjuvant therapy. For maintenance therapy, aromatase inhibitor (&lt;ulink linkType="Drug" linkID="3321"&gt;anastrozole&lt;/ulink&gt; 1 mg/day; &lt;ulink linkType="Drug" linkID="3081"&gt;exemestane&lt;/ulink&gt; 25 mg/day) and &lt;ulink linkType="Drug" linkID="2765"&gt;zoledronic acid&lt;/ulink&gt;   (4 mg once monthly) were given  [&lt;ulink linkType="Reference" linkID="1400057"&gt;1400057&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="130015"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;This phase I study would be done to evaluate a dose-escalation scheme of oral administration      of &lt;ulink linkType="Drug" linkID="70160"&gt;salmonella-IL-2 cancer therapy&lt;/ulink&gt; in      patients with unresectable hepatic metastases from a solid tumor cancer.  Standard phase I,      dose-escalation scheme would be used to determine the MTD of &lt;ulink linkType="Drug" linkID="70160"&gt;salmonella-IL-2 cancer therapy&lt;/ulink&gt;. A total of six dose      levels (10[5], 10[6], 10[7], 10[8], 10[9] and 10[10]) of oral &lt;ulink linkType="Drug" linkID="70160"&gt;salmonella-IL-2 cancer therapy&lt;/ulink&gt; (virulent strain x 4550) would be studied with a minimum of three patients enrolled at each dose level to achieve a maximum tolerated dose. &lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>salmonella-IL-2 cancer therapy (oral, cancer), Botanic Oil Innovations</Drugs><Indications>Solid tumor</Indications><OutcomeSummary/><ProtocolTitle>IL-2 Expressing, Attenuated Salmonella Typhimurium in Unresectable Hepatic Spread</ProtocolTitle><References>0906M68041; 2009LS003; NCT01099631; Protocol #0907-991</References><TreatmentSummary/><Trial id="74920"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="NS">Phase not specified</DevStatus><Drugs>Multikine</Drugs><Indications>Hormone refractory prostate cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study reported in September 1997, demonstrated the safety and feasibility of using &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; for prostate cancer. Biopsies also suggested the recruitment of inflammatory cells to the tumor site [&lt;ulink linkType="reference" linkID="262003"&gt;262003&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A clinical safety, feasibility and efficacy study of Multikine in patients with prostate cancer</ProtocolTitle><References/><TreatmentSummary/><Trial id="41716"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;No drug-related toxicities (DLTs) were observed among patients in the 0.4, 0.7, 1.4, or 4.3 mg/m/d dosing groups. Four patients treated with 2.8, 6.4, or 8.5 mg/m/d experienced DLTs.   The most common toxic effects were fever, asthenia and chills. No hypersensitivity reactions were observed after the first dose cycle [&lt;ulink linkType="Reference" linkID="550553"&gt;550553&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="550568"&gt;550568&lt;/ulink&gt;].&lt;br/&gt;&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; was administered to patients  in 3-day cycles (separated by 4 weeks) of qd, 4 h iv infusions at a dose determined by an escalation protocol (0.4, 0.7, 1.4, 2.8, 4.3, 6.4, or 8.5 mg/m/d). Approximately 2/3 of patients received a second cycle of treatment [&lt;ulink linkType="Reference" linkID="550553"&gt;550553&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="550568"&gt;550568&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>tucotuzumab celmoleukin</Drugs><Indications>Hormone refractory prostate cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;The results show that the MTD  was 6.4 mg/m/d.&lt;ulink linkType="Drug" linkID="21065"&gt;  EMD-273066&lt;/ulink&gt; was generally well tolerated up to a dose of 4.3 mg/m/d. Titers of both antiimmunocytokine and anti-FcIL-2 antibody responses were observed after the first dose cycle and either decreased or remained stable during a second course of treatment.&lt;ulink linkType="Drug" linkID="21065"&gt;  EMD-273066&lt;/ulink&gt; exhibited immunological activity as demonstrated by increases in lymphocyte counts, natural killer cell number and specific activity, and antibody-dependent cellular cytotoxicity activity. On average, Cmax, which was dose-dependent, was achieved within 1 h after infusion. Mean half-life, which was independent of dose, ranged from 4.0 to 6.7 h across doses. A zero-compartment body model with one-order kinetics best described the concentration-time profiles [&lt;ulink linkType="Reference" linkID="550553"&gt;550553&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="550568"&gt;550568&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I safety, pharmacokinetics, and biological pharmacodynamics study of EMD-273066 in patients with prostate cancer</ProtocolTitle><References/><TreatmentSummary/><Trial id="37162"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was self-administered sc 5 times a week for 8 weeks and subjects were followed through week 12 [&lt;ulink linkType="Reference" linkID="344084"&gt;344084&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="372798"&gt;372798&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>HIV infection</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results have shown that &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was safe and well-tolerated;  at the end of the treatment  significant  increased ability (p &amp;lt; 0.01) to respond to skin tests for several recall antigens, such as Tetanus toxoid, Candida antigen and Proteus antigen was also observed [&lt;ulink linkType="Reference" linkID="372798"&gt;372798&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="372798"&gt;372798&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I study of Multikine to evaluate its safety and to determine its effect on various immune system responses</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was self-administered sc 5 times a week for 8 weeks and subjects were followed through week 12 [&lt;ulink linkType="Reference" linkID="344084"&gt;344084&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="372798"&gt;372798&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="9465"/><TrialStatus>No longer recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;All patients  would undergo      baseline anal Pap, anal HPV subtyping, perianal condyloma characterization (count,      measurement, photography), and complete a baseline questionnaire. Patients would be divided into cohorts.&lt;br/&gt;Cohort A patients  would      receive  perilesional &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; injections 200  IU qd, Monday to Friday, for 14      days and stopped  for 14 days, then again receive qd, Monday to Friday for 14 days.&lt;br/&gt;If no      serious adverse events are noted after 4 weeks of therapy, cohort B would be studied using      the same schedule but with a dose of 400 IU.&lt;br/&gt;Each patient would undergo anal      Pap and anal HPV subtyping once-weekly during treatment. Condyloma characterization (count,      measurement, photography) would occur prior to each treatment. After treatment completed,      patients would complete a follow-up visit at 70, 100, 130, 160 days and have anal Pap,      anal HPV subtyping, and perianal condyloma characterization (count, measurement,      photography) performed.&lt;br/&gt;The main outcome measures would be:&lt;br/&gt;Perianal wart characterization (count, measurement [in mm diameter],           photography).&lt;br/&gt;HPV subtype in anal canal.&lt;br/&gt;Anal dysplasia cytological grade.&lt;br/&gt;Questionnaire responses.&lt;br/&gt;Adverse effects experienced during treatment, recorded in symptom log.&lt;/para&gt;&lt;para&gt;In this study, patients (n = 5) would  be treated  with the  lowest dose of  &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; for  5 days per week  (at weeks 1, 2, 5 and 6) around the peri-anal warts and it would be continued similarly with higher dose in few more patients (n = 10), if no serious adverse events were reported [&lt;ulink linkType="Reference" linkID="1485053"&gt;1485053&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Condyloma</Indications><OutcomeSummary/><ProtocolTitle>Safety Study of Multikine in the Treatment of Perianal Warts</ProtocolTitle><References>NCT02115919; NMCSD.2013.0080</References><TreatmentSummary/><Trial id="182223"/><TrialStatus>Terminated</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In August 2016, results were  presented. NKTR-214 was well tolerated and the MTD had not been reached. DLTs (Grade 3 syncope and hypotension) were experienced by one patient at 0.012 mg/kg. At any dose, immune-related adverse events (AEs) or capillary leak syndrome were not observed. Drug-related AEs did not lead to study discontinuation [&lt;ulink linkType="Reference" linkID="1883959"&gt;1883959&lt;/ulink&gt;]. Similar results were presented in  November 2016  [&lt;ulink linkType="Reference" linkID="1871846"&gt;1871846&lt;/ulink&gt;]. Similar results were presented in Feburary 2017  [&lt;ulink linkType="Reference" linkID="1904633"&gt;1904633&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt; In November 2016, results were presented. No immune-related AEs(eg, colitis, dermatitis, hepatitis pneumonitis, adrenal insufficiency) were observed.Deaths or grade 4 AEs related to NKTR-214 were not observed.  A total of one patient had a dose-limiting toxicity (DLT) of hypotension/syncope at 0.012 mg/kg q3w and continued on treatment at 0.006 mg/kg q3w and 3/25 patients experienced grade 3 hypotension, which was rapidly reversed with fluid administration and all patients continued on treatment with NKTR-214. Fatigue, pruritis, cough, decreased appetite, pyrexia, and hypotension  were the most common grade 1 to 2 adverse events [&lt;ulink linkType="Reference" linkID="1871846"&gt;1871846&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In Feburary 2017, positive results were presented. The drug had shown favorable safety and tolerability profile with convenient, outpatient every  2  or  3 week adminiatration in all patients till date  [&lt;ulink linkType="Reference" linkID="1901440"&gt;1901440&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In Feburary 2017, similar results were presented. Treatment-emergent (TE) AEs like fatigue, decreased appetite, pruritus, cough, pyrexia, chills, arthralgia, nausea, influenza-like illness, rash macular and rash macular-papular all of grade 1 to 2 was reported by five, five, six, five, three, one, three, two, one, two and zero patients, respectively, receiving NKTR-214 0.006 mg/kg q21d; by three, three, two, one, two, three, two, two, one two and two, patients, respectively, receiving NKTR-214 0.006 mg/kg q14d; and by four, three, two, two, three, three, zero, two, two, zero and two patients, respectively, receiving NKTR-214 0.009 mg/kg q21d. In patients receiving NKTR-214 0.0.12 mg/kg q21d, grade 1 to 2 fatigue, pruritus and cough was reported by one patient each. Grade 3 TEAE were reported by 13% of patients, which included hypotension and abdominal pain reported by one patient each in 0.006 mg/kg q14d group; hypotension in one patient in 0.009 mg/kg q21d group; and hypotension and syncope by one patient each in 0.012 mg/kg q21d group. During the study, no drug related grade 4 AEs or death was reported. Due to an infusion related AE, one patient discontinued the study   [&lt;ulink linkType="Reference" linkID="1904633"&gt;1904633&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2017, results were presented. Stage IV patients (n = 28) treated with  NKTR-214 demonstrated a favorable safety profile with no immune-related adverse events (AEs) [&lt;ulink linkType="Reference" linkID="1934443"&gt;1934443&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1931999"&gt;1931999&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Further results in June 2017 showed that NKTR-214-related treatment-emergent adverse events of grade 1 to 2 were reported for hypotension, abdominal pain, fatigue, pruritus, decreased appetite, chills, cough, pyrexia, arthralgia, influenza like illness, nausea, rash macula-papular, dizziness and nasal congestion. Grade 3 treatment related TEAE for hypotension was reported by one patient each in 0.006, 0.006, 0.009 and 0.012 mg/kg q3w treatment group, one patient in 0.006 mg/kg q3w treatment group for abdominal pain, one patient in 0.009 mg/kg q3w treatment group for infusion related reaction, and one patient in 0.012 mg/kg q3w treatment group for syncope. The grade 3 AE for hypotension was reversible when treated with iv fluids. In patients, the median duration of pyrexia was 2 days. Capillary leak syndrome was not observed in any patient; drug-related grade 4 AEs were not reported, and on study death did not occur. Due to an AE of an infusion-related reaction, one patient discontinued the study [&lt;ulink linkType="Reference" linkID="1931999"&gt;1931999&lt;/ulink&gt;]. &lt;br/&gt;&lt;br/&gt;&lt;/para&gt;&lt;para&gt;&lt;br/&gt;&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would receive NKTR-214. Patients in the dose-escalation cohorts would be treated every 21 days or every 14 days until tumor progression.&lt;/para&gt;&lt;para&gt;Patients would receive NKTR-214 escalating doses  once every 3 weeks  [&lt;ulink linkType="Reference" linkID="1719591"&gt;1719591&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1752724"&gt;1752724&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1769760"&gt;1769760&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin</Drugs><Indications>Advanced solid tumor; Metastatic bladder cancer; Metastatic breast cancer; Metastatic colorectal cancer; Metastatic non small cell lung cancer; Metastatic renal cell carcinoma; Sarcoma; Stage IV melanoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In August 2016, results were  presented.  Of 12 patients, at initial 6 or 8-week scan, 7 had stable disease with 9 patients still on treatment. Of nine patients with evaluable serial tumor biopsies (pre and post-dose), six patients had an upto 10-fold increase from baseline in CD8 + T-cells and NK cells in the tumor microenvironment, with minimal changes to regulatory T-cells. Most of the infiltrating CD8 + T-cells were newly proliferative (Ki67+) and up to 2-fold, the cell surface programmed cell death protein 1 (PD-1) expression was increased. Post 8 days after single dose NKTR-214 treatment, concordant increases of Ki67+ immune cells, PD-1+ CD8 + T-cells, and NK cells in blood samples were observed  [&lt;ulink linkType="Reference" linkID="1883959"&gt;1883959&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In November 2016, results were presented. A total of 12/18 (72%) evaluable patients had stable disease at the initial 8 week scan, 7/18 (39%) evaluable patients had radiographic reductions in tumor size per RECIST 1.1 on NKTR-214. A total of one patient with metastatic melanoma (prior treatment with ipilimumab and a BRAF inhibitor) has received 13 cycles of treatment (0.003 mg/kg q3w) had stable disease and continued on therapy with NKTR-214. In the 18 evaluable patients, a total of five patients with metastatic RCC who had progressed on one prior tyrosine kinase inhibitor (TKI)  treated with NKTR-214 at the 0.006 mg/kg q3w dose level, 1/5 (20%) of these RCC patients had a uPR per RECIST 1.1 (at 16 week scan) and treatment with NKTR-214 was ongoing and 2/5 of these RCC patients had additional tumor reductions of 6and 10% per RECIST 1.1 while on NKTR-214. Treatment with NKTR-214 produced a robust elevation in immune cell frequency and activation, including an increase in total and newly proliferating (Ki67+) CD4+ T cells, CD8+ T cells, and Natural Killer (NK) cells in 9/9 patients with blood samples evaluated  with increases of up to 30-fold observed.Increase in frequency of PD-1+ T cell subsets of up to 9-fold in the blood, Increase in CD8+ T cells and Natural Killer (NK) cells of up to 10-fold in the tumor micro-environment in patients with evaluable tumor biopsies (pre-dose and post-dose at week 3), with minimal intratumoral changes to T regulatory cells,Increase in expression of cell-surface PD-1 on T cell subsets of up to 2-fold in the tumor micro-environmentInduction of an activation gene signature in the tumor micro-environment, including increases of 5-fold or greater in expression of interferon gamma perforin and granzyme B genes, Changes in T cell repertoire (TCR), which is a measure of T cell clonality, in the tumor micro-environment [&lt;ulink linkType="Reference" linkID="1871846"&gt;1871846&lt;/ulink&gt;]. Similar results were presented in Feburary 2017 [&lt;ulink linkType="Reference" linkID="1901440"&gt;1901440&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In Feburary 2017, positive results were presented. Treatment with NKTR-214 produced a robust elevation in immune cell frequency and activation, including an increase in total and newly proliferating (Ki67+) CD4+ T cells, CD8+ T cells, and Natural Killer (NK) cells with increases of up to 50-fold was observed. A 40% of  RCC patients on   NKTR-214 had shownradiographic reductions in tumor size per RECIST 1.1 including three  who progressed on one  prior tyrosine kinase inhibitor (TKI) and had also progressed on one prior checkpoint therapy       and  threewho had progressed on one  prior tyrosine kinase inhibitor (TKI) and were checkpoint therapy naive, including one patient who experienced an unconfirmed partial response [&lt;ulink linkType="Reference" linkID="1901440"&gt;1901440&lt;/ulink&gt;].  In September 2017, similar results were presented [&lt;ulink linkType="Reference" linkID="1963160"&gt;1963160&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In Feburary 2017, results were presented. NKTR-214 had a sustained exposure with a half-life of 20 h. NKTR-214 (0.006 mg/kg; n = 9) exposure increased proportionate to the dose and gradual increase in active cytokine species was observed with Cmax reaching 1 to 2 days, post dose. In patients receiving NKTR-214, on day 3, transient decrease in lymphocytes was observed which increased by day 9, consistent with observations after HD-IL-2, and transient increase in soluble IL-2 receptor-alpha shed from activated T-cells. By 14 days post-dose, pharmacodynamics effects returned to baseline and similar effects was observed across the dose levels.  All evaluated patients had proliferating CD4, CD8 and NK cells promoted by NKTR-214, which reproduced with repeat administration, and was observed across all the dose levels and schedules. In the tumor cells, NKTR-214 increased the proliferation of CD8+ T-cells, which had increased Ki67 expression. In all patients, increase in immune cell population was observed. The immune-cell elevations observed at week 3, outlasted measurable plasma exposures to NKTR-214. Tumor reduction between 6 to 30% was observed in three of six patients with RCC receiving NKTR-214 and who had progressed on prior TK inhibitors. With single-agent NKTR-214, 40% of patients experienced tumor reductions  [&lt;ulink linkType="Reference" linkID="1904633"&gt;1904633&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2017, results were presented. Out of 4 patients with Stage IV renal cell carcinoma (RCC) who were immuno-oncology (I-O) treatment naive who experienced stable disease (SD), confirmed partial responses (PRs) were observed in 3 patients with tumor shrinkage while on NKTR-214 monotherapy (range of 3 to 8 cycles) and then received sequential therapy with nivolumab. All three patients with confirmed PRs experienced rapid responses at first 8-week scan after initiating sequential therapy with nivolumab. The fourth patient experienced SD at first 8-week scan.  All four patients had progressed on one or more prior tyrosine-kinase inhibitor (TKI) therapies and all were continuing on therapy with nivolumab. Two heavily pre-treated Stage IV patients were continued treatment with monotherapy NKTR-214. Patient (n = 1) with BRAF-mutated melanoma, who was previously treated with ipilimumab and vemurafenib, continued on NKTR-214 therapy with SD for greater &amp;gt; 15 months. Patient (n = 1) with RCC who was previously treated with high-dose IL-2 and subsequently refractory to single agent treatments with OX40 and nivolumab, continued on NKTR-214 therapy with SD for  &amp;gt;  10 months. Patients treated with NKTR-214 increased immune cells in the blood and tumor microenvironment who have failed multiple prior immunotherapeutic agents [&lt;ulink linkType="Reference" linkID="1934443"&gt;1934443&lt;/ulink&gt;]. In September 2017, similar results were presented [&lt;ulink linkType="Reference" linkID="1963160"&gt;1963160&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Further results in June 2017 showed that stable disease was observed in four patients with immuno-oncology naive stage IV renal cell carcinoma (RCC) after end of treatment with NKTR-214 (at approximately 5, 1.5, 1.5 and 5 months, respectively). After sequential therapy with nivolumab, partial response was achieved in three patients except one patient with stable disease who had achieved 30% tumor reduction after NKTR-214 treatment. Even in patients who had failed in multiple prior immunotherapeutic agents, NKTR-214 treatment caused an increase in immune cells in the blood and tumor microenvironment. Rapid responses were achieved at first scan in the four patients who received sequential therapy with nivolumab after NKTR-214 treatment [&lt;ulink linkType="Reference" linkID="1931999"&gt;1931999&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In September 2017, further  results were presented.  The numbers of regulatory T-cells in tumors were unaffected  [&lt;ulink linkType="Reference" linkID="1963160"&gt;1963160&lt;/ulink&gt;]&lt;br/&gt;&lt;br/&gt;&lt;/para&gt;&lt;para&gt;&lt;br/&gt;&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A Phase I/II, Multicenter, Dose-Escalation and Expansion Study Of NKTR-214 In Subjects With Locally Advanced Or Metastatic Solid Tumors</ProtocolTitle><References>15-214-01; 2015-0573; 2016-001134-10; NCT02869295</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;A total of 20 patients were treated in four separate every three-week (q3w) dose cohorts (ranging from 0.003 mg/kg q3w to 0.012 mg/kg q3w) with 18 of these patients evaluable for anti-tumor activity. Based upon encouraging anti-tumor activity and tolerability of NKTR-214 observed at the 0.006 mg/kg q3w dose, an every 2 week (q2w) cohort of the 0.006 mg/kg dose began enrolling in September 2016 with an additional 	five patients enrolled to this cohort, all of which are continuing on therapy [&lt;ulink linkType="Reference" linkID="1871846"&gt;1871846&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1883959"&gt;1883959&lt;/ulink&gt;],  [&lt;ulink linkType="Reference" linkID="1901440"&gt;1901440&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1904633"&gt;1904633&lt;/ulink&gt;]&lt;/para&gt;&lt;para&gt;Patients received NKTR-214 (0.003, 0.006, 0.006, 0.009 and 0.012 mg/kg q2w or q3w) at cycle 1 day 1 (C1D1) and C1D8 at baseline and week 3, and at C3D1 till week 8 [&lt;ulink linkType="Reference" linkID="1931999"&gt;1931999&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1963160"&gt;1963160&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="268769"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In June 2017, results were presented. Patients treated with NKTR-214 and nivolumab in all dose cohorts demonstrated a favorable safety profile and were well-tolerated. There were no dose-limiting toxicities, no grade 3 or higher treatment-related AEs, and no immune-related AEs (such as colitis, dermatitis, pneumonitis or endocrinopathies)  [&lt;ulink linkType="Reference" linkID="1934443"&gt;1934443&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2017, preliminary safety results were presented. Among five patients who received combination therapy so far, DLTs, drug-related or immune-related grade 3 to 5 adverse events (TRAEs) and treatment discontinuations were not documented. Rash and pruritus were the most frequently reported TRAEs [&lt;ulink linkType="Reference" linkID="1940300"&gt;1940300&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In November 2017, interim results were presented from the dose-escalation phase of the trial. Fatigue (74%), flu-like symptoms (68%), rash (60%) and pruritus (42%) were   the most common grade 1 to 2 adverse events. Treatment discontinuations due to adverse events (AEs) or study deaths were not observed. No grade 3 or higher immune-mediated AEs (such as colitis, dermatitis, hepatitis, pneumonitis or endocrinopathies) at the recommended Phase II dose or below  were observed [&lt;ulink linkType="Reference" linkID="1981182"&gt;1981182&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In May 2018, preliminary results were presented. A total of 283 patients had been treated at the RP2D. The most common treatment-related adverse events (TRAEs) were grade 1 to 2 flu-like symptoms (58.7%), rash (44.5%), fatigue (42.0%), and pruritus (31.4%). A total of 40/283 (14.1%) of patients experienced a Grade 3 (G3) or higher TRAE with 6/283 (2.1%) patients discontinuing treatment due to a TRAE. 10/283 (3.5%) of patients experienced a G3 or higher immune-mediated AE.  There was one nivolumab-related G5 pneumonitis reported  [&lt;ulink linkType="Reference" linkID="2040647"&gt;2040647&lt;/ulink&gt;]. Similar results were presented in June 2018 [&lt;ulink linkType="Reference" linkID="2039211"&gt;2039211&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2040903"&gt;2040903&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2018, further results were presented. The immune related higher grade 3 adverse events at RP2D were pneumonitis (0.7%), skin adverse events (0.7%), hepatitis, elevated lipase and colitis (0.4% each). The combination therapy at RP2D was well tolerated with a low rate of grade 3 or above treatment-related adverse events and immune mediated adverse events. The most common TRAEs of all grades at the RP2D ( &amp;gt; 25%) in patients were flu-like symptoms (63%), fatigue (39%), rash (38%) and pruritus (30%). Grade 3+ TRAEs at the RP2D were 11% [&lt;ulink linkType="Reference" linkID="2039211"&gt;2039211&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In February 2019, results were presented. Treatment was generally well-tolerated and the most common (&gt;15%) treatment-related adverse events (TRAEs) were flu-like symptoms (71%), fatigue (56%), rash (46%) and pruritus (32%), decreased appetite (27%) and nausea (22%). A total of 6/41 (15%) of patients experienced a Grade 3 TRAE, with 4 patients discontinuing due to a TRAE. No patients had  a Grade 4/5 TRAE [&lt;ulink linkType="Reference" linkID="2120101"&gt;2120101&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Part 1: Dose escalation of NKTR-214 in combination with nivolumab: a total of 38 eligible patients would be  enrolled into one of five dose regimens of NKTR-214 in combination with nivolumab (0.006 mg/kg NKTR-214 q3w  with 240 mg nivolumab q2w, 0.003 mg/kg NKTR-214 q2w with 240 mg nivolumab q2w, 0.006 mg/kg NKTR-214 q2w with 240 mg nivolumab q2w, 0.006 mg/kg NKTR-214 q3w with 360 mg nivolumab q3w, 0.009 mg/kg NKTR-214 q3w with 360 mg nivolumab q3w). The first phase of the study would evaluate the safety and efficacy profile of the combination and it would be  determined that a dose of 0.006 mg/kg NKTR-214 q3w with 360 mg nivolumab q3w, the Recommended Phase II Dose (RP2D), would be  studied in Phase II of the overall study [&lt;ulink linkType="Reference" linkID="1960518"&gt;1960518&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Part 2: dose-expansion  of NKTR-214 in combination with nivolumab. Patients across a total of five specific tumor types (melanoma, renal cell carcinoma [RCC], non-small cell lung cancer [NSCLC], urothelial carcinoma, and triple negative breast cancer [TNBC]) would be enrolled to receive the RP2D of NKTR-214 in combination with nivolumab. Approximately 350 eligible patients who would be  both Immuno-oncology (I-O) therapy naive and I-O therapy relapsed/refractory would be enrolled in the dose-expansion (part 2) into 1 of 13 cohorts as follows:&lt;br/&gt;Melanoma: first-line.&lt;br/&gt;Melanoma: second- and third-line anti-PD-1 or anti-PD-L1 relapsed/refractory.&lt;br/&gt;RCC: first-line I-O therapy naive.&lt;br/&gt;RCC: second- and third-line anti-PD-1 or anti-PD-L1 relapsed/refractory.&lt;br/&gt;NSCLC first-line (PD-L1 &gt;/= 50%).&lt;br/&gt;NSCLC first-line (PD-L1&amp;lt; 1%).&lt;br/&gt;NSCLC first-line (PD-L1 &gt;/= 1% - &amp;lt; 50%).&lt;br/&gt;NSCLC: second-line I-O therapy naive.&lt;br/&gt;NSCLC: second- and third-line anti-PD-1 or anti-PD-L1 relapsed/refractory.&lt;br/&gt;Urothelial Carcinoma (Bladder): first-line I-O therapy naive.&lt;br/&gt;Urothelial Carcinoma (Bladder): first-line cisplatin-ineligible I-O therapy naive.&lt;br/&gt;Urothelial Carcinoma (Bladder): third-Line anti-PD-1 or anti-PD-L1 relapsed/refractory.&lt;br/&gt;TNBC: first- and second-line I-O therapy naive [&lt;ulink linkType="Reference" linkID="1960518"&gt;1960518&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Part 3: Schedule finding of NKTR-214 in combination with nivolumab and ipilimumab. During this part of the study, the safety and tolerability, and efficacy of the triplet combination would be evaluated in approximately 30 patients treatment naive with metastatic RCC or NSCLC to determine a RP2D and administration schedule. The first schedule to be evaluated Cohort A, would be NKTR-214 0.006 mg/kg and nivolumab 360 mg q3w with the addition of ipilimumab 1 mg/kg q6w.&lt;/para&gt;&lt;para&gt;Part 4: Dose expansion of NKTR-214 in combination with nivolumab and ipilimumab. Approximately 60 first line RCC or NSCLC patients (26-38 patients per indication) would be enrolled at the RP2D determined in Part 3 to further evaluate the safety, tolerability and efficacy of the triple combination.&lt;/para&gt;&lt;para&gt;All patients enrolled in the study would be closely monitored to determine if there would be  response to the treatment as well as for any side effects that may occur. The efficacy of the combination would be assessed using objective response rate (ORR). Exploratory immunological biomarkers in plasma and tumor samples would evaluate immune activation.&lt;br/&gt;&lt;br/&gt;Phase I: patients with select tumor types would receive NKTR-214 doses administered either every 21 days or every 14 days, in combination with 240 mg nivolumab (Opdivo) every 14 days or in combination with 360 mg of nivolumab every 21 days.&lt;br/&gt;Phase II: additional patient cohorts with select tumor types would be dosed at the recommended phase II dose/schedule of NKTR-214 and nivolumab (as determined by phase I of the trial).&lt;/para&gt;&lt;para&gt;Extensive blood and tumor tissue samples would be collected to measure immune activation using immunophenotyping including flow cytometry, immunohistochemistry (IHC), T cell clonality and gene expression analyses [&lt;ulink linkType="Reference" linkID="1960518"&gt;1960518&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin; ipilimumab; nivolumab</Drugs><Indications>Advanced solid tumor; Metastatic bladder cancer; Metastatic breast cancer; Metastatic non small cell lung cancer; Metastatic renal cell carcinoma; Stage IV melanoma; Transitional cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In June 2017, results were presented. Out of 4 patients with BRAF-mutated stage IV melanoma (1 CR, 2 microPR), responses (RECIST 1.1) were observed in 3 patients. Time to response for these patients, respectively, was 6, 7  and 20 weeks.  All three patients with responses were ongoing treatment. Patients (n = 2) with RCC who were I-O naive were evaluable for at least two scans. A confirmed PR (-39%) was observed in one of these patients (PD-L1 negative) who progressed on prior TKI therapy.  Time to response was 15 weeks.  The second patient, who progressed on prior bevacizumab therapy, experienced SD and was continued  treatment. 4 additional RCC I-O naive patients were evaluable for one scan.  All four had SD in their target lesions and were continued  treatment.  The tumor biopsies showed robust expansion of ICOS+ CD4 and CD8 T cells with the combination of NKTR-214 and nivolumab [&lt;ulink linkType="Reference" linkID="1934443"&gt;1934443&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2017, preliminary results were presented from an ongoing phase I/II study that assessed the safety of NKTR-214 in combination with nivolumab in patients with melanoma, NSCLC, renal, bladder or triple-negative breast cancer. In one patient with melanoma who had radiographic scans, mixed radiographic response was observed at first scan with approximately 40% reduction in lactate dehydrogenase and a robust tumor immune cell infiltrate at week 3 (most being newly proliferating CD8+ T cells that express PD-1). Another patient with melanoma had an unconfirmed complete response per Response Evaluation Criteria In Solid Tumors following 6 weeks of treatment [&lt;ulink linkType="Reference" linkID="1940300"&gt;1940300&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In November 2017, interim results were presented from the dose-escalation phase of the trial. Data demonstrated that responses were observed in 7/11 (63%) efficacy-evaluable advanced treatment-naive 1L melanoma patients (2 CR and 5 PR, One patient with confirmed PR at last scan experienced an unconfirmed CR, there was one additional patient with unconfirmed PR in the melanoma cohort as of Nov 2, 2017) (stage IV) with median time to response was 1.7 months and disease control rate (DCR) (CR + PR + 3 SD) was 91%. All seven patients with responses continued on treatment in the trial. For patients with one or more baseline scans in advanced treatment-naive 1L renal cell carcinoma patients (stage IV), responses were observed in 6/13 patients (46%) (1 CR [Complete response was unconfirmed, patient has confirmed PR] and 5 PR)with median time to response in these patients was 1.9 months and DCR (CR + PR + 5 SD)  was 85%; for patients with two or more scans available, responses were observed in 6/10 patients (60%) (1 CR, 5 PR, 2 SD). All 11 patients with disease control (CR, PR or SD) continued on treatment in the trial. For patients with one or more baseline scans in advanced 2L renal cell carcinoma patients (stage IV I to O Naive), responses were observed in 1/7 patients (14%) (1 PR) with median time to response was 3.5 months and DCR (CR + PR + 6 SD) was 100%. All seven patients with disease control (PR or SD) continued on treatment in the trial. In advanced 2L PD-L1 negative NSCLC patients  (stage IV I to O Naive) responses were observed in 3/4 patients (75%)  (1 CR [Complete response was unconfirmed, patient has confirmed PR]and 2 PR) with median time to response was 1.7 months and DCR (CR + PR) was 75%. All three patients with responses continued on treatment in the trial. Robust expansion of ICOS+ CD4 and CD8+ T cells in the blood and increased ICOS gene expression in the tumor were both reported with the combination of NKTR-214 and nivolumab. The recommended phase II dose of 0.006 mg/kg q3w NKTR-214 in combination with 360 mg q3w nivolumab was established [&lt;ulink linkType="Reference" linkID="1981182"&gt;1981182&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In May 2018, preliminary results were presented.  Pre-specified efficacy criteria were achieved in three tumor types: first-line melanoma, first-line renal cell carcinoma and first-line urothelial cancer. For Stage IV Metastatic Treatment-Naïve 1L Melanoma Patients (Enrolled Per Fleming 2-Stage Design at RP2D): Pre-specified efficacy criteria were met for Objective Response Rate (ORR) in Stage 1 (N1 =13) with 11/13 (85%) of patients achieving either a partial response (PR) or complete response (CR). Median time on study for 28 patients in Stage 2 (N1+N2) was  4.6 months. For stage IV IO naive 1l melanoma dose escalation cohort (n=11) the best overall response by RECIST was ORR in 7/11 (64%) and disease control rate (DCR) of 10/11 (91%); in the stage IV IO naive 1L RCC dose escalation cohort (n = 14) results were 10/14 (71%) and 11/14 (79%), respectively; in the stage IV IO naive 1-2L NSCLC dose escalation cohort (n = 5) results for 2l subjects were 3/4 (75%) and 3/4 (75%), and in 1 and 2l results were 3/5 (60%) and 4/5 (80%). Responses were observed in 14/28 (50%) patients (3 CR, 10 PR, 1uPR). The stage IV IO naive 1L RCC cohort at RP2D reached the pre-specified efficacy criteria with stage 2 best ORR of 12/26 (46%) and DCR of 20/26 (77%). Amongst the 25 patients with known PD-L1 status, ORR in PD-L1 negative patients was 5/12 (42%) and in PD-L1 positive patients was 8/13 (62%). One patient with unknown PD-L1 baseline status experienced a CR. For Stage IV Metastatic Treatment-Naïve 1L Renal Cell Carcinoma Patients (Enrolled Per Fleming 2-Stage Design at RP2D): the pre-specified efficacy criteria were met for ORR in Stage 1 (N1 = 11) with 7/11 (64%)  of patients achieving a partial response (PR). Median time on study for 26 patients in Stage 2 (N1 + N2) is 5.6 months. Responses were observed in 12/26 (46%) patients (11 PR, 1 uPR). Amongst the 24 patients with known PD-L1 status, the ORR in PD-L1 negative patients was 9/17 (53%) and in PD-L1 positive patients was 2/7 (29%). One of two patients (50%) with unknown PD-L1 baseline status experienced a PR.  Stage IV Metastatic Treatment-Naive 1L Urothelial Carcinoma (Enrolled Per Fleming 2-Stage Design at RP2D):Pre-specified efficacy criteria were met for ORR in Stage 1 (N1=10) with 6/10 (60%) of patients achieving either a partial or complete response (2uCR, 3 PR, 1uPR) and and DCR=7/10 (70%). Median time on study for 10 patients in Stage 1 is 3.9 months. The ORR in PD-L1 negative patients was 3/5 (60%) and in PD-L1 positive patients was 3/5 (60%) [&lt;ulink linkType="Reference" linkID="2040647"&gt;2040647&lt;/ulink&gt;]. Similar results were presented in June 2018 [&lt;ulink linkType="Reference" linkID="2039211"&gt;2039211&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2040903"&gt;2040903&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2018, further results were presented. NKT-214 with nivolumab increased lymphocyte proliferation in blood and CD8 T-cells in the tumor. NKTR-214 with nivolumab could convert PD-L1 negative to PD-L1 positive tumors. A greatest clinical benefit was observed in those patients who were PD-L1 positive at baseline or converted to PD-L1 positive after the start of treatment [&lt;ulink linkType="Reference" linkID="2040903"&gt;2040903&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In June 2018, further results were presented. ORR (CR+PR) and DCR (CR+PR+SD) in 23 melanoma (1L) pts was 52% and 78%. 18/23 melanoma patients had known PD-L1 status. ORR was 5/9 (56%) for PD-L1(+) patients and 4/9 (44/%) for PD-L1(-) patients. ORR and DCR in 24 RCC (1L) patients was 54% and 79%. 20/24 RCC patients had known PD-L1 status. ORR was 4/7 (57%) for PD-L1(+) patients and 7/13 (54%) for PD-L1(-) patients. ORR and DCR in 6 NSCLC (1-2L) patients was 50% and 67%. 5/6 patients had known PD-L1 status. ORR was 3/5 (60%) in PD-L1(-) patients. ORR and DCR in 4 UC (1L) was 75% and 100%. ORR/DCR in 3 TNBC (1- 2L) patients was 33%. In 60 evaluable patients, 32/32 responses were (0.3+ to 12.0+ mos) with 45/60 patients still on treatment   [&lt;ulink linkType="Reference" linkID="2039211"&gt;2039211&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In Decemebr 2018, preliminary results were presented. As per responses  measured per RECIST 1.1 for per protocol efficacy-evaluable patients treated at the recommended Phase II dose (RP2D) and with &gt;/= 1 post-treatment scan, Best overall response rate (ORR) was 48% (13/27) in efficacy-evaluable patients, with a 19% (5/27) complete response (CR) rate. ORR by immune-related RECIST (irRECIST) was 52% (14/27); ORR in patients with visceral non-nodal metastases was 53% (8/15).ORR in patients that refused standard of care was 55% (6/11); in cisplatin-ineligible patients ORR was 44% (7/16).Disease control rate (DCR) was 70% (defined as CR + partial response (PR) + stable disease (SD)).Median percent reduction in target lesions from baseline in all 27 efficacy-evaluable patients was 32%.Median percent reduction in target lesions from baseline in all 13 responders was 78%.Median time to response was 2.0 months.In patients with RECIST response, no patients discontinued due to relapse.Amongst the 23 patients with known pre-treatment programmed death-ligand 1 (PD-L1) status, ORR in PD-L1 negative patients was 45% (5/11) and in PD-L1 positive patients was 50% (6/12). A total of  70% (7/10) of patients who were PD-L1 negative at baseline converted to PD-L1 positive by Week 3. All patients who were initially PD-L1 positive at baseline remained PD-L1 positive.RECIST responses observed were independent of baseline PD-L1 status and CD8+ T cell infiltrate  [&lt;ulink linkType="Reference" linkID="2120101"&gt;2120101&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A Dose-Escalation and Cohort Expansion Study of CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 Antibody (Nivolumab) in Patients With Select Advanced or Metastatic Solid Tumors</ProtocolTitle><References>16-214-02; 2016-003543-11; NCT02983045; PIVOT-02</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received NKTR-214 0.009 mg/kg q3w + nivolumab 360 mg q3w   [&lt;ulink linkType="Reference" linkID="1934443"&gt;1934443&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients were treated with iv NKTR-214 and nivolumab on a q2w or q3w schedule and those assigned to cohort 1 received NKTR-214 at 0.006 mg/kg q3w + nivolumab 240 mg q2w [&lt;ulink linkType="Reference" linkID="1940300"&gt;1940300&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2039211"&gt;2039211&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="281291"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The study would be divided into two groups:&lt;br/&gt;Group 1: in phase I, Doublet: patients would receive NKTR-262 in escalating doses, would be combined with NKTR-214. The goal of this dose-escalation part of the study was to establish a safe and tolerable recommended phase II dose (RP2D) for NKTR-262 in combination with NKTR-214 in an Q3W fixed-dose.&lt;br/&gt;Phase II, Doublet: NKTR-262 RP2D would be combined with a Q3W dose of NKTR-214 in select tumor indications to evaluate anti-tumor activity and to obtain additional safety data. Patients may be discontinued from receiving study treatment based on the results of disease assessments or if experiencing intolerable side effects.&lt;br/&gt;Group 2: in phase I, Triplet: patients would receive the RP2D of NKTR-262 RP2D would be combined with a Q3W dose regimen of NKTR-214 plus nivolumab. The goal of this arm was to establish the safety and tolerability of the triplet. Phase II, Triplet: the RP2D of NKTR-262 would be combined with a Q3W dose regimen of NKTR-214 plus nivolumab in select tumor indications to evaluate anti-tumor activity and to obtain additional safety data. Patients may be discontinued from receiving study treatment based on the results of disease assessments or if experiencing intolerable side effects  [&lt;ulink linkType="Reference" linkID="2021509"&gt;2021509&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2084663"&gt;2084663&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Patients would receive NKTR-262  as an initial intra-tumoral injection followed by NKTR-214 administered as an IV infusion systemically (doublet) [&lt;ulink linkType="Reference" linkID="2021509"&gt;2021509&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2084663"&gt;2084663&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>NKTR-262; bempegaldesleukin; nivolumab</Drugs><Indications>Advanced solid tumor; Merkel cell carcinoma; Metastatic breast cancer; Metastatic colorectal cancer; Metastatic ovary cancer; Metastatic renal cell carcinoma; Sarcoma; Stage IV melanoma; Transitional cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of NKTR-262 in Combination With NKTR-214 and With NKTR-214 Plus Nivolumab in Patients With Locally Advanced or Metastatic Solid Tumor Malignancies</ProtocolTitle><References>17-262-01; NCT03435640; REVEAL</References><TreatmentSummary/><Trial id="329566"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Participants would receive NKTR-214 combined with nivolumab or       nivolumab  alone in specified dose on specified days.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C3">Phase 3 Clinical</DevStatus><Drugs>bempegaldesleukin; nivolumab</Drugs><Indications>Stage III melanoma; Stage IV melanoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of NKTR-214 Combined With Nivolumab versus Nivolumab Alone in Participants With Previously Untreated Inoperable or Metastatic Melanoma</ProtocolTitle><References>17-214-08; 2018-001423-40; CA045-001; NCT03635983</References><TreatmentSummary/><Trial id="350572"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients will receive  SO-C101 monotherapy and in combination with pembrolizumab  [&lt;ulink linkType="Reference" linkID="2068057"&gt;2068057&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>SO-C101; pembrolizumab</Drugs><Indications>Advanced solid tumor</Indications><OutcomeSummary/><ProtocolTitle>A first-in-human, phase I/Ib study to evaluate the safety and preliminary efficacy of SO-C101 as monotherapy and in combination with pembrolizumab in selected patients with advanced/metastatic solid tumors</ProtocolTitle><References>SC103</References><TreatmentSummary/><Trial id="352089"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Participants will receive NKTR-214 + nivolumab of specified dose on specified days.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>bempegaldesleukin; nivolumab</Drugs><Indications>Advanced solid tumor</Indications><OutcomeSummary/><ProtocolTitle>An Investigational Study of NKTR-214 Combined With Nivolumab in Japanese Participants With Advanced Solid Tumors</ProtocolTitle><References>18-214-14; CA045-010; JapicCTI-184237; NCT03745807</References><TreatmentSummary/><Trial id="360513"/><TrialStatus>Not yet recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;This is an open-label, non-randomized, exploratory platform protocol designed to assess the      safety and antitumor activity of multiple immunotherapy combinations in participants with      mCRPC who have received prior therapy. &lt;br/&gt;The platform study will consist of 2 stages: &lt;br/&gt;Stage 1,      an initial stage to evaluate safety, biomarkers, and clinical activity of a combination.&lt;br/&gt;Stage 2, an expanded cohort, when warranted, based on the safety, clinical activity, and/or      biomarker results from Stage 1. &lt;/para&gt;&lt;para&gt;Participants will be assigned to receive one of the enrolling combination study      interventions and will be monitored for safety and response.&lt;/para&gt;&lt;para&gt;The study will be divided into two experimental arms:&lt;/para&gt;&lt;para&gt;Arm 1: participants will receive &lt;ulink linkType="Drug" linkID="77588"&gt;NKTR-214&lt;/ulink&gt; plus &lt;ulink linkType="Drug" linkID="54804"&gt;nivolumab&lt;/ulink&gt;.&lt;br/&gt;Arm 2: participants will receive Stereotactic body radiation therapy(SBRT) plus &lt;ulink linkType="Drug" linkID="9741"&gt;CDX-301&lt;/ulink&gt; plus &lt;ulink linkType="Drug" linkID="55106"&gt;Poly-ICLC&lt;/ulink&gt; plus Nivolumab.&lt;/para&gt;&lt;para&gt;NKTR-214 will be administered intravenously every 3 weeks for up to two years.&lt;br/&gt;Nivolumab will be administered intravenously every 3 weeks for up to two years.&lt;br/&gt;Radiation therapy will be administered at 30 - 50 Gy in 1 to  5 doses, starting on day 1 or 2 of cycle 1.&lt;br/&gt;CDX-301 will be administered subcutaneously once a day for 5 days of cycle 1.&lt;br/&gt;Poly-ICLC will be administered intramuscularly twice weekly for 3 weeks starting on day 1 of cycle 1.&lt;br/&gt;&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>CDX-301; Poly-ICLC; bempegaldesleukin; nivolumab</Drugs><Indications>Hormone refractory prostate cancer</Indications><OutcomeSummary/><ProtocolTitle>Platform Study for Prostate Researching Translational Endpoints Correlated to Response to Inform Use of Novel Combinations</ProtocolTitle><References>NCT03835533; PICI0033; PORTER</References><TreatmentSummary/><Trial id="369648"/><TrialStatus>Not yet recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The purpose of      this trial was to estimate the toxicity and feasibility of treating relapsed/refractory AML      with FLAG (&lt;ulink linkType="Drug" linkID="6156"&gt;fludarabine&lt;/ulink&gt;/cytarabine/G-CSF) chemotherapy followed by haploidentical donor-derived natural killer (NK) cells      using &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt; for ex vivo and in vivo NK cell activation as an alternative to interleukin-2      (IL-2). The primary objective of this study was to evaluate the safety and feasibility of an infused      allogeneic donor NK cell product and &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt; following a FLAG (&lt;ulink linkType="Drug" linkID="6156"&gt;fludarabine&lt;/ulink&gt;/cytarabine/G-CSF) preparative regimen to treat      relapsed/refractory acute myelogenous leukemia. The primary endpoint for toxicity was the      absence of NK cell product or &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt;-related grade 2 toxicity, excluding grade 2 fever,      rigor/chills, fatigue, vomiting/nausea, pruritus/itching, electrolyte imbalance,      hypoalbuminemia or lymphopenia within 21 days of the &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt; or NK cell product infusion.      The primary endpoint of feasibility was defined as being able to infuse NK-cells at the      maximum tolerated cell dose or the highest dose level on day 0 and complete all eight planned      doses of &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt;, with a safety that does not exceed toxicity limits, in &gt;/= 7 of 10 patients.&lt;/para&gt;&lt;para&gt;Patients would receive &lt;ulink linkType="Drug" linkID="6156"&gt;fludarabine&lt;/ulink&gt; (30 mg/m2 daily from days -6 to -2) in combination with cytarabine (2 g/m2 daily from days -6 to -2) and G-CSF (5 microg/kg daily from day -7 until post-nadir absolute neutrophil count [ANC] &amp;gt; 1000), followed by infusion of donor NK cells (infused on day 0; four cohorts of escalating doses receiving 0, 1, 10, or 20 x 10[6] cells/kg) and &lt;ulink linkType="Drug" linkID="63685"&gt;ALT-801&lt;/ulink&gt; (0.04 mg/kg, iv, tiw for eight doses beginning on day +2).&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>ALT-801 (donor lymphocyte infusion, cancer), Altor; fludarabine</Drugs><Indications>Acute myelogenous leukemia</Indications><OutcomeSummary/><ProtocolTitle>ALT-801-Activated Natural Killer Cells After FLAG Induction for Acute Myeloid Leukemia</ProtocolTitle><References>CA-ALT-801-02-08; NCT01478074</References><TreatmentSummary/><Trial id="82721"/><TrialStatus>Terminated</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients would receive interleukin-2 follow-on-biologic, Zenotech [&lt;ulink linkType="Reference" linkID="1315989"&gt;1315989&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C3">Phase 3 Clinical</DevStatus><Drugs>interleukin-2 follow-on-biologic, Zenotech</Drugs><Indications>Renal cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A multicenter, phase III, safety and efficacy study of interleukin-2 follow-on-biologic, Zenotech in patients with renal cell carcinoma</ProtocolTitle><References/><TreatmentSummary/><Trial id="271068"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;Results published in February 2008 showed that, no unexpected safety findings were seen in patients receiving HAART plus subcutaneous &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt;  [&lt;ulink linkType="Reference" linkID="1480644"&gt;1480644&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients  would be randomized to receive HAART either alone or in combination with  &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt;.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>AIC-284</Drugs><Indications>HIV infection</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results published in February 2008 showed that, the pharmacokinetics of &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; was nearly dose-proportional, and accumulation was minimal during multiple-dose treatment. As per limited efficacy data, &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; at the early time points caused at least a transient increase (dose dependent) in CD4(+) T cell counts in some patients  [&lt;ulink linkType="Reference" linkID="1480644"&gt;1480644&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>Safety and Efficacy of BAY-50-4798 in Patients With HIV Infection</ProtocolTitle><References>10630; NCT00048191; NCT00059462</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received  HAART  alone or in combination with subcutaneously administered  &lt;ulink linkType="Drug" linkID="28450"&gt;BAY-50-4798&lt;/ulink&gt; [&lt;ulink linkType="Reference" linkID="1480644"&gt;1480644&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="13695"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In November 2018, results were presented. The treatment-emergent adverse events (AEs) reported in &gt;/= 20% of all patients treated at doses of 0.1, 0.3, 1.0 and 3.0 microg/kg (n = 5, 4, 7 and 8, respectively) were pyrexia (0, 50, 71, and 100%), chills (0, 50, 71, and 100%), vomiting (40, 50, 29, and 50%), fatigue (80, 25, 29, and 38%), constipation (40, 25, 29, and 50%), anemia (20, 25, 43, and 38%), nausea (40, 25, 14, and 50%), dyspnea (40, 25, 14, and 38%), increased blood creatinine (0, 0, 43 and 38%), decreased appetite (20, 25, 14, and 38%), myalgia (20, 0, 14, and 48%), dizziness (0, 25, 29, and 25%), abdominal pain (20, 0, 29, and 25%) and hypertension (20, 25, 14, and 25%), respectively; all grade 1 to 3. The grade 3 treatment-related AEs reported were decreased neutrophil count, decreased WBC, cholangitis, diarrhea, febrile neutropenia, hyperbilirubinemia, hypoalbuminemia, jaundice cholestatic and decreased lymphocyte count in 8, 8, 4, 4, 4, 4, 4, 4, and 4% of patients, respectively. Grade 4 or 5 AEs were not reported. One incident each of grade 3 febrile neutropenia and grade 3 hypoalbuminemia met the protocol definitions for dose-limiting toxicities (DLT), at the 3 microg/kg [&lt;ulink linkType="Reference" linkID="2093074"&gt;2093074&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;This study would be conducted in two stages (3 + 3 design): a dose-escalation stage (part A) followed by a dose-expansion stage (part B). In the first stage of the study, ALKS-4230  would be administered as an intermittent intravenous infusion over 30 min given daily for 5 consecutive days followed by an off-treatment period with ascending doses in patients with solid tumors who would be refractory or intolerant to established therapies [&lt;ulink linkType="Reference" linkID="1765935"&gt;1765935&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1945289"&gt;1945289&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Subsequent cohorts in Part A would enroll a minimum of six patients. In Part B up to 21 patients would be enrolled into each of four tumor-specific cohorts. Peripheral blood samples would be collected for PK, immunogenicity and PD assessments [&lt;ulink linkType="Reference" linkID="1945289"&gt;1945289&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;In the second arm of the study, patients would be given a combination of ALKS- 4230 and &lt;ulink linkType="Drug" linkID="70667"&gt;pembrolizumab&lt;/ulink&gt; where intravenous infusion of ALKS- 4230 over 30 min given daily for 5 consecutive days followed by an off-treatment period and pembrolizumab would be administered intravenously once with ALKS- 4230 on the first day of each cycle.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>ALKS-4230; pembrolizumab</Drugs><Indications>Advanced solid tumor; Leiomyosarcoma; Mesothelioma; Metastatic breast cancer; Metastatic colorectal cancer; Metastatic esophageal cancer; Metastatic lung cancer; Metastatic ovary cancer; Metastatic pancreas cancer; Metastatic prostate cancer; Metastatic renal cell carcinoma; Metastatic stomach cancer; Sarcoma; Stage IV melanoma; Uterus tumor</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In November 2018, results were presented. Systemic ALKS-4230 exposure increased with increasing dose. For NK and CD8+ T-cell activation, maximum ALKS-4230 serum concentrations at the 3 microg/kg/day exceeded the EC50 values. ALKS-4230 at 3 microg/kg/day induced a dose-dependent increase in circulating NK and CD8+ T-cells with an approximately 4 and 2-fold expansion, respectively. ALKS-4230 also induced a minimal, non-dose dependent change in regulatory T-cells. At 4 h post-dose, IL-6 levels peaked and recovered to baseline at 8 to 10 h post-dose. With the time of maximum IL-6 fever coincided and recovered to baseline 8 to 12 h post dose. Elevation of serum cytokine levels of ALKS 4230 dose  of 0.1, 0.3, 1 and 3 microg/kg at concentration of 55.3, 87.8, 88.7,  and 809.8 pg/ml for maximum IL-6 and 20.3, 20.9, 10.9, and 41.6 pg/ml for maximum IFN-gamma, respectively.  ALKS-4230 led to dose-dependent increases of serum IL-6 and IFN-gamma  [&lt;ulink linkType="Reference" linkID="2093074"&gt;2093074&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A Study of the Effects of ALKS-4230 on Subjects With Solid Tumors</ProtocolTitle><References>ALK4230-A101; NCT02799095</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received ALKS-4230 0.1, 0.3, 1, and 3 micorg/kg (30 min iv infusion) qd for 5 days in 14 (first cycle) or 21-day cycles [&lt;ulink linkType="Reference" linkID="2093074"&gt;2093074&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="263216"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The first arm would   evaluate an every three-week dose regimen (q3w) of NKTR-214 in combination with pembrolizumab in up to 46 patients in approved treatment settings of pembrolizumab, including patients with melanoma or non-small cell lung cancer or bladder cancer. The second arm would evaluate a q3w dose regimen of NKTR-214 in combination with atezolizumab in up to 29 patients in approved treatment settings of atezolizumab, including patients with urothelial carcinoma. The first NKTR-214 dose to be studied would be 0.006 mg/kg q3w based on the safety observed in the monotherapy trial with NKTR-214 (Study 15-214-01, &lt;ulink linkType="Protocol" linkID="268769"&gt;NCT02869295&lt;/ulink&gt;) and an ongoing combination trial (16-214-02, &lt;ulink linkType="Protocol" linkID="281291"&gt;NCT02983045&lt;/ulink&gt;). &lt;/para&gt;&lt;para&gt;For NKTR-214 + Pembrolizumab, eligible patients include:&lt;br/&gt;Melanoma: first line; PD-L1 Status- all&lt;br/&gt;NSCLC: first line; PD-L1 Status &gt;/= 50%&lt;/para&gt;&lt;para&gt;For NKTR-214 + Atezolizumab, eligible patients include:&lt;br/&gt;Urothelial carcinoma: 1st line; PD-L1 Status - all&lt;br/&gt;Disease progression within 12 months of neoadjuvant or adjuvant treatment with chemotherapy&lt;br/&gt;Urothelial carcinoma: 2nd line; PD-L1 Status - all&lt;br/&gt;Disease progression during or following platinum-containing chemotherapy.&lt;/para&gt;&lt;para&gt;The study would  enroll patients into two separate arms concurrently. The first arm would evaluate an every 3-week dose regimen of NKTR-214 in combination with atezolizumab in up to 30 patients in approved treatment settings of atezolizumab, including patients with non-small cell lung cancer or bladder cancer. The second arm would evaluate an every 3-week dose regimen of NKTR-214 in combination with &lt;ulink linkType="Drug" linkID="70667"&gt;pembrolizumab&lt;/ulink&gt; in up to 30 patients in approved treatment settings of pembrolizumab, including patients with melanoma, non-small cell lung cancer or bladder cancer [&lt;ulink linkType="Reference" linkID="1961306"&gt;1961306&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="2044392"&gt;2044392&lt;/ulink&gt;].&lt;/para&gt;&lt;para&gt;Treatment might continue beyond progression if there is clinical benefit as determined by the investigator  [&lt;ulink linkType="Reference" linkID="2044392"&gt;2044392&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1B">Phase 1b Clinical</DevStatus><Drugs>atezolizumab; bempegaldesleukin; pembrolizumab</Drugs><Indications>Metastatic bladder cancer; Metastatic non small cell lung cancer; Stage IV melanoma; Transitional cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of a CD122-Biased Cytokine (NKTR-214) in Combination With Anti-PD-1 (Pembrolizumab) and of NKTR-214 in Combination With Anti-PD-L1 (Atezolizumab) in Patients With Select Advanced or Metastatic Solid Tumors</ProtocolTitle><References>16-214-05; NCT03138889; PROPEL</References><TreatmentSummary/><Trial id="296922"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;In this study there will be two arms:&lt;br/&gt;Arm 1: NKTR-214 0.006 mg/kg will be an iv nfusion administered over 30 (+/- 5) min every 3 weeks. Nivolumab (anti-PD-1) 360mg will be administered every 3 weeks as an iv infusion over 30 (+/- 5) min  for patients &gt;/= 18 years.&lt;br/&gt;Arm 2:  NKTR-214 0.006 mg/kg will be an iv (IV) infusion administered over 30 +/- 5) min every 3 weeks. Nivolumab (anti-PD-1) 4.5 mg/kg up to 360 mg will be administered every 3 weeks as an iv infusion over 30 (+/- 5) min for patients 12 to 17 years.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>bempegaldesleukin; nivolumab</Drugs><Indications>Angiosarcoma; Chondrosarcoma; Histiocytoma; Leiomyosarcoma; Liposarcoma; Metastasis; Osteosarcoma; Sarcoma</Indications><OutcomeSummary/><ProtocolTitle>A Study of NKTR-214 in Combination With Nivolumab in Patients With Metastatic and/or Locally Advanced Sarcoma</ProtocolTitle><References>17-366; CA209-9EM; NCT03282344</References><TreatmentSummary/><Trial id="312527"/><TrialStatus>Recruiting</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In January 2013, results were published. At dose level 0.075 mg/kg, no dose limiting toxicities (DLT) were observed. At dose level 0.15 mg/kg, the adverse event occurred was grade 3 lymphopenia and partial thromboplastin time (PTT) increase and was not found to be clinically relevant. At 0.225 mg/kg, dose no DLTs were observed. At dose level 0.3 mg/kg, one DLT was observed which was grade 3 dyspnea and increase in lipase. Four DLTs were observed, one grade 3 dyspnoea at 0.3 mg/kg and three grade 3 skin rash (one at 0.6 mg/kg and two at 0.9 mg/kg). The most commonly occurred adverse event was dose-dependent skin rash (48%) and generally improved rapidly with the use of topical steroids and antihistamine agents. At doses 0.225 mg/kg, fever (40degC) was observed in 40% of patients. Lymphopenia (44%),  dry skin (40%) and mild (grade 1) hypotension (31%) were the other frequently observed adverse events and were observed to be independent of dose. Grade 2 leukocytoclastic vasculitis (n = 1), grade 2 autoimmune thyroiditis (n = 1), dyspnea (n = 1), transaminase increase (n = 1), grade 3 skin rash (n = 7), exacerbation of psoriasis (n = 1) and grade 2 and 3 angioedema (n = 2) lead to discontinuation of treatment.  Study withdrawal was observed due to PD reported in three patients. Transient changes in lymphocyte counts were observed, which decreased on day 3, returning to normal and increasing significantly above baseline on day 8 in both the patients [&lt;ulink linkType="Reference" linkID="1385217"&gt;1385217&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The study design consisted of three arms:&lt;br/&gt;Arm 1: patients would receive &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; 0.075, 0.15,  0.225, 0.3, 0.45, 0.6 and  0.9 mg/kg (1.8, 2.1, 2.5 and  3.0 mg/kg).&lt;br/&gt;Arm 2: patients would  receive  &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; 0.6 and 0.9 mg/kg plus low-dose cyclophosphamide. &lt;br/&gt;Arm 3: patients would receive  &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; 0.9, 1.2  and 1.5 mg/kg (1.8, 2.1, 2.5  and 3.0 mg/kg).&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>NHS-IL2-LT</Drugs><Indications>Advanced solid tumor; Non-Hodgkin lymphoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In January 2013, results were published.  The maximum tolerated dose for the  &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; was observed to be 0.6 mg/kg. The median number of cycles per patient was observed to be two and the majority of patients (n = 20) were observed to receive two treatment cycles. Treatment discontinuation was observed in 77.1% of patients due to progressive disease (PD), and in 22.9% of patients due to toxicity. Stable disease for &amp;gt; 6 weeks was observed in 25% of patients and no tumor responses were observed. Median survival time observed in &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; and cyclophosphamide plus &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; arm were 9.6 and 7.0 months, respectively. Antibodies were observed in 69% of patients with peaks occurring on day 8 of cycle 1. Antibodies did not appear to be neutralizing as they influenced neither the PK nor the biological activity of &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt;. Increases in total lymphocytes, CD4+, CD8+ and NK cells in cycles 1 and 2 were not observed to be reduced by the presence of &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; antibodies. The t1/2 was observed between 7.8  and 11 h in cycle 1 and between 9.5 and 18 h in cycle 3 in both the groups. Pre-treatment with cyclophosphamide may result in a slight decrease in exposure to &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; which is not significant  [&lt;ulink linkType="Reference" linkID="1385217"&gt;1385217&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>EMD-521873 in Advanced Solid Tumors, MTD Finding</ProtocolTitle><References>EMR62235_001; NCT01032681</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; iv infusion over 1 h  on days 1 to 3 of a 21-day cycle with a starting dose of  0.075 mg/kg  or 300 mg/m2 cyclophosphamide iv infusion over 1 h, 1 day before the first  &lt;ulink linkType="Drug" linkID="57922"&gt;EMD-521873&lt;/ulink&gt; dose in each cycle [&lt;ulink linkType="Reference" linkID="1385217"&gt;1385217&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="62646"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In June 2010, results showed that the regimen was well tolerated in all patients with the most common adverse events being skin-related (erythema, induration and swelling of inoculated site reported in 22 cases). There was no decrease in KPS  [&lt;ulink linkType="Reference" linkID="1104590"&gt;1104590&lt;/ulink&gt;].&lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients (n = 24) received &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; once a week with no chemotherapy and no maintenance therapy. Patients were given &lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt;  injections intradermally three times, with 7 days between injections, starting when the cumulative radiation dose reached 32 to 36 Gy [&lt;ulink linkType="Reference" linkID="1104590"&gt;1104590&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C12">Phase 1/Phase 2 Clinical</DevStatus><Drugs>AFTVac</Drugs><Indications>Glioblastoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In June 2010, results showed that the one- and two-year overall survival (OS) rates were 86 and 34%, respectively. The 6-month and one-year progression-free survival (PFS) rates were 63 and 32%, respectively. Median OS and PFS were 21.4 and 7.6 months, respectively. The median follow-up time was 19 months.  Delayed type hypersensitivity-2 reaction correlated with PFS but not OS. The trial met the prospectively-defined primary endpoints. The PFS of the patients with greater delayed type hypersensitivity reaction (13.9 months) was statistically longer (p &amp;lt; 0.01) than that of the patients who had  weaker DTH reaction (4.3 months)   [&lt;ulink linkType="Reference" linkID="1104590"&gt;1104590&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I/IIa study to evaluate the safety and efficacy of AFTVac in patients with newly diagnosed glioblastoma multiforme</ProtocolTitle><References>C000000002</References><TreatmentSummary/><Trial id="67525"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;In June 2012, results were presented. A total of 92.2 and 47.7% of patients of     &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;   and best supportive care groups, respectively, experienced adverse events. Adverse events that occurred more often in the   &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;   arm were flu-like symptoms, rash, hypotension, lymphopenia, headache, vomiting, liver function tests and creatinine elevations. All   &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;-related adverse events of grade 3/4 severity were reversible/manageable. A total of 94.7% of deaths reported in the study were due to disease progression [&lt;ulink linkType="Reference" linkID="1295694"&gt;1295694&lt;/ulink&gt;]. Similar results were published in November 2015 [&lt;ulink linkType="Reference" linkID="1740314"&gt;1740314&lt;/ulink&gt;]. &lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients received &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; (1.5 mg/m2/day, 4-h iv infusion on days 2 to 4) and cyclophosphamide (300 mg/m2, iv on day 1), for six 21-day cycles, followed by 21-day cycles until disease progression of &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt; (day 2) or cyclophosphamide (day 1), with best supportive care [&lt;ulink linkType="Reference" linkID="1295694"&gt;1295694&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="1308487"&gt;1308487&lt;/ulink&gt;].&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>tucotuzumab celmoleukin</Drugs><Indications>Small-cell lung cancer</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;In June 2012, results were presented. Patients were stratified according to prophylactic cranial irradiation and response to chemotherapy. In the  &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;  treatment versus the best supportive care arm, 6-month progression-free survival was 6.4 versus 12.2%, respectively (p = 0.934), median progression-free survival was 1.5 versus 1.4 months, respectively, overall survival rates were 52 versus 61% at 12 months, respectively, and 24 versus 29% at 18 months, respectively, and median overall survival was 12.3 versus 14.1 months, respectively. In the  &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;  and best supportive care arms, 15 (23.4%) and 11 (25%) patients, respectively, had received prior prophylactic cranial irradiation (PCI). In this subset of patients, 6-month progression free survival was 13.3% in the  &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;  and 0% in the best supportive care group. Median progression free survival, median overall survival and median time to treatment progression were 1.7, 21.5 and 1.7 months, respectively,  for the  &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;  group and 1.5, 14.3 and 1.5 months, respectively,   in the best supportive care group. Anti-&lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;   antibodies were detected in one or more sample in 75% of patients. Relative concentration of the anti-drug antibodies was low. The immune response to   &lt;ulink linkType="Drug" linkID="21065"&gt;EMD-273066&lt;/ulink&gt;    was transient as only nine patients were tested positive beyond three cycles of treatment [&lt;ulink linkType="Reference" linkID="1295694"&gt;1295694&lt;/ulink&gt;]. Similar results were published in November 2015. A similar risk of disease progression  and death was indicated by hazard ratios for PFS, time to progression and OS in both groups and best overall responses were generally comparable [&lt;ulink linkType="Reference" linkID="1740314"&gt;1740314&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase II, multicenter, randomized, open-label, parallel-group study to assess the safety and efficacy of EMD-273066 following low-dose cyclophosphamide compared to supportive care alone in patients with small cell lung cancer</ProtocolTitle><References>2006-004566-13; EMR 62206-017</References><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients received cyclophosphamide (300 mg/m2 on day 1, q3w cycle), followed by EMD-273066 (1.5 mg/m2 on days 2 to 4) until disease progression or best supportive care [&lt;ulink linkType="Reference" linkID="1740314"&gt;1740314&lt;/ulink&gt;].&lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="89159"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>IL-2 PEG</Drugs><Indications>Immune disorder</Indications><OutcomeSummary/><ProtocolTitle>A Phase I trial of  IL-2 PEG, for the potential treatment of immune diseases</ProtocolTitle><References/><TreatmentSummary/><Trial id="322432"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; was well-tolerated and showed minimal toxicity [&lt;ulink linkType="reference" linkID="355792"&gt;355792&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="365600"&gt;365600&lt;/ulink&gt;].&lt;br/&gt;&lt;br/&gt;&lt;/para&gt;&lt;para&gt;&lt;br/&gt; &lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients were to receive three different doses of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; for a period of 2 weeks prior to first-line therapy [&lt;ulink linkType="reference" linkID="317344"&gt;317344&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="319477"&gt;319477&lt;/ulink&gt;]. &lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C2">Phase 2 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor; Squamous cell carcinoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;Results from the study (conducted in Poland and the Czech Republic) were presented in February 2000, at the BIO CEO and Investor Conference in New York, NY. Of the 30 patients in the trial, 65% (13 of 20) who were treated with the lower 2 doses of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; over 18 days showed tumor reductions, and of these 39% (5 of 13) showed a &amp;gt; 50% tumor mass reduction. At the highest dose level, 30% (3 of 10) of the patients had tumor reductions while the rest remained stable [&lt;ulink linkType="reference" linkID="355792"&gt;355792&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="365600"&gt;365600&lt;/ulink&gt;].&lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase II, multi-center, safety and efficacy study of neoadjuvant immunotherapy with Multikine, in patients with squamous cell carcinoma of the head and neck</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;Patients were to receive three different doses of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; for a period of 2 weeks prior to first-line therapy [&lt;ulink linkType="reference" linkID="317344"&gt;317344&lt;/ulink&gt;], [&lt;ulink linkType="reference" linkID="319477"&gt;319477&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="41761"/><TrialStatus>Status not specified</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;The objectives of this dose-escalation, multi-center study were:&lt;br/&gt;1. To determine the maximum tolerated dose (MDT) of &lt;ulink linkType="Drug" linkID="21065"&gt;tucotuzumab celmoleukin&lt;/ulink&gt; in patients with refractory epithelial carcinoma;&lt;br/&gt;2. To characterize the pharmacokinetics of this drug in these patients;&lt;br/&gt;3. To assess the overall toxicity and safety of this drug in these patients; and&lt;br/&gt;4. To determine the rate of objective response in patients treated with this drug.&lt;/para&gt;&lt;para&gt;Patients were to receive &lt;ulink linkType="Drug" linkID="21065"&gt;tucotuzumab celmoleukin&lt;/ulink&gt; iv over 1 h on days 1 to 5. Treatment was to repeat every 21 days for a maximum of six courses in the absence of disease progression or unacceptable toxicity. Cohorts of three to six patients were to receive escalating doses of &lt;ulink linkType="Drug" linkID="21065"&gt;tucotuzumab celmoleukin&lt;/ulink&gt; until the MTD (dose preceding that at which more than 33% of the patients experience a dose-limiting toxicity) was determined. Patients were to be followed-up at 30 days.  Approximately 12 to 24 patients were to be accrued for this study within 6 to 12 months.&lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>tucotuzumab celmoleukin</Drugs><Indications>Bladder cancer; Carcinoma; Lung tumor; Renal cell carcinoma</Indications><OutcomeSummary/><ProtocolTitle>Interleukin-2 combined with monoclonal antibody therapy in treating patients with kidney, bladder, or lung cancer that has not responded to previous treatment</ProtocolTitle><References>CDR0000068612; EMD-EMR-62-206-003; MSKCC-00141; NCI-G01-1944; NCT00016237</References><TreatmentSummary/><Trial id="28011"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description>&lt;ProtocolDescription&gt;&lt;para&gt;Patients (n = 16) received 4 different doses of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; (n = 4 patients/cohort). The treatment regimen involved 5 injections of &lt;ulink linkType="Drug" linkID="7401"&gt;Multikine&lt;/ulink&gt; per week over a period of 2 weeks, every month for a minimum of 2 months [&lt;ulink linkType="reference" linkID="349344"&gt;349344&lt;/ulink&gt;]. &lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>Multikine</Drugs><Indications>Head and neck tumor</Indications><OutcomeSummary/><ProtocolTitle>A phase I, safety and efficacy study of Multikine in patients with head and neck cancer</ProtocolTitle><References/><TreatmentSummary/><Trial id="41756"/><TrialStatus>Completed</TrialStatus></Row><Row><AdverseSummary/><Description/><DevStatus id="C3">Phase 3 Clinical</DevStatus><Drugs>bempegaldesleukin</Drugs><Indications>Stage IV melanoma</Indications><OutcomeSummary/><ProtocolTitle>A phase III registrational trial of NKTR-214 in first-line advanced melanoma patients</ProtocolTitle><References/><TreatmentSummary/><Trial id="349635"/><TrialStatus>Planned</TrialStatus></Row><Row><AdverseSummary>&lt;AdverseEvents&gt;&lt;para&gt;&lt;ulink linkType="Drug" linkID="55115"&gt;AFTVac&lt;/ulink&gt; treatment   was well-tolerated and  the  adverse events reported included local erythema, induration and low-grade fever [&lt;ulink linkType="Reference" linkID="796183"&gt;796183&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="801830"&gt;801830&lt;/ulink&gt;]. &lt;/para&gt;&lt;/AdverseEvents&gt;</AdverseSummary><Description>&lt;ProtocolDescription&gt;&lt;para&gt;A delayed-type hypersensitivity test (DTH) was performed before and after each course of AFTVac treatment that comprised three vaccinations at a 5-site intradermal inoculation. In addition, immunohistochemical analysis of MIB-1, p53, and MHC class-I complex was performed on the tumor tissue to analyze the difference in the response to the treatment [&lt;ulink linkType="Reference" linkID="796183"&gt;796183&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="801830"&gt;801830&lt;/ulink&gt;]. &lt;/para&gt;&lt;/ProtocolDescription&gt;</Description><DevStatus id="C1">Phase 1 Clinical</DevStatus><Drugs>AFTVac</Drugs><Indications>Glioblastoma</Indications><OutcomeSummary>&lt;Outcomes&gt;&lt;para&gt;This study showed that of the 12 recruited patients,  one  displayed a complete response, one patient had exhibited a partial response, two  showed minor responses, one  had stable disease and seven   demonstrated progressive disease. The median survival time was 10.7 months from the beginning of the vaccine  treatment. However, the data reported   that three of five  responders survived for 20 months or more [&lt;ulink linkType="Reference" linkID="796183"&gt;796183&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="801830"&gt;801830&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Outcomes&gt;</OutcomeSummary><ProtocolTitle>A phase I, pilot study to evaluate safety, feasibility and clinical response of AFTVac in glioblastoma multiforme patients</ProtocolTitle><References/><TreatmentSummary>&lt;Regimens&gt;&lt;para&gt;A delayed-type hypersensitivity test (DTH) was performed before and after each course of AFTVac treatment that comprised three vaccinations at a 5-site intradermal inoculation. In addition, immunohistochemical analysis of MIB-1, p53, and MHC class-I complex was performed on the tumor tissue to analyze the difference in the response to the treatment [&lt;ulink linkType="Reference" linkID="796183"&gt;796183&lt;/ulink&gt;], [&lt;ulink linkType="Reference" linkID="801830"&gt;801830&lt;/ulink&gt;]. &lt;/para&gt;&lt;/Regimens&gt;</TreatmentSummary><Trial id="37075"/><TrialStatus>Status not specified</TrialStatus></Row></Rowset>"}],"title":"I pass a &quot;queryName = trialSafetyRefsByAction and parameterName = actionId and parameterValue = 221&quot; as parameter to &quot;Analytics_v2_query&quot; operation","status":"passed"},{"date":"2019-02-27 16:27:14","title":"response contains &quot;row.Ancestry&quot; in fields.","status":"passed"}],"status":"passed"}}],"os":"Windows 10 10.0 amd64","ip":"10.10.247.193","name":"Feature_QueryAnalyticsV2","time":"2019-02-27 16:27:14","url":"https://prodeu-api.cortellis.int.clarivate.com","targettestcycle":"Regression_API_25Feb_2019"}}]