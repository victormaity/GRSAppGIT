@{
    ViewBag.Title = "Frameworks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model IEnumerable<GlobalReportingSystem.Core.Models.Entities.vw_FilesStorage>  
<script src="@Url.Content("~/Content/assets/js/dropzone.min.js")"></script>
<div class="page-header">
    <h1>Frameworks
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            Upload your tests here
        </small>
    </h1>
</div>

<div class="row">
    <div class="col-xs-12 col-sm-3 widget-container-col">
        <div class="widget-box">
            <div class="widget-header">
                <h5 class="widget-title" title="Manual Upload">Framework</h5>
                <div class="widget-toolbar">
                    <a data-action="collapse">
                        <i class="ace-icon fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    <div>
                        <form action="@Url.Action("AcceptFramework")" class="dropzone" id="dropzone">
                            <div class="fallback">
                                <input name="file" type="file" multiple="" />
                            </div>
                        </form>
                        <p>
                            @*<a class="btn btn-primary btn-block" onclick="refresh_svn();"><i class="fa fa-refresh"></i>Refresh SVN</a>*@
                        </p>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="col-xs-12 col-sm-9 widget-container-col">
        <div class="widget-box">
            <div class="widget-header">
                <h5 class="widget-title">Avilable Frameworks</h5>
                <div class="widget-toolbar">
                    <a data-action="collapse">
                        <i class="ace-icon fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    <div>
                        <table id="testcyclestable" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Last Change Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var storage in Model)
                                {
                                    <tr>
                                        <td>@storage.FilesStorage_Name</td>
                                        <td>@storage.FilesStorage_AddedDate</td>
                                        <td><a href="@Url.Action("RemoveFramework", "Configuration", new { @id = storage.FilesStorage_ID })"><i class="fa fa-trash-o red"></i></a></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>

</div>

@*----------------------------------------------- dialogs and scripts---------------------------------------*@
<script type="text/javascript" src="@Url.Content("~/Content/assets/js/dropzone.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/assets/js/uncompressed/dropzone.js")"></script>

<script type="text/javascript">
    jQuery(function ($) {
        Dropzone.autoDiscover = false;
        try {
            var myDropzone = new Dropzone("#dropzone", {
                paramName: "files", // The name that will be used to transfer the file
                maxFilesize: 150, // MB
                url: '@Url.Action("AcceptFramework")',
                addRemoveLinks: false,
                uploadMultiple: true,
                dictDefaultMessage:
                    '<span class="bigger-150 bolder"><i class="ace-icon fa fa-caret-right red"></i> Drop files</span> to upload \
				<span class="smaller-80 grey">(or click)</span> <br /> \
				<i class="upload-icon ace-icon fa fa-cloud-upload blue fa-3x"></i>',
                dictResponseError: 'Error while uploading file!',

                //change the previewTemplate to use Bootstrap progress bars
                previewTemplate: "<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-details\">\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\n    <div class=\"dz-size\" data-dz-size></div>\n    <img data-dz-thumbnail />\n  </div>\n  <div class=\"progress progress-small progress-striped active\"><div class=\"progress-bar progress-bar-success\" data-dz-uploadprogress></div></div>\n  <div class=\"dz-success-mark\"><span></span></div>\n  <div class=\"dz-error-mark\"><span></span></div>\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n</div>"
            });
            myDropzone.options.dropzoneForm = {
                init: function () {
                    myDropzone.on("complete", function () {
                        location.reload();
                    });
                }
            };
            myDropzone.on("complete", function () {
                location.reload();
            });
        } catch (e) {
            alert('Dropzone.js does not support older browsers!');
        }
    });

    function refresh_svn() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("RefreshSvn", "Configuration")",
            async: true,
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            beforeSend: function () {
                $(".fa.fa-refresh").addClass("fa-spin");
            },
            error: function () { },
            success: function (msg) {
                $(".fa.fa-refresh").removeClass("fa-spin");
                if (IsJsonString(msg) && jQuery.parseJSON(msg).type == "Error") {
                    ShowMessage(jQuery.parseJSON(msg).type, jQuery.parseJSON(msg).text);
                } else {
                    location.reload();
                }
            }
        });
    }
</script>
